gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE  1


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00001 ;--------------------------------------------------------
                      00002 ; File Created by SDCC : free open source ANSI-C Compiler
                      00003 ; Version 3.3.0 #8604 (May 11 2013) (Linux)
                      00004 ; This file was generated Thu Dec  5 11:22:27 2013
                      00005 ;--------------------------------------------------------
                      00006 ; PIC16 port for the Microchip 16-bit core micros
                      00007 ;--------------------------------------------------------
                      00008         list    p=18f4550
                      00009         radix   dec
                      00010 
                      00011 
                      00012 ;--------------------------------------------------------
                      00013 ; public variables in this module
                      00014 ;--------------------------------------------------------
  0000                00015         global  _tela_principal
  0000                00016         global  _menu
  0000                00017         global  _menu_mais
  0000                00018         global  _menu_mais_mais
  0000                00019         global  _menu_configuracao
  0000                00020         global  _menu_configuracao_mais
  0000                00021         global  _menu_configuracao_temp
  0000                00022         global  _menu_configuracao_lumi
  0000                00023         global  _menu_configuracao_temp_alta
  0000                00024         global  _menu_configuracao_temp_baixa
  0000                00025         global  _menu_configuracao_lumi_alta
  0000                00026         global  _menu_configuracao_lumi_baixa
  0000                00027         global  _menu_configuracao_tempo
  0000                00028         global  _menu_led
  0000                00029         global  _menu_led_mais
  0000                00030         global  _menu_led_0
  0000                00031         global  _menu_led_1
  0000                00032         global  _menu_led_2
  0000                00033         global  _menu_portas_1_2
  0000                00034         global  _menu_portas_3_4
  0000                00035         global  _menu_portas_5_6
  0000                00036         global  _menu_portas_7_8
  0000                00037         global  _menu_porta_1_configura
  0000                00038         global  _menu_porta_2_configura
  0000                00039         global  _menu_porta_3_configura
  0000                00040         global  _menu_porta_4_configura
  0000                00041         global  _menu_porta_5_configura
  0000                00042         global  _menu_porta_6_configura
  0000                00043         global  _menu_porta_7_configura
  0000                00044         global  _menu_porta_8_configura
  0000                00045         global  _menu_porta_1_seta
  0000                00046         global  _menu_porta_2_seta
  0000                00047         global  _menu_porta_3_seta
  0000                00048         global  _menu_porta_4_seta
  0000                00049         global  _menu_porta_5_seta
  0000                00050         global  _menu_porta_6_seta
  0000                00051         global  _menu_porta_7_seta
  0000                00052         global  _menu_porta_8_seta
  0000                00053         global  _menu_teclado
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE  2


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000                00054         global  _teste_lcd
  0000                00055         global  _teste_teclado_1
  0000                00056         global  _teste_teclado_2
  0000                00057         global  _teste_teclado_3
  0000                00058         global  _teste_teclado_4
  0000                00059         global  _teste_serial
  0000                00060         global  _teste_serial_msg
  0000                00061         global  _teste_leds
  0000                00062         global  _teste_leds_timer
  0000                00063         global  _teste_leds_pwm
  0000                00064         global  _teste_sensores
  0000                00065         global  _teste_sensores_mais
  0000                00066         global  _teste_fim
  0000                00067         global  _serial_lcd
  0000                00068         global  _print_tela
  0000                00069         global  _pwm_1
  0000                00070         global  _pwm_2
  0000                00071         global  _teste_pwm
  0000                00072         global  _timer
                      00073 
                      00074 ;--------------------------------------------------------
                      00075 ; extern variables in this module
                      00076 ;--------------------------------------------------------
  0000                00077         extern  __moduchar
  0000                00078         extern  __divuchar
  0000                00079         extern  _SPPCFGbits
  0000                00080         extern  _SPPEPSbits
  0000                00081         extern  _SPPCONbits
  0000                00082         extern  _UFRMLbits
  0000                00083         extern  _UFRMHbits
  0000                00084         extern  _UIRbits
  0000                00085         extern  _UIEbits
  0000                00086         extern  _UEIRbits
  0000                00087         extern  _UEIEbits
  0000                00088         extern  _USTATbits
  0000                00089         extern  _UCONbits
  0000                00090         extern  _UADDRbits
  0000                00091         extern  _UCFGbits
  0000                00092         extern  _UEP0bits
  0000                00093         extern  _UEP1bits
  0000                00094         extern  _UEP2bits
  0000                00095         extern  _UEP3bits
  0000                00096         extern  _UEP4bits
  0000                00097         extern  _UEP5bits
  0000                00098         extern  _UEP6bits
  0000                00099         extern  _UEP7bits
  0000                00100         extern  _UEP8bits
  0000                00101         extern  _UEP9bits
  0000                00102         extern  _UEP10bits
  0000                00103         extern  _UEP11bits
  0000                00104         extern  _UEP12bits
  0000                00105         extern  _UEP13bits
  0000                00106         extern  _UEP14bits
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE  3


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000                00107         extern  _UEP15bits
  0000                00108         extern  _PORTAbits
  0000                00109         extern  _PORTBbits
  0000                00110         extern  _PORTCbits
  0000                00111         extern  _PORTDbits
  0000                00112         extern  _PORTEbits
  0000                00113         extern  _LATAbits
  0000                00114         extern  _LATBbits
  0000                00115         extern  _LATCbits
  0000                00116         extern  _LATDbits
  0000                00117         extern  _LATEbits
  0000                00118         extern  _DDRAbits
  0000                00119         extern  _TRISAbits
  0000                00120         extern  _DDRBbits
  0000                00121         extern  _TRISBbits
  0000                00122         extern  _DDRCbits
  0000                00123         extern  _TRISCbits
  0000                00124         extern  _DDRDbits
  0000                00125         extern  _TRISDbits
  0000                00126         extern  _DDREbits
  0000                00127         extern  _TRISEbits
  0000                00128         extern  _OSCTUNEbits
  0000                00129         extern  _PIE1bits
  0000                00130         extern  _PIR1bits
  0000                00131         extern  _IPR1bits
  0000                00132         extern  _PIE2bits
  0000                00133         extern  _PIR2bits
  0000                00134         extern  _IPR2bits
  0000                00135         extern  _EECON1bits
  0000                00136         extern  _RCSTAbits
  0000                00137         extern  _TXSTAbits
  0000                00138         extern  _T3CONbits
  0000                00139         extern  _CMCONbits
  0000                00140         extern  _CVRCONbits
  0000                00141         extern  _CCP1ASbits
  0000                00142         extern  _ECCP1ASbits
  0000                00143         extern  _CCP1DELbits
  0000                00144         extern  _ECCP1DELbits
  0000                00145         extern  _BAUDCONbits
  0000                00146         extern  _BAUDCTLbits
  0000                00147         extern  _CCP2CONbits
  0000                00148         extern  _CCP1CONbits
  0000                00149         extern  _ECCP1CONbits
  0000                00150         extern  _ADCON2bits
  0000                00151         extern  _ADCON1bits
  0000                00152         extern  _ADCON0bits
  0000                00153         extern  _SSPCON2bits
  0000                00154         extern  _SSPCON1bits
  0000                00155         extern  _SSPSTATbits
  0000                00156         extern  _T2CONbits
  0000                00157         extern  _T1CONbits
  0000                00158         extern  _RCONbits
  0000                00159         extern  _WDTCONbits
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE  4


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000                00160         extern  _HLVDCONbits
  0000                00161         extern  _LVDCONbits
  0000                00162         extern  _OSCCONbits
  0000                00163         extern  _T0CONbits
  0000                00164         extern  _STATUSbits
  0000                00165         extern  _INTCON3bits
  0000                00166         extern  _INTCON2bits
  0000                00167         extern  _INTCONbits
  0000                00168         extern  _STKPTRbits
  0000                00169         extern  _alarme
  0000                00170         extern  _hab_alarme
  0000                00171         extern  _hab_sensor
  0000                00172         extern  _sys_temp_min
  0000                00173         extern  _sys_temp_max
  0000                00174         extern  _sys_lumi_min
  0000                00175         extern  _sys_lumi_max
  0000                00176         extern  _sys_timer_pool
  0000                00177         extern  _temp
  0000                00178         extern  _lumi
  0000                00179         extern  _SPPDATA
  0000                00180         extern  _SPPCFG
  0000                00181         extern  _SPPEPS
  0000                00182         extern  _SPPCON
  0000                00183         extern  _UFRM
  0000                00184         extern  _UFRML
  0000                00185         extern  _UFRMH
  0000                00186         extern  _UIR
  0000                00187         extern  _UIE
  0000                00188         extern  _UEIR
  0000                00189         extern  _UEIE
  0000                00190         extern  _USTAT
  0000                00191         extern  _UCON
  0000                00192         extern  _UADDR
  0000                00193         extern  _UCFG
  0000                00194         extern  _UEP0
  0000                00195         extern  _UEP1
  0000                00196         extern  _UEP2
  0000                00197         extern  _UEP3
  0000                00198         extern  _UEP4
  0000                00199         extern  _UEP5
  0000                00200         extern  _UEP6
  0000                00201         extern  _UEP7
  0000                00202         extern  _UEP8
  0000                00203         extern  _UEP9
  0000                00204         extern  _UEP10
  0000                00205         extern  _UEP11
  0000                00206         extern  _UEP12
  0000                00207         extern  _UEP13
  0000                00208         extern  _UEP14
  0000                00209         extern  _UEP15
  0000                00210         extern  _PORTA
  0000                00211         extern  _PORTB
  0000                00212         extern  _PORTC
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE  5


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000                00213         extern  _PORTD
  0000                00214         extern  _PORTE
  0000                00215         extern  _LATA
  0000                00216         extern  _LATB
  0000                00217         extern  _LATC
  0000                00218         extern  _LATD
  0000                00219         extern  _LATE
  0000                00220         extern  _DDRA
  0000                00221         extern  _TRISA
  0000                00222         extern  _DDRB
  0000                00223         extern  _TRISB
  0000                00224         extern  _DDRC
  0000                00225         extern  _TRISC
  0000                00226         extern  _DDRD
  0000                00227         extern  _TRISD
  0000                00228         extern  _DDRE
  0000                00229         extern  _TRISE
  0000                00230         extern  _OSCTUNE
  0000                00231         extern  _PIE1
  0000                00232         extern  _PIR1
  0000                00233         extern  _IPR1
  0000                00234         extern  _PIE2
  0000                00235         extern  _PIR2
  0000                00236         extern  _IPR2
  0000                00237         extern  _EECON1
  0000                00238         extern  _EECON2
  0000                00239         extern  _EEDATA
  0000                00240         extern  _EEADR
  0000                00241         extern  _RCSTA
  0000                00242         extern  _TXSTA
  0000                00243         extern  _TXREG
  0000                00244         extern  _RCREG
  0000                00245         extern  _SPBRG
  0000                00246         extern  _SPBRGH
  0000                00247         extern  _T3CON
  0000                00248         extern  _TMR3
  0000                00249         extern  _TMR3L
  0000                00250         extern  _TMR3H
  0000                00251         extern  _CMCON
  0000                00252         extern  _CVRCON
  0000                00253         extern  _CCP1AS
  0000                00254         extern  _ECCP1AS
  0000                00255         extern  _CCP1DEL
  0000                00256         extern  _ECCP1DEL
  0000                00257         extern  _BAUDCON
  0000                00258         extern  _BAUDCTL
  0000                00259         extern  _CCP2CON
  0000                00260         extern  _CCPR2
  0000                00261         extern  _CCPR2L
  0000                00262         extern  _CCPR2H
  0000                00263         extern  _CCP1CON
  0000                00264         extern  _ECCP1CON
  0000                00265         extern  _CCPR1
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE  6


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000                00266         extern  _CCPR1L
  0000                00267         extern  _CCPR1H
  0000                00268         extern  _ADCON2
  0000                00269         extern  _ADCON1
  0000                00270         extern  _ADCON0
  0000                00271         extern  _ADRES
  0000                00272         extern  _ADRESL
  0000                00273         extern  _ADRESH
  0000                00274         extern  _SSPCON2
  0000                00275         extern  _SSPCON1
  0000                00276         extern  _SSPSTAT
  0000                00277         extern  _SSPADD
  0000                00278         extern  _SSPBUF
  0000                00279         extern  _T2CON
  0000                00280         extern  _PR2
  0000                00281         extern  _TMR2
  0000                00282         extern  _T1CON
  0000                00283         extern  _TMR1
  0000                00284         extern  _TMR1L
  0000                00285         extern  _TMR1H
  0000                00286         extern  _RCON
  0000                00287         extern  _WDTCON
  0000                00288         extern  _HLVDCON
  0000                00289         extern  _LVDCON
  0000                00290         extern  _OSCCON
  0000                00291         extern  _T0CON
  0000                00292         extern  _TMR0
  0000                00293         extern  _TMR0L
  0000                00294         extern  _TMR0H
  0000                00295         extern  _STATUS
  0000                00296         extern  _FSR2L
  0000                00297         extern  _FSR2H
  0000                00298         extern  _PLUSW2
  0000                00299         extern  _PREINC2
  0000                00300         extern  _POSTDEC2
  0000                00301         extern  _POSTINC2
  0000                00302         extern  _INDF2
  0000                00303         extern  _BSR
  0000                00304         extern  _FSR1L
  0000                00305         extern  _FSR1H
  0000                00306         extern  _PLUSW1
  0000                00307         extern  _PREINC1
  0000                00308         extern  _POSTDEC1
  0000                00309         extern  _POSTINC1
  0000                00310         extern  _INDF1
  0000                00311         extern  _WREG
  0000                00312         extern  _FSR0L
  0000                00313         extern  _FSR0H
  0000                00314         extern  _PLUSW0
  0000                00315         extern  _PREINC0
  0000                00316         extern  _POSTDEC0
  0000                00317         extern  _POSTINC0
  0000                00318         extern  _INDF0
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE  7


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  0000                00319         extern  _INTCON3
  0000                00320         extern  _INTCON2
  0000                00321         extern  _INTCON
  0000                00322         extern  _PROD
  0000                00323         extern  _PRODL
  0000                00324         extern  _PRODH
  0000                00325         extern  _TABLAT
  0000                00326         extern  _TBLPTR
  0000                00327         extern  _TBLPTRL
  0000                00328         extern  _TBLPTRH
  0000                00329         extern  _TBLPTRU
  0000                00330         extern  _PC
  0000                00331         extern  _PCL
  0000                00332         extern  _PCLATH
  0000                00333         extern  _PCLATU
  0000                00334         extern  _STKPTR
  0000                00335         extern  _TOS
  0000                00336         extern  _TOSL
  0000                00337         extern  _TOSH
  0000                00338         extern  _TOSU
  0000                00339         extern  _print_serial_string
  0000                00340         extern  _print_lcd_string
  0000                00341         extern  _print_lcd_mais
  0000                00342         extern  _print_lcd_menos
  0000                00343         extern  _print_lcd_tela
  0000                00344         extern  _print_lcd_graus
  0000                00345         extern  _print_lcd_ln
  0000                00346         extern  _retorna_lcd
  0000                00347         extern  _le_tecla
  0000                00348         extern  _le_tecla_continua
  0000                00349         extern  _set_pwm
  0000                00350         extern  _inicializa_led
  0000                00351         extern  _led
  0000                00352         extern  _configura_porta
  0000                00353         extern  _seta_porta
  0000                00354         extern  _timer_start
  0000                00355         extern  _timer_expired
  0000                00356         extern  __moduint
  0000                00357         extern  __divuint
  0000                00358         extern  __modulong
  0000                00359         extern  __divulong
                      00360 
                      00361 ;--------------------------------------------------------
                      00362 ;       Equates to used internal registers
                      00363 ;--------------------------------------------------------
  00000FD8            00364 STATUS  equ     0xfd8
  00000FF9            00365 PCL     equ     0xff9
  00000FFA            00366 PCLATH  equ     0xffa
  00000FFB            00367 PCLATU  equ     0xffb
  00000FE8            00368 WREG    equ     0xfe8
  00000FE9            00369 FSR0L   equ     0xfe9
  00000FE1            00370 FSR1L   equ     0xfe1
  00000FD9            00371 FSR2L   equ     0xfd9
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE  8


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

  00000FE6            00372 POSTINC1        equ     0xfe6
  00000FE5            00373 POSTDEC1        equ     0xfe5
  00000FE4            00374 PREINC1 equ     0xfe4
  00000FDB            00375 PLUSW2  equ     0xfdb
  00000FF3            00376 PRODL   equ     0xff3
  00000FF4            00377 PRODH   equ     0xff4
                      00378 
                      00379 
                      00380         idata
000000 00             00381 _pwm_1  db      0x00
000001 00             00382 _pwm_2  db      0x00
000002 00             00383 _teste_pwm      db      0x00
000003 00 00 00 00 0A 00384 _timer  db      0x00, 0x00, 0x00, 0x00, 0x0a, 0x00, 0x00, 0x00
       00 00 00       
                      00385 
                      00386 
                      00387 ; Internal registers
                      00388 .registers      udata_ovr       0x0000
000000                00389 r0x00   res     1
000001                00390 r0x01   res     1
000002                00391 r0x02   res     1
000003                00392 r0x03   res     1
000004                00393 r0x04   res     1
000005                00394 r0x05   res     1
                      00395 
                      00396 udata_interface_0       udata
000000                00397 _print_tela_s_temp_1_227        res     5
                      00398 
                      00399 udata_interface_1       udata
000000                00400 _print_tela_s_lumi_1_227        res     5
                      00401 
                      00402 udata_interface_2       udata
000000                00403 _print_tela_s_tempo_1_227       res     6
                      00404 
                      00405 udata_interface_3       udata
000000                00406 _print_tela_s_pwm_1_227 res     4
                      00407 
                      00408 ;--------------------------------------------------------
                      00409 ; global & static initialisations
                      00410 ;--------------------------------------------------------
                      00411 ; I code from now on!
                      00412 ; ; Starting pCode block
                      00413 S_interface__print_tela code
000000                00414 _print_tela:
                      00415 ;       .line   920; interface.c        void print_tela(unsigned char slot)
000000 CFD9 FFE5      00416         MOVFF   FSR2L, POSTDEC1
000004 CFE1 FFD9      00417         MOVFF   FSR1L, FSR2L
000008 C??? F???      00418         MOVFF   r0x00, POSTDEC1
00000C C??? F???      00419         MOVFF   r0x01, POSTDEC1
000010 C??? F???      00420         MOVFF   r0x02, POSTDEC1
000014 C??? F???      00421         MOVFF   r0x03, POSTDEC1
000018 C??? F???      00422         MOVFF   r0x04, POSTDEC1
00001C 0E02           00423         MOVLW   0x02
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE  9


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00001E CFDB F000      00424         MOVFF   PLUSW2, r0x00
000022 ????           00425         BANKSEL (_print_tela_s_temp_1_227 + 4)
                      00426 ;       .line   926; interface.c        s_temp[4] = '\0';
000024 6B??           00427         CLRF    (_print_tela_s_temp_1_227 + 4), B
                      00428 ;       .line   927; interface.c        s_temp[2] = ',';
000026 0E2C           00429         MOVLW   0x2c
000028 ????           00430         BANKSEL (_print_tela_s_temp_1_227 + 2)
00002A 6F??           00431         MOVWF   (_print_tela_s_temp_1_227 + 2), B
00002C ????           00432         BANKSEL (_print_tela_s_lumi_1_227 + 4)
                      00433 ;       .line   928; interface.c        s_lumi[4] = '\0';
00002E 6B??           00434         CLRF    (_print_tela_s_lumi_1_227 + 4), B
                      00435 ;       .line   929; interface.c        s_lumi[3] = '%';
000030 0E25           00436         MOVLW   0x25
000032 ????           00437         BANKSEL (_print_tela_s_lumi_1_227 + 3)
000034 6F??           00438         MOVWF   (_print_tela_s_lumi_1_227 + 3), B
000036 ????           00439         BANKSEL (_print_tela_s_tempo_1_227 + 5)
                      00440 ;       .line   930; interface.c        s_tempo[5] = '\0';
000038 6B??           00441         CLRF    (_print_tela_s_tempo_1_227 + 5), B
00003A ????           00442         BANKSEL (_print_tela_s_pwm_1_227 + 3)
                      00443 ;       .line   931; interface.c        s_pwm[3] = '\0';
00003C 6B??           00444         CLRF    (_print_tela_s_pwm_1_227 + 3), B
                      00445 ;       .line   933; interface.c        retorna_lcd();
00003E EC?? F0??      00446         CALL    _retorna_lcd
                      00447 ;       .line   935; interface.c        switch (slot) {
000042 0E35           00448         MOVLW   0x35
000044 5C??           00449         SUBWF   r0x00, W
000046 B0D8           00450         BTFSC   STATUS, 0
000048 EF?? F0??      00451         GOTO    _01835_DS_
00004C 6AFA           00452         CLRF    PCLATH
00004E 6AFB           00453         CLRF    PCLATU
000050 34??           00454         RLCF    r0x00, W
000052 36FA           00455         RLCF    PCLATH, F
000054 34E8           00456         RLCF    WREG, W
000056 36FA           00457         RLCF    PCLATH, F
000058 0BFC           00458         ANDLW   0xfc
00005A 0F??           00459         ADDLW   LOW(_01871_DS_)
00005C 6EE5           00460         MOVWF   POSTDEC1
00005E 0E??           00461         MOVLW   HIGH(_01871_DS_)
000060 22FA           00462         ADDWFC  PCLATH, F
000062 0E??           00463         MOVLW   UPPER(_01871_DS_)
000064 22FB           00464         ADDWFC  PCLATU, F
000066 50E4           00465         MOVF    PREINC1, W
000068 6EF9           00466         MOVWF   PCL
00006A                00467 _01871_DS_:
00006A EF?? F0??      00468         GOTO    _01753_DS_
00006E EF?? F0??      00469         GOTO    _01766_DS_
000072 EF?? F0??      00470         GOTO    _01767_DS_
000076 EF?? F0??      00471         GOTO    _01768_DS_
00007A EF?? F0??      00472         GOTO    _01769_DS_
00007E EF?? F0??      00473         GOTO    _01770_DS_
000082 EF?? F0??      00474         GOTO    _01772_DS_
000086 EF?? F0??      00475         GOTO    _01772_DS_
00008A EF?? F0??      00476         GOTO    _01773_DS_
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE 10


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00008E EF?? F0??      00477         GOTO    _01774_DS_
000092 EF?? F0??      00478         GOTO    _01775_DS_
000096 EF?? F0??      00479         GOTO    _01776_DS_
00009A EF?? F0??      00480         GOTO    _01777_DS_
00009E EF?? F0??      00481         GOTO    _01778_DS_
0000A2 EF?? F0??      00482         GOTO    _01779_DS_
0000A6 EF?? F0??      00483         GOTO    _01780_DS_
0000AA EF?? F0??      00484         GOTO    _01782_DS_
0000AE EF?? F0??      00485         GOTO    _01782_DS_
0000B2 EF?? F0??      00486         GOTO    _01791_DS_
0000B6 EF?? F0??      00487         GOTO    _01791_DS_
0000BA EF?? F0??      00488         GOTO    _01791_DS_
0000BE EF?? F0??      00489         GOTO    _01791_DS_
0000C2 EF?? F0??      00490         GOTO    _01808_DS_
0000C6 EF?? F0??      00491         GOTO    _01808_DS_
0000CA EF?? F0??      00492         GOTO    _01808_DS_
0000CE EF?? F0??      00493         GOTO    _01808_DS_
0000D2 EF?? F0??      00494         GOTO    _01808_DS_
0000D6 EF?? F0??      00495         GOTO    _01808_DS_
0000DA EF?? F0??      00496         GOTO    _01809_DS_
0000DE EF?? F0??      00497         GOTO    _01810_DS_
0000E2 EF?? F0??      00498         GOTO    _01816_DS_
0000E6 EF?? F0??      00499         GOTO    _01816_DS_
0000EA EF?? F0??      00500         GOTO    _01816_DS_
0000EE EF?? F0??      00501         GOTO    _01816_DS_
0000F2 EF?? F0??      00502         GOTO    _01816_DS_
0000F6 EF?? F0??      00503         GOTO    _01816_DS_
0000FA EF?? F0??      00504         GOTO    _01817_DS_
0000FE EF?? F0??      00505         GOTO    _01818_DS_
000102 EF?? F0??      00506         GOTO    _01835_DS_
000106 EF?? F0??      00507         GOTO    _01819_DS_
00010A EF?? F0??      00508         GOTO    _01820_DS_
00010E EF?? F0??      00509         GOTO    _01821_DS_
000112 EF?? F0??      00510         GOTO    _01822_DS_
000116 EF?? F0??      00511         GOTO    _01823_DS_
00011A EF?? F0??      00512         GOTO    _01824_DS_
00011E EF?? F0??      00513         GOTO    _01825_DS_
000122 EF?? F0??      00514         GOTO    _01826_DS_
000126 EF?? F0??      00515         GOTO    _01827_DS_
00012A EF?? F0??      00516         GOTO    _01828_DS_
00012E EF?? F0??      00517         GOTO    _01829_DS_
000132 EF?? F0??      00518         GOTO    _01830_DS_
000136 EF?? F0??      00519         GOTO    _01831_DS_
00013A EF?? F0??      00520         GOTO    _01835_DS_
00013E                00521 _01753_DS_:
00013E ????           00522         BANKSEL _hab_sensor
                      00523 ;       .line   937; interface.c        if (hab_sensor == 0 || hab_sensor == 1) {
000140 51??           00524         MOVF    _hab_sensor, W, B
000142 E0??           00525         BZ      _01756_DS_
000144 ????           00526         BANKSEL _hab_sensor
000146 51??           00527         MOVF    _hab_sensor, W, B
000148 0A01           00528         XORLW   0x01
00014A E0??           00529         BZ      _01756_DS_
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE 11


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00014C D???           00530         BRA     _01757_DS_
00014E                00531 _01756_DS_:
                      00532 ;       .line   938; interface.c        print_lcd_string("T:");
00014E 0E??           00533         MOVLW   UPPER(__str_0)
000150 6E??           00534         MOVWF   r0x03
000152 0E??           00535         MOVLW   HIGH(__str_0)
000154 6E??           00536         MOVWF   r0x02
000156 0E??           00537         MOVLW   LOW(__str_0)
000158 6E??           00538         MOVWF   r0x01
00015A 50??           00539         MOVF    r0x03, W
00015C 6EE5           00540         MOVWF   POSTDEC1
00015E 50??           00541         MOVF    r0x02, W
000160 6EE5           00542         MOVWF   POSTDEC1
000162 50??           00543         MOVF    r0x01, W
000164 6EE5           00544         MOVWF   POSTDEC1
000166 EC?? F0??      00545         CALL    _print_lcd_string
00016A 0E03           00546         MOVLW   0x03
00016C 26E1           00547         ADDWF   FSR1L, F
                      00548 ;       .line   939; interface.c        s_temp[3] = (temp % 10) + 0x30;
00016E 0E00           00549         MOVLW   0x00
000170 6EE5           00550         MOVWF   POSTDEC1
000172 0E0A           00551         MOVLW   0x0a
000174 6EE5           00552         MOVWF   POSTDEC1
000176 ????           00553         BANKSEL (_temp + 1)
000178 51??           00554         MOVF    (_temp + 1), W, B
00017A 6EE5           00555         MOVWF   POSTDEC1
00017C ????           00556         BANKSEL _temp
00017E 51??           00557         MOVF    _temp, W, B
000180 6EE5           00558         MOVWF   POSTDEC1
000182 EC?? F0??      00559         CALL    __moduint
000186 6E??           00560         MOVWF   r0x01
000188 CFF3 F000      00561         MOVFF   PRODL, r0x02
00018C 0E04           00562         MOVLW   0x04
00018E 26E1           00563         ADDWF   FSR1L, F
000190 0E30           00564         MOVLW   0x30
000192 26??           00565         ADDWF   r0x01, F
000194 50??           00566         MOVF    r0x01, W
000196 ????           00567         BANKSEL (_print_tela_s_temp_1_227 + 3)
000198 6F??           00568         MOVWF   (_print_tela_s_temp_1_227 + 3), B
                      00569 ;       .line   940; interface.c        s_temp[1] = ((temp / 10) % 10) + 0x30;
00019A 0E00           00570         MOVLW   0x00
00019C 6EE5           00571         MOVWF   POSTDEC1
00019E 0E0A           00572         MOVLW   0x0a
0001A0 6EE5           00573         MOVWF   POSTDEC1
0001A2 ????           00574         BANKSEL (_temp + 1)
0001A4 51??           00575         MOVF    (_temp + 1), W, B
0001A6 6EE5           00576         MOVWF   POSTDEC1
0001A8 ????           00577         BANKSEL _temp
0001AA 51??           00578         MOVF    _temp, W, B
0001AC 6EE5           00579         MOVWF   POSTDEC1
0001AE EC?? F0??      00580         CALL    __divuint
0001B2 6E??           00581         MOVWF   r0x01
0001B4 CFF3 F000      00582         MOVFF   PRODL, r0x02
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE 12


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0001B8 0E04           00583         MOVLW   0x04
0001BA 26E1           00584         ADDWF   FSR1L, F
0001BC 0E00           00585         MOVLW   0x00
0001BE 6EE5           00586         MOVWF   POSTDEC1
0001C0 0E0A           00587         MOVLW   0x0a
0001C2 6EE5           00588         MOVWF   POSTDEC1
0001C4 50??           00589         MOVF    r0x02, W
0001C6 6EE5           00590         MOVWF   POSTDEC1
0001C8 50??           00591         MOVF    r0x01, W
0001CA 6EE5           00592         MOVWF   POSTDEC1
0001CC EC?? F0??      00593         CALL    __moduint
0001D0 6E??           00594         MOVWF   r0x01
0001D2 CFF3 F000      00595         MOVFF   PRODL, r0x02
0001D6 0E04           00596         MOVLW   0x04
0001D8 26E1           00597         ADDWF   FSR1L, F
0001DA 0E30           00598         MOVLW   0x30
0001DC 26??           00599         ADDWF   r0x01, F
0001DE 50??           00600         MOVF    r0x01, W
0001E0 ????           00601         BANKSEL (_print_tela_s_temp_1_227 + 1)
0001E2 6F??           00602         MOVWF   (_print_tela_s_temp_1_227 + 1), B
                      00603 ;       .line   941; interface.c        s_temp[0] = ((temp / 100) % 10) + 0x30;
0001E4 0E00           00604         MOVLW   0x00
0001E6 6EE5           00605         MOVWF   POSTDEC1
0001E8 0E64           00606         MOVLW   0x64
0001EA 6EE5           00607         MOVWF   POSTDEC1
0001EC ????           00608         BANKSEL (_temp + 1)
0001EE 51??           00609         MOVF    (_temp + 1), W, B
0001F0 6EE5           00610         MOVWF   POSTDEC1
0001F2 ????           00611         BANKSEL _temp
0001F4 51??           00612         MOVF    _temp, W, B
0001F6 6EE5           00613         MOVWF   POSTDEC1
0001F8 EC?? F0??      00614         CALL    __divuint
0001FC 6E??           00615         MOVWF   r0x01
0001FE CFF3 F000      00616         MOVFF   PRODL, r0x02
000202 0E04           00617         MOVLW   0x04
000204 26E1           00618         ADDWF   FSR1L, F
000206 0E00           00619         MOVLW   0x00
000208 6EE5           00620         MOVWF   POSTDEC1
00020A 0E0A           00621         MOVLW   0x0a
00020C 6EE5           00622         MOVWF   POSTDEC1
00020E 50??           00623         MOVF    r0x02, W
000210 6EE5           00624         MOVWF   POSTDEC1
000212 50??           00625         MOVF    r0x01, W
000214 6EE5           00626         MOVWF   POSTDEC1
000216 EC?? F0??      00627         CALL    __moduint
00021A 6E??           00628         MOVWF   r0x01
00021C CFF3 F000      00629         MOVFF   PRODL, r0x02
000220 0E04           00630         MOVLW   0x04
000222 26E1           00631         ADDWF   FSR1L, F
000224 0E30           00632         MOVLW   0x30
000226 26??           00633         ADDWF   r0x01, F
000228 50??           00634         MOVF    r0x01, W
00022A ????           00635         BANKSEL _print_tela_s_temp_1_227
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE 13


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00022C 6F??           00636         MOVWF   _print_tela_s_temp_1_227, B
                      00637 ;       .line   942; interface.c        print_lcd_string(s_temp);
00022E 0E??           00638         MOVLW   HIGH(_print_tela_s_temp_1_227)
000230 6E??           00639         MOVWF   r0x02
000232 0E??           00640         MOVLW   LOW(_print_tela_s_temp_1_227)
000234 6E??           00641         MOVWF   r0x01
000236 0E80           00642         MOVLW   0x80
000238 6E??           00643         MOVWF   r0x03
00023A 50??           00644         MOVF    r0x03, W
00023C 6EE5           00645         MOVWF   POSTDEC1
00023E 50??           00646         MOVF    r0x02, W
000240 6EE5           00647         MOVWF   POSTDEC1
000242 50??           00648         MOVF    r0x01, W
000244 6EE5           00649         MOVWF   POSTDEC1
000246 EC?? F0??      00650         CALL    _print_lcd_string
00024A 0E03           00651         MOVLW   0x03
00024C 26E1           00652         ADDWF   FSR1L, F
                      00653 ;       .line   943; interface.c        print_lcd_graus();
00024E EC?? F0??      00654         CALL    _print_lcd_graus
                      00655 ;       .line   944; interface.c        print_lcd_string("C L:");
000252 0E??           00656         MOVLW   UPPER(__str_1)
000254 6E??           00657         MOVWF   r0x03
000256 0E??           00658         MOVLW   HIGH(__str_1)
000258 6E??           00659         MOVWF   r0x02
00025A 0E??           00660         MOVLW   LOW(__str_1)
00025C 6E??           00661         MOVWF   r0x01
00025E 50??           00662         MOVF    r0x03, W
000260 6EE5           00663         MOVWF   POSTDEC1
000262 50??           00664         MOVF    r0x02, W
000264 6EE5           00665         MOVWF   POSTDEC1
000266 50??           00666         MOVF    r0x01, W
000268 6EE5           00667         MOVWF   POSTDEC1
00026A EC?? F0??      00668         CALL    _print_lcd_string
00026E 0E03           00669         MOVLW   0x03
000270 26E1           00670         ADDWF   FSR1L, F
                      00671 ;       .line   945; interface.c        s_lumi[2] = (lumi % 10) + 0x30;
000272 0E00           00672         MOVLW   0x00
000274 6EE5           00673         MOVWF   POSTDEC1
000276 0E0A           00674         MOVLW   0x0a
000278 6EE5           00675         MOVWF   POSTDEC1
00027A ????           00676         BANKSEL (_lumi + 1)
00027C 51??           00677         MOVF    (_lumi + 1), W, B
00027E 6EE5           00678         MOVWF   POSTDEC1
000280 ????           00679         BANKSEL _lumi
000282 51??           00680         MOVF    _lumi, W, B
000284 6EE5           00681         MOVWF   POSTDEC1
000286 EC?? F0??      00682         CALL    __moduint
00028A 6E??           00683         MOVWF   r0x01
00028C CFF3 F000      00684         MOVFF   PRODL, r0x02
000290 0E04           00685         MOVLW   0x04
000292 26E1           00686         ADDWF   FSR1L, F
000294 0E30           00687         MOVLW   0x30
000296 26??           00688         ADDWF   r0x01, F
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE 14


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000298 50??           00689         MOVF    r0x01, W
00029A ????           00690         BANKSEL (_print_tela_s_lumi_1_227 + 2)
00029C 6F??           00691         MOVWF   (_print_tela_s_lumi_1_227 + 2), B
                      00692 ;       .line   946; interface.c        s_lumi[1] = ((lumi / 10) % 10) + 0x30;
00029E 0E00           00693         MOVLW   0x00
0002A0 6EE5           00694         MOVWF   POSTDEC1
0002A2 0E0A           00695         MOVLW   0x0a
0002A4 6EE5           00696         MOVWF   POSTDEC1
0002A6 ????           00697         BANKSEL (_lumi + 1)
0002A8 51??           00698         MOVF    (_lumi + 1), W, B
0002AA 6EE5           00699         MOVWF   POSTDEC1
0002AC ????           00700         BANKSEL _lumi
0002AE 51??           00701         MOVF    _lumi, W, B
0002B0 6EE5           00702         MOVWF   POSTDEC1
0002B2 EC?? F0??      00703         CALL    __divuint
0002B6 6E??           00704         MOVWF   r0x01
0002B8 CFF3 F000      00705         MOVFF   PRODL, r0x02
0002BC 0E04           00706         MOVLW   0x04
0002BE 26E1           00707         ADDWF   FSR1L, F
0002C0 0E00           00708         MOVLW   0x00
0002C2 6EE5           00709         MOVWF   POSTDEC1
0002C4 0E0A           00710         MOVLW   0x0a
0002C6 6EE5           00711         MOVWF   POSTDEC1
0002C8 50??           00712         MOVF    r0x02, W
0002CA 6EE5           00713         MOVWF   POSTDEC1
0002CC 50??           00714         MOVF    r0x01, W
0002CE 6EE5           00715         MOVWF   POSTDEC1
0002D0 EC?? F0??      00716         CALL    __moduint
0002D4 6E??           00717         MOVWF   r0x01
0002D6 CFF3 F000      00718         MOVFF   PRODL, r0x02
0002DA 0E04           00719         MOVLW   0x04
0002DC 26E1           00720         ADDWF   FSR1L, F
0002DE 0E30           00721         MOVLW   0x30
0002E0 26??           00722         ADDWF   r0x01, F
0002E2 50??           00723         MOVF    r0x01, W
0002E4 ????           00724         BANKSEL (_print_tela_s_lumi_1_227 + 1)
0002E6 6F??           00725         MOVWF   (_print_tela_s_lumi_1_227 + 1), B
                      00726 ;       .line   947; interface.c        s_lumi[0] = ((lumi / 100) % 10) + 0x30;
0002E8 0E00           00727         MOVLW   0x00
0002EA 6EE5           00728         MOVWF   POSTDEC1
0002EC 0E64           00729         MOVLW   0x64
0002EE 6EE5           00730         MOVWF   POSTDEC1
0002F0 ????           00731         BANKSEL (_lumi + 1)
0002F2 51??           00732         MOVF    (_lumi + 1), W, B
0002F4 6EE5           00733         MOVWF   POSTDEC1
0002F6 ????           00734         BANKSEL _lumi
0002F8 51??           00735         MOVF    _lumi, W, B
0002FA 6EE5           00736         MOVWF   POSTDEC1
0002FC EC?? F0??      00737         CALL    __divuint
000300 6E??           00738         MOVWF   r0x01
000302 CFF3 F000      00739         MOVFF   PRODL, r0x02
000306 0E04           00740         MOVLW   0x04
000308 26E1           00741         ADDWF   FSR1L, F
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE 15


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00030A 0E00           00742         MOVLW   0x00
00030C 6EE5           00743         MOVWF   POSTDEC1
00030E 0E0A           00744         MOVLW   0x0a
000310 6EE5           00745         MOVWF   POSTDEC1
000312 50??           00746         MOVF    r0x02, W
000314 6EE5           00747         MOVWF   POSTDEC1
000316 50??           00748         MOVF    r0x01, W
000318 6EE5           00749         MOVWF   POSTDEC1
00031A EC?? F0??      00750         CALL    __moduint
00031E 6E??           00751         MOVWF   r0x01
000320 CFF3 F000      00752         MOVFF   PRODL, r0x02
000324 0E04           00753         MOVLW   0x04
000326 26E1           00754         ADDWF   FSR1L, F
000328 0E30           00755         MOVLW   0x30
00032A 26??           00756         ADDWF   r0x01, F
00032C 50??           00757         MOVF    r0x01, W
00032E ????           00758         BANKSEL _print_tela_s_lumi_1_227
000330 6F??           00759         MOVWF   _print_tela_s_lumi_1_227, B
                      00760 ;       .line   948; interface.c        print_lcd_string(s_lumi);
000332 0E??           00761         MOVLW   HIGH(_print_tela_s_lumi_1_227)
000334 6E??           00762         MOVWF   r0x02
000336 0E??           00763         MOVLW   LOW(_print_tela_s_lumi_1_227)
000338 6E??           00764         MOVWF   r0x01
00033A 0E80           00765         MOVLW   0x80
00033C 6E??           00766         MOVWF   r0x03
00033E 50??           00767         MOVF    r0x03, W
000340 6EE5           00768         MOVWF   POSTDEC1
000342 50??           00769         MOVF    r0x02, W
000344 6EE5           00770         MOVWF   POSTDEC1
000346 50??           00771         MOVF    r0x01, W
000348 6EE5           00772         MOVWF   POSTDEC1
00034A EC?? F0??      00773         CALL    _print_lcd_string
00034E 0E03           00774         MOVLW   0x03
000350 26E1           00775         ADDWF   FSR1L, F
                      00776 ;       .line   949; interface.c        print_lcd_string(" ");
000352 0E??           00777         MOVLW   UPPER(__str_2)
000354 6E??           00778         MOVWF   r0x03
000356 0E??           00779         MOVLW   HIGH(__str_2)
000358 6E??           00780         MOVWF   r0x02
00035A 0E??           00781         MOVLW   LOW(__str_2)
00035C 6E??           00782         MOVWF   r0x01
00035E 50??           00783         MOVF    r0x03, W
000360 6EE5           00784         MOVWF   POSTDEC1
000362 50??           00785         MOVF    r0x02, W
000364 6EE5           00786         MOVWF   POSTDEC1
000366 50??           00787         MOVF    r0x01, W
000368 6EE5           00788         MOVWF   POSTDEC1
00036A EC?? F0??      00789         CALL    _print_lcd_string
00036E 0E03           00790         MOVLW   0x03
000370 26E1           00791         ADDWF   FSR1L, F
000372 D???           00792         BRA     _01758_DS_
000374                00793 _01757_DS_:
000374 ????           00794         BANKSEL _hab_sensor
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE 16


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      00795 ;       .line   950; interface.c        } else if (hab_sensor == 2) {
000376 51??           00796         MOVF    _hab_sensor, W, B
000378 0A02           00797         XORLW   0x02
00037A E1??           00798         BNZ     _01758_DS_
                      00799 ;       .line   951; interface.c        print_lcd_string("SENSORES OFF    ");
00037C 0E??           00800         MOVLW   UPPER(__str_3)
00037E 6E??           00801         MOVWF   r0x03
000380 0E??           00802         MOVLW   HIGH(__str_3)
000382 6E??           00803         MOVWF   r0x02
000384 0E??           00804         MOVLW   LOW(__str_3)
000386 6E??           00805         MOVWF   r0x01
000388 50??           00806         MOVF    r0x03, W
00038A 6EE5           00807         MOVWF   POSTDEC1
00038C 50??           00808         MOVF    r0x02, W
00038E 6EE5           00809         MOVWF   POSTDEC1
000390 50??           00810         MOVF    r0x01, W
000392 6EE5           00811         MOVWF   POSTDEC1
000394 EC?? F0??      00812         CALL    _print_lcd_string
000398 0E03           00813         MOVLW   0x03
00039A 26E1           00814         ADDWF   FSR1L, F
00039C                00815 _01758_DS_:
                      00816 ;       .line   954; interface.c        print_lcd_string("\n");
00039C 0E??           00817         MOVLW   UPPER(__str_4)
00039E 6E??           00818         MOVWF   r0x03
0003A0 0E??           00819         MOVLW   HIGH(__str_4)
0003A2 6E??           00820         MOVWF   r0x02
0003A4 0E??           00821         MOVLW   LOW(__str_4)
0003A6 6E??           00822         MOVWF   r0x01
0003A8 50??           00823         MOVF    r0x03, W
0003AA 6EE5           00824         MOVWF   POSTDEC1
0003AC 50??           00825         MOVF    r0x02, W
0003AE 6EE5           00826         MOVWF   POSTDEC1
0003B0 50??           00827         MOVF    r0x01, W
0003B2 6EE5           00828         MOVWF   POSTDEC1
0003B4 EC?? F0??      00829         CALL    _print_lcd_string
0003B8 0E03           00830         MOVLW   0x03
0003BA 26E1           00831         ADDWF   FSR1L, F
                      00832 ;       .line   955; interface.c        print_lcd_string("3:MENU");
0003BC 0E??           00833         MOVLW   UPPER(__str_5)
0003BE 6E??           00834         MOVWF   r0x03
0003C0 0E??           00835         MOVLW   HIGH(__str_5)
0003C2 6E??           00836         MOVWF   r0x02
0003C4 0E??           00837         MOVLW   LOW(__str_5)
0003C6 6E??           00838         MOVWF   r0x01
0003C8 50??           00839         MOVF    r0x03, W
0003CA 6EE5           00840         MOVWF   POSTDEC1
0003CC 50??           00841         MOVF    r0x02, W
0003CE 6EE5           00842         MOVWF   POSTDEC1
0003D0 50??           00843         MOVF    r0x01, W
0003D2 6EE5           00844         MOVWF   POSTDEC1
0003D4 EC?? F0??      00845         CALL    _print_lcd_string
0003D8 0E03           00846         MOVLW   0x03
0003DA 26E1           00847         ADDWF   FSR1L, F
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE 17


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0003DC ????           00848         BANKSEL _hab_alarme
                      00849 ;       .line   956; interface.c        if (hab_alarme) {
0003DE 51??           00850         MOVF    _hab_alarme, W, B
0003E0 E0??           00851         BZ      _01764_DS_
0003E2 ????           00852         BANKSEL _alarme
                      00853 ;       .line   957; interface.c        if (alarme)
0003E4 51??           00854         MOVF    _alarme, W, B
0003E6 E0??           00855         BZ      _01761_DS_
                      00856 ;       .line   958; interface.c        print_lcd_string("   PERIGO!");
0003E8 0E??           00857         MOVLW   UPPER(__str_6)
0003EA 6E??           00858         MOVWF   r0x03
0003EC 0E??           00859         MOVLW   HIGH(__str_6)
0003EE 6E??           00860         MOVWF   r0x02
0003F0 0E??           00861         MOVLW   LOW(__str_6)
0003F2 6E??           00862         MOVWF   r0x01
0003F4 50??           00863         MOVF    r0x03, W
0003F6 6EE5           00864         MOVWF   POSTDEC1
0003F8 50??           00865         MOVF    r0x02, W
0003FA 6EE5           00866         MOVWF   POSTDEC1
0003FC 50??           00867         MOVF    r0x01, W
0003FE 6EE5           00868         MOVWF   POSTDEC1
000400 EC?? F0??      00869         CALL    _print_lcd_string
000404 0E03           00870         MOVLW   0x03
000406 26E1           00871         ADDWF   FSR1L, F
000408 EF?? F0??      00872         GOTO    _01835_DS_
00040C                00873 _01761_DS_:
                      00874 ;       .line   960; interface.c        print_lcd_string("          ");
00040C 0E??           00875         MOVLW   UPPER(__str_7)
00040E 6E??           00876         MOVWF   r0x03
000410 0E??           00877         MOVLW   HIGH(__str_7)
000412 6E??           00878         MOVWF   r0x02
000414 0E??           00879         MOVLW   LOW(__str_7)
000416 6E??           00880         MOVWF   r0x01
000418 50??           00881         MOVF    r0x03, W
00041A 6EE5           00882         MOVWF   POSTDEC1
00041C 50??           00883         MOVF    r0x02, W
00041E 6EE5           00884         MOVWF   POSTDEC1
000420 50??           00885         MOVF    r0x01, W
000422 6EE5           00886         MOVWF   POSTDEC1
000424 EC?? F0??      00887         CALL    _print_lcd_string
000428 0E03           00888         MOVLW   0x03
00042A 26E1           00889         ADDWF   FSR1L, F
00042C EF?? F0??      00890         GOTO    _01835_DS_
000430                00891 _01764_DS_:
                      00892 ;       .line   962; interface.c        print_lcd_string("  AL. OFF ");
000430 0E??           00893         MOVLW   UPPER(__str_8)
000432 6E??           00894         MOVWF   r0x03
000434 0E??           00895         MOVLW   HIGH(__str_8)
000436 6E??           00896         MOVWF   r0x02
000438 0E??           00897         MOVLW   LOW(__str_8)
00043A 6E??           00898         MOVWF   r0x01
00043C 50??           00899         MOVF    r0x03, W
00043E 6EE5           00900         MOVWF   POSTDEC1
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE 18


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000440 50??           00901         MOVF    r0x02, W
000442 6EE5           00902         MOVWF   POSTDEC1
000444 50??           00903         MOVF    r0x01, W
000446 6EE5           00904         MOVWF   POSTDEC1
000448 EC?? F0??      00905         CALL    _print_lcd_string
00044C 0E03           00906         MOVLW   0x03
00044E 26E1           00907         ADDWF   FSR1L, F
                      00908 ;       .line   964; interface.c        break;
000450 EF?? F0??      00909         GOTO    _01835_DS_
000454                00910 _01766_DS_:
                      00911 ;       .line   966; interface.c        print_lcd_string("3:ALARM 4:LED   ");
000454 0E??           00912         MOVLW   UPPER(__str_9)
000456 6E??           00913         MOVWF   r0x03
000458 0E??           00914         MOVLW   HIGH(__str_9)
00045A 6E??           00915         MOVWF   r0x02
00045C 0E??           00916         MOVLW   LOW(__str_9)
00045E 6E??           00917         MOVWF   r0x01
000460 50??           00918         MOVF    r0x03, W
000462 6EE5           00919         MOVWF   POSTDEC1
000464 50??           00920         MOVF    r0x02, W
000466 6EE5           00921         MOVWF   POSTDEC1
000468 50??           00922         MOVF    r0x01, W
00046A 6EE5           00923         MOVWF   POSTDEC1
00046C EC?? F0??      00924         CALL    _print_lcd_string
000470 0E03           00925         MOVLW   0x03
000472 26E1           00926         ADDWF   FSR1L, F
                      00927 ;       .line   967; interface.c        print_lcd_string("\n");
000474 0E??           00928         MOVLW   UPPER(__str_4)
000476 6E??           00929         MOVWF   r0x03
000478 0E??           00930         MOVLW   HIGH(__str_4)
00047A 6E??           00931         MOVWF   r0x02
00047C 0E??           00932         MOVLW   LOW(__str_4)
00047E 6E??           00933         MOVWF   r0x01
000480 50??           00934         MOVF    r0x03, W
000482 6EE5           00935         MOVWF   POSTDEC1
000484 50??           00936         MOVF    r0x02, W
000486 6EE5           00937         MOVWF   POSTDEC1
000488 50??           00938         MOVF    r0x01, W
00048A 6EE5           00939         MOVWF   POSTDEC1
00048C EC?? F0??      00940         CALL    _print_lcd_string
000490 0E03           00941         MOVLW   0x03
000492 26E1           00942         ADDWF   FSR1L, F
                      00943 ;       .line   968; interface.c        print_lcd_string("5:");
000494 0E??           00944         MOVLW   UPPER(__str_10)
000496 6E??           00945         MOVWF   r0x03
000498 0E??           00946         MOVLW   HIGH(__str_10)
00049A 6E??           00947         MOVWF   r0x02
00049C 0E??           00948         MOVLW   LOW(__str_10)
00049E 6E??           00949         MOVWF   r0x01
0004A0 50??           00950         MOVF    r0x03, W
0004A2 6EE5           00951         MOVWF   POSTDEC1
0004A4 50??           00952         MOVF    r0x02, W
0004A6 6EE5           00953         MOVWF   POSTDEC1
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE 19


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0004A8 50??           00954         MOVF    r0x01, W
0004AA 6EE5           00955         MOVWF   POSTDEC1
0004AC EC?? F0??      00956         CALL    _print_lcd_string
0004B0 0E03           00957         MOVLW   0x03
0004B2 26E1           00958         ADDWF   FSR1L, F
                      00959 ;       .line   969; interface.c        print_lcd_tela();
0004B4 EC?? F0??      00960         CALL    _print_lcd_tela
                      00961 ;       .line   970; interface.c        print_lcd_string("     6:");
0004B8 0E??           00962         MOVLW   UPPER(__str_11)
0004BA 6E??           00963         MOVWF   r0x03
0004BC 0E??           00964         MOVLW   HIGH(__str_11)
0004BE 6E??           00965         MOVWF   r0x02
0004C0 0E??           00966         MOVLW   LOW(__str_11)
0004C2 6E??           00967         MOVWF   r0x01
0004C4 50??           00968         MOVF    r0x03, W
0004C6 6EE5           00969         MOVWF   POSTDEC1
0004C8 50??           00970         MOVF    r0x02, W
0004CA 6EE5           00971         MOVWF   POSTDEC1
0004CC 50??           00972         MOVF    r0x01, W
0004CE 6EE5           00973         MOVWF   POSTDEC1
0004D0 EC?? F0??      00974         CALL    _print_lcd_string
0004D4 0E03           00975         MOVLW   0x03
0004D6 26E1           00976         ADDWF   FSR1L, F
                      00977 ;       .line   971; interface.c        print_lcd_mais();
0004D8 EC?? F0??      00978         CALL    _print_lcd_mais
                      00979 ;       .line   972; interface.c        print_lcd_string("     ");
0004DC 0E??           00980         MOVLW   UPPER(__str_12)
0004DE 6E??           00981         MOVWF   r0x03
0004E0 0E??           00982         MOVLW   HIGH(__str_12)
0004E2 6E??           00983         MOVWF   r0x02
0004E4 0E??           00984         MOVLW   LOW(__str_12)
0004E6 6E??           00985         MOVWF   r0x01
0004E8 50??           00986         MOVF    r0x03, W
0004EA 6EE5           00987         MOVWF   POSTDEC1
0004EC 50??           00988         MOVF    r0x02, W
0004EE 6EE5           00989         MOVWF   POSTDEC1
0004F0 50??           00990         MOVF    r0x01, W
0004F2 6EE5           00991         MOVWF   POSTDEC1
0004F4 EC?? F0??      00992         CALL    _print_lcd_string
0004F8 0E03           00993         MOVLW   0x03
0004FA 26E1           00994         ADDWF   FSR1L, F
                      00995 ;       .line   973; interface.c        break;
0004FC EF?? F0??      00996         GOTO    _01835_DS_
000500                00997 _01767_DS_:
                      00998 ;       .line   975; interface.c        print_lcd_string("3:PORTS 4:TESTE");
000500 0E??           00999         MOVLW   UPPER(__str_13)
000502 6E??           01000         MOVWF   r0x03
000504 0E??           01001         MOVLW   HIGH(__str_13)
000506 6E??           01002         MOVWF   r0x02
000508 0E??           01003         MOVLW   LOW(__str_13)
00050A 6E??           01004         MOVWF   r0x01
00050C 50??           01005         MOVF    r0x03, W
00050E 6EE5           01006         MOVWF   POSTDEC1
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE 20


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000510 50??           01007         MOVF    r0x02, W
000512 6EE5           01008         MOVWF   POSTDEC1
000514 50??           01009         MOVF    r0x01, W
000516 6EE5           01010         MOVWF   POSTDEC1
000518 EC?? F0??      01011         CALL    _print_lcd_string
00051C 0E03           01012         MOVLW   0x03
00051E 26E1           01013         ADDWF   FSR1L, F
                      01014 ;       .line   976; interface.c        print_lcd_string("\n");
000520 0E??           01015         MOVLW   UPPER(__str_4)
000522 6E??           01016         MOVWF   r0x03
000524 0E??           01017         MOVLW   HIGH(__str_4)
000526 6E??           01018         MOVWF   r0x02
000528 0E??           01019         MOVLW   LOW(__str_4)
00052A 6E??           01020         MOVWF   r0x01
00052C 50??           01021         MOVF    r0x03, W
00052E 6EE5           01022         MOVWF   POSTDEC1
000530 50??           01023         MOVF    r0x02, W
000532 6EE5           01024         MOVWF   POSTDEC1
000534 50??           01025         MOVF    r0x01, W
000536 6EE5           01026         MOVWF   POSTDEC1
000538 EC?? F0??      01027         CALL    _print_lcd_string
00053C 0E03           01028         MOVLW   0x03
00053E 26E1           01029         ADDWF   FSR1L, F
                      01030 ;       .line   977; interface.c        print_lcd_string("5:");
000540 0E??           01031         MOVLW   UPPER(__str_10)
000542 6E??           01032         MOVWF   r0x03
000544 0E??           01033         MOVLW   HIGH(__str_10)
000546 6E??           01034         MOVWF   r0x02
000548 0E??           01035         MOVLW   LOW(__str_10)
00054A 6E??           01036         MOVWF   r0x01
00054C 50??           01037         MOVF    r0x03, W
00054E 6EE5           01038         MOVWF   POSTDEC1
000550 50??           01039         MOVF    r0x02, W
000552 6EE5           01040         MOVWF   POSTDEC1
000554 50??           01041         MOVF    r0x01, W
000556 6EE5           01042         MOVWF   POSTDEC1
000558 EC?? F0??      01043         CALL    _print_lcd_string
00055C 0E03           01044         MOVLW   0x03
00055E 26E1           01045         ADDWF   FSR1L, F
                      01046 ;       .line   978; interface.c        print_lcd_tela();
000560 EC?? F0??      01047         CALL    _print_lcd_tela
                      01048 ;       .line   979; interface.c        print_lcd_string("     6:");
000564 0E??           01049         MOVLW   UPPER(__str_11)
000566 6E??           01050         MOVWF   r0x03
000568 0E??           01051         MOVLW   HIGH(__str_11)
00056A 6E??           01052         MOVWF   r0x02
00056C 0E??           01053         MOVLW   LOW(__str_11)
00056E 6E??           01054         MOVWF   r0x01
000570 50??           01055         MOVF    r0x03, W
000572 6EE5           01056         MOVWF   POSTDEC1
000574 50??           01057         MOVF    r0x02, W
000576 6EE5           01058         MOVWF   POSTDEC1
000578 50??           01059         MOVF    r0x01, W
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE 21


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00057A 6EE5           01060         MOVWF   POSTDEC1
00057C EC?? F0??      01061         CALL    _print_lcd_string
000580 0E03           01062         MOVLW   0x03
000582 26E1           01063         ADDWF   FSR1L, F
                      01064 ;       .line   980; interface.c        print_lcd_menos();
000584 EC?? F0??      01065         CALL    _print_lcd_menos
                      01066 ;       .line   981; interface.c        print_lcd_string("     ");
000588 0E??           01067         MOVLW   UPPER(__str_12)
00058A 6E??           01068         MOVWF   r0x03
00058C 0E??           01069         MOVLW   HIGH(__str_12)
00058E 6E??           01070         MOVWF   r0x02
000590 0E??           01071         MOVLW   LOW(__str_12)
000592 6E??           01072         MOVWF   r0x01
000594 50??           01073         MOVF    r0x03, W
000596 6EE5           01074         MOVWF   POSTDEC1
000598 50??           01075         MOVF    r0x02, W
00059A 6EE5           01076         MOVWF   POSTDEC1
00059C 50??           01077         MOVF    r0x01, W
00059E 6EE5           01078         MOVWF   POSTDEC1
0005A0 EC?? F0??      01079         CALL    _print_lcd_string
0005A4 0E03           01080         MOVLW   0x03
0005A6 26E1           01081         ADDWF   FSR1L, F
                      01082 ;       .line   982; interface.c        break;
0005A8 EF?? F0??      01083         GOTO    _01835_DS_
0005AC                01084 _01768_DS_:
                      01085 ;       .line   984; interface.c        print_lcd_string("3:TECLADO       ");
0005AC 0E??           01086         MOVLW   UPPER(__str_14)
0005AE 6E??           01087         MOVWF   r0x03
0005B0 0E??           01088         MOVLW   HIGH(__str_14)
0005B2 6E??           01089         MOVWF   r0x02
0005B4 0E??           01090         MOVLW   LOW(__str_14)
0005B6 6E??           01091         MOVWF   r0x01
0005B8 50??           01092         MOVF    r0x03, W
0005BA 6EE5           01093         MOVWF   POSTDEC1
0005BC 50??           01094         MOVF    r0x02, W
0005BE 6EE5           01095         MOVWF   POSTDEC1
0005C0 50??           01096         MOVF    r0x01, W
0005C2 6EE5           01097         MOVWF   POSTDEC1
0005C4 EC?? F0??      01098         CALL    _print_lcd_string
0005C8 0E03           01099         MOVLW   0x03
0005CA 26E1           01100         ADDWF   FSR1L, F
                      01101 ;       .line   985; interface.c        print_lcd_string("\n");
0005CC 0E??           01102         MOVLW   UPPER(__str_4)
0005CE 6E??           01103         MOVWF   r0x03
0005D0 0E??           01104         MOVLW   HIGH(__str_4)
0005D2 6E??           01105         MOVWF   r0x02
0005D4 0E??           01106         MOVLW   LOW(__str_4)
0005D6 6E??           01107         MOVWF   r0x01
0005D8 50??           01108         MOVF    r0x03, W
0005DA 6EE5           01109         MOVWF   POSTDEC1
0005DC 50??           01110         MOVF    r0x02, W
0005DE 6EE5           01111         MOVWF   POSTDEC1
0005E0 50??           01112         MOVF    r0x01, W
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE 22


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0005E2 6EE5           01113         MOVWF   POSTDEC1
0005E4 EC?? F0??      01114         CALL    _print_lcd_string
0005E8 0E03           01115         MOVLW   0x03
0005EA 26E1           01116         ADDWF   FSR1L, F
                      01117 ;       .line   986; interface.c        print_lcd_string("5:");
0005EC 0E??           01118         MOVLW   UPPER(__str_10)
0005EE 6E??           01119         MOVWF   r0x03
0005F0 0E??           01120         MOVLW   HIGH(__str_10)
0005F2 6E??           01121         MOVWF   r0x02
0005F4 0E??           01122         MOVLW   LOW(__str_10)
0005F6 6E??           01123         MOVWF   r0x01
0005F8 50??           01124         MOVF    r0x03, W
0005FA 6EE5           01125         MOVWF   POSTDEC1
0005FC 50??           01126         MOVF    r0x02, W
0005FE 6EE5           01127         MOVWF   POSTDEC1
000600 50??           01128         MOVF    r0x01, W
000602 6EE5           01129         MOVWF   POSTDEC1
000604 EC?? F0??      01130         CALL    _print_lcd_string
000608 0E03           01131         MOVLW   0x03
00060A 26E1           01132         ADDWF   FSR1L, F
                      01133 ;       .line   987; interface.c        print_lcd_tela();
00060C EC?? F0??      01134         CALL    _print_lcd_tela
                      01135 ;       .line   988; interface.c        print_lcd_string("     6:");
000610 0E??           01136         MOVLW   UPPER(__str_11)
000612 6E??           01137         MOVWF   r0x03
000614 0E??           01138         MOVLW   HIGH(__str_11)
000616 6E??           01139         MOVWF   r0x02
000618 0E??           01140         MOVLW   LOW(__str_11)
00061A 6E??           01141         MOVWF   r0x01
00061C 50??           01142         MOVF    r0x03, W
00061E 6EE5           01143         MOVWF   POSTDEC1
000620 50??           01144         MOVF    r0x02, W
000622 6EE5           01145         MOVWF   POSTDEC1
000624 50??           01146         MOVF    r0x01, W
000626 6EE5           01147         MOVWF   POSTDEC1
000628 EC?? F0??      01148         CALL    _print_lcd_string
00062C 0E03           01149         MOVLW   0x03
00062E 26E1           01150         ADDWF   FSR1L, F
                      01151 ;       .line   989; interface.c        print_lcd_menos();
000630 EC?? F0??      01152         CALL    _print_lcd_menos
                      01153 ;       .line   990; interface.c        print_lcd_string("     ");
000634 0E??           01154         MOVLW   UPPER(__str_12)
000636 6E??           01155         MOVWF   r0x03
000638 0E??           01156         MOVLW   HIGH(__str_12)
00063A 6E??           01157         MOVWF   r0x02
00063C 0E??           01158         MOVLW   LOW(__str_12)
00063E 6E??           01159         MOVWF   r0x01
000640 50??           01160         MOVF    r0x03, W
000642 6EE5           01161         MOVWF   POSTDEC1
000644 50??           01162         MOVF    r0x02, W
000646 6EE5           01163         MOVWF   POSTDEC1
000648 50??           01164         MOVF    r0x01, W
00064A 6EE5           01165         MOVWF   POSTDEC1
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE 23


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00064C EC?? F0??      01166         CALL    _print_lcd_string
000650 0E03           01167         MOVLW   0x03
000652 26E1           01168         ADDWF   FSR1L, F
                      01169 ;       .line   991; interface.c        break;
000654 EF?? F0??      01170         GOTO    _01835_DS_
000658                01171 _01769_DS_:
                      01172 ;       .line   993; interface.c        print_lcd_string("3:TEMP  4:LUMI  ");
000658 0E??           01173         MOVLW   UPPER(__str_15)
00065A 6E??           01174         MOVWF   r0x03
00065C 0E??           01175         MOVLW   HIGH(__str_15)
00065E 6E??           01176         MOVWF   r0x02
000660 0E??           01177         MOVLW   LOW(__str_15)
000662 6E??           01178         MOVWF   r0x01
000664 50??           01179         MOVF    r0x03, W
000666 6EE5           01180         MOVWF   POSTDEC1
000668 50??           01181         MOVF    r0x02, W
00066A 6EE5           01182         MOVWF   POSTDEC1
00066C 50??           01183         MOVF    r0x01, W
00066E 6EE5           01184         MOVWF   POSTDEC1
000670 EC?? F0??      01185         CALL    _print_lcd_string
000674 0E03           01186         MOVLW   0x03
000676 26E1           01187         ADDWF   FSR1L, F
                      01188 ;       .line   994; interface.c        print_lcd_string("\n");
000678 0E??           01189         MOVLW   UPPER(__str_4)
00067A 6E??           01190         MOVWF   r0x03
00067C 0E??           01191         MOVLW   HIGH(__str_4)
00067E 6E??           01192         MOVWF   r0x02
000680 0E??           01193         MOVLW   LOW(__str_4)
000682 6E??           01194         MOVWF   r0x01
000684 50??           01195         MOVF    r0x03, W
000686 6EE5           01196         MOVWF   POSTDEC1
000688 50??           01197         MOVF    r0x02, W
00068A 6EE5           01198         MOVWF   POSTDEC1
00068C 50??           01199         MOVF    r0x01, W
00068E 6EE5           01200         MOVWF   POSTDEC1
000690 EC?? F0??      01201         CALL    _print_lcd_string
000694 0E03           01202         MOVLW   0x03
000696 26E1           01203         ADDWF   FSR1L, F
                      01204 ;       .line   995; interface.c        print_lcd_string("5:");
000698 0E??           01205         MOVLW   UPPER(__str_10)
00069A 6E??           01206         MOVWF   r0x03
00069C 0E??           01207         MOVLW   HIGH(__str_10)
00069E 6E??           01208         MOVWF   r0x02
0006A0 0E??           01209         MOVLW   LOW(__str_10)
0006A2 6E??           01210         MOVWF   r0x01
0006A4 50??           01211         MOVF    r0x03, W
0006A6 6EE5           01212         MOVWF   POSTDEC1
0006A8 50??           01213         MOVF    r0x02, W
0006AA 6EE5           01214         MOVWF   POSTDEC1
0006AC 50??           01215         MOVF    r0x01, W
0006AE 6EE5           01216         MOVWF   POSTDEC1
0006B0 EC?? F0??      01217         CALL    _print_lcd_string
0006B4 0E03           01218         MOVLW   0x03
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE 24


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0006B6 26E1           01219         ADDWF   FSR1L, F
                      01220 ;       .line   996; interface.c        print_lcd_tela();
0006B8 EC?? F0??      01221         CALL    _print_lcd_tela
                      01222 ;       .line   997; interface.c        print_lcd_string("     6:");
0006BC 0E??           01223         MOVLW   UPPER(__str_11)
0006BE 6E??           01224         MOVWF   r0x03
0006C0 0E??           01225         MOVLW   HIGH(__str_11)
0006C2 6E??           01226         MOVWF   r0x02
0006C4 0E??           01227         MOVLW   LOW(__str_11)
0006C6 6E??           01228         MOVWF   r0x01
0006C8 50??           01229         MOVF    r0x03, W
0006CA 6EE5           01230         MOVWF   POSTDEC1
0006CC 50??           01231         MOVF    r0x02, W
0006CE 6EE5           01232         MOVWF   POSTDEC1
0006D0 50??           01233         MOVF    r0x01, W
0006D2 6EE5           01234         MOVWF   POSTDEC1
0006D4 EC?? F0??      01235         CALL    _print_lcd_string
0006D8 0E03           01236         MOVLW   0x03
0006DA 26E1           01237         ADDWF   FSR1L, F
                      01238 ;       .line   998; interface.c        print_lcd_mais();
0006DC EC?? F0??      01239         CALL    _print_lcd_mais
                      01240 ;       .line   999; interface.c        print_lcd_string("    ");
0006E0 0E??           01241         MOVLW   UPPER(__str_16)
0006E2 6E??           01242         MOVWF   r0x03
0006E4 0E??           01243         MOVLW   HIGH(__str_16)
0006E6 6E??           01244         MOVWF   r0x02
0006E8 0E??           01245         MOVLW   LOW(__str_16)
0006EA 6E??           01246         MOVWF   r0x01
0006EC 50??           01247         MOVF    r0x03, W
0006EE 6EE5           01248         MOVWF   POSTDEC1
0006F0 50??           01249         MOVF    r0x02, W
0006F2 6EE5           01250         MOVWF   POSTDEC1
0006F4 50??           01251         MOVF    r0x01, W
0006F6 6EE5           01252         MOVWF   POSTDEC1
0006F8 EC?? F0??      01253         CALL    _print_lcd_string
0006FC 0E03           01254         MOVLW   0x03
0006FE 26E1           01255         ADDWF   FSR1L, F
                      01256 ;       .line   1000; interface.c       break;
000700 EF?? F0??      01257         GOTO    _01835_DS_
000704                01258 _01770_DS_:
                      01259 ;       .line   1002; interface.c       print_lcd_string("3:TEMPO         ");
000704 0E??           01260         MOVLW   UPPER(__str_17)
000706 6E??           01261         MOVWF   r0x03
000708 0E??           01262         MOVLW   HIGH(__str_17)
00070A 6E??           01263         MOVWF   r0x02
00070C 0E??           01264         MOVLW   LOW(__str_17)
00070E 6E??           01265         MOVWF   r0x01
000710 50??           01266         MOVF    r0x03, W
000712 6EE5           01267         MOVWF   POSTDEC1
000714 50??           01268         MOVF    r0x02, W
000716 6EE5           01269         MOVWF   POSTDEC1
000718 50??           01270         MOVF    r0x01, W
00071A 6EE5           01271         MOVWF   POSTDEC1
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE 25


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00071C EC?? F0??      01272         CALL    _print_lcd_string
000720 0E03           01273         MOVLW   0x03
000722 26E1           01274         ADDWF   FSR1L, F
                      01275 ;       .line   1003; interface.c       print_lcd_string("\n");
000724 0E??           01276         MOVLW   UPPER(__str_4)
000726 6E??           01277         MOVWF   r0x03
000728 0E??           01278         MOVLW   HIGH(__str_4)
00072A 6E??           01279         MOVWF   r0x02
00072C 0E??           01280         MOVLW   LOW(__str_4)
00072E 6E??           01281         MOVWF   r0x01
000730 50??           01282         MOVF    r0x03, W
000732 6EE5           01283         MOVWF   POSTDEC1
000734 50??           01284         MOVF    r0x02, W
000736 6EE5           01285         MOVWF   POSTDEC1
000738 50??           01286         MOVF    r0x01, W
00073A 6EE5           01287         MOVWF   POSTDEC1
00073C EC?? F0??      01288         CALL    _print_lcd_string
000740 0E03           01289         MOVLW   0x03
000742 26E1           01290         ADDWF   FSR1L, F
                      01291 ;       .line   1004; interface.c       print_lcd_string("5:");
000744 0E??           01292         MOVLW   UPPER(__str_10)
000746 6E??           01293         MOVWF   r0x03
000748 0E??           01294         MOVLW   HIGH(__str_10)
00074A 6E??           01295         MOVWF   r0x02
00074C 0E??           01296         MOVLW   LOW(__str_10)
00074E 6E??           01297         MOVWF   r0x01
000750 50??           01298         MOVF    r0x03, W
000752 6EE5           01299         MOVWF   POSTDEC1
000754 50??           01300         MOVF    r0x02, W
000756 6EE5           01301         MOVWF   POSTDEC1
000758 50??           01302         MOVF    r0x01, W
00075A 6EE5           01303         MOVWF   POSTDEC1
00075C EC?? F0??      01304         CALL    _print_lcd_string
000760 0E03           01305         MOVLW   0x03
000762 26E1           01306         ADDWF   FSR1L, F
                      01307 ;       .line   1005; interface.c       print_lcd_tela();
000764 EC?? F0??      01308         CALL    _print_lcd_tela
                      01309 ;       .line   1006; interface.c       print_lcd_string("     6:");
000768 0E??           01310         MOVLW   UPPER(__str_11)
00076A 6E??           01311         MOVWF   r0x03
00076C 0E??           01312         MOVLW   HIGH(__str_11)
00076E 6E??           01313         MOVWF   r0x02
000770 0E??           01314         MOVLW   LOW(__str_11)
000772 6E??           01315         MOVWF   r0x01
000774 50??           01316         MOVF    r0x03, W
000776 6EE5           01317         MOVWF   POSTDEC1
000778 50??           01318         MOVF    r0x02, W
00077A 6EE5           01319         MOVWF   POSTDEC1
00077C 50??           01320         MOVF    r0x01, W
00077E 6EE5           01321         MOVWF   POSTDEC1
000780 EC?? F0??      01322         CALL    _print_lcd_string
000784 0E03           01323         MOVLW   0x03
000786 26E1           01324         ADDWF   FSR1L, F
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE 26


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01325 ;       .line   1007; interface.c       print_lcd_menos();
000788 EC?? F0??      01326         CALL    _print_lcd_menos
                      01327 ;       .line   1008; interface.c       print_lcd_string("    ");
00078C 0E??           01328         MOVLW   UPPER(__str_16)
00078E 6E??           01329         MOVWF   r0x03
000790 0E??           01330         MOVLW   HIGH(__str_16)
000792 6E??           01331         MOVWF   r0x02
000794 0E??           01332         MOVLW   LOW(__str_16)
000796 6E??           01333         MOVWF   r0x01
000798 50??           01334         MOVF    r0x03, W
00079A 6EE5           01335         MOVWF   POSTDEC1
00079C 50??           01336         MOVF    r0x02, W
00079E 6EE5           01337         MOVWF   POSTDEC1
0007A0 50??           01338         MOVF    r0x01, W
0007A2 6EE5           01339         MOVWF   POSTDEC1
0007A4 EC?? F0??      01340         CALL    _print_lcd_string
0007A8 0E03           01341         MOVLW   0x03
0007AA 26E1           01342         ADDWF   FSR1L, F
                      01343 ;       .line   1009; interface.c       break;
0007AC EF?? F0??      01344         GOTO    _01835_DS_
0007B0                01345 _01772_DS_:
                      01346 ;       .line   1012; interface.c       print_lcd_string("3:ALTA  4:BAIXA ");
0007B0 0E??           01347         MOVLW   UPPER(__str_18)
0007B2 6E??           01348         MOVWF   r0x03
0007B4 0E??           01349         MOVLW   HIGH(__str_18)
0007B6 6E??           01350         MOVWF   r0x02
0007B8 0E??           01351         MOVLW   LOW(__str_18)
0007BA 6E??           01352         MOVWF   r0x01
0007BC 50??           01353         MOVF    r0x03, W
0007BE 6EE5           01354         MOVWF   POSTDEC1
0007C0 50??           01355         MOVF    r0x02, W
0007C2 6EE5           01356         MOVWF   POSTDEC1
0007C4 50??           01357         MOVF    r0x01, W
0007C6 6EE5           01358         MOVWF   POSTDEC1
0007C8 EC?? F0??      01359         CALL    _print_lcd_string
0007CC 0E03           01360         MOVLW   0x03
0007CE 26E1           01361         ADDWF   FSR1L, F
                      01362 ;       .line   1013; interface.c       print_lcd_string("\n");
0007D0 0E??           01363         MOVLW   UPPER(__str_4)
0007D2 6E??           01364         MOVWF   r0x03
0007D4 0E??           01365         MOVLW   HIGH(__str_4)
0007D6 6E??           01366         MOVWF   r0x02
0007D8 0E??           01367         MOVLW   LOW(__str_4)
0007DA 6E??           01368         MOVWF   r0x01
0007DC 50??           01369         MOVF    r0x03, W
0007DE 6EE5           01370         MOVWF   POSTDEC1
0007E0 50??           01371         MOVF    r0x02, W
0007E2 6EE5           01372         MOVWF   POSTDEC1
0007E4 50??           01373         MOVF    r0x01, W
0007E6 6EE5           01374         MOVWF   POSTDEC1
0007E8 EC?? F0??      01375         CALL    _print_lcd_string
0007EC 0E03           01376         MOVLW   0x03
0007EE 26E1           01377         ADDWF   FSR1L, F
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE 27


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      01378 ;       .line   1014; interface.c       print_lcd_string("5:");
0007F0 0E??           01379         MOVLW   UPPER(__str_10)
0007F2 6E??           01380         MOVWF   r0x03
0007F4 0E??           01381         MOVLW   HIGH(__str_10)
0007F6 6E??           01382         MOVWF   r0x02
0007F8 0E??           01383         MOVLW   LOW(__str_10)
0007FA 6E??           01384         MOVWF   r0x01
0007FC 50??           01385         MOVF    r0x03, W
0007FE 6EE5           01386         MOVWF   POSTDEC1
000800 50??           01387         MOVF    r0x02, W
000802 6EE5           01388         MOVWF   POSTDEC1
000804 50??           01389         MOVF    r0x01, W
000806 6EE5           01390         MOVWF   POSTDEC1
000808 EC?? F0??      01391         CALL    _print_lcd_string
00080C 0E03           01392         MOVLW   0x03
00080E 26E1           01393         ADDWF   FSR1L, F
                      01394 ;       .line   1015; interface.c       print_lcd_tela();
000810 EC?? F0??      01395         CALL    _print_lcd_tela
                      01396 ;       .line   1016; interface.c       print_lcd_string("     6:");
000814 0E??           01397         MOVLW   UPPER(__str_11)
000816 6E??           01398         MOVWF   r0x03
000818 0E??           01399         MOVLW   HIGH(__str_11)
00081A 6E??           01400         MOVWF   r0x02
00081C 0E??           01401         MOVLW   LOW(__str_11)
00081E 6E??           01402         MOVWF   r0x01
000820 50??           01403         MOVF    r0x03, W
000822 6EE5           01404         MOVWF   POSTDEC1
000824 50??           01405         MOVF    r0x02, W
000826 6EE5           01406         MOVWF   POSTDEC1
000828 50??           01407         MOVF    r0x01, W
00082A 6EE5           01408         MOVWF   POSTDEC1
00082C EC?? F0??      01409         CALL    _print_lcd_string
000830 0E03           01410         MOVLW   0x03
000832 26E1           01411         ADDWF   FSR1L, F
                      01412 ;       .line   1017; interface.c       print_lcd_menos();
000834 EC?? F0??      01413         CALL    _print_lcd_menos
                      01414 ;       .line   1018; interface.c       print_lcd_string("     ");
000838 0E??           01415         MOVLW   UPPER(__str_12)
00083A 6E??           01416         MOVWF   r0x03
00083C 0E??           01417         MOVLW   HIGH(__str_12)
00083E 6E??           01418         MOVWF   r0x02
000840 0E??           01419         MOVLW   LOW(__str_12)
000842 6E??           01420         MOVWF   r0x01
000844 50??           01421         MOVF    r0x03, W
000846 6EE5           01422         MOVWF   POSTDEC1
000848 50??           01423         MOVF    r0x02, W
00084A 6EE5           01424         MOVWF   POSTDEC1
00084C 50??           01425         MOVF    r0x01, W
00084E 6EE5           01426         MOVWF   POSTDEC1
000850 EC?? F0??      01427         CALL    _print_lcd_string
000854 0E03           01428         MOVLW   0x03
000856 26E1           01429         ADDWF   FSR1L, F
                      01430 ;       .line   1019; interface.c       break;
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE 28


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000858 EF?? F0??      01431         GOTO    _01835_DS_
00085C                01432 _01773_DS_:
                      01433 ;       .line   1021; interface.c       print_lcd_string("T. ALTA: ");
00085C 0E??           01434         MOVLW   UPPER(__str_19)
00085E 6E??           01435         MOVWF   r0x03
000860 0E??           01436         MOVLW   HIGH(__str_19)
000862 6E??           01437         MOVWF   r0x02
000864 0E??           01438         MOVLW   LOW(__str_19)
000866 6E??           01439         MOVWF   r0x01
000868 50??           01440         MOVF    r0x03, W
00086A 6EE5           01441         MOVWF   POSTDEC1
00086C 50??           01442         MOVF    r0x02, W
00086E 6EE5           01443         MOVWF   POSTDEC1
000870 50??           01444         MOVF    r0x01, W
000872 6EE5           01445         MOVWF   POSTDEC1
000874 EC?? F0??      01446         CALL    _print_lcd_string
000878 0E03           01447         MOVLW   0x03
00087A 26E1           01448         ADDWF   FSR1L, F
                      01449 ;       .line   1022; interface.c       s_temp[3] = (sys_temp_max % 10) + 0x30;
00087C 0E00           01450         MOVLW   0x00
00087E 6EE5           01451         MOVWF   POSTDEC1
000880 0E0A           01452         MOVLW   0x0a
000882 6EE5           01453         MOVWF   POSTDEC1
000884 ????           01454         BANKSEL (_sys_temp_max + 1)
000886 51??           01455         MOVF    (_sys_temp_max + 1), W, B
000888 6EE5           01456         MOVWF   POSTDEC1
00088A ????           01457         BANKSEL _sys_temp_max
00088C 51??           01458         MOVF    _sys_temp_max, W, B
00088E 6EE5           01459         MOVWF   POSTDEC1
000890 EC?? F0??      01460         CALL    __moduint
000894 6E??           01461         MOVWF   r0x01
000896 CFF3 F000      01462         MOVFF   PRODL, r0x02
00089A 0E04           01463         MOVLW   0x04
00089C 26E1           01464         ADDWF   FSR1L, F
00089E 0E30           01465         MOVLW   0x30
0008A0 26??           01466         ADDWF   r0x01, F
0008A2 50??           01467         MOVF    r0x01, W
0008A4 ????           01468         BANKSEL (_print_tela_s_temp_1_227 + 3)
0008A6 6F??           01469         MOVWF   (_print_tela_s_temp_1_227 + 3), B
                      01470 ;       .line   1023; interface.c       s_temp[1] = ((sys_temp_max / 10) % 10) + 0x30;
0008A8 0E00           01471         MOVLW   0x00
0008AA 6EE5           01472         MOVWF   POSTDEC1
0008AC 0E0A           01473         MOVLW   0x0a
0008AE 6EE5           01474         MOVWF   POSTDEC1
0008B0 ????           01475         BANKSEL (_sys_temp_max + 1)
0008B2 51??           01476         MOVF    (_sys_temp_max + 1), W, B
0008B4 6EE5           01477         MOVWF   POSTDEC1
0008B6 ????           01478         BANKSEL _sys_temp_max
0008B8 51??           01479         MOVF    _sys_temp_max, W, B
0008BA 6EE5           01480         MOVWF   POSTDEC1
0008BC EC?? F0??      01481         CALL    __divuint
0008C0 6E??           01482         MOVWF   r0x01
0008C2 CFF3 F000      01483         MOVFF   PRODL, r0x02
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE 29


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0008C6 0E04           01484         MOVLW   0x04
0008C8 26E1           01485         ADDWF   FSR1L, F
0008CA 0E00           01486         MOVLW   0x00
0008CC 6EE5           01487         MOVWF   POSTDEC1
0008CE 0E0A           01488         MOVLW   0x0a
0008D0 6EE5           01489         MOVWF   POSTDEC1
0008D2 50??           01490         MOVF    r0x02, W
0008D4 6EE5           01491         MOVWF   POSTDEC1
0008D6 50??           01492         MOVF    r0x01, W
0008D8 6EE5           01493         MOVWF   POSTDEC1
0008DA EC?? F0??      01494         CALL    __moduint
0008DE 6E??           01495         MOVWF   r0x01
0008E0 CFF3 F000      01496         MOVFF   PRODL, r0x02
0008E4 0E04           01497         MOVLW   0x04
0008E6 26E1           01498         ADDWF   FSR1L, F
0008E8 0E30           01499         MOVLW   0x30
0008EA 26??           01500         ADDWF   r0x01, F
0008EC 50??           01501         MOVF    r0x01, W
0008EE ????           01502         BANKSEL (_print_tela_s_temp_1_227 + 1)
0008F0 6F??           01503         MOVWF   (_print_tela_s_temp_1_227 + 1), B
                      01504 ;       .line   1024; interface.c       s_temp[0] = ((sys_temp_max / 100) % 10) + 0x30;
0008F2 0E00           01505         MOVLW   0x00
0008F4 6EE5           01506         MOVWF   POSTDEC1
0008F6 0E64           01507         MOVLW   0x64
0008F8 6EE5           01508         MOVWF   POSTDEC1
0008FA ????           01509         BANKSEL (_sys_temp_max + 1)
0008FC 51??           01510         MOVF    (_sys_temp_max + 1), W, B
0008FE 6EE5           01511         MOVWF   POSTDEC1
000900 ????           01512         BANKSEL _sys_temp_max
000902 51??           01513         MOVF    _sys_temp_max, W, B
000904 6EE5           01514         MOVWF   POSTDEC1
000906 EC?? F0??      01515         CALL    __divuint
00090A 6E??           01516         MOVWF   r0x01
00090C CFF3 F000      01517         MOVFF   PRODL, r0x02
000910 0E04           01518         MOVLW   0x04
000912 26E1           01519         ADDWF   FSR1L, F
000914 0E00           01520         MOVLW   0x00
000916 6EE5           01521         MOVWF   POSTDEC1
000918 0E0A           01522         MOVLW   0x0a
00091A 6EE5           01523         MOVWF   POSTDEC1
00091C 50??           01524         MOVF    r0x02, W
00091E 6EE5           01525         MOVWF   POSTDEC1
000920 50??           01526         MOVF    r0x01, W
000922 6EE5           01527         MOVWF   POSTDEC1
000924 EC?? F0??      01528         CALL    __moduint
000928 6E??           01529         MOVWF   r0x01
00092A CFF3 F000      01530         MOVFF   PRODL, r0x02
00092E 0E04           01531         MOVLW   0x04
000930 26E1           01532         ADDWF   FSR1L, F
000932 0E30           01533         MOVLW   0x30
000934 26??           01534         ADDWF   r0x01, F
000936 50??           01535         MOVF    r0x01, W
000938 ????           01536         BANKSEL _print_tela_s_temp_1_227
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE 30


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00093A 6F??           01537         MOVWF   _print_tela_s_temp_1_227, B
                      01538 ;       .line   1025; interface.c       print_lcd_string(s_temp);
00093C 0E??           01539         MOVLW   HIGH(_print_tela_s_temp_1_227)
00093E 6E??           01540         MOVWF   r0x02
000940 0E??           01541         MOVLW   LOW(_print_tela_s_temp_1_227)
000942 6E??           01542         MOVWF   r0x01
000944 0E80           01543         MOVLW   0x80
000946 6E??           01544         MOVWF   r0x03
000948 50??           01545         MOVF    r0x03, W
00094A 6EE5           01546         MOVWF   POSTDEC1
00094C 50??           01547         MOVF    r0x02, W
00094E 6EE5           01548         MOVWF   POSTDEC1
000950 50??           01549         MOVF    r0x01, W
000952 6EE5           01550         MOVWF   POSTDEC1
000954 EC?? F0??      01551         CALL    _print_lcd_string
000958 0E03           01552         MOVLW   0x03
00095A 26E1           01553         ADDWF   FSR1L, F
                      01554 ;       .line   1026; interface.c       print_lcd_string("           ");
00095C 0E??           01555         MOVLW   UPPER(__str_20)
00095E 6E??           01556         MOVWF   r0x03
000960 0E??           01557         MOVLW   HIGH(__str_20)
000962 6E??           01558         MOVWF   r0x02
000964 0E??           01559         MOVLW   LOW(__str_20)
000966 6E??           01560         MOVWF   r0x01
000968 50??           01561         MOVF    r0x03, W
00096A 6EE5           01562         MOVWF   POSTDEC1
00096C 50??           01563         MOVF    r0x02, W
00096E 6EE5           01564         MOVWF   POSTDEC1
000970 50??           01565         MOVF    r0x01, W
000972 6EE5           01566         MOVWF   POSTDEC1
000974 EC?? F0??      01567         CALL    _print_lcd_string
000978 0E03           01568         MOVLW   0x03
00097A 26E1           01569         ADDWF   FSR1L, F
                      01570 ;       .line   1027; interface.c       print_lcd_string("\n");
00097C 0E??           01571         MOVLW   UPPER(__str_4)
00097E 6E??           01572         MOVWF   r0x03
000980 0E??           01573         MOVLW   HIGH(__str_4)
000982 6E??           01574         MOVWF   r0x02
000984 0E??           01575         MOVLW   LOW(__str_4)
000986 6E??           01576         MOVWF   r0x01
000988 50??           01577         MOVF    r0x03, W
00098A 6EE5           01578         MOVWF   POSTDEC1
00098C 50??           01579         MOVF    r0x02, W
00098E 6EE5           01580         MOVWF   POSTDEC1
000990 50??           01581         MOVF    r0x01, W
000992 6EE5           01582         MOVWF   POSTDEC1
000994 EC?? F0??      01583         CALL    _print_lcd_string
000998 0E03           01584         MOVLW   0x03
00099A 26E1           01585         ADDWF   FSR1L, F
                      01586 ;       .line   1028; interface.c       print_lcd_string("3:+ 4.- 5:");
00099C 0E??           01587         MOVLW   UPPER(__str_21)
00099E 6E??           01588         MOVWF   r0x03
0009A0 0E??           01589         MOVLW   HIGH(__str_21)
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE 31


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0009A2 6E??           01590         MOVWF   r0x02
0009A4 0E??           01591         MOVLW   LOW(__str_21)
0009A6 6E??           01592         MOVWF   r0x01
0009A8 50??           01593         MOVF    r0x03, W
0009AA 6EE5           01594         MOVWF   POSTDEC1
0009AC 50??           01595         MOVF    r0x02, W
0009AE 6EE5           01596         MOVWF   POSTDEC1
0009B0 50??           01597         MOVF    r0x01, W
0009B2 6EE5           01598         MOVWF   POSTDEC1
0009B4 EC?? F0??      01599         CALL    _print_lcd_string
0009B8 0E03           01600         MOVLW   0x03
0009BA 26E1           01601         ADDWF   FSR1L, F
                      01602 ;       .line   1029; interface.c       print_lcd_tela();
0009BC EC?? F0??      01603         CALL    _print_lcd_tela
                      01604 ;       .line   1030; interface.c       print_lcd_string(" 6:");
0009C0 0E??           01605         MOVLW   UPPER(__str_22)
0009C2 6E??           01606         MOVWF   r0x03
0009C4 0E??           01607         MOVLW   HIGH(__str_22)
0009C6 6E??           01608         MOVWF   r0x02
0009C8 0E??           01609         MOVLW   LOW(__str_22)
0009CA 6E??           01610         MOVWF   r0x01
0009CC 50??           01611         MOVF    r0x03, W
0009CE 6EE5           01612         MOVWF   POSTDEC1
0009D0 50??           01613         MOVF    r0x02, W
0009D2 6EE5           01614         MOVWF   POSTDEC1
0009D4 50??           01615         MOVF    r0x01, W
0009D6 6EE5           01616         MOVWF   POSTDEC1
0009D8 EC?? F0??      01617         CALL    _print_lcd_string
0009DC 0E03           01618         MOVLW   0x03
0009DE 26E1           01619         ADDWF   FSR1L, F
                      01620 ;       .line   1031; interface.c       print_lcd_string("OK");
0009E0 0E??           01621         MOVLW   UPPER(__str_23)
0009E2 6E??           01622         MOVWF   r0x03
0009E4 0E??           01623         MOVLW   HIGH(__str_23)
0009E6 6E??           01624         MOVWF   r0x02
0009E8 0E??           01625         MOVLW   LOW(__str_23)
0009EA 6E??           01626         MOVWF   r0x01
0009EC 50??           01627         MOVF    r0x03, W
0009EE 6EE5           01628         MOVWF   POSTDEC1
0009F0 50??           01629         MOVF    r0x02, W
0009F2 6EE5           01630         MOVWF   POSTDEC1
0009F4 50??           01631         MOVF    r0x01, W
0009F6 6EE5           01632         MOVWF   POSTDEC1
0009F8 EC?? F0??      01633         CALL    _print_lcd_string
0009FC 0E03           01634         MOVLW   0x03
0009FE 26E1           01635         ADDWF   FSR1L, F
                      01636 ;       .line   1032; interface.c       print_lcd_string("   ");
000A00 0E??           01637         MOVLW   UPPER(__str_24)
000A02 6E??           01638         MOVWF   r0x03
000A04 0E??           01639         MOVLW   HIGH(__str_24)
000A06 6E??           01640         MOVWF   r0x02
000A08 0E??           01641         MOVLW   LOW(__str_24)
000A0A 6E??           01642         MOVWF   r0x01
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE 32


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000A0C 50??           01643         MOVF    r0x03, W
000A0E 6EE5           01644         MOVWF   POSTDEC1
000A10 50??           01645         MOVF    r0x02, W
000A12 6EE5           01646         MOVWF   POSTDEC1
000A14 50??           01647         MOVF    r0x01, W
000A16 6EE5           01648         MOVWF   POSTDEC1
000A18 EC?? F0??      01649         CALL    _print_lcd_string
000A1C 0E03           01650         MOVLW   0x03
000A1E 26E1           01651         ADDWF   FSR1L, F
                      01652 ;       .line   1033; interface.c       break;
000A20 EF?? F0??      01653         GOTO    _01835_DS_
000A24                01654 _01774_DS_:
                      01655 ;       .line   1035; interface.c       print_lcd_string("T. BAIX: ");
000A24 0E??           01656         MOVLW   UPPER(__str_25)
000A26 6E??           01657         MOVWF   r0x03
000A28 0E??           01658         MOVLW   HIGH(__str_25)
000A2A 6E??           01659         MOVWF   r0x02
000A2C 0E??           01660         MOVLW   LOW(__str_25)
000A2E 6E??           01661         MOVWF   r0x01
000A30 50??           01662         MOVF    r0x03, W
000A32 6EE5           01663         MOVWF   POSTDEC1
000A34 50??           01664         MOVF    r0x02, W
000A36 6EE5           01665         MOVWF   POSTDEC1
000A38 50??           01666         MOVF    r0x01, W
000A3A 6EE5           01667         MOVWF   POSTDEC1
000A3C EC?? F0??      01668         CALL    _print_lcd_string
000A40 0E03           01669         MOVLW   0x03
000A42 26E1           01670         ADDWF   FSR1L, F
                      01671 ;       .line   1036; interface.c       s_temp[3] = (sys_temp_min % 10) + 0x30;
000A44 0E00           01672         MOVLW   0x00
000A46 6EE5           01673         MOVWF   POSTDEC1
000A48 0E0A           01674         MOVLW   0x0a
000A4A 6EE5           01675         MOVWF   POSTDEC1
000A4C ????           01676         BANKSEL (_sys_temp_min + 1)
000A4E 51??           01677         MOVF    (_sys_temp_min + 1), W, B
000A50 6EE5           01678         MOVWF   POSTDEC1
000A52 ????           01679         BANKSEL _sys_temp_min
000A54 51??           01680         MOVF    _sys_temp_min, W, B
000A56 6EE5           01681         MOVWF   POSTDEC1
000A58 EC?? F0??      01682         CALL    __moduint
000A5C 6E??           01683         MOVWF   r0x01
000A5E CFF3 F000      01684         MOVFF   PRODL, r0x02
000A62 0E04           01685         MOVLW   0x04
000A64 26E1           01686         ADDWF   FSR1L, F
000A66 0E30           01687         MOVLW   0x30
000A68 26??           01688         ADDWF   r0x01, F
000A6A 50??           01689         MOVF    r0x01, W
000A6C ????           01690         BANKSEL (_print_tela_s_temp_1_227 + 3)
000A6E 6F??           01691         MOVWF   (_print_tela_s_temp_1_227 + 3), B
                      01692 ;       .line   1037; interface.c       s_temp[1] = ((sys_temp_min / 10) % 10) + 0x30;
000A70 0E00           01693         MOVLW   0x00
000A72 6EE5           01694         MOVWF   POSTDEC1
000A74 0E0A           01695         MOVLW   0x0a
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE 33


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000A76 6EE5           01696         MOVWF   POSTDEC1
000A78 ????           01697         BANKSEL (_sys_temp_min + 1)
000A7A 51??           01698         MOVF    (_sys_temp_min + 1), W, B
000A7C 6EE5           01699         MOVWF   POSTDEC1
000A7E ????           01700         BANKSEL _sys_temp_min
000A80 51??           01701         MOVF    _sys_temp_min, W, B
000A82 6EE5           01702         MOVWF   POSTDEC1
000A84 EC?? F0??      01703         CALL    __divuint
000A88 6E??           01704         MOVWF   r0x01
000A8A CFF3 F000      01705         MOVFF   PRODL, r0x02
000A8E 0E04           01706         MOVLW   0x04
000A90 26E1           01707         ADDWF   FSR1L, F
000A92 0E00           01708         MOVLW   0x00
000A94 6EE5           01709         MOVWF   POSTDEC1
000A96 0E0A           01710         MOVLW   0x0a
000A98 6EE5           01711         MOVWF   POSTDEC1
000A9A 50??           01712         MOVF    r0x02, W
000A9C 6EE5           01713         MOVWF   POSTDEC1
000A9E 50??           01714         MOVF    r0x01, W
000AA0 6EE5           01715         MOVWF   POSTDEC1
000AA2 EC?? F0??      01716         CALL    __moduint
000AA6 6E??           01717         MOVWF   r0x01
000AA8 CFF3 F000      01718         MOVFF   PRODL, r0x02
000AAC 0E04           01719         MOVLW   0x04
000AAE 26E1           01720         ADDWF   FSR1L, F
000AB0 0E30           01721         MOVLW   0x30
000AB2 26??           01722         ADDWF   r0x01, F
000AB4 50??           01723         MOVF    r0x01, W
000AB6 ????           01724         BANKSEL (_print_tela_s_temp_1_227 + 1)
000AB8 6F??           01725         MOVWF   (_print_tela_s_temp_1_227 + 1), B
                      01726 ;       .line   1038; interface.c       s_temp[0] = ((sys_temp_min / 100) % 10) + 0x30;
000ABA 0E00           01727         MOVLW   0x00
000ABC 6EE5           01728         MOVWF   POSTDEC1
000ABE 0E64           01729         MOVLW   0x64
000AC0 6EE5           01730         MOVWF   POSTDEC1
000AC2 ????           01731         BANKSEL (_sys_temp_min + 1)
000AC4 51??           01732         MOVF    (_sys_temp_min + 1), W, B
000AC6 6EE5           01733         MOVWF   POSTDEC1
000AC8 ????           01734         BANKSEL _sys_temp_min
000ACA 51??           01735         MOVF    _sys_temp_min, W, B
000ACC 6EE5           01736         MOVWF   POSTDEC1
000ACE EC?? F0??      01737         CALL    __divuint
000AD2 6E??           01738         MOVWF   r0x01
000AD4 CFF3 F000      01739         MOVFF   PRODL, r0x02
000AD8 0E04           01740         MOVLW   0x04
000ADA 26E1           01741         ADDWF   FSR1L, F
000ADC 0E00           01742         MOVLW   0x00
000ADE 6EE5           01743         MOVWF   POSTDEC1
000AE0 0E0A           01744         MOVLW   0x0a
000AE2 6EE5           01745         MOVWF   POSTDEC1
000AE4 50??           01746         MOVF    r0x02, W
000AE6 6EE5           01747         MOVWF   POSTDEC1
000AE8 50??           01748         MOVF    r0x01, W
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE 34


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000AEA 6EE5           01749         MOVWF   POSTDEC1
000AEC EC?? F0??      01750         CALL    __moduint
000AF0 6E??           01751         MOVWF   r0x01
000AF2 CFF3 F000      01752         MOVFF   PRODL, r0x02
000AF6 0E04           01753         MOVLW   0x04
000AF8 26E1           01754         ADDWF   FSR1L, F
000AFA 0E30           01755         MOVLW   0x30
000AFC 26??           01756         ADDWF   r0x01, F
000AFE 50??           01757         MOVF    r0x01, W
000B00 ????           01758         BANKSEL _print_tela_s_temp_1_227
000B02 6F??           01759         MOVWF   _print_tela_s_temp_1_227, B
                      01760 ;       .line   1039; interface.c       print_lcd_string(s_temp);
000B04 0E??           01761         MOVLW   HIGH(_print_tela_s_temp_1_227)
000B06 6E??           01762         MOVWF   r0x02
000B08 0E??           01763         MOVLW   LOW(_print_tela_s_temp_1_227)
000B0A 6E??           01764         MOVWF   r0x01
000B0C 0E80           01765         MOVLW   0x80
000B0E 6E??           01766         MOVWF   r0x03
000B10 50??           01767         MOVF    r0x03, W
000B12 6EE5           01768         MOVWF   POSTDEC1
000B14 50??           01769         MOVF    r0x02, W
000B16 6EE5           01770         MOVWF   POSTDEC1
000B18 50??           01771         MOVF    r0x01, W
000B1A 6EE5           01772         MOVWF   POSTDEC1
000B1C EC?? F0??      01773         CALL    _print_lcd_string
000B20 0E03           01774         MOVLW   0x03
000B22 26E1           01775         ADDWF   FSR1L, F
                      01776 ;       .line   1040; interface.c       print_lcd_string("     ");
000B24 0E??           01777         MOVLW   UPPER(__str_12)
000B26 6E??           01778         MOVWF   r0x03
000B28 0E??           01779         MOVLW   HIGH(__str_12)
000B2A 6E??           01780         MOVWF   r0x02
000B2C 0E??           01781         MOVLW   LOW(__str_12)
000B2E 6E??           01782         MOVWF   r0x01
000B30 50??           01783         MOVF    r0x03, W
000B32 6EE5           01784         MOVWF   POSTDEC1
000B34 50??           01785         MOVF    r0x02, W
000B36 6EE5           01786         MOVWF   POSTDEC1
000B38 50??           01787         MOVF    r0x01, W
000B3A 6EE5           01788         MOVWF   POSTDEC1
000B3C EC?? F0??      01789         CALL    _print_lcd_string
000B40 0E03           01790         MOVLW   0x03
000B42 26E1           01791         ADDWF   FSR1L, F
                      01792 ;       .line   1041; interface.c       print_lcd_string("\n");
000B44 0E??           01793         MOVLW   UPPER(__str_4)
000B46 6E??           01794         MOVWF   r0x03
000B48 0E??           01795         MOVLW   HIGH(__str_4)
000B4A 6E??           01796         MOVWF   r0x02
000B4C 0E??           01797         MOVLW   LOW(__str_4)
000B4E 6E??           01798         MOVWF   r0x01
000B50 50??           01799         MOVF    r0x03, W
000B52 6EE5           01800         MOVWF   POSTDEC1
000B54 50??           01801         MOVF    r0x02, W
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE 35


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000B56 6EE5           01802         MOVWF   POSTDEC1
000B58 50??           01803         MOVF    r0x01, W
000B5A 6EE5           01804         MOVWF   POSTDEC1
000B5C EC?? F0??      01805         CALL    _print_lcd_string
000B60 0E03           01806         MOVLW   0x03
000B62 26E1           01807         ADDWF   FSR1L, F
                      01808 ;       .line   1042; interface.c       print_lcd_string("3:+ 4.- 5:");
000B64 0E??           01809         MOVLW   UPPER(__str_21)
000B66 6E??           01810         MOVWF   r0x03
000B68 0E??           01811         MOVLW   HIGH(__str_21)
000B6A 6E??           01812         MOVWF   r0x02
000B6C 0E??           01813         MOVLW   LOW(__str_21)
000B6E 6E??           01814         MOVWF   r0x01
000B70 50??           01815         MOVF    r0x03, W
000B72 6EE5           01816         MOVWF   POSTDEC1
000B74 50??           01817         MOVF    r0x02, W
000B76 6EE5           01818         MOVWF   POSTDEC1
000B78 50??           01819         MOVF    r0x01, W
000B7A 6EE5           01820         MOVWF   POSTDEC1
000B7C EC?? F0??      01821         CALL    _print_lcd_string
000B80 0E03           01822         MOVLW   0x03
000B82 26E1           01823         ADDWF   FSR1L, F
                      01824 ;       .line   1043; interface.c       print_lcd_tela();
000B84 EC?? F0??      01825         CALL    _print_lcd_tela
                      01826 ;       .line   1044; interface.c       print_lcd_string(" 6:");
000B88 0E??           01827         MOVLW   UPPER(__str_22)
000B8A 6E??           01828         MOVWF   r0x03
000B8C 0E??           01829         MOVLW   HIGH(__str_22)
000B8E 6E??           01830         MOVWF   r0x02
000B90 0E??           01831         MOVLW   LOW(__str_22)
000B92 6E??           01832         MOVWF   r0x01
000B94 50??           01833         MOVF    r0x03, W
000B96 6EE5           01834         MOVWF   POSTDEC1
000B98 50??           01835         MOVF    r0x02, W
000B9A 6EE5           01836         MOVWF   POSTDEC1
000B9C 50??           01837         MOVF    r0x01, W
000B9E 6EE5           01838         MOVWF   POSTDEC1
000BA0 EC?? F0??      01839         CALL    _print_lcd_string
000BA4 0E03           01840         MOVLW   0x03
000BA6 26E1           01841         ADDWF   FSR1L, F
                      01842 ;       .line   1045; interface.c       print_lcd_string("OK");
000BA8 0E??           01843         MOVLW   UPPER(__str_23)
000BAA 6E??           01844         MOVWF   r0x03
000BAC 0E??           01845         MOVLW   HIGH(__str_23)
000BAE 6E??           01846         MOVWF   r0x02
000BB0 0E??           01847         MOVLW   LOW(__str_23)
000BB2 6E??           01848         MOVWF   r0x01
000BB4 50??           01849         MOVF    r0x03, W
000BB6 6EE5           01850         MOVWF   POSTDEC1
000BB8 50??           01851         MOVF    r0x02, W
000BBA 6EE5           01852         MOVWF   POSTDEC1
000BBC 50??           01853         MOVF    r0x01, W
000BBE 6EE5           01854         MOVWF   POSTDEC1
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE 36


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000BC0 EC?? F0??      01855         CALL    _print_lcd_string
000BC4 0E03           01856         MOVLW   0x03
000BC6 26E1           01857         ADDWF   FSR1L, F
                      01858 ;       .line   1046; interface.c       print_lcd_string("   ");
000BC8 0E??           01859         MOVLW   UPPER(__str_24)
000BCA 6E??           01860         MOVWF   r0x03
000BCC 0E??           01861         MOVLW   HIGH(__str_24)
000BCE 6E??           01862         MOVWF   r0x02
000BD0 0E??           01863         MOVLW   LOW(__str_24)
000BD2 6E??           01864         MOVWF   r0x01
000BD4 50??           01865         MOVF    r0x03, W
000BD6 6EE5           01866         MOVWF   POSTDEC1
000BD8 50??           01867         MOVF    r0x02, W
000BDA 6EE5           01868         MOVWF   POSTDEC1
000BDC 50??           01869         MOVF    r0x01, W
000BDE 6EE5           01870         MOVWF   POSTDEC1
000BE0 EC?? F0??      01871         CALL    _print_lcd_string
000BE4 0E03           01872         MOVLW   0x03
000BE6 26E1           01873         ADDWF   FSR1L, F
                      01874 ;       .line   1047; interface.c       break;
000BE8 EF?? F0??      01875         GOTO    _01835_DS_
000BEC                01876 _01775_DS_:
                      01877 ;       .line   1049; interface.c       print_lcd_string("L. ALTA: ");
000BEC 0E??           01878         MOVLW   UPPER(__str_26)
000BEE 6E??           01879         MOVWF   r0x03
000BF0 0E??           01880         MOVLW   HIGH(__str_26)
000BF2 6E??           01881         MOVWF   r0x02
000BF4 0E??           01882         MOVLW   LOW(__str_26)
000BF6 6E??           01883         MOVWF   r0x01
000BF8 50??           01884         MOVF    r0x03, W
000BFA 6EE5           01885         MOVWF   POSTDEC1
000BFC 50??           01886         MOVF    r0x02, W
000BFE 6EE5           01887         MOVWF   POSTDEC1
000C00 50??           01888         MOVF    r0x01, W
000C02 6EE5           01889         MOVWF   POSTDEC1
000C04 EC?? F0??      01890         CALL    _print_lcd_string
000C08 0E03           01891         MOVLW   0x03
000C0A 26E1           01892         ADDWF   FSR1L, F
                      01893 ;       .line   1050; interface.c       s_lumi[2] = (sys_lumi_max % 10) + 0x30;
000C0C 0E00           01894         MOVLW   0x00
000C0E 6EE5           01895         MOVWF   POSTDEC1
000C10 0E0A           01896         MOVLW   0x0a
000C12 6EE5           01897         MOVWF   POSTDEC1
000C14 ????           01898         BANKSEL (_sys_lumi_max + 1)
000C16 51??           01899         MOVF    (_sys_lumi_max + 1), W, B
000C18 6EE5           01900         MOVWF   POSTDEC1
000C1A ????           01901         BANKSEL _sys_lumi_max
000C1C 51??           01902         MOVF    _sys_lumi_max, W, B
000C1E 6EE5           01903         MOVWF   POSTDEC1
000C20 EC?? F0??      01904         CALL    __moduint
000C24 6E??           01905         MOVWF   r0x01
000C26 CFF3 F000      01906         MOVFF   PRODL, r0x02
000C2A 0E04           01907         MOVLW   0x04
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE 37


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000C2C 26E1           01908         ADDWF   FSR1L, F
000C2E 0E30           01909         MOVLW   0x30
000C30 26??           01910         ADDWF   r0x01, F
000C32 50??           01911         MOVF    r0x01, W
000C34 ????           01912         BANKSEL (_print_tela_s_lumi_1_227 + 2)
000C36 6F??           01913         MOVWF   (_print_tela_s_lumi_1_227 + 2), B
                      01914 ;       .line   1051; interface.c       s_lumi[1] = ((sys_lumi_max / 10) % 10) + 0x30;
000C38 0E00           01915         MOVLW   0x00
000C3A 6EE5           01916         MOVWF   POSTDEC1
000C3C 0E0A           01917         MOVLW   0x0a
000C3E 6EE5           01918         MOVWF   POSTDEC1
000C40 ????           01919         BANKSEL (_sys_lumi_max + 1)
000C42 51??           01920         MOVF    (_sys_lumi_max + 1), W, B
000C44 6EE5           01921         MOVWF   POSTDEC1
000C46 ????           01922         BANKSEL _sys_lumi_max
000C48 51??           01923         MOVF    _sys_lumi_max, W, B
000C4A 6EE5           01924         MOVWF   POSTDEC1
000C4C EC?? F0??      01925         CALL    __divuint
000C50 6E??           01926         MOVWF   r0x01
000C52 CFF3 F000      01927         MOVFF   PRODL, r0x02
000C56 0E04           01928         MOVLW   0x04
000C58 26E1           01929         ADDWF   FSR1L, F
000C5A 0E00           01930         MOVLW   0x00
000C5C 6EE5           01931         MOVWF   POSTDEC1
000C5E 0E0A           01932         MOVLW   0x0a
000C60 6EE5           01933         MOVWF   POSTDEC1
000C62 50??           01934         MOVF    r0x02, W
000C64 6EE5           01935         MOVWF   POSTDEC1
000C66 50??           01936         MOVF    r0x01, W
000C68 6EE5           01937         MOVWF   POSTDEC1
000C6A EC?? F0??      01938         CALL    __moduint
000C6E 6E??           01939         MOVWF   r0x01
000C70 CFF3 F000      01940         MOVFF   PRODL, r0x02
000C74 0E04           01941         MOVLW   0x04
000C76 26E1           01942         ADDWF   FSR1L, F
000C78 0E30           01943         MOVLW   0x30
000C7A 26??           01944         ADDWF   r0x01, F
000C7C 50??           01945         MOVF    r0x01, W
000C7E ????           01946         BANKSEL (_print_tela_s_lumi_1_227 + 1)
000C80 6F??           01947         MOVWF   (_print_tela_s_lumi_1_227 + 1), B
                      01948 ;       .line   1052; interface.c       s_lumi[0] = ((sys_lumi_max / 100) % 10) + 0x30;
000C82 0E00           01949         MOVLW   0x00
000C84 6EE5           01950         MOVWF   POSTDEC1
000C86 0E64           01951         MOVLW   0x64
000C88 6EE5           01952         MOVWF   POSTDEC1
000C8A ????           01953         BANKSEL (_sys_lumi_max + 1)
000C8C 51??           01954         MOVF    (_sys_lumi_max + 1), W, B
000C8E 6EE5           01955         MOVWF   POSTDEC1
000C90 ????           01956         BANKSEL _sys_lumi_max
000C92 51??           01957         MOVF    _sys_lumi_max, W, B
000C94 6EE5           01958         MOVWF   POSTDEC1
000C96 EC?? F0??      01959         CALL    __divuint
000C9A 6E??           01960         MOVWF   r0x01
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE 38


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000C9C CFF3 F000      01961         MOVFF   PRODL, r0x02
000CA0 0E04           01962         MOVLW   0x04
000CA2 26E1           01963         ADDWF   FSR1L, F
000CA4 0E00           01964         MOVLW   0x00
000CA6 6EE5           01965         MOVWF   POSTDEC1
000CA8 0E0A           01966         MOVLW   0x0a
000CAA 6EE5           01967         MOVWF   POSTDEC1
000CAC 50??           01968         MOVF    r0x02, W
000CAE 6EE5           01969         MOVWF   POSTDEC1
000CB0 50??           01970         MOVF    r0x01, W
000CB2 6EE5           01971         MOVWF   POSTDEC1
000CB4 EC?? F0??      01972         CALL    __moduint
000CB8 6E??           01973         MOVWF   r0x01
000CBA CFF3 F000      01974         MOVFF   PRODL, r0x02
000CBE 0E04           01975         MOVLW   0x04
000CC0 26E1           01976         ADDWF   FSR1L, F
000CC2 0E30           01977         MOVLW   0x30
000CC4 26??           01978         ADDWF   r0x01, F
000CC6 50??           01979         MOVF    r0x01, W
000CC8 ????           01980         BANKSEL _print_tela_s_lumi_1_227
000CCA 6F??           01981         MOVWF   _print_tela_s_lumi_1_227, B
                      01982 ;       .line   1053; interface.c       print_lcd_string(s_lumi);
000CCC 0E??           01983         MOVLW   HIGH(_print_tela_s_lumi_1_227)
000CCE 6E??           01984         MOVWF   r0x02
000CD0 0E??           01985         MOVLW   LOW(_print_tela_s_lumi_1_227)
000CD2 6E??           01986         MOVWF   r0x01
000CD4 0E80           01987         MOVLW   0x80
000CD6 6E??           01988         MOVWF   r0x03
000CD8 50??           01989         MOVF    r0x03, W
000CDA 6EE5           01990         MOVWF   POSTDEC1
000CDC 50??           01991         MOVF    r0x02, W
000CDE 6EE5           01992         MOVWF   POSTDEC1
000CE0 50??           01993         MOVF    r0x01, W
000CE2 6EE5           01994         MOVWF   POSTDEC1
000CE4 EC?? F0??      01995         CALL    _print_lcd_string
000CE8 0E03           01996         MOVLW   0x03
000CEA 26E1           01997         ADDWF   FSR1L, F
                      01998 ;       .line   1054; interface.c       print_lcd_string("    ");
000CEC 0E??           01999         MOVLW   UPPER(__str_16)
000CEE 6E??           02000         MOVWF   r0x03
000CF0 0E??           02001         MOVLW   HIGH(__str_16)
000CF2 6E??           02002         MOVWF   r0x02
000CF4 0E??           02003         MOVLW   LOW(__str_16)
000CF6 6E??           02004         MOVWF   r0x01
000CF8 50??           02005         MOVF    r0x03, W
000CFA 6EE5           02006         MOVWF   POSTDEC1
000CFC 50??           02007         MOVF    r0x02, W
000CFE 6EE5           02008         MOVWF   POSTDEC1
000D00 50??           02009         MOVF    r0x01, W
000D02 6EE5           02010         MOVWF   POSTDEC1
000D04 EC?? F0??      02011         CALL    _print_lcd_string
000D08 0E03           02012         MOVLW   0x03
000D0A 26E1           02013         ADDWF   FSR1L, F
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE 39


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      02014 ;       .line   1055; interface.c       print_lcd_string("\n");
000D0C 0E??           02015         MOVLW   UPPER(__str_4)
000D0E 6E??           02016         MOVWF   r0x03
000D10 0E??           02017         MOVLW   HIGH(__str_4)
000D12 6E??           02018         MOVWF   r0x02
000D14 0E??           02019         MOVLW   LOW(__str_4)
000D16 6E??           02020         MOVWF   r0x01
000D18 50??           02021         MOVF    r0x03, W
000D1A 6EE5           02022         MOVWF   POSTDEC1
000D1C 50??           02023         MOVF    r0x02, W
000D1E 6EE5           02024         MOVWF   POSTDEC1
000D20 50??           02025         MOVF    r0x01, W
000D22 6EE5           02026         MOVWF   POSTDEC1
000D24 EC?? F0??      02027         CALL    _print_lcd_string
000D28 0E03           02028         MOVLW   0x03
000D2A 26E1           02029         ADDWF   FSR1L, F
                      02030 ;       .line   1056; interface.c       print_lcd_string("3:+ 4.- 5:");
000D2C 0E??           02031         MOVLW   UPPER(__str_21)
000D2E 6E??           02032         MOVWF   r0x03
000D30 0E??           02033         MOVLW   HIGH(__str_21)
000D32 6E??           02034         MOVWF   r0x02
000D34 0E??           02035         MOVLW   LOW(__str_21)
000D36 6E??           02036         MOVWF   r0x01
000D38 50??           02037         MOVF    r0x03, W
000D3A 6EE5           02038         MOVWF   POSTDEC1
000D3C 50??           02039         MOVF    r0x02, W
000D3E 6EE5           02040         MOVWF   POSTDEC1
000D40 50??           02041         MOVF    r0x01, W
000D42 6EE5           02042         MOVWF   POSTDEC1
000D44 EC?? F0??      02043         CALL    _print_lcd_string
000D48 0E03           02044         MOVLW   0x03
000D4A 26E1           02045         ADDWF   FSR1L, F
                      02046 ;       .line   1057; interface.c       print_lcd_tela();
000D4C EC?? F0??      02047         CALL    _print_lcd_tela
                      02048 ;       .line   1058; interface.c       print_lcd_string(" 6:");
000D50 0E??           02049         MOVLW   UPPER(__str_22)
000D52 6E??           02050         MOVWF   r0x03
000D54 0E??           02051         MOVLW   HIGH(__str_22)
000D56 6E??           02052         MOVWF   r0x02
000D58 0E??           02053         MOVLW   LOW(__str_22)
000D5A 6E??           02054         MOVWF   r0x01
000D5C 50??           02055         MOVF    r0x03, W
000D5E 6EE5           02056         MOVWF   POSTDEC1
000D60 50??           02057         MOVF    r0x02, W
000D62 6EE5           02058         MOVWF   POSTDEC1
000D64 50??           02059         MOVF    r0x01, W
000D66 6EE5           02060         MOVWF   POSTDEC1
000D68 EC?? F0??      02061         CALL    _print_lcd_string
000D6C 0E03           02062         MOVLW   0x03
000D6E 26E1           02063         ADDWF   FSR1L, F
                      02064 ;       .line   1059; interface.c       print_lcd_string("OK");
000D70 0E??           02065         MOVLW   UPPER(__str_23)
000D72 6E??           02066         MOVWF   r0x03
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE 40


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000D74 0E??           02067         MOVLW   HIGH(__str_23)
000D76 6E??           02068         MOVWF   r0x02
000D78 0E??           02069         MOVLW   LOW(__str_23)
000D7A 6E??           02070         MOVWF   r0x01
000D7C 50??           02071         MOVF    r0x03, W
000D7E 6EE5           02072         MOVWF   POSTDEC1
000D80 50??           02073         MOVF    r0x02, W
000D82 6EE5           02074         MOVWF   POSTDEC1
000D84 50??           02075         MOVF    r0x01, W
000D86 6EE5           02076         MOVWF   POSTDEC1
000D88 EC?? F0??      02077         CALL    _print_lcd_string
000D8C 0E03           02078         MOVLW   0x03
000D8E 26E1           02079         ADDWF   FSR1L, F
                      02080 ;       .line   1060; interface.c       print_lcd_string("   ");
000D90 0E??           02081         MOVLW   UPPER(__str_24)
000D92 6E??           02082         MOVWF   r0x03
000D94 0E??           02083         MOVLW   HIGH(__str_24)
000D96 6E??           02084         MOVWF   r0x02
000D98 0E??           02085         MOVLW   LOW(__str_24)
000D9A 6E??           02086         MOVWF   r0x01
000D9C 50??           02087         MOVF    r0x03, W
000D9E 6EE5           02088         MOVWF   POSTDEC1
000DA0 50??           02089         MOVF    r0x02, W
000DA2 6EE5           02090         MOVWF   POSTDEC1
000DA4 50??           02091         MOVF    r0x01, W
000DA6 6EE5           02092         MOVWF   POSTDEC1
000DA8 EC?? F0??      02093         CALL    _print_lcd_string
000DAC 0E03           02094         MOVLW   0x03
000DAE 26E1           02095         ADDWF   FSR1L, F
                      02096 ;       .line   1061; interface.c       break;
000DB0 EF?? F0??      02097         GOTO    _01835_DS_
000DB4                02098 _01776_DS_:
                      02099 ;       .line   1063; interface.c       print_lcd_string("L. BAIXA: ");
000DB4 0E??           02100         MOVLW   UPPER(__str_27)
000DB6 6E??           02101         MOVWF   r0x03
000DB8 0E??           02102         MOVLW   HIGH(__str_27)
000DBA 6E??           02103         MOVWF   r0x02
000DBC 0E??           02104         MOVLW   LOW(__str_27)
000DBE 6E??           02105         MOVWF   r0x01
000DC0 50??           02106         MOVF    r0x03, W
000DC2 6EE5           02107         MOVWF   POSTDEC1
000DC4 50??           02108         MOVF    r0x02, W
000DC6 6EE5           02109         MOVWF   POSTDEC1
000DC8 50??           02110         MOVF    r0x01, W
000DCA 6EE5           02111         MOVWF   POSTDEC1
000DCC EC?? F0??      02112         CALL    _print_lcd_string
000DD0 0E03           02113         MOVLW   0x03
000DD2 26E1           02114         ADDWF   FSR1L, F
                      02115 ;       .line   1064; interface.c       s_lumi[2] = (sys_lumi_min % 10) + 0x30;
000DD4 0E00           02116         MOVLW   0x00
000DD6 6EE5           02117         MOVWF   POSTDEC1
000DD8 0E0A           02118         MOVLW   0x0a
000DDA 6EE5           02119         MOVWF   POSTDEC1
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE 41


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000DDC ????           02120         BANKSEL (_sys_lumi_min + 1)
000DDE 51??           02121         MOVF    (_sys_lumi_min + 1), W, B
000DE0 6EE5           02122         MOVWF   POSTDEC1
000DE2 ????           02123         BANKSEL _sys_lumi_min
000DE4 51??           02124         MOVF    _sys_lumi_min, W, B
000DE6 6EE5           02125         MOVWF   POSTDEC1
000DE8 EC?? F0??      02126         CALL    __moduint
000DEC 6E??           02127         MOVWF   r0x01
000DEE CFF3 F000      02128         MOVFF   PRODL, r0x02
000DF2 0E04           02129         MOVLW   0x04
000DF4 26E1           02130         ADDWF   FSR1L, F
000DF6 0E30           02131         MOVLW   0x30
000DF8 26??           02132         ADDWF   r0x01, F
000DFA 50??           02133         MOVF    r0x01, W
000DFC ????           02134         BANKSEL (_print_tela_s_lumi_1_227 + 2)
000DFE 6F??           02135         MOVWF   (_print_tela_s_lumi_1_227 + 2), B
                      02136 ;       .line   1065; interface.c       s_lumi[1] = ((sys_lumi_min / 10) % 10) + 0x30;
000E00 0E00           02137         MOVLW   0x00
000E02 6EE5           02138         MOVWF   POSTDEC1
000E04 0E0A           02139         MOVLW   0x0a
000E06 6EE5           02140         MOVWF   POSTDEC1
000E08 ????           02141         BANKSEL (_sys_lumi_min + 1)
000E0A 51??           02142         MOVF    (_sys_lumi_min + 1), W, B
000E0C 6EE5           02143         MOVWF   POSTDEC1
000E0E ????           02144         BANKSEL _sys_lumi_min
000E10 51??           02145         MOVF    _sys_lumi_min, W, B
000E12 6EE5           02146         MOVWF   POSTDEC1
000E14 EC?? F0??      02147         CALL    __divuint
000E18 6E??           02148         MOVWF   r0x01
000E1A CFF3 F000      02149         MOVFF   PRODL, r0x02
000E1E 0E04           02150         MOVLW   0x04
000E20 26E1           02151         ADDWF   FSR1L, F
000E22 0E00           02152         MOVLW   0x00
000E24 6EE5           02153         MOVWF   POSTDEC1
000E26 0E0A           02154         MOVLW   0x0a
000E28 6EE5           02155         MOVWF   POSTDEC1
000E2A 50??           02156         MOVF    r0x02, W
000E2C 6EE5           02157         MOVWF   POSTDEC1
000E2E 50??           02158         MOVF    r0x01, W
000E30 6EE5           02159         MOVWF   POSTDEC1
000E32 EC?? F0??      02160         CALL    __moduint
000E36 6E??           02161         MOVWF   r0x01
000E38 CFF3 F000      02162         MOVFF   PRODL, r0x02
000E3C 0E04           02163         MOVLW   0x04
000E3E 26E1           02164         ADDWF   FSR1L, F
000E40 0E30           02165         MOVLW   0x30
000E42 26??           02166         ADDWF   r0x01, F
000E44 50??           02167         MOVF    r0x01, W
000E46 ????           02168         BANKSEL (_print_tela_s_lumi_1_227 + 1)
000E48 6F??           02169         MOVWF   (_print_tela_s_lumi_1_227 + 1), B
                      02170 ;       .line   1066; interface.c       s_lumi[0] = ((sys_lumi_min / 100) % 10) + 0x30;
000E4A 0E00           02171         MOVLW   0x00
000E4C 6EE5           02172         MOVWF   POSTDEC1
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE 42


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000E4E 0E64           02173         MOVLW   0x64
000E50 6EE5           02174         MOVWF   POSTDEC1
000E52 ????           02175         BANKSEL (_sys_lumi_min + 1)
000E54 51??           02176         MOVF    (_sys_lumi_min + 1), W, B
000E56 6EE5           02177         MOVWF   POSTDEC1
000E58 ????           02178         BANKSEL _sys_lumi_min
000E5A 51??           02179         MOVF    _sys_lumi_min, W, B
000E5C 6EE5           02180         MOVWF   POSTDEC1
000E5E EC?? F0??      02181         CALL    __divuint
000E62 6E??           02182         MOVWF   r0x01
000E64 CFF3 F000      02183         MOVFF   PRODL, r0x02
000E68 0E04           02184         MOVLW   0x04
000E6A 26E1           02185         ADDWF   FSR1L, F
000E6C 0E00           02186         MOVLW   0x00
000E6E 6EE5           02187         MOVWF   POSTDEC1
000E70 0E0A           02188         MOVLW   0x0a
000E72 6EE5           02189         MOVWF   POSTDEC1
000E74 50??           02190         MOVF    r0x02, W
000E76 6EE5           02191         MOVWF   POSTDEC1
000E78 50??           02192         MOVF    r0x01, W
000E7A 6EE5           02193         MOVWF   POSTDEC1
000E7C EC?? F0??      02194         CALL    __moduint
000E80 6E??           02195         MOVWF   r0x01
000E82 CFF3 F000      02196         MOVFF   PRODL, r0x02
000E86 0E04           02197         MOVLW   0x04
000E88 26E1           02198         ADDWF   FSR1L, F
000E8A 0E30           02199         MOVLW   0x30
000E8C 26??           02200         ADDWF   r0x01, F
000E8E 50??           02201         MOVF    r0x01, W
000E90 ????           02202         BANKSEL _print_tela_s_lumi_1_227
000E92 6F??           02203         MOVWF   _print_tela_s_lumi_1_227, B
                      02204 ;       .line   1067; interface.c       print_lcd_string(s_lumi);
000E94 0E??           02205         MOVLW   HIGH(_print_tela_s_lumi_1_227)
000E96 6E??           02206         MOVWF   r0x02
000E98 0E??           02207         MOVLW   LOW(_print_tela_s_lumi_1_227)
000E9A 6E??           02208         MOVWF   r0x01
000E9C 0E80           02209         MOVLW   0x80
000E9E 6E??           02210         MOVWF   r0x03
000EA0 50??           02211         MOVF    r0x03, W
000EA2 6EE5           02212         MOVWF   POSTDEC1
000EA4 50??           02213         MOVF    r0x02, W
000EA6 6EE5           02214         MOVWF   POSTDEC1
000EA8 50??           02215         MOVF    r0x01, W
000EAA 6EE5           02216         MOVWF   POSTDEC1
000EAC EC?? F0??      02217         CALL    _print_lcd_string
000EB0 0E03           02218         MOVLW   0x03
000EB2 26E1           02219         ADDWF   FSR1L, F
                      02220 ;       .line   1068; interface.c       print_lcd_string("     ");
000EB4 0E??           02221         MOVLW   UPPER(__str_12)
000EB6 6E??           02222         MOVWF   r0x03
000EB8 0E??           02223         MOVLW   HIGH(__str_12)
000EBA 6E??           02224         MOVWF   r0x02
000EBC 0E??           02225         MOVLW   LOW(__str_12)
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE 43


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000EBE 6E??           02226         MOVWF   r0x01
000EC0 50??           02227         MOVF    r0x03, W
000EC2 6EE5           02228         MOVWF   POSTDEC1
000EC4 50??           02229         MOVF    r0x02, W
000EC6 6EE5           02230         MOVWF   POSTDEC1
000EC8 50??           02231         MOVF    r0x01, W
000ECA 6EE5           02232         MOVWF   POSTDEC1
000ECC EC?? F0??      02233         CALL    _print_lcd_string
000ED0 0E03           02234         MOVLW   0x03
000ED2 26E1           02235         ADDWF   FSR1L, F
                      02236 ;       .line   1069; interface.c       print_lcd_string("\n");
000ED4 0E??           02237         MOVLW   UPPER(__str_4)
000ED6 6E??           02238         MOVWF   r0x03
000ED8 0E??           02239         MOVLW   HIGH(__str_4)
000EDA 6E??           02240         MOVWF   r0x02
000EDC 0E??           02241         MOVLW   LOW(__str_4)
000EDE 6E??           02242         MOVWF   r0x01
000EE0 50??           02243         MOVF    r0x03, W
000EE2 6EE5           02244         MOVWF   POSTDEC1
000EE4 50??           02245         MOVF    r0x02, W
000EE6 6EE5           02246         MOVWF   POSTDEC1
000EE8 50??           02247         MOVF    r0x01, W
000EEA 6EE5           02248         MOVWF   POSTDEC1
000EEC EC?? F0??      02249         CALL    _print_lcd_string
000EF0 0E03           02250         MOVLW   0x03
000EF2 26E1           02251         ADDWF   FSR1L, F
                      02252 ;       .line   1070; interface.c       print_lcd_string("3:+ 4.- 5:");
000EF4 0E??           02253         MOVLW   UPPER(__str_21)
000EF6 6E??           02254         MOVWF   r0x03
000EF8 0E??           02255         MOVLW   HIGH(__str_21)
000EFA 6E??           02256         MOVWF   r0x02
000EFC 0E??           02257         MOVLW   LOW(__str_21)
000EFE 6E??           02258         MOVWF   r0x01
000F00 50??           02259         MOVF    r0x03, W
000F02 6EE5           02260         MOVWF   POSTDEC1
000F04 50??           02261         MOVF    r0x02, W
000F06 6EE5           02262         MOVWF   POSTDEC1
000F08 50??           02263         MOVF    r0x01, W
000F0A 6EE5           02264         MOVWF   POSTDEC1
000F0C EC?? F0??      02265         CALL    _print_lcd_string
000F10 0E03           02266         MOVLW   0x03
000F12 26E1           02267         ADDWF   FSR1L, F
                      02268 ;       .line   1071; interface.c       print_lcd_tela();
000F14 EC?? F0??      02269         CALL    _print_lcd_tela
                      02270 ;       .line   1072; interface.c       print_lcd_string(" 6:");
000F18 0E??           02271         MOVLW   UPPER(__str_22)
000F1A 6E??           02272         MOVWF   r0x03
000F1C 0E??           02273         MOVLW   HIGH(__str_22)
000F1E 6E??           02274         MOVWF   r0x02
000F20 0E??           02275         MOVLW   LOW(__str_22)
000F22 6E??           02276         MOVWF   r0x01
000F24 50??           02277         MOVF    r0x03, W
000F26 6EE5           02278         MOVWF   POSTDEC1
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE 44


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000F28 50??           02279         MOVF    r0x02, W
000F2A 6EE5           02280         MOVWF   POSTDEC1
000F2C 50??           02281         MOVF    r0x01, W
000F2E 6EE5           02282         MOVWF   POSTDEC1
000F30 EC?? F0??      02283         CALL    _print_lcd_string
000F34 0E03           02284         MOVLW   0x03
000F36 26E1           02285         ADDWF   FSR1L, F
                      02286 ;       .line   1073; interface.c       print_lcd_string("OK");
000F38 0E??           02287         MOVLW   UPPER(__str_23)
000F3A 6E??           02288         MOVWF   r0x03
000F3C 0E??           02289         MOVLW   HIGH(__str_23)
000F3E 6E??           02290         MOVWF   r0x02
000F40 0E??           02291         MOVLW   LOW(__str_23)
000F42 6E??           02292         MOVWF   r0x01
000F44 50??           02293         MOVF    r0x03, W
000F46 6EE5           02294         MOVWF   POSTDEC1
000F48 50??           02295         MOVF    r0x02, W
000F4A 6EE5           02296         MOVWF   POSTDEC1
000F4C 50??           02297         MOVF    r0x01, W
000F4E 6EE5           02298         MOVWF   POSTDEC1
000F50 EC?? F0??      02299         CALL    _print_lcd_string
000F54 0E03           02300         MOVLW   0x03
000F56 26E1           02301         ADDWF   FSR1L, F
                      02302 ;       .line   1074; interface.c       print_lcd_string("   ");
000F58 0E??           02303         MOVLW   UPPER(__str_24)
000F5A 6E??           02304         MOVWF   r0x03
000F5C 0E??           02305         MOVLW   HIGH(__str_24)
000F5E 6E??           02306         MOVWF   r0x02
000F60 0E??           02307         MOVLW   LOW(__str_24)
000F62 6E??           02308         MOVWF   r0x01
000F64 50??           02309         MOVF    r0x03, W
000F66 6EE5           02310         MOVWF   POSTDEC1
000F68 50??           02311         MOVF    r0x02, W
000F6A 6EE5           02312         MOVWF   POSTDEC1
000F6C 50??           02313         MOVF    r0x01, W
000F6E 6EE5           02314         MOVWF   POSTDEC1
000F70 EC?? F0??      02315         CALL    _print_lcd_string
000F74 0E03           02316         MOVLW   0x03
000F76 26E1           02317         ADDWF   FSR1L, F
                      02318 ;       .line   1075; interface.c       break;
000F78 EF?? F0??      02319         GOTO    _01835_DS_
000F7C                02320 _01777_DS_:
                      02321 ;       .line   1077; interface.c       print_lcd_string("TEMPO: ");
000F7C 0E??           02322         MOVLW   UPPER(__str_28)
000F7E 6E??           02323         MOVWF   r0x03
000F80 0E??           02324         MOVLW   HIGH(__str_28)
000F82 6E??           02325         MOVWF   r0x02
000F84 0E??           02326         MOVLW   LOW(__str_28)
000F86 6E??           02327         MOVWF   r0x01
000F88 50??           02328         MOVF    r0x03, W
000F8A 6EE5           02329         MOVWF   POSTDEC1
000F8C 50??           02330         MOVF    r0x02, W
000F8E 6EE5           02331         MOVWF   POSTDEC1
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE 45


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000F90 50??           02332         MOVF    r0x01, W
000F92 6EE5           02333         MOVWF   POSTDEC1
000F94 EC?? F0??      02334         CALL    _print_lcd_string
000F98 0E03           02335         MOVLW   0x03
000F9A 26E1           02336         ADDWF   FSR1L, F
                      02337 ;       .line   1078; interface.c       s_tempo[4] = (sys_timer_pool[1] % 10) + 0x30;
000F9C 0E00           02338         MOVLW   0x00
000F9E 6EE5           02339         MOVWF   POSTDEC1
000FA0 0E00           02340         MOVLW   0x00
000FA2 6EE5           02341         MOVWF   POSTDEC1
000FA4 0E00           02342         MOVLW   0x00
000FA6 6EE5           02343         MOVWF   POSTDEC1
000FA8 0E0A           02344         MOVLW   0x0a
000FAA 6EE5           02345         MOVWF   POSTDEC1
000FAC ????           02346         BANKSEL (_sys_timer_pool + 7)
000FAE 51??           02347         MOVF    (_sys_timer_pool + 7), W, B
000FB0 6EE5           02348         MOVWF   POSTDEC1
000FB2 ????           02349         BANKSEL (_sys_timer_pool + 6)
000FB4 51??           02350         MOVF    (_sys_timer_pool + 6), W, B
000FB6 6EE5           02351         MOVWF   POSTDEC1
000FB8 ????           02352         BANKSEL (_sys_timer_pool + 5)
000FBA 51??           02353         MOVF    (_sys_timer_pool + 5), W, B
000FBC 6EE5           02354         MOVWF   POSTDEC1
000FBE ????           02355         BANKSEL (_sys_timer_pool + 4)
000FC0 51??           02356         MOVF    (_sys_timer_pool + 4), W, B
000FC2 6EE5           02357         MOVWF   POSTDEC1
000FC4 EC?? F0??      02358         CALL    __modulong
000FC8 6E??           02359         MOVWF   r0x01
000FCA CFF3 F000      02360         MOVFF   PRODL, r0x02
000FCE CFF4 F000      02361         MOVFF   PRODH, r0x03
000FD2 CFE9 F000      02362         MOVFF   FSR0L, r0x04
000FD6 0E08           02363         MOVLW   0x08
000FD8 26E1           02364         ADDWF   FSR1L, F
000FDA 0E30           02365         MOVLW   0x30
000FDC 26??           02366         ADDWF   r0x01, F
000FDE 50??           02367         MOVF    r0x01, W
000FE0 ????           02368         BANKSEL (_print_tela_s_tempo_1_227 + 4)
000FE2 6F??           02369         MOVWF   (_print_tela_s_tempo_1_227 + 4), B
                      02370 ;       .line   1079; interface.c       s_tempo[3] = ((sys_timer_pool[1] / 10) % 10) + 0x30;
000FE4 0E00           02371         MOVLW   0x00
000FE6 6EE5           02372         MOVWF   POSTDEC1
000FE8 0E00           02373         MOVLW   0x00
000FEA 6EE5           02374         MOVWF   POSTDEC1
000FEC 0E00           02375         MOVLW   0x00
000FEE 6EE5           02376         MOVWF   POSTDEC1
000FF0 0E0A           02377         MOVLW   0x0a
000FF2 6EE5           02378         MOVWF   POSTDEC1
000FF4 ????           02379         BANKSEL (_sys_timer_pool + 7)
000FF6 51??           02380         MOVF    (_sys_timer_pool + 7), W, B
000FF8 6EE5           02381         MOVWF   POSTDEC1
000FFA ????           02382         BANKSEL (_sys_timer_pool + 6)
000FFC 51??           02383         MOVF    (_sys_timer_pool + 6), W, B
000FFE 6EE5           02384         MOVWF   POSTDEC1
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE 46


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

001000 ????           02385         BANKSEL (_sys_timer_pool + 5)
001002 51??           02386         MOVF    (_sys_timer_pool + 5), W, B
001004 6EE5           02387         MOVWF   POSTDEC1
001006 ????           02388         BANKSEL (_sys_timer_pool + 4)
001008 51??           02389         MOVF    (_sys_timer_pool + 4), W, B
00100A 6EE5           02390         MOVWF   POSTDEC1
00100C EC?? F0??      02391         CALL    __divulong
001010 6E??           02392         MOVWF   r0x01
001012 CFF3 F000      02393         MOVFF   PRODL, r0x02
001016 CFF4 F000      02394         MOVFF   PRODH, r0x03
00101A CFE9 F000      02395         MOVFF   FSR0L, r0x04
00101E 0E08           02396         MOVLW   0x08
001020 26E1           02397         ADDWF   FSR1L, F
001022 0E00           02398         MOVLW   0x00
001024 6EE5           02399         MOVWF   POSTDEC1
001026 0E00           02400         MOVLW   0x00
001028 6EE5           02401         MOVWF   POSTDEC1
00102A 0E00           02402         MOVLW   0x00
00102C 6EE5           02403         MOVWF   POSTDEC1
00102E 0E0A           02404         MOVLW   0x0a
001030 6EE5           02405         MOVWF   POSTDEC1
001032 50??           02406         MOVF    r0x04, W
001034 6EE5           02407         MOVWF   POSTDEC1
001036 50??           02408         MOVF    r0x03, W
001038 6EE5           02409         MOVWF   POSTDEC1
00103A 50??           02410         MOVF    r0x02, W
00103C 6EE5           02411         MOVWF   POSTDEC1
00103E 50??           02412         MOVF    r0x01, W
001040 6EE5           02413         MOVWF   POSTDEC1
001042 EC?? F0??      02414         CALL    __modulong
001046 6E??           02415         MOVWF   r0x01
001048 CFF3 F000      02416         MOVFF   PRODL, r0x02
00104C CFF4 F000      02417         MOVFF   PRODH, r0x03
001050 CFE9 F000      02418         MOVFF   FSR0L, r0x04
001054 0E08           02419         MOVLW   0x08
001056 26E1           02420         ADDWF   FSR1L, F
001058 0E30           02421         MOVLW   0x30
00105A 26??           02422         ADDWF   r0x01, F
00105C 50??           02423         MOVF    r0x01, W
00105E ????           02424         BANKSEL (_print_tela_s_tempo_1_227 + 3)
001060 6F??           02425         MOVWF   (_print_tela_s_tempo_1_227 + 3), B
                      02426 ;       .line   1080; interface.c       s_tempo[2] = ((sys_timer_pool[1] / 100) % 10) + 0x30;
001062 0E00           02427         MOVLW   0x00
001064 6EE5           02428         MOVWF   POSTDEC1
001066 0E00           02429         MOVLW   0x00
001068 6EE5           02430         MOVWF   POSTDEC1
00106A 0E00           02431         MOVLW   0x00
00106C 6EE5           02432         MOVWF   POSTDEC1
00106E 0E64           02433         MOVLW   0x64
001070 6EE5           02434         MOVWF   POSTDEC1
001072 ????           02435         BANKSEL (_sys_timer_pool + 7)
001074 51??           02436         MOVF    (_sys_timer_pool + 7), W, B
001076 6EE5           02437         MOVWF   POSTDEC1
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE 47


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

001078 ????           02438         BANKSEL (_sys_timer_pool + 6)
00107A 51??           02439         MOVF    (_sys_timer_pool + 6), W, B
00107C 6EE5           02440         MOVWF   POSTDEC1
00107E ????           02441         BANKSEL (_sys_timer_pool + 5)
001080 51??           02442         MOVF    (_sys_timer_pool + 5), W, B
001082 6EE5           02443         MOVWF   POSTDEC1
001084 ????           02444         BANKSEL (_sys_timer_pool + 4)
001086 51??           02445         MOVF    (_sys_timer_pool + 4), W, B
001088 6EE5           02446         MOVWF   POSTDEC1
00108A EC?? F0??      02447         CALL    __divulong
00108E 6E??           02448         MOVWF   r0x01
001090 CFF3 F000      02449         MOVFF   PRODL, r0x02
001094 CFF4 F000      02450         MOVFF   PRODH, r0x03
001098 CFE9 F000      02451         MOVFF   FSR0L, r0x04
00109C 0E08           02452         MOVLW   0x08
00109E 26E1           02453         ADDWF   FSR1L, F
0010A0 0E00           02454         MOVLW   0x00
0010A2 6EE5           02455         MOVWF   POSTDEC1
0010A4 0E00           02456         MOVLW   0x00
0010A6 6EE5           02457         MOVWF   POSTDEC1
0010A8 0E00           02458         MOVLW   0x00
0010AA 6EE5           02459         MOVWF   POSTDEC1
0010AC 0E0A           02460         MOVLW   0x0a
0010AE 6EE5           02461         MOVWF   POSTDEC1
0010B0 50??           02462         MOVF    r0x04, W
0010B2 6EE5           02463         MOVWF   POSTDEC1
0010B4 50??           02464         MOVF    r0x03, W
0010B6 6EE5           02465         MOVWF   POSTDEC1
0010B8 50??           02466         MOVF    r0x02, W
0010BA 6EE5           02467         MOVWF   POSTDEC1
0010BC 50??           02468         MOVF    r0x01, W
0010BE 6EE5           02469         MOVWF   POSTDEC1
0010C0 EC?? F0??      02470         CALL    __modulong
0010C4 6E??           02471         MOVWF   r0x01
0010C6 CFF3 F000      02472         MOVFF   PRODL, r0x02
0010CA CFF4 F000      02473         MOVFF   PRODH, r0x03
0010CE CFE9 F000      02474         MOVFF   FSR0L, r0x04
0010D2 0E08           02475         MOVLW   0x08
0010D4 26E1           02476         ADDWF   FSR1L, F
0010D6 0E30           02477         MOVLW   0x30
0010D8 26??           02478         ADDWF   r0x01, F
0010DA 50??           02479         MOVF    r0x01, W
0010DC ????           02480         BANKSEL (_print_tela_s_tempo_1_227 + 2)
0010DE 6F??           02481         MOVWF   (_print_tela_s_tempo_1_227 + 2), B
                      02482 ;       .line   1081; interface.c       s_tempo[1] = ((sys_timer_pool[1] / 1000) % 10) + 0x30;
0010E0 0E00           02483         MOVLW   0x00
0010E2 6EE5           02484         MOVWF   POSTDEC1
0010E4 0E00           02485         MOVLW   0x00
0010E6 6EE5           02486         MOVWF   POSTDEC1
0010E8 0E03           02487         MOVLW   0x03
0010EA 6EE5           02488         MOVWF   POSTDEC1
0010EC 0EE8           02489         MOVLW   0xe8
0010EE 6EE5           02490         MOVWF   POSTDEC1
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE 48


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0010F0 ????           02491         BANKSEL (_sys_timer_pool + 7)
0010F2 51??           02492         MOVF    (_sys_timer_pool + 7), W, B
0010F4 6EE5           02493         MOVWF   POSTDEC1
0010F6 ????           02494         BANKSEL (_sys_timer_pool + 6)
0010F8 51??           02495         MOVF    (_sys_timer_pool + 6), W, B
0010FA 6EE5           02496         MOVWF   POSTDEC1
0010FC ????           02497         BANKSEL (_sys_timer_pool + 5)
0010FE 51??           02498         MOVF    (_sys_timer_pool + 5), W, B
001100 6EE5           02499         MOVWF   POSTDEC1
001102 ????           02500         BANKSEL (_sys_timer_pool + 4)
001104 51??           02501         MOVF    (_sys_timer_pool + 4), W, B
001106 6EE5           02502         MOVWF   POSTDEC1
001108 EC?? F0??      02503         CALL    __divulong
00110C 6E??           02504         MOVWF   r0x01
00110E CFF3 F000      02505         MOVFF   PRODL, r0x02
001112 CFF4 F000      02506         MOVFF   PRODH, r0x03
001116 CFE9 F000      02507         MOVFF   FSR0L, r0x04
00111A 0E08           02508         MOVLW   0x08
00111C 26E1           02509         ADDWF   FSR1L, F
00111E 0E00           02510         MOVLW   0x00
001120 6EE5           02511         MOVWF   POSTDEC1
001122 0E00           02512         MOVLW   0x00
001124 6EE5           02513         MOVWF   POSTDEC1
001126 0E00           02514         MOVLW   0x00
001128 6EE5           02515         MOVWF   POSTDEC1
00112A 0E0A           02516         MOVLW   0x0a
00112C 6EE5           02517         MOVWF   POSTDEC1
00112E 50??           02518         MOVF    r0x04, W
001130 6EE5           02519         MOVWF   POSTDEC1
001132 50??           02520         MOVF    r0x03, W
001134 6EE5           02521         MOVWF   POSTDEC1
001136 50??           02522         MOVF    r0x02, W
001138 6EE5           02523         MOVWF   POSTDEC1
00113A 50??           02524         MOVF    r0x01, W
00113C 6EE5           02525         MOVWF   POSTDEC1
00113E EC?? F0??      02526         CALL    __modulong
001142 6E??           02527         MOVWF   r0x01
001144 CFF3 F000      02528         MOVFF   PRODL, r0x02
001148 CFF4 F000      02529         MOVFF   PRODH, r0x03
00114C CFE9 F000      02530         MOVFF   FSR0L, r0x04
001150 0E08           02531         MOVLW   0x08
001152 26E1           02532         ADDWF   FSR1L, F
001154 0E30           02533         MOVLW   0x30
001156 26??           02534         ADDWF   r0x01, F
001158 50??           02535         MOVF    r0x01, W
00115A ????           02536         BANKSEL (_print_tela_s_tempo_1_227 + 1)
00115C 6F??           02537         MOVWF   (_print_tela_s_tempo_1_227 + 1), B
                      02538 ;       .line   1082; interface.c       s_tempo[0] = ((sys_timer_pool[1] / 10000) % 10) + 0x30;
00115E 0E00           02539         MOVLW   0x00
001160 6EE5           02540         MOVWF   POSTDEC1
001162 0E00           02541         MOVLW   0x00
001164 6EE5           02542         MOVWF   POSTDEC1
001166 0E27           02543         MOVLW   0x27
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE 49


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

001168 6EE5           02544         MOVWF   POSTDEC1
00116A 0E10           02545         MOVLW   0x10
00116C 6EE5           02546         MOVWF   POSTDEC1
00116E ????           02547         BANKSEL (_sys_timer_pool + 7)
001170 51??           02548         MOVF    (_sys_timer_pool + 7), W, B
001172 6EE5           02549         MOVWF   POSTDEC1
001174 ????           02550         BANKSEL (_sys_timer_pool + 6)
001176 51??           02551         MOVF    (_sys_timer_pool + 6), W, B
001178 6EE5           02552         MOVWF   POSTDEC1
00117A ????           02553         BANKSEL (_sys_timer_pool + 5)
00117C 51??           02554         MOVF    (_sys_timer_pool + 5), W, B
00117E 6EE5           02555         MOVWF   POSTDEC1
001180 ????           02556         BANKSEL (_sys_timer_pool + 4)
001182 51??           02557         MOVF    (_sys_timer_pool + 4), W, B
001184 6EE5           02558         MOVWF   POSTDEC1
001186 EC?? F0??      02559         CALL    __divulong
00118A 6E??           02560         MOVWF   r0x01
00118C CFF3 F000      02561         MOVFF   PRODL, r0x02
001190 CFF4 F000      02562         MOVFF   PRODH, r0x03
001194 CFE9 F000      02563         MOVFF   FSR0L, r0x04
001198 0E08           02564         MOVLW   0x08
00119A 26E1           02565         ADDWF   FSR1L, F
00119C 0E00           02566         MOVLW   0x00
00119E 6EE5           02567         MOVWF   POSTDEC1
0011A0 0E00           02568         MOVLW   0x00
0011A2 6EE5           02569         MOVWF   POSTDEC1
0011A4 0E00           02570         MOVLW   0x00
0011A6 6EE5           02571         MOVWF   POSTDEC1
0011A8 0E0A           02572         MOVLW   0x0a
0011AA 6EE5           02573         MOVWF   POSTDEC1
0011AC 50??           02574         MOVF    r0x04, W
0011AE 6EE5           02575         MOVWF   POSTDEC1
0011B0 50??           02576         MOVF    r0x03, W
0011B2 6EE5           02577         MOVWF   POSTDEC1
0011B4 50??           02578         MOVF    r0x02, W
0011B6 6EE5           02579         MOVWF   POSTDEC1
0011B8 50??           02580         MOVF    r0x01, W
0011BA 6EE5           02581         MOVWF   POSTDEC1
0011BC EC?? F0??      02582         CALL    __modulong
0011C0 6E??           02583         MOVWF   r0x01
0011C2 CFF3 F000      02584         MOVFF   PRODL, r0x02
0011C6 CFF4 F000      02585         MOVFF   PRODH, r0x03
0011CA CFE9 F000      02586         MOVFF   FSR0L, r0x04
0011CE 0E08           02587         MOVLW   0x08
0011D0 26E1           02588         ADDWF   FSR1L, F
0011D2 0E30           02589         MOVLW   0x30
0011D4 26??           02590         ADDWF   r0x01, F
0011D6 50??           02591         MOVF    r0x01, W
0011D8 ????           02592         BANKSEL _print_tela_s_tempo_1_227
0011DA 6F??           02593         MOVWF   _print_tela_s_tempo_1_227, B
                      02594 ;       .line   1083; interface.c       print_lcd_string(s_tempo);
0011DC 0E??           02595         MOVLW   HIGH(_print_tela_s_tempo_1_227)
0011DE 6E??           02596         MOVWF   r0x02
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE 50


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0011E0 0E??           02597         MOVLW   LOW(_print_tela_s_tempo_1_227)
0011E2 6E??           02598         MOVWF   r0x01
0011E4 0E80           02599         MOVLW   0x80
0011E6 6E??           02600         MOVWF   r0x03
0011E8 50??           02601         MOVF    r0x03, W
0011EA 6EE5           02602         MOVWF   POSTDEC1
0011EC 50??           02603         MOVF    r0x02, W
0011EE 6EE5           02604         MOVWF   POSTDEC1
0011F0 50??           02605         MOVF    r0x01, W
0011F2 6EE5           02606         MOVWF   POSTDEC1
0011F4 EC?? F0??      02607         CALL    _print_lcd_string
0011F8 0E03           02608         MOVLW   0x03
0011FA 26E1           02609         ADDWF   FSR1L, F
                      02610 ;       .line   1084; interface.c       print_lcd_string("       ");
0011FC 0E??           02611         MOVLW   UPPER(__str_29)
0011FE 6E??           02612         MOVWF   r0x03
001200 0E??           02613         MOVLW   HIGH(__str_29)
001202 6E??           02614         MOVWF   r0x02
001204 0E??           02615         MOVLW   LOW(__str_29)
001206 6E??           02616         MOVWF   r0x01
001208 50??           02617         MOVF    r0x03, W
00120A 6EE5           02618         MOVWF   POSTDEC1
00120C 50??           02619         MOVF    r0x02, W
00120E 6EE5           02620         MOVWF   POSTDEC1
001210 50??           02621         MOVF    r0x01, W
001212 6EE5           02622         MOVWF   POSTDEC1
001214 EC?? F0??      02623         CALL    _print_lcd_string
001218 0E03           02624         MOVLW   0x03
00121A 26E1           02625         ADDWF   FSR1L, F
                      02626 ;       .line   1085; interface.c       print_lcd_string("\n");
00121C 0E??           02627         MOVLW   UPPER(__str_4)
00121E 6E??           02628         MOVWF   r0x03
001220 0E??           02629         MOVLW   HIGH(__str_4)
001222 6E??           02630         MOVWF   r0x02
001224 0E??           02631         MOVLW   LOW(__str_4)
001226 6E??           02632         MOVWF   r0x01
001228 50??           02633         MOVF    r0x03, W
00122A 6EE5           02634         MOVWF   POSTDEC1
00122C 50??           02635         MOVF    r0x02, W
00122E 6EE5           02636         MOVWF   POSTDEC1
001230 50??           02637         MOVF    r0x01, W
001232 6EE5           02638         MOVWF   POSTDEC1
001234 EC?? F0??      02639         CALL    _print_lcd_string
001238 0E03           02640         MOVLW   0x03
00123A 26E1           02641         ADDWF   FSR1L, F
                      02642 ;       .line   1086; interface.c       print_lcd_string("3:+ 4.- 5:");
00123C 0E??           02643         MOVLW   UPPER(__str_21)
00123E 6E??           02644         MOVWF   r0x03
001240 0E??           02645         MOVLW   HIGH(__str_21)
001242 6E??           02646         MOVWF   r0x02
001244 0E??           02647         MOVLW   LOW(__str_21)
001246 6E??           02648         MOVWF   r0x01
001248 50??           02649         MOVF    r0x03, W
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE 51


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00124A 6EE5           02650         MOVWF   POSTDEC1
00124C 50??           02651         MOVF    r0x02, W
00124E 6EE5           02652         MOVWF   POSTDEC1
001250 50??           02653         MOVF    r0x01, W
001252 6EE5           02654         MOVWF   POSTDEC1
001254 EC?? F0??      02655         CALL    _print_lcd_string
001258 0E03           02656         MOVLW   0x03
00125A 26E1           02657         ADDWF   FSR1L, F
                      02658 ;       .line   1087; interface.c       print_lcd_tela();
00125C EC?? F0??      02659         CALL    _print_lcd_tela
                      02660 ;       .line   1088; interface.c       print_lcd_string(" 6:");
001260 0E??           02661         MOVLW   UPPER(__str_22)
001262 6E??           02662         MOVWF   r0x03
001264 0E??           02663         MOVLW   HIGH(__str_22)
001266 6E??           02664         MOVWF   r0x02
001268 0E??           02665         MOVLW   LOW(__str_22)
00126A 6E??           02666         MOVWF   r0x01
00126C 50??           02667         MOVF    r0x03, W
00126E 6EE5           02668         MOVWF   POSTDEC1
001270 50??           02669         MOVF    r0x02, W
001272 6EE5           02670         MOVWF   POSTDEC1
001274 50??           02671         MOVF    r0x01, W
001276 6EE5           02672         MOVWF   POSTDEC1
001278 EC?? F0??      02673         CALL    _print_lcd_string
00127C 0E03           02674         MOVLW   0x03
00127E 26E1           02675         ADDWF   FSR1L, F
                      02676 ;       .line   1089; interface.c       print_lcd_string("OK");
001280 0E??           02677         MOVLW   UPPER(__str_23)
001282 6E??           02678         MOVWF   r0x03
001284 0E??           02679         MOVLW   HIGH(__str_23)
001286 6E??           02680         MOVWF   r0x02
001288 0E??           02681         MOVLW   LOW(__str_23)
00128A 6E??           02682         MOVWF   r0x01
00128C 50??           02683         MOVF    r0x03, W
00128E 6EE5           02684         MOVWF   POSTDEC1
001290 50??           02685         MOVF    r0x02, W
001292 6EE5           02686         MOVWF   POSTDEC1
001294 50??           02687         MOVF    r0x01, W
001296 6EE5           02688         MOVWF   POSTDEC1
001298 EC?? F0??      02689         CALL    _print_lcd_string
00129C 0E03           02690         MOVLW   0x03
00129E 26E1           02691         ADDWF   FSR1L, F
                      02692 ;       .line   1090; interface.c       print_lcd_string("   ");
0012A0 0E??           02693         MOVLW   UPPER(__str_24)
0012A2 6E??           02694         MOVWF   r0x03
0012A4 0E??           02695         MOVLW   HIGH(__str_24)
0012A6 6E??           02696         MOVWF   r0x02
0012A8 0E??           02697         MOVLW   LOW(__str_24)
0012AA 6E??           02698         MOVWF   r0x01
0012AC 50??           02699         MOVF    r0x03, W
0012AE 6EE5           02700         MOVWF   POSTDEC1
0012B0 50??           02701         MOVF    r0x02, W
0012B2 6EE5           02702         MOVWF   POSTDEC1
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE 52


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0012B4 50??           02703         MOVF    r0x01, W
0012B6 6EE5           02704         MOVWF   POSTDEC1
0012B8 EC?? F0??      02705         CALL    _print_lcd_string
0012BC 0E03           02706         MOVLW   0x03
0012BE 26E1           02707         ADDWF   FSR1L, F
                      02708 ;       .line   1091; interface.c       break;
0012C0 EF?? F0??      02709         GOTO    _01835_DS_
0012C4                02710 _01778_DS_:
                      02711 ;       .line   1093; interface.c       print_lcd_string("3:LED1  4:LED2\n");
0012C4 0E??           02712         MOVLW   UPPER(__str_30)
0012C6 6E??           02713         MOVWF   r0x03
0012C8 0E??           02714         MOVLW   HIGH(__str_30)
0012CA 6E??           02715         MOVWF   r0x02
0012CC 0E??           02716         MOVLW   LOW(__str_30)
0012CE 6E??           02717         MOVWF   r0x01
0012D0 50??           02718         MOVF    r0x03, W
0012D2 6EE5           02719         MOVWF   POSTDEC1
0012D4 50??           02720         MOVF    r0x02, W
0012D6 6EE5           02721         MOVWF   POSTDEC1
0012D8 50??           02722         MOVF    r0x01, W
0012DA 6EE5           02723         MOVWF   POSTDEC1
0012DC EC?? F0??      02724         CALL    _print_lcd_string
0012E0 0E03           02725         MOVLW   0x03
0012E2 26E1           02726         ADDWF   FSR1L, F
                      02727 ;       .line   1094; interface.c       print_lcd_string("5:");
0012E4 0E??           02728         MOVLW   UPPER(__str_10)
0012E6 6E??           02729         MOVWF   r0x03
0012E8 0E??           02730         MOVLW   HIGH(__str_10)
0012EA 6E??           02731         MOVWF   r0x02
0012EC 0E??           02732         MOVLW   LOW(__str_10)
0012EE 6E??           02733         MOVWF   r0x01
0012F0 50??           02734         MOVF    r0x03, W
0012F2 6EE5           02735         MOVWF   POSTDEC1
0012F4 50??           02736         MOVF    r0x02, W
0012F6 6EE5           02737         MOVWF   POSTDEC1
0012F8 50??           02738         MOVF    r0x01, W
0012FA 6EE5           02739         MOVWF   POSTDEC1
0012FC EC?? F0??      02740         CALL    _print_lcd_string
001300 0E03           02741         MOVLW   0x03
001302 26E1           02742         ADDWF   FSR1L, F
                      02743 ;       .line   1095; interface.c       print_lcd_tela();
001304 EC?? F0??      02744         CALL    _print_lcd_tela
                      02745 ;       .line   1096; interface.c       print_lcd_string("     6:");
001308 0E??           02746         MOVLW   UPPER(__str_11)
00130A 6E??           02747         MOVWF   r0x03
00130C 0E??           02748         MOVLW   HIGH(__str_11)
00130E 6E??           02749         MOVWF   r0x02
001310 0E??           02750         MOVLW   LOW(__str_11)
001312 6E??           02751         MOVWF   r0x01
001314 50??           02752         MOVF    r0x03, W
001316 6EE5           02753         MOVWF   POSTDEC1
001318 50??           02754         MOVF    r0x02, W
00131A 6EE5           02755         MOVWF   POSTDEC1
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE 53


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00131C 50??           02756         MOVF    r0x01, W
00131E 6EE5           02757         MOVWF   POSTDEC1
001320 EC?? F0??      02758         CALL    _print_lcd_string
001324 0E03           02759         MOVLW   0x03
001326 26E1           02760         ADDWF   FSR1L, F
                      02761 ;       .line   1097; interface.c       print_lcd_mais();
001328 EC?? F0??      02762         CALL    _print_lcd_mais
                      02763 ;       .line   1098; interface.c       print_lcd_string("     ");
00132C 0E??           02764         MOVLW   UPPER(__str_12)
00132E 6E??           02765         MOVWF   r0x03
001330 0E??           02766         MOVLW   HIGH(__str_12)
001332 6E??           02767         MOVWF   r0x02
001334 0E??           02768         MOVLW   LOW(__str_12)
001336 6E??           02769         MOVWF   r0x01
001338 50??           02770         MOVF    r0x03, W
00133A 6EE5           02771         MOVWF   POSTDEC1
00133C 50??           02772         MOVF    r0x02, W
00133E 6EE5           02773         MOVWF   POSTDEC1
001340 50??           02774         MOVF    r0x01, W
001342 6EE5           02775         MOVWF   POSTDEC1
001344 EC?? F0??      02776         CALL    _print_lcd_string
001348 0E03           02777         MOVLW   0x03
00134A 26E1           02778         ADDWF   FSR1L, F
                      02779 ;       .line   1099; interface.c       break;
00134C EF?? F0??      02780         GOTO    _01835_DS_
001350                02781 _01779_DS_:
                      02782 ;       .line   1101; interface.c       print_lcd_string("3.LED0        \n");
001350 0E??           02783         MOVLW   UPPER(__str_31)
001352 6E??           02784         MOVWF   r0x03
001354 0E??           02785         MOVLW   HIGH(__str_31)
001356 6E??           02786         MOVWF   r0x02
001358 0E??           02787         MOVLW   LOW(__str_31)
00135A 6E??           02788         MOVWF   r0x01
00135C 50??           02789         MOVF    r0x03, W
00135E 6EE5           02790         MOVWF   POSTDEC1
001360 50??           02791         MOVF    r0x02, W
001362 6EE5           02792         MOVWF   POSTDEC1
001364 50??           02793         MOVF    r0x01, W
001366 6EE5           02794         MOVWF   POSTDEC1
001368 EC?? F0??      02795         CALL    _print_lcd_string
00136C 0E03           02796         MOVLW   0x03
00136E 26E1           02797         ADDWF   FSR1L, F
                      02798 ;       .line   1102; interface.c       print_lcd_string("5:");
001370 0E??           02799         MOVLW   UPPER(__str_10)
001372 6E??           02800         MOVWF   r0x03
001374 0E??           02801         MOVLW   HIGH(__str_10)
001376 6E??           02802         MOVWF   r0x02
001378 0E??           02803         MOVLW   LOW(__str_10)
00137A 6E??           02804         MOVWF   r0x01
00137C 50??           02805         MOVF    r0x03, W
00137E 6EE5           02806         MOVWF   POSTDEC1
001380 50??           02807         MOVF    r0x02, W
001382 6EE5           02808         MOVWF   POSTDEC1
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE 54


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

001384 50??           02809         MOVF    r0x01, W
001386 6EE5           02810         MOVWF   POSTDEC1
001388 EC?? F0??      02811         CALL    _print_lcd_string
00138C 0E03           02812         MOVLW   0x03
00138E 26E1           02813         ADDWF   FSR1L, F
                      02814 ;       .line   1103; interface.c       print_lcd_tela();
001390 EC?? F0??      02815         CALL    _print_lcd_tela
                      02816 ;       .line   1104; interface.c       print_lcd_string("     6:");
001394 0E??           02817         MOVLW   UPPER(__str_11)
001396 6E??           02818         MOVWF   r0x03
001398 0E??           02819         MOVLW   HIGH(__str_11)
00139A 6E??           02820         MOVWF   r0x02
00139C 0E??           02821         MOVLW   LOW(__str_11)
00139E 6E??           02822         MOVWF   r0x01
0013A0 50??           02823         MOVF    r0x03, W
0013A2 6EE5           02824         MOVWF   POSTDEC1
0013A4 50??           02825         MOVF    r0x02, W
0013A6 6EE5           02826         MOVWF   POSTDEC1
0013A8 50??           02827         MOVF    r0x01, W
0013AA 6EE5           02828         MOVWF   POSTDEC1
0013AC EC?? F0??      02829         CALL    _print_lcd_string
0013B0 0E03           02830         MOVLW   0x03
0013B2 26E1           02831         ADDWF   FSR1L, F
                      02832 ;       .line   1105; interface.c       print_lcd_menos();
0013B4 EC?? F0??      02833         CALL    _print_lcd_menos
                      02834 ;       .line   1106; interface.c       print_lcd_string("     ");
0013B8 0E??           02835         MOVLW   UPPER(__str_12)
0013BA 6E??           02836         MOVWF   r0x03
0013BC 0E??           02837         MOVLW   HIGH(__str_12)
0013BE 6E??           02838         MOVWF   r0x02
0013C0 0E??           02839         MOVLW   LOW(__str_12)
0013C2 6E??           02840         MOVWF   r0x01
0013C4 50??           02841         MOVF    r0x03, W
0013C6 6EE5           02842         MOVWF   POSTDEC1
0013C8 50??           02843         MOVF    r0x02, W
0013CA 6EE5           02844         MOVWF   POSTDEC1
0013CC 50??           02845         MOVF    r0x01, W
0013CE 6EE5           02846         MOVWF   POSTDEC1
0013D0 EC?? F0??      02847         CALL    _print_lcd_string
0013D4 0E03           02848         MOVLW   0x03
0013D6 26E1           02849         ADDWF   FSR1L, F
                      02850 ;       .line   1107; interface.c       break;
0013D8 EF?? F0??      02851         GOTO    _01835_DS_
0013DC                02852 _01780_DS_:
                      02853 ;       .line   1109; interface.c       print_lcd_string("LIGA/DESLIGA  \n");
0013DC 0E??           02854         MOVLW   UPPER(__str_32)
0013DE 6E??           02855         MOVWF   r0x03
0013E0 0E??           02856         MOVLW   HIGH(__str_32)
0013E2 6E??           02857         MOVWF   r0x02
0013E4 0E??           02858         MOVLW   LOW(__str_32)
0013E6 6E??           02859         MOVWF   r0x01
0013E8 50??           02860         MOVF    r0x03, W
0013EA 6EE5           02861         MOVWF   POSTDEC1
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE 55


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0013EC 50??           02862         MOVF    r0x02, W
0013EE 6EE5           02863         MOVWF   POSTDEC1
0013F0 50??           02864         MOVF    r0x01, W
0013F2 6EE5           02865         MOVWF   POSTDEC1
0013F4 EC?? F0??      02866         CALL    _print_lcd_string
0013F8 0E03           02867         MOVLW   0x03
0013FA 26E1           02868         ADDWF   FSR1L, F
                      02869 ;       .line   1110; interface.c       print_lcd_string("5:+ 3.- 4:");
0013FC 0E??           02870         MOVLW   UPPER(__str_33)
0013FE 6E??           02871         MOVWF   r0x03
001400 0E??           02872         MOVLW   HIGH(__str_33)
001402 6E??           02873         MOVWF   r0x02
001404 0E??           02874         MOVLW   LOW(__str_33)
001406 6E??           02875         MOVWF   r0x01
001408 50??           02876         MOVF    r0x03, W
00140A 6EE5           02877         MOVWF   POSTDEC1
00140C 50??           02878         MOVF    r0x02, W
00140E 6EE5           02879         MOVWF   POSTDEC1
001410 50??           02880         MOVF    r0x01, W
001412 6EE5           02881         MOVWF   POSTDEC1
001414 EC?? F0??      02882         CALL    _print_lcd_string
001418 0E03           02883         MOVLW   0x03
00141A 26E1           02884         ADDWF   FSR1L, F
                      02885 ;       .line   1111; interface.c       print_lcd_tela();
00141C EC?? F0??      02886         CALL    _print_lcd_tela
                      02887 ;       .line   1112; interface.c       print_lcd_string(" 6:");
001420 0E??           02888         MOVLW   UPPER(__str_22)
001422 6E??           02889         MOVWF   r0x03
001424 0E??           02890         MOVLW   HIGH(__str_22)
001426 6E??           02891         MOVWF   r0x02
001428 0E??           02892         MOVLW   LOW(__str_22)
00142A 6E??           02893         MOVWF   r0x01
00142C 50??           02894         MOVF    r0x03, W
00142E 6EE5           02895         MOVWF   POSTDEC1
001430 50??           02896         MOVF    r0x02, W
001432 6EE5           02897         MOVWF   POSTDEC1
001434 50??           02898         MOVF    r0x01, W
001436 6EE5           02899         MOVWF   POSTDEC1
001438 EC?? F0??      02900         CALL    _print_lcd_string
00143C 0E03           02901         MOVLW   0x03
00143E 26E1           02902         ADDWF   FSR1L, F
                      02903 ;       .line   1113; interface.c       print_lcd_menos();
001440 EC?? F0??      02904         CALL    _print_lcd_menos
                      02905 ;       .line   1114; interface.c       print_lcd_string("    ");
001444 0E??           02906         MOVLW   UPPER(__str_16)
001446 6E??           02907         MOVWF   r0x03
001448 0E??           02908         MOVLW   HIGH(__str_16)
00144A 6E??           02909         MOVWF   r0x02
00144C 0E??           02910         MOVLW   LOW(__str_16)
00144E 6E??           02911         MOVWF   r0x01
001450 50??           02912         MOVF    r0x03, W
001452 6EE5           02913         MOVWF   POSTDEC1
001454 50??           02914         MOVF    r0x02, W
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE 56


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

001456 6EE5           02915         MOVWF   POSTDEC1
001458 50??           02916         MOVF    r0x01, W
00145A 6EE5           02917         MOVWF   POSTDEC1
00145C EC?? F0??      02918         CALL    _print_lcd_string
001460 0E03           02919         MOVLW   0x03
001462 26E1           02920         ADDWF   FSR1L, F
                      02921 ;       .line   1115; interface.c       break;
001464 EF?? F0??      02922         GOTO    _01835_DS_
001468                02923 _01782_DS_:
                      02924 ;       .line   1118; interface.c       print_lcd_string("PWM: ");
001468 0E??           02925         MOVLW   UPPER(__str_34)
00146A 6E??           02926         MOVWF   r0x03
00146C 0E??           02927         MOVLW   HIGH(__str_34)
00146E 6E??           02928         MOVWF   r0x02
001470 0E??           02929         MOVLW   LOW(__str_34)
001472 6E??           02930         MOVWF   r0x01
001474 50??           02931         MOVF    r0x03, W
001476 6EE5           02932         MOVWF   POSTDEC1
001478 50??           02933         MOVF    r0x02, W
00147A 6EE5           02934         MOVWF   POSTDEC1
00147C 50??           02935         MOVF    r0x01, W
00147E 6EE5           02936         MOVWF   POSTDEC1
001480 EC?? F0??      02937         CALL    _print_lcd_string
001484 0E03           02938         MOVLW   0x03
001486 26E1           02939         ADDWF   FSR1L, F
                      02940 ;       .line   1119; interface.c       if (slot == MENU_LED_1) {
001488 50??           02941         MOVF    r0x00, W
00148A 0A10           02942         XORLW   0x10
00148C E0??           02943         BZ      _01877_DS_
00148E D???           02944         BRA     _01786_DS_
001490                02945 _01877_DS_:
                      02946 ;       .line   1120; interface.c       s_pwm[2] = (pwm_1 % 10) + 0x30;
001490 0E0A           02947         MOVLW   0x0a
001492 6EE5           02948         MOVWF   POSTDEC1
001494 C??? F???      02949         MOVFF   _pwm_1, POSTDEC1
001498 EC?? F0??      02950         CALL    __moduchar
00149C 6E??           02951         MOVWF   r0x01
00149E 50E4           02952         MOVF    PREINC1, W
0014A0 50E4           02953         MOVF    PREINC1, W
0014A2 0E30           02954         MOVLW   0x30
0014A4 26??           02955         ADDWF   r0x01, F
0014A6 50??           02956         MOVF    r0x01, W
0014A8 ????           02957         BANKSEL (_print_tela_s_pwm_1_227 + 2)
0014AA 6F??           02958         MOVWF   (_print_tela_s_pwm_1_227 + 2), B
                      02959 ;       .line   1121; interface.c       s_pwm[1] = ((pwm_1 / 10) % 10) + 0x30;
0014AC 0E0A           02960         MOVLW   0x0a
0014AE 6EE5           02961         MOVWF   POSTDEC1
0014B0 C??? F???      02962         MOVFF   _pwm_1, POSTDEC1
0014B4 EC?? F0??      02963         CALL    __divuchar
0014B8 6E??           02964         MOVWF   r0x01
0014BA 50E4           02965         MOVF    PREINC1, W
0014BC 50E4           02966         MOVF    PREINC1, W
0014BE 0E0A           02967         MOVLW   0x0a
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE 57


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0014C0 6EE5           02968         MOVWF   POSTDEC1
0014C2 C??? F???      02969         MOVFF   r0x01, POSTDEC1
0014C6 EC?? F0??      02970         CALL    __moduchar
0014CA 6E??           02971         MOVWF   r0x01
0014CC 50E4           02972         MOVF    PREINC1, W
0014CE 50E4           02973         MOVF    PREINC1, W
0014D0 0E30           02974         MOVLW   0x30
0014D2 26??           02975         ADDWF   r0x01, F
0014D4 50??           02976         MOVF    r0x01, W
0014D6 ????           02977         BANKSEL (_print_tela_s_pwm_1_227 + 1)
0014D8 6F??           02978         MOVWF   (_print_tela_s_pwm_1_227 + 1), B
                      02979 ;       .line   1122; interface.c       s_pwm[0] = ((pwm_1 / 100) % 10) + 0x30;
0014DA 0E64           02980         MOVLW   0x64
0014DC 6EE5           02981         MOVWF   POSTDEC1
0014DE C??? F???      02982         MOVFF   _pwm_1, POSTDEC1
0014E2 EC?? F0??      02983         CALL    __divuchar
0014E6 6E??           02984         MOVWF   r0x01
0014E8 50E4           02985         MOVF    PREINC1, W
0014EA 50E4           02986         MOVF    PREINC1, W
0014EC 0E0A           02987         MOVLW   0x0a
0014EE 6EE5           02988         MOVWF   POSTDEC1
0014F0 C??? F???      02989         MOVFF   r0x01, POSTDEC1
0014F4 EC?? F0??      02990         CALL    __moduchar
0014F8 6E??           02991         MOVWF   r0x01
0014FA 50E4           02992         MOVF    PREINC1, W
0014FC 50E4           02993         MOVF    PREINC1, W
0014FE 0E30           02994         MOVLW   0x30
001500 26??           02995         ADDWF   r0x01, F
001502 50??           02996         MOVF    r0x01, W
001504 ????           02997         BANKSEL _print_tela_s_pwm_1_227
001506 6F??           02998         MOVWF   _print_tela_s_pwm_1_227, B
001508 D???           02999         BRA     _01787_DS_
00150A                03000 _01786_DS_:
                      03001 ;       .line   1123; interface.c       } else if (slot == MENU_LED_2) {
00150A 50??           03002         MOVF    r0x00, W
00150C 0A11           03003         XORLW   0x11
00150E E0??           03004         BZ      _01879_DS_
001510 D???           03005         BRA     _01787_DS_
001512                03006 _01879_DS_:
                      03007 ;       .line   1124; interface.c       s_pwm[2] = (pwm_2 % 10) + 0x30;
001512 0E0A           03008         MOVLW   0x0a
001514 6EE5           03009         MOVWF   POSTDEC1
001516 C??? F???      03010         MOVFF   _pwm_2, POSTDEC1
00151A EC?? F0??      03011         CALL    __moduchar
00151E 6E??           03012         MOVWF   r0x01
001520 50E4           03013         MOVF    PREINC1, W
001522 50E4           03014         MOVF    PREINC1, W
001524 0E30           03015         MOVLW   0x30
001526 26??           03016         ADDWF   r0x01, F
001528 50??           03017         MOVF    r0x01, W
00152A ????           03018         BANKSEL (_print_tela_s_pwm_1_227 + 2)
00152C 6F??           03019         MOVWF   (_print_tela_s_pwm_1_227 + 2), B
                      03020 ;       .line   1125; interface.c       s_pwm[1] = ((pwm_2 / 10) % 10) + 0x30;
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE 58


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00152E 0E0A           03021         MOVLW   0x0a
001530 6EE5           03022         MOVWF   POSTDEC1
001532 C??? F???      03023         MOVFF   _pwm_2, POSTDEC1
001536 EC?? F0??      03024         CALL    __divuchar
00153A 6E??           03025         MOVWF   r0x01
00153C 50E4           03026         MOVF    PREINC1, W
00153E 50E4           03027         MOVF    PREINC1, W
001540 0E0A           03028         MOVLW   0x0a
001542 6EE5           03029         MOVWF   POSTDEC1
001544 C??? F???      03030         MOVFF   r0x01, POSTDEC1
001548 EC?? F0??      03031         CALL    __moduchar
00154C 6E??           03032         MOVWF   r0x01
00154E 50E4           03033         MOVF    PREINC1, W
001550 50E4           03034         MOVF    PREINC1, W
001552 0E30           03035         MOVLW   0x30
001554 26??           03036         ADDWF   r0x01, F
001556 50??           03037         MOVF    r0x01, W
001558 ????           03038         BANKSEL (_print_tela_s_pwm_1_227 + 1)
00155A 6F??           03039         MOVWF   (_print_tela_s_pwm_1_227 + 1), B
                      03040 ;       .line   1126; interface.c       s_pwm[0] = ((pwm_2 / 100) % 10) + 0x30;
00155C 0E64           03041         MOVLW   0x64
00155E 6EE5           03042         MOVWF   POSTDEC1
001560 C??? F???      03043         MOVFF   _pwm_2, POSTDEC1
001564 EC?? F0??      03044         CALL    __divuchar
001568 6E??           03045         MOVWF   r0x01
00156A 50E4           03046         MOVF    PREINC1, W
00156C 50E4           03047         MOVF    PREINC1, W
00156E 0E0A           03048         MOVLW   0x0a
001570 6EE5           03049         MOVWF   POSTDEC1
001572 C??? F???      03050         MOVFF   r0x01, POSTDEC1
001576 EC?? F0??      03051         CALL    __moduchar
00157A 6E??           03052         MOVWF   r0x01
00157C 50E4           03053         MOVF    PREINC1, W
00157E 50E4           03054         MOVF    PREINC1, W
001580 0E30           03055         MOVLW   0x30
001582 26??           03056         ADDWF   r0x01, F
001584 50??           03057         MOVF    r0x01, W
001586 ????           03058         BANKSEL _print_tela_s_pwm_1_227
001588 6F??           03059         MOVWF   _print_tela_s_pwm_1_227, B
00158A                03060 _01787_DS_:
                      03061 ;       .line   1128; interface.c       print_lcd_string(s_pwm);
00158A 0E??           03062         MOVLW   HIGH(_print_tela_s_pwm_1_227)
00158C 6E??           03063         MOVWF   r0x02
00158E 0E??           03064         MOVLW   LOW(_print_tela_s_pwm_1_227)
001590 6E??           03065         MOVWF   r0x01
001592 0E80           03066         MOVLW   0x80
001594 6E??           03067         MOVWF   r0x03
001596 50??           03068         MOVF    r0x03, W
001598 6EE5           03069         MOVWF   POSTDEC1
00159A 50??           03070         MOVF    r0x02, W
00159C 6EE5           03071         MOVWF   POSTDEC1
00159E 50??           03072         MOVF    r0x01, W
0015A0 6EE5           03073         MOVWF   POSTDEC1
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE 59


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0015A2 EC?? F0??      03074         CALL    _print_lcd_string
0015A6 0E03           03075         MOVLW   0x03
0015A8 26E1           03076         ADDWF   FSR1L, F
                      03077 ;       .line   1129; interface.c       print_lcd_string("       \n");
0015AA 0E??           03078         MOVLW   UPPER(__str_35)
0015AC 6E??           03079         MOVWF   r0x03
0015AE 0E??           03080         MOVLW   HIGH(__str_35)
0015B0 6E??           03081         MOVWF   r0x02
0015B2 0E??           03082         MOVLW   LOW(__str_35)
0015B4 6E??           03083         MOVWF   r0x01
0015B6 50??           03084         MOVF    r0x03, W
0015B8 6EE5           03085         MOVWF   POSTDEC1
0015BA 50??           03086         MOVF    r0x02, W
0015BC 6EE5           03087         MOVWF   POSTDEC1
0015BE 50??           03088         MOVF    r0x01, W
0015C0 6EE5           03089         MOVWF   POSTDEC1
0015C2 EC?? F0??      03090         CALL    _print_lcd_string
0015C6 0E03           03091         MOVLW   0x03
0015C8 26E1           03092         ADDWF   FSR1L, F
                      03093 ;       .line   1130; interface.c       print_lcd_string("5:+ 3.- 4:");
0015CA 0E??           03094         MOVLW   UPPER(__str_33)
0015CC 6E??           03095         MOVWF   r0x03
0015CE 0E??           03096         MOVLW   HIGH(__str_33)
0015D0 6E??           03097         MOVWF   r0x02
0015D2 0E??           03098         MOVLW   LOW(__str_33)
0015D4 6E??           03099         MOVWF   r0x01
0015D6 50??           03100         MOVF    r0x03, W
0015D8 6EE5           03101         MOVWF   POSTDEC1
0015DA 50??           03102         MOVF    r0x02, W
0015DC 6EE5           03103         MOVWF   POSTDEC1
0015DE 50??           03104         MOVF    r0x01, W
0015E0 6EE5           03105         MOVWF   POSTDEC1
0015E2 EC?? F0??      03106         CALL    _print_lcd_string
0015E6 0E03           03107         MOVLW   0x03
0015E8 26E1           03108         ADDWF   FSR1L, F
                      03109 ;       .line   1131; interface.c       print_lcd_tela();
0015EA EC?? F0??      03110         CALL    _print_lcd_tela
                      03111 ;       .line   1132; interface.c       print_lcd_string(" 6:");
0015EE 0E??           03112         MOVLW   UPPER(__str_22)
0015F0 6E??           03113         MOVWF   r0x03
0015F2 0E??           03114         MOVLW   HIGH(__str_22)
0015F4 6E??           03115         MOVWF   r0x02
0015F6 0E??           03116         MOVLW   LOW(__str_22)
0015F8 6E??           03117         MOVWF   r0x01
0015FA 50??           03118         MOVF    r0x03, W
0015FC 6EE5           03119         MOVWF   POSTDEC1
0015FE 50??           03120         MOVF    r0x02, W
001600 6EE5           03121         MOVWF   POSTDEC1
001602 50??           03122         MOVF    r0x01, W
001604 6EE5           03123         MOVWF   POSTDEC1
001606 EC?? F0??      03124         CALL    _print_lcd_string
00160A 0E03           03125         MOVLW   0x03
00160C 26E1           03126         ADDWF   FSR1L, F
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE 60


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      03127 ;       .line   1133; interface.c       print_lcd_menos();
00160E EC?? F0??      03128         CALL    _print_lcd_menos
                      03129 ;       .line   1134; interface.c       print_lcd_string("    ");
001612 0E??           03130         MOVLW   UPPER(__str_16)
001614 6E??           03131         MOVWF   r0x03
001616 0E??           03132         MOVLW   HIGH(__str_16)
001618 6E??           03133         MOVWF   r0x02
00161A 0E??           03134         MOVLW   LOW(__str_16)
00161C 6E??           03135         MOVWF   r0x01
00161E 50??           03136         MOVF    r0x03, W
001620 6EE5           03137         MOVWF   POSTDEC1
001622 50??           03138         MOVF    r0x02, W
001624 6EE5           03139         MOVWF   POSTDEC1
001626 50??           03140         MOVF    r0x01, W
001628 6EE5           03141         MOVWF   POSTDEC1
00162A EC?? F0??      03142         CALL    _print_lcd_string
00162E 0E03           03143         MOVLW   0x03
001630 26E1           03144         ADDWF   FSR1L, F
                      03145 ;       .line   1135; interface.c       break;
001632 EF?? F0??      03146         GOTO    _01835_DS_
001636                03147 _01791_DS_:
                      03148 ;       .line   1140; interface.c       if (slot == MENU_PORTAS_1_2)
001636 50??           03149         MOVF    r0x00, W
001638 0A12           03150         XORLW   0x12
00163A E1??           03151         BNZ     _01801_DS_
                      03152 ;       .line   1141; interface.c       print_lcd_string("3:PE1   4:PE2   ");
00163C 0E??           03153         MOVLW   UPPER(__str_36)
00163E 6E??           03154         MOVWF   r0x03
001640 0E??           03155         MOVLW   HIGH(__str_36)
001642 6E??           03156         MOVWF   r0x02
001644 0E??           03157         MOVLW   LOW(__str_36)
001646 6E??           03158         MOVWF   r0x01
001648 50??           03159         MOVF    r0x03, W
00164A 6EE5           03160         MOVWF   POSTDEC1
00164C 50??           03161         MOVF    r0x02, W
00164E 6EE5           03162         MOVWF   POSTDEC1
001650 50??           03163         MOVF    r0x01, W
001652 6EE5           03164         MOVWF   POSTDEC1
001654 EC?? F0??      03165         CALL    _print_lcd_string
001658 0E03           03166         MOVLW   0x03
00165A 26E1           03167         ADDWF   FSR1L, F
00165C D???           03168         BRA     _01802_DS_
00165E                03169 _01801_DS_:
                      03170 ;       .line   1142; interface.c       else if (slot == MENU_PORTAS_3_4)
00165E 50??           03171         MOVF    r0x00, W
001660 0A13           03172         XORLW   0x13
001662 E1??           03173         BNZ     _01798_DS_
                      03174 ;       .line   1143; interface.c       print_lcd_string("3:PE3   4:PE4   ");
001664 0E??           03175         MOVLW   UPPER(__str_37)
001666 6E??           03176         MOVWF   r0x03
001668 0E??           03177         MOVLW   HIGH(__str_37)
00166A 6E??           03178         MOVWF   r0x02
00166C 0E??           03179         MOVLW   LOW(__str_37)
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE 61


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00166E 6E??           03180         MOVWF   r0x01
001670 50??           03181         MOVF    r0x03, W
001672 6EE5           03182         MOVWF   POSTDEC1
001674 50??           03183         MOVF    r0x02, W
001676 6EE5           03184         MOVWF   POSTDEC1
001678 50??           03185         MOVF    r0x01, W
00167A 6EE5           03186         MOVWF   POSTDEC1
00167C EC?? F0??      03187         CALL    _print_lcd_string
001680 0E03           03188         MOVLW   0x03
001682 26E1           03189         ADDWF   FSR1L, F
001684 D???           03190         BRA     _01802_DS_
001686                03191 _01798_DS_:
                      03192 ;       .line   1144; interface.c       else if (slot == MENU_PORTAS_5_6)
001686 50??           03193         MOVF    r0x00, W
001688 0A14           03194         XORLW   0x14
00168A E1??           03195         BNZ     _01795_DS_
                      03196 ;       .line   1145; interface.c       print_lcd_string("3:PE5   4:PE6   ");
00168C 0E??           03197         MOVLW   UPPER(__str_38)
00168E 6E??           03198         MOVWF   r0x03
001690 0E??           03199         MOVLW   HIGH(__str_38)
001692 6E??           03200         MOVWF   r0x02
001694 0E??           03201         MOVLW   LOW(__str_38)
001696 6E??           03202         MOVWF   r0x01
001698 50??           03203         MOVF    r0x03, W
00169A 6EE5           03204         MOVWF   POSTDEC1
00169C 50??           03205         MOVF    r0x02, W
00169E 6EE5           03206         MOVWF   POSTDEC1
0016A0 50??           03207         MOVF    r0x01, W
0016A2 6EE5           03208         MOVWF   POSTDEC1
0016A4 EC?? F0??      03209         CALL    _print_lcd_string
0016A8 0E03           03210         MOVLW   0x03
0016AA 26E1           03211         ADDWF   FSR1L, F
0016AC D???           03212         BRA     _01802_DS_
0016AE                03213 _01795_DS_:
                      03214 ;       .line   1146; interface.c       else if (slot == MENU_PORTAS_7_8)
0016AE 50??           03215         MOVF    r0x00, W
0016B0 0A15           03216         XORLW   0x15
0016B2 E1??           03217         BNZ     _01802_DS_
                      03218 ;       .line   1147; interface.c       print_lcd_string("3:PE7   4:PE8   ");
0016B4 0E??           03219         MOVLW   UPPER(__str_39)
0016B6 6E??           03220         MOVWF   r0x02
0016B8 0E??           03221         MOVLW   HIGH(__str_39)
0016BA 6E??           03222         MOVWF   r0x01
0016BC 0E??           03223         MOVLW   LOW(__str_39)
0016BE 6E??           03224         MOVWF   r0x00
0016C0 50??           03225         MOVF    r0x02, W
0016C2 6EE5           03226         MOVWF   POSTDEC1
0016C4 50??           03227         MOVF    r0x01, W
0016C6 6EE5           03228         MOVWF   POSTDEC1
0016C8 50??           03229         MOVF    r0x00, W
0016CA 6EE5           03230         MOVWF   POSTDEC1
0016CC EC?? F0??      03231         CALL    _print_lcd_string
0016D0 0E03           03232         MOVLW   0x03
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE 62


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0016D2 26E1           03233         ADDWF   FSR1L, F
0016D4                03234 _01802_DS_:
                      03235 ;       .line   1148; interface.c       print_lcd_string("\n");
0016D4 0E??           03236         MOVLW   UPPER(__str_4)
0016D6 6E??           03237         MOVWF   r0x02
0016D8 0E??           03238         MOVLW   HIGH(__str_4)
0016DA 6E??           03239         MOVWF   r0x01
0016DC 0E??           03240         MOVLW   LOW(__str_4)
0016DE 6E??           03241         MOVWF   r0x00
0016E0 50??           03242         MOVF    r0x02, W
0016E2 6EE5           03243         MOVWF   POSTDEC1
0016E4 50??           03244         MOVF    r0x01, W
0016E6 6EE5           03245         MOVWF   POSTDEC1
0016E8 50??           03246         MOVF    r0x00, W
0016EA 6EE5           03247         MOVWF   POSTDEC1
0016EC EC?? F0??      03248         CALL    _print_lcd_string
0016F0 0E03           03249         MOVLW   0x03
0016F2 26E1           03250         ADDWF   FSR1L, F
                      03251 ;       .line   1149; interface.c       print_lcd_string("5:");
0016F4 0E??           03252         MOVLW   UPPER(__str_10)
0016F6 6E??           03253         MOVWF   r0x02
0016F8 0E??           03254         MOVLW   HIGH(__str_10)
0016FA 6E??           03255         MOVWF   r0x01
0016FC 0E??           03256         MOVLW   LOW(__str_10)
0016FE 6E??           03257         MOVWF   r0x00
001700 50??           03258         MOVF    r0x02, W
001702 6EE5           03259         MOVWF   POSTDEC1
001704 50??           03260         MOVF    r0x01, W
001706 6EE5           03261         MOVWF   POSTDEC1
001708 50??           03262         MOVF    r0x00, W
00170A 6EE5           03263         MOVWF   POSTDEC1
00170C EC?? F0??      03264         CALL    _print_lcd_string
001710 0E03           03265         MOVLW   0x03
001712 26E1           03266         ADDWF   FSR1L, F
                      03267 ;       .line   1150; interface.c       print_lcd_menos();
001714 EC?? F0??      03268         CALL    _print_lcd_menos
                      03269 ;       .line   1151; interface.c       print_lcd_string("     6:");
001718 0E??           03270         MOVLW   UPPER(__str_11)
00171A 6E??           03271         MOVWF   r0x02
00171C 0E??           03272         MOVLW   HIGH(__str_11)
00171E 6E??           03273         MOVWF   r0x01
001720 0E??           03274         MOVLW   LOW(__str_11)
001722 6E??           03275         MOVWF   r0x00
001724 50??           03276         MOVF    r0x02, W
001726 6EE5           03277         MOVWF   POSTDEC1
001728 50??           03278         MOVF    r0x01, W
00172A 6EE5           03279         MOVWF   POSTDEC1
00172C 50??           03280         MOVF    r0x00, W
00172E 6EE5           03281         MOVWF   POSTDEC1
001730 EC?? F0??      03282         CALL    _print_lcd_string
001734 0E03           03283         MOVLW   0x03
001736 26E1           03284         ADDWF   FSR1L, F
                      03285 ;       .line   1152; interface.c       print_lcd_mais();
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE 63


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

001738 EC?? F0??      03286         CALL    _print_lcd_mais
                      03287 ;       .line   1153; interface.c       break;
00173C EF?? F0??      03288         GOTO    _01835_DS_
001740                03289 _01808_DS_:
001740                03290 _01809_DS_:
001740                03291 _01810_DS_:
                      03292 ;       .line   1162; interface.c       print_lcd_string("3:SAIDA 4:ENTRDA");
001740 0E??           03293         MOVLW   UPPER(__str_40)
001742 6E??           03294         MOVWF   r0x02
001744 0E??           03295         MOVLW   HIGH(__str_40)
001746 6E??           03296         MOVWF   r0x01
001748 0E??           03297         MOVLW   LOW(__str_40)
00174A 6E??           03298         MOVWF   r0x00
00174C 50??           03299         MOVF    r0x02, W
00174E 6EE5           03300         MOVWF   POSTDEC1
001750 50??           03301         MOVF    r0x01, W
001752 6EE5           03302         MOVWF   POSTDEC1
001754 50??           03303         MOVF    r0x00, W
001756 6EE5           03304         MOVWF   POSTDEC1
001758 EC?? F0??      03305         CALL    _print_lcd_string
00175C 0E03           03306         MOVLW   0x03
00175E 26E1           03307         ADDWF   FSR1L, F
                      03308 ;       .line   1163; interface.c       print_lcd_string("\n");
001760 0E??           03309         MOVLW   UPPER(__str_4)
001762 6E??           03310         MOVWF   r0x02
001764 0E??           03311         MOVLW   HIGH(__str_4)
001766 6E??           03312         MOVWF   r0x01
001768 0E??           03313         MOVLW   LOW(__str_4)
00176A 6E??           03314         MOVWF   r0x00
00176C 50??           03315         MOVF    r0x02, W
00176E 6EE5           03316         MOVWF   POSTDEC1
001770 50??           03317         MOVF    r0x01, W
001772 6EE5           03318         MOVWF   POSTDEC1
001774 50??           03319         MOVF    r0x00, W
001776 6EE5           03320         MOVWF   POSTDEC1
001778 EC?? F0??      03321         CALL    _print_lcd_string
00177C 0E03           03322         MOVLW   0x03
00177E 26E1           03323         ADDWF   FSR1L, F
                      03324 ;       .line   1164; interface.c       print_lcd_string("5:");
001780 0E??           03325         MOVLW   UPPER(__str_10)
001782 6E??           03326         MOVWF   r0x02
001784 0E??           03327         MOVLW   HIGH(__str_10)
001786 6E??           03328         MOVWF   r0x01
001788 0E??           03329         MOVLW   LOW(__str_10)
00178A 6E??           03330         MOVWF   r0x00
00178C 50??           03331         MOVF    r0x02, W
00178E 6EE5           03332         MOVWF   POSTDEC1
001790 50??           03333         MOVF    r0x01, W
001792 6EE5           03334         MOVWF   POSTDEC1
001794 50??           03335         MOVF    r0x00, W
001796 6EE5           03336         MOVWF   POSTDEC1
001798 EC?? F0??      03337         CALL    _print_lcd_string
00179C 0E03           03338         MOVLW   0x03
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE 64


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00179E 26E1           03339         ADDWF   FSR1L, F
                      03340 ;       .line   1165; interface.c       print_lcd_tela();
0017A0 EC?? F0??      03341         CALL    _print_lcd_tela
                      03342 ;       .line   1166; interface.c       print_lcd_string("     6:");
0017A4 0E??           03343         MOVLW   UPPER(__str_11)
0017A6 6E??           03344         MOVWF   r0x02
0017A8 0E??           03345         MOVLW   HIGH(__str_11)
0017AA 6E??           03346         MOVWF   r0x01
0017AC 0E??           03347         MOVLW   LOW(__str_11)
0017AE 6E??           03348         MOVWF   r0x00
0017B0 50??           03349         MOVF    r0x02, W
0017B2 6EE5           03350         MOVWF   POSTDEC1
0017B4 50??           03351         MOVF    r0x01, W
0017B6 6EE5           03352         MOVWF   POSTDEC1
0017B8 50??           03353         MOVF    r0x00, W
0017BA 6EE5           03354         MOVWF   POSTDEC1
0017BC EC?? F0??      03355         CALL    _print_lcd_string
0017C0 0E03           03356         MOVLW   0x03
0017C2 26E1           03357         ADDWF   FSR1L, F
                      03358 ;       .line   1167; interface.c       print_lcd_menos();
0017C4 EC?? F0??      03359         CALL    _print_lcd_menos
                      03360 ;       .line   1168; interface.c       break;
0017C8 EF?? F0??      03361         GOTO    _01835_DS_
0017CC                03362 _01816_DS_:
0017CC                03363 _01817_DS_:
0017CC                03364 _01818_DS_:
                      03365 ;       .line   1177; interface.c       print_lcd_string("3:ON 4:OFF 5:FLP");
0017CC 0E??           03366         MOVLW   UPPER(__str_41)
0017CE 6E??           03367         MOVWF   r0x02
0017D0 0E??           03368         MOVLW   HIGH(__str_41)
0017D2 6E??           03369         MOVWF   r0x01
0017D4 0E??           03370         MOVLW   LOW(__str_41)
0017D6 6E??           03371         MOVWF   r0x00
0017D8 50??           03372         MOVF    r0x02, W
0017DA 6EE5           03373         MOVWF   POSTDEC1
0017DC 50??           03374         MOVF    r0x01, W
0017DE 6EE5           03375         MOVWF   POSTDEC1
0017E0 50??           03376         MOVF    r0x00, W
0017E2 6EE5           03377         MOVWF   POSTDEC1
0017E4 EC?? F0??      03378         CALL    _print_lcd_string
0017E8 0E03           03379         MOVLW   0x03
0017EA 26E1           03380         ADDWF   FSR1L, F
                      03381 ;       .line   1178; interface.c       print_lcd_string("\n");
0017EC 0E??           03382         MOVLW   UPPER(__str_4)
0017EE 6E??           03383         MOVWF   r0x02
0017F0 0E??           03384         MOVLW   HIGH(__str_4)
0017F2 6E??           03385         MOVWF   r0x01
0017F4 0E??           03386         MOVLW   LOW(__str_4)
0017F6 6E??           03387         MOVWF   r0x00
0017F8 50??           03388         MOVF    r0x02, W
0017FA 6EE5           03389         MOVWF   POSTDEC1
0017FC 50??           03390         MOVF    r0x01, W
0017FE 6EE5           03391         MOVWF   POSTDEC1
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE 65


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

001800 50??           03392         MOVF    r0x00, W
001802 6EE5           03393         MOVWF   POSTDEC1
001804 EC?? F0??      03394         CALL    _print_lcd_string
001808 0E03           03395         MOVLW   0x03
00180A 26E1           03396         ADDWF   FSR1L, F
                      03397 ;       .line   1179; interface.c       print_lcd_string("5:");
00180C 0E??           03398         MOVLW   UPPER(__str_10)
00180E 6E??           03399         MOVWF   r0x02
001810 0E??           03400         MOVLW   HIGH(__str_10)
001812 6E??           03401         MOVWF   r0x01
001814 0E??           03402         MOVLW   LOW(__str_10)
001816 6E??           03403         MOVWF   r0x00
001818 50??           03404         MOVF    r0x02, W
00181A 6EE5           03405         MOVWF   POSTDEC1
00181C 50??           03406         MOVF    r0x01, W
00181E 6EE5           03407         MOVWF   POSTDEC1
001820 50??           03408         MOVF    r0x00, W
001822 6EE5           03409         MOVWF   POSTDEC1
001824 EC?? F0??      03410         CALL    _print_lcd_string
001828 0E03           03411         MOVLW   0x03
00182A 26E1           03412         ADDWF   FSR1L, F
                      03413 ;       .line   1180; interface.c       print_lcd_menos();
00182C EC?? F0??      03414         CALL    _print_lcd_menos
                      03415 ;       .line   1181; interface.c       print_lcd_string("             ");
001830 0E??           03416         MOVLW   UPPER(__str_42)
001832 6E??           03417         MOVWF   r0x02
001834 0E??           03418         MOVLW   HIGH(__str_42)
001836 6E??           03419         MOVWF   r0x01
001838 0E??           03420         MOVLW   LOW(__str_42)
00183A 6E??           03421         MOVWF   r0x00
00183C 50??           03422         MOVF    r0x02, W
00183E 6EE5           03423         MOVWF   POSTDEC1
001840 50??           03424         MOVF    r0x01, W
001842 6EE5           03425         MOVWF   POSTDEC1
001844 50??           03426         MOVF    r0x00, W
001846 6EE5           03427         MOVWF   POSTDEC1
001848 EC?? F0??      03428         CALL    _print_lcd_string
00184C 0E03           03429         MOVLW   0x03
00184E 26E1           03430         ADDWF   FSR1L, F
                      03431 ;       .line   1182; interface.c       break;
001850 EF?? F0??      03432         GOTO    _01835_DS_
001854                03433 _01819_DS_:
                      03434 ;       .line   1184; interface.c       print_lcd_string("TESTE DO LCD   ");
001854 0E??           03435         MOVLW   UPPER(__str_43)
001856 6E??           03436         MOVWF   r0x02
001858 0E??           03437         MOVLW   HIGH(__str_43)
00185A 6E??           03438         MOVWF   r0x01
00185C 0E??           03439         MOVLW   LOW(__str_43)
00185E 6E??           03440         MOVWF   r0x00
001860 50??           03441         MOVF    r0x02, W
001862 6EE5           03442         MOVWF   POSTDEC1
001864 50??           03443         MOVF    r0x01, W
001866 6EE5           03444         MOVWF   POSTDEC1
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE 66


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

001868 50??           03445         MOVF    r0x00, W
00186A 6EE5           03446         MOVWF   POSTDEC1
00186C EC?? F0??      03447         CALL    _print_lcd_string
001870 0E03           03448         MOVLW   0x03
001872 26E1           03449         ADDWF   FSR1L, F
                      03450 ;       .line   1185; interface.c       print_lcd_ln();
001874 EC?? F0??      03451         CALL    _print_lcd_ln
                      03452 ;       .line   1186; interface.c       print_lcd_string("5:OK    6:");
001878 0E??           03453         MOVLW   UPPER(__str_44)
00187A 6E??           03454         MOVWF   r0x02
00187C 0E??           03455         MOVLW   HIGH(__str_44)
00187E 6E??           03456         MOVWF   r0x01
001880 0E??           03457         MOVLW   LOW(__str_44)
001882 6E??           03458         MOVWF   r0x00
001884 50??           03459         MOVF    r0x02, W
001886 6EE5           03460         MOVWF   POSTDEC1
001888 50??           03461         MOVF    r0x01, W
00188A 6EE5           03462         MOVWF   POSTDEC1
00188C 50??           03463         MOVF    r0x00, W
00188E 6EE5           03464         MOVWF   POSTDEC1
001890 EC?? F0??      03465         CALL    _print_lcd_string
001894 0E03           03466         MOVLW   0x03
001896 26E1           03467         ADDWF   FSR1L, F
                      03468 ;       .line   1187; interface.c       print_lcd_tela();
001898 EC?? F0??      03469         CALL    _print_lcd_tela
                      03470 ;       .line   1188; interface.c       break;
00189C EF?? F0??      03471         GOTO    _01835_DS_
0018A0                03472 _01820_DS_:
                      03473 ;       .line   1190; interface.c       print_lcd_string("TESTE DO TECLADO");
0018A0 0E??           03474         MOVLW   UPPER(__str_45)
0018A2 6E??           03475         MOVWF   r0x02
0018A4 0E??           03476         MOVLW   HIGH(__str_45)
0018A6 6E??           03477         MOVWF   r0x01
0018A8 0E??           03478         MOVLW   LOW(__str_45)
0018AA 6E??           03479         MOVWF   r0x00
0018AC 50??           03480         MOVF    r0x02, W
0018AE 6EE5           03481         MOVWF   POSTDEC1
0018B0 50??           03482         MOVF    r0x01, W
0018B2 6EE5           03483         MOVWF   POSTDEC1
0018B4 50??           03484         MOVF    r0x00, W
0018B6 6EE5           03485         MOVWF   POSTDEC1
0018B8 EC?? F0??      03486         CALL    _print_lcd_string
0018BC 0E03           03487         MOVLW   0x03
0018BE 26E1           03488         ADDWF   FSR1L, F
                      03489 ;       .line   1191; interface.c       print_lcd_ln();
0018C0 EC?? F0??      03490         CALL    _print_lcd_ln
                      03491 ;       .line   1192; interface.c       print_lcd_string("OK:3            ");
0018C4 0E??           03492         MOVLW   UPPER(__str_46)
0018C6 6E??           03493         MOVWF   r0x02
0018C8 0E??           03494         MOVLW   HIGH(__str_46)
0018CA 6E??           03495         MOVWF   r0x01
0018CC 0E??           03496         MOVLW   LOW(__str_46)
0018CE 6E??           03497         MOVWF   r0x00
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE 67


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0018D0 50??           03498         MOVF    r0x02, W
0018D2 6EE5           03499         MOVWF   POSTDEC1
0018D4 50??           03500         MOVF    r0x01, W
0018D6 6EE5           03501         MOVWF   POSTDEC1
0018D8 50??           03502         MOVF    r0x00, W
0018DA 6EE5           03503         MOVWF   POSTDEC1
0018DC EC?? F0??      03504         CALL    _print_lcd_string
0018E0 0E03           03505         MOVLW   0x03
0018E2 26E1           03506         ADDWF   FSR1L, F
                      03507 ;       .line   1193; interface.c       break;
0018E4 EF?? F0??      03508         GOTO    _01835_DS_
0018E8                03509 _01821_DS_:
                      03510 ;       .line   1195; interface.c       print_lcd_string("TESTE DO TECLADO");
0018E8 0E??           03511         MOVLW   UPPER(__str_45)
0018EA 6E??           03512         MOVWF   r0x02
0018EC 0E??           03513         MOVLW   HIGH(__str_45)
0018EE 6E??           03514         MOVWF   r0x01
0018F0 0E??           03515         MOVLW   LOW(__str_45)
0018F2 6E??           03516         MOVWF   r0x00
0018F4 50??           03517         MOVF    r0x02, W
0018F6 6EE5           03518         MOVWF   POSTDEC1
0018F8 50??           03519         MOVF    r0x01, W
0018FA 6EE5           03520         MOVWF   POSTDEC1
0018FC 50??           03521         MOVF    r0x00, W
0018FE 6EE5           03522         MOVWF   POSTDEC1
001900 EC?? F0??      03523         CALL    _print_lcd_string
001904 0E03           03524         MOVLW   0x03
001906 26E1           03525         ADDWF   FSR1L, F
                      03526 ;       .line   1196; interface.c       print_lcd_ln();
001908 EC?? F0??      03527         CALL    _print_lcd_ln
                      03528 ;       .line   1197; interface.c       print_lcd_string("OK:4            ");
00190C 0E??           03529         MOVLW   UPPER(__str_47)
00190E 6E??           03530         MOVWF   r0x02
001910 0E??           03531         MOVLW   HIGH(__str_47)
001912 6E??           03532         MOVWF   r0x01
001914 0E??           03533         MOVLW   LOW(__str_47)
001916 6E??           03534         MOVWF   r0x00
001918 50??           03535         MOVF    r0x02, W
00191A 6EE5           03536         MOVWF   POSTDEC1
00191C 50??           03537         MOVF    r0x01, W
00191E 6EE5           03538         MOVWF   POSTDEC1
001920 50??           03539         MOVF    r0x00, W
001922 6EE5           03540         MOVWF   POSTDEC1
001924 EC?? F0??      03541         CALL    _print_lcd_string
001928 0E03           03542         MOVLW   0x03
00192A 26E1           03543         ADDWF   FSR1L, F
                      03544 ;       .line   1198; interface.c       break;
00192C EF?? F0??      03545         GOTO    _01835_DS_
001930                03546 _01822_DS_:
                      03547 ;       .line   1200; interface.c       print_lcd_string("TESTE DO TECLADO");
001930 0E??           03548         MOVLW   UPPER(__str_45)
001932 6E??           03549         MOVWF   r0x02
001934 0E??           03550         MOVLW   HIGH(__str_45)
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE 68


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

001936 6E??           03551         MOVWF   r0x01
001938 0E??           03552         MOVLW   LOW(__str_45)
00193A 6E??           03553         MOVWF   r0x00
00193C 50??           03554         MOVF    r0x02, W
00193E 6EE5           03555         MOVWF   POSTDEC1
001940 50??           03556         MOVF    r0x01, W
001942 6EE5           03557         MOVWF   POSTDEC1
001944 50??           03558         MOVF    r0x00, W
001946 6EE5           03559         MOVWF   POSTDEC1
001948 EC?? F0??      03560         CALL    _print_lcd_string
00194C 0E03           03561         MOVLW   0x03
00194E 26E1           03562         ADDWF   FSR1L, F
                      03563 ;       .line   1201; interface.c       print_lcd_ln();
001950 EC?? F0??      03564         CALL    _print_lcd_ln
                      03565 ;       .line   1202; interface.c       print_lcd_string("OK:5            ");
001954 0E??           03566         MOVLW   UPPER(__str_48)
001956 6E??           03567         MOVWF   r0x02
001958 0E??           03568         MOVLW   HIGH(__str_48)
00195A 6E??           03569         MOVWF   r0x01
00195C 0E??           03570         MOVLW   LOW(__str_48)
00195E 6E??           03571         MOVWF   r0x00
001960 50??           03572         MOVF    r0x02, W
001962 6EE5           03573         MOVWF   POSTDEC1
001964 50??           03574         MOVF    r0x01, W
001966 6EE5           03575         MOVWF   POSTDEC1
001968 50??           03576         MOVF    r0x00, W
00196A 6EE5           03577         MOVWF   POSTDEC1
00196C EC?? F0??      03578         CALL    _print_lcd_string
001970 0E03           03579         MOVLW   0x03
001972 26E1           03580         ADDWF   FSR1L, F
                      03581 ;       .line   1203; interface.c       break;
001974 EF?? F0??      03582         GOTO    _01835_DS_
001978                03583 _01823_DS_:
                      03584 ;       .line   1205; interface.c       print_lcd_string("TESTE DO TECLADO");
001978 0E??           03585         MOVLW   UPPER(__str_45)
00197A 6E??           03586         MOVWF   r0x02
00197C 0E??           03587         MOVLW   HIGH(__str_45)
00197E 6E??           03588         MOVWF   r0x01
001980 0E??           03589         MOVLW   LOW(__str_45)
001982 6E??           03590         MOVWF   r0x00
001984 50??           03591         MOVF    r0x02, W
001986 6EE5           03592         MOVWF   POSTDEC1
001988 50??           03593         MOVF    r0x01, W
00198A 6EE5           03594         MOVWF   POSTDEC1
00198C 50??           03595         MOVF    r0x00, W
00198E 6EE5           03596         MOVWF   POSTDEC1
001990 EC?? F0??      03597         CALL    _print_lcd_string
001994 0E03           03598         MOVLW   0x03
001996 26E1           03599         ADDWF   FSR1L, F
                      03600 ;       .line   1206; interface.c       print_lcd_ln();
001998 EC?? F0??      03601         CALL    _print_lcd_ln
                      03602 ;       .line   1207; interface.c       print_lcd_string("OK:6            ");
00199C 0E??           03603         MOVLW   UPPER(__str_49)
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE 69


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00199E 6E??           03604         MOVWF   r0x02
0019A0 0E??           03605         MOVLW   HIGH(__str_49)
0019A2 6E??           03606         MOVWF   r0x01
0019A4 0E??           03607         MOVLW   LOW(__str_49)
0019A6 6E??           03608         MOVWF   r0x00
0019A8 50??           03609         MOVF    r0x02, W
0019AA 6EE5           03610         MOVWF   POSTDEC1
0019AC 50??           03611         MOVF    r0x01, W
0019AE 6EE5           03612         MOVWF   POSTDEC1
0019B0 50??           03613         MOVF    r0x00, W
0019B2 6EE5           03614         MOVWF   POSTDEC1
0019B4 EC?? F0??      03615         CALL    _print_lcd_string
0019B8 0E03           03616         MOVLW   0x03
0019BA 26E1           03617         ADDWF   FSR1L, F
                      03618 ;       .line   1208; interface.c       break;
0019BC EF?? F0??      03619         GOTO    _01835_DS_
0019C0                03620 _01824_DS_:
                      03621 ;       .line   1210; interface.c       print_lcd_string("TESTE DA SERIAL ");
0019C0 0E??           03622         MOVLW   UPPER(__str_50)
0019C2 6E??           03623         MOVWF   r0x02
0019C4 0E??           03624         MOVLW   HIGH(__str_50)
0019C6 6E??           03625         MOVWF   r0x01
0019C8 0E??           03626         MOVLW   LOW(__str_50)
0019CA 6E??           03627         MOVWF   r0x00
0019CC 50??           03628         MOVF    r0x02, W
0019CE 6EE5           03629         MOVWF   POSTDEC1
0019D0 50??           03630         MOVF    r0x01, W
0019D2 6EE5           03631         MOVWF   POSTDEC1
0019D4 50??           03632         MOVF    r0x00, W
0019D6 6EE5           03633         MOVWF   POSTDEC1
0019D8 EC?? F0??      03634         CALL    _print_lcd_string
0019DC 0E03           03635         MOVLW   0x03
0019DE 26E1           03636         ADDWF   FSR1L, F
                      03637 ;       .line   1211; interface.c       print_lcd_ln();
0019E0 EC?? F0??      03638         CALL    _print_lcd_ln
                      03639 ;       .line   1212; interface.c       print_lcd_string("3:OK   4:");
0019E4 0E??           03640         MOVLW   UPPER(__str_51)
0019E6 6E??           03641         MOVWF   r0x02
0019E8 0E??           03642         MOVLW   HIGH(__str_51)
0019EA 6E??           03643         MOVWF   r0x01
0019EC 0E??           03644         MOVLW   LOW(__str_51)
0019EE 6E??           03645         MOVWF   r0x00
0019F0 50??           03646         MOVF    r0x02, W
0019F2 6EE5           03647         MOVWF   POSTDEC1
0019F4 50??           03648         MOVF    r0x01, W
0019F6 6EE5           03649         MOVWF   POSTDEC1
0019F8 50??           03650         MOVF    r0x00, W
0019FA 6EE5           03651         MOVWF   POSTDEC1
0019FC EC?? F0??      03652         CALL    _print_lcd_string
001A00 0E03           03653         MOVLW   0x03
001A02 26E1           03654         ADDWF   FSR1L, F
                      03655 ;       .line   1213; interface.c       print_lcd_tela();
001A04 EC?? F0??      03656         CALL    _print_lcd_tela
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE 70


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      03657 ;       .line   1214; interface.c       break;
001A08 EF?? F0??      03658         GOTO    _01835_DS_
001A0C                03659 _01825_DS_:
                      03660 ;       .line   1216; interface.c       print_serial_string("TESTE SERIAL");
001A0C 0E??           03661         MOVLW   UPPER(__str_52)
001A0E 6E??           03662         MOVWF   r0x02
001A10 0E??           03663         MOVLW   HIGH(__str_52)
001A12 6E??           03664         MOVWF   r0x01
001A14 0E??           03665         MOVLW   LOW(__str_52)
001A16 6E??           03666         MOVWF   r0x00
001A18 50??           03667         MOVF    r0x02, W
001A1A 6EE5           03668         MOVWF   POSTDEC1
001A1C 50??           03669         MOVF    r0x01, W
001A1E 6EE5           03670         MOVWF   POSTDEC1
001A20 50??           03671         MOVF    r0x00, W
001A22 6EE5           03672         MOVWF   POSTDEC1
001A24 EC?? F0??      03673         CALL    _print_serial_string
001A28 0E03           03674         MOVLW   0x03
001A2A 26E1           03675         ADDWF   FSR1L, F
                      03676 ;       .line   1217; interface.c       print_lcd_string("MENSAGEM ENVIADA");
001A2C 0E??           03677         MOVLW   UPPER(__str_53)
001A2E 6E??           03678         MOVWF   r0x02
001A30 0E??           03679         MOVLW   HIGH(__str_53)
001A32 6E??           03680         MOVWF   r0x01
001A34 0E??           03681         MOVLW   LOW(__str_53)
001A36 6E??           03682         MOVWF   r0x00
001A38 50??           03683         MOVF    r0x02, W
001A3A 6EE5           03684         MOVWF   POSTDEC1
001A3C 50??           03685         MOVF    r0x01, W
001A3E 6EE5           03686         MOVWF   POSTDEC1
001A40 50??           03687         MOVF    r0x00, W
001A42 6EE5           03688         MOVWF   POSTDEC1
001A44 EC?? F0??      03689         CALL    _print_lcd_string
001A48 0E03           03690         MOVLW   0x03
001A4A 26E1           03691         ADDWF   FSR1L, F
                      03692 ;       .line   1218; interface.c       print_lcd_ln();
001A4C EC?? F0??      03693         CALL    _print_lcd_ln
                      03694 ;       .line   1219; interface.c       print_lcd_string("5:OK   6:");
001A50 0E??           03695         MOVLW   UPPER(__str_54)
001A52 6E??           03696         MOVWF   r0x02
001A54 0E??           03697         MOVLW   HIGH(__str_54)
001A56 6E??           03698         MOVWF   r0x01
001A58 0E??           03699         MOVLW   LOW(__str_54)
001A5A 6E??           03700         MOVWF   r0x00
001A5C 50??           03701         MOVF    r0x02, W
001A5E 6EE5           03702         MOVWF   POSTDEC1
001A60 50??           03703         MOVF    r0x01, W
001A62 6EE5           03704         MOVWF   POSTDEC1
001A64 50??           03705         MOVF    r0x00, W
001A66 6EE5           03706         MOVWF   POSTDEC1
001A68 EC?? F0??      03707         CALL    _print_lcd_string
001A6C 0E03           03708         MOVLW   0x03
001A6E 26E1           03709         ADDWF   FSR1L, F
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE 71


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      03710 ;       .line   1220; interface.c       print_lcd_tela();
001A70 EC?? F0??      03711         CALL    _print_lcd_tela
                      03712 ;       .line   1221; interface.c       break;
001A74 EF?? F0??      03713         GOTO    _01835_DS_
001A78                03714 _01826_DS_:
                      03715 ;       .line   1223; interface.c       print_lcd_string("TESTE DOS LEDS  ");
001A78 0E??           03716         MOVLW   UPPER(__str_55)
001A7A 6E??           03717         MOVWF   r0x02
001A7C 0E??           03718         MOVLW   HIGH(__str_55)
001A7E 6E??           03719         MOVWF   r0x01
001A80 0E??           03720         MOVLW   LOW(__str_55)
001A82 6E??           03721         MOVWF   r0x00
001A84 50??           03722         MOVF    r0x02, W
001A86 6EE5           03723         MOVWF   POSTDEC1
001A88 50??           03724         MOVF    r0x01, W
001A8A 6EE5           03725         MOVWF   POSTDEC1
001A8C 50??           03726         MOVF    r0x00, W
001A8E 6EE5           03727         MOVWF   POSTDEC1
001A90 EC?? F0??      03728         CALL    _print_lcd_string
001A94 0E03           03729         MOVLW   0x03
001A96 26E1           03730         ADDWF   FSR1L, F
                      03731 ;       .line   1224; interface.c       print_lcd_ln();
001A98 EC?? F0??      03732         CALL    _print_lcd_ln
                      03733 ;       .line   1225; interface.c       print_lcd_string("3:OK   4:");
001A9C 0E??           03734         MOVLW   UPPER(__str_51)
001A9E 6E??           03735         MOVWF   r0x02
001AA0 0E??           03736         MOVLW   HIGH(__str_51)
001AA2 6E??           03737         MOVWF   r0x01
001AA4 0E??           03738         MOVLW   LOW(__str_51)
001AA6 6E??           03739         MOVWF   r0x00
001AA8 50??           03740         MOVF    r0x02, W
001AAA 6EE5           03741         MOVWF   POSTDEC1
001AAC 50??           03742         MOVF    r0x01, W
001AAE 6EE5           03743         MOVWF   POSTDEC1
001AB0 50??           03744         MOVF    r0x00, W
001AB2 6EE5           03745         MOVWF   POSTDEC1
001AB4 EC?? F0??      03746         CALL    _print_lcd_string
001AB8 0E03           03747         MOVLW   0x03
001ABA 26E1           03748         ADDWF   FSR1L, F
                      03749 ;       .line   1226; interface.c       print_lcd_tela();
001ABC EC?? F0??      03750         CALL    _print_lcd_tela
                      03751 ;       .line   1227; interface.c       break;
001AC0 EF?? F0??      03752         GOTO    _01835_DS_
001AC4                03753 _01827_DS_:
                      03754 ;       .line   1229; interface.c       print_lcd_string("TIMER: ");
001AC4 0E??           03755         MOVLW   UPPER(__str_56)
001AC6 6E??           03756         MOVWF   r0x02
001AC8 0E??           03757         MOVLW   HIGH(__str_56)
001ACA 6E??           03758         MOVWF   r0x01
001ACC 0E??           03759         MOVLW   LOW(__str_56)
001ACE 6E??           03760         MOVWF   r0x00
001AD0 50??           03761         MOVF    r0x02, W
001AD2 6EE5           03762         MOVWF   POSTDEC1
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE 72


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

001AD4 50??           03763         MOVF    r0x01, W
001AD6 6EE5           03764         MOVWF   POSTDEC1
001AD8 50??           03765         MOVF    r0x00, W
001ADA 6EE5           03766         MOVWF   POSTDEC1
001ADC EC?? F0??      03767         CALL    _print_lcd_string
001AE0 0E03           03768         MOVLW   0x03
001AE2 26E1           03769         ADDWF   FSR1L, F
001AE4 ????           03770         BANKSEL (_timer + 4)
                      03771 ;       .line   1230; interface.c       s_tempo[4] = ((timer[1] + 10) % 10) + 0x30;
001AE6 51??           03772         MOVF    (_timer + 4), W, B
001AE8 0F0A           03773         ADDLW   0x0a
001AEA 6E??           03774         MOVWF   r0x00
001AEC 0E00           03775         MOVLW   0x00
001AEE ????           03776         BANKSEL (_timer + 5)
001AF0 21??           03777         ADDWFC  (_timer + 5), W, B
001AF2 6E??           03778         MOVWF   r0x01
001AF4 0E00           03779         MOVLW   0x00
001AF6 ????           03780         BANKSEL (_timer + 6)
001AF8 21??           03781         ADDWFC  (_timer + 6), W, B
001AFA 6E??           03782         MOVWF   r0x02
001AFC 0E00           03783         MOVLW   0x00
001AFE ????           03784         BANKSEL (_timer + 7)
001B00 21??           03785         ADDWFC  (_timer + 7), W, B
001B02 6E??           03786         MOVWF   r0x03
001B04 0E00           03787         MOVLW   0x00
001B06 6EE5           03788         MOVWF   POSTDEC1
001B08 0E00           03789         MOVLW   0x00
001B0A 6EE5           03790         MOVWF   POSTDEC1
001B0C 0E00           03791         MOVLW   0x00
001B0E 6EE5           03792         MOVWF   POSTDEC1
001B10 0E0A           03793         MOVLW   0x0a
001B12 6EE5           03794         MOVWF   POSTDEC1
001B14 50??           03795         MOVF    r0x03, W
001B16 6EE5           03796         MOVWF   POSTDEC1
001B18 50??           03797         MOVF    r0x02, W
001B1A 6EE5           03798         MOVWF   POSTDEC1
001B1C 50??           03799         MOVF    r0x01, W
001B1E 6EE5           03800         MOVWF   POSTDEC1
001B20 50??           03801         MOVF    r0x00, W
001B22 6EE5           03802         MOVWF   POSTDEC1
001B24 EC?? F0??      03803         CALL    __modulong
001B28 6E??           03804         MOVWF   r0x00
001B2A CFF3 F000      03805         MOVFF   PRODL, r0x01
001B2E CFF4 F000      03806         MOVFF   PRODH, r0x02
001B32 CFE9 F000      03807         MOVFF   FSR0L, r0x03
001B36 0E08           03808         MOVLW   0x08
001B38 26E1           03809         ADDWF   FSR1L, F
001B3A 0E30           03810         MOVLW   0x30
001B3C 26??           03811         ADDWF   r0x00, F
001B3E 50??           03812         MOVF    r0x00, W
001B40 ????           03813         BANKSEL (_print_tela_s_tempo_1_227 + 4)
001B42 6F??           03814         MOVWF   (_print_tela_s_tempo_1_227 + 4), B
001B44 ????           03815         BANKSEL (_timer + 4)
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE 73


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      03816 ;       .line   1231; interface.c       s_tempo[3] = (((timer[1] + 10) / 10) % 10) + 0x30;
001B46 51??           03817         MOVF    (_timer + 4), W, B
001B48 0F0A           03818         ADDLW   0x0a
001B4A 6E??           03819         MOVWF   r0x00
001B4C 0E00           03820         MOVLW   0x00
001B4E ????           03821         BANKSEL (_timer + 5)
001B50 21??           03822         ADDWFC  (_timer + 5), W, B
001B52 6E??           03823         MOVWF   r0x01
001B54 0E00           03824         MOVLW   0x00
001B56 ????           03825         BANKSEL (_timer + 6)
001B58 21??           03826         ADDWFC  (_timer + 6), W, B
001B5A 6E??           03827         MOVWF   r0x02
001B5C 0E00           03828         MOVLW   0x00
001B5E ????           03829         BANKSEL (_timer + 7)
001B60 21??           03830         ADDWFC  (_timer + 7), W, B
001B62 6E??           03831         MOVWF   r0x03
001B64 0E00           03832         MOVLW   0x00
001B66 6EE5           03833         MOVWF   POSTDEC1
001B68 0E00           03834         MOVLW   0x00
001B6A 6EE5           03835         MOVWF   POSTDEC1
001B6C 0E00           03836         MOVLW   0x00
001B6E 6EE5           03837         MOVWF   POSTDEC1
001B70 0E0A           03838         MOVLW   0x0a
001B72 6EE5           03839         MOVWF   POSTDEC1
001B74 50??           03840         MOVF    r0x03, W
001B76 6EE5           03841         MOVWF   POSTDEC1
001B78 50??           03842         MOVF    r0x02, W
001B7A 6EE5           03843         MOVWF   POSTDEC1
001B7C 50??           03844         MOVF    r0x01, W
001B7E 6EE5           03845         MOVWF   POSTDEC1
001B80 50??           03846         MOVF    r0x00, W
001B82 6EE5           03847         MOVWF   POSTDEC1
001B84 EC?? F0??      03848         CALL    __divulong
001B88 6E??           03849         MOVWF   r0x00
001B8A CFF3 F000      03850         MOVFF   PRODL, r0x01
001B8E CFF4 F000      03851         MOVFF   PRODH, r0x02
001B92 CFE9 F000      03852         MOVFF   FSR0L, r0x03
001B96 0E08           03853         MOVLW   0x08
001B98 26E1           03854         ADDWF   FSR1L, F
001B9A 0E00           03855         MOVLW   0x00
001B9C 6EE5           03856         MOVWF   POSTDEC1
001B9E 0E00           03857         MOVLW   0x00
001BA0 6EE5           03858         MOVWF   POSTDEC1
001BA2 0E00           03859         MOVLW   0x00
001BA4 6EE5           03860         MOVWF   POSTDEC1
001BA6 0E0A           03861         MOVLW   0x0a
001BA8 6EE5           03862         MOVWF   POSTDEC1
001BAA 50??           03863         MOVF    r0x03, W
001BAC 6EE5           03864         MOVWF   POSTDEC1
001BAE 50??           03865         MOVF    r0x02, W
001BB0 6EE5           03866         MOVWF   POSTDEC1
001BB2 50??           03867         MOVF    r0x01, W
001BB4 6EE5           03868         MOVWF   POSTDEC1
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE 74


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

001BB6 50??           03869         MOVF    r0x00, W
001BB8 6EE5           03870         MOVWF   POSTDEC1
001BBA EC?? F0??      03871         CALL    __modulong
001BBE 6E??           03872         MOVWF   r0x00
001BC0 CFF3 F000      03873         MOVFF   PRODL, r0x01
001BC4 CFF4 F000      03874         MOVFF   PRODH, r0x02
001BC8 CFE9 F000      03875         MOVFF   FSR0L, r0x03
001BCC 0E08           03876         MOVLW   0x08
001BCE 26E1           03877         ADDWF   FSR1L, F
001BD0 0E30           03878         MOVLW   0x30
001BD2 26??           03879         ADDWF   r0x00, F
001BD4 50??           03880         MOVF    r0x00, W
001BD6 ????           03881         BANKSEL (_print_tela_s_tempo_1_227 + 3)
001BD8 6F??           03882         MOVWF   (_print_tela_s_tempo_1_227 + 3), B
001BDA ????           03883         BANKSEL (_timer + 4)
                      03884 ;       .line   1232; interface.c       s_tempo[2] = (((timer[1] + 10) / 100) % 10) + 0x30;
001BDC 51??           03885         MOVF    (_timer + 4), W, B
001BDE 0F0A           03886         ADDLW   0x0a
001BE0 6E??           03887         MOVWF   r0x00
001BE2 0E00           03888         MOVLW   0x00
001BE4 ????           03889         BANKSEL (_timer + 5)
001BE6 21??           03890         ADDWFC  (_timer + 5), W, B
001BE8 6E??           03891         MOVWF   r0x01
001BEA 0E00           03892         MOVLW   0x00
001BEC ????           03893         BANKSEL (_timer + 6)
001BEE 21??           03894         ADDWFC  (_timer + 6), W, B
001BF0 6E??           03895         MOVWF   r0x02
001BF2 0E00           03896         MOVLW   0x00
001BF4 ????           03897         BANKSEL (_timer + 7)
001BF6 21??           03898         ADDWFC  (_timer + 7), W, B
001BF8 6E??           03899         MOVWF   r0x03
001BFA 0E00           03900         MOVLW   0x00
001BFC 6EE5           03901         MOVWF   POSTDEC1
001BFE 0E00           03902         MOVLW   0x00
001C00 6EE5           03903         MOVWF   POSTDEC1
001C02 0E00           03904         MOVLW   0x00
001C04 6EE5           03905         MOVWF   POSTDEC1
001C06 0E64           03906         MOVLW   0x64
001C08 6EE5           03907         MOVWF   POSTDEC1
001C0A 50??           03908         MOVF    r0x03, W
001C0C 6EE5           03909         MOVWF   POSTDEC1
001C0E 50??           03910         MOVF    r0x02, W
001C10 6EE5           03911         MOVWF   POSTDEC1
001C12 50??           03912         MOVF    r0x01, W
001C14 6EE5           03913         MOVWF   POSTDEC1
001C16 50??           03914         MOVF    r0x00, W
001C18 6EE5           03915         MOVWF   POSTDEC1
001C1A EC?? F0??      03916         CALL    __divulong
001C1E 6E??           03917         MOVWF   r0x00
001C20 CFF3 F000      03918         MOVFF   PRODL, r0x01
001C24 CFF4 F000      03919         MOVFF   PRODH, r0x02
001C28 CFE9 F000      03920         MOVFF   FSR0L, r0x03
001C2C 0E08           03921         MOVLW   0x08
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE 75


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

001C2E 26E1           03922         ADDWF   FSR1L, F
001C30 0E00           03923         MOVLW   0x00
001C32 6EE5           03924         MOVWF   POSTDEC1
001C34 0E00           03925         MOVLW   0x00
001C36 6EE5           03926         MOVWF   POSTDEC1
001C38 0E00           03927         MOVLW   0x00
001C3A 6EE5           03928         MOVWF   POSTDEC1
001C3C 0E0A           03929         MOVLW   0x0a
001C3E 6EE5           03930         MOVWF   POSTDEC1
001C40 50??           03931         MOVF    r0x03, W
001C42 6EE5           03932         MOVWF   POSTDEC1
001C44 50??           03933         MOVF    r0x02, W
001C46 6EE5           03934         MOVWF   POSTDEC1
001C48 50??           03935         MOVF    r0x01, W
001C4A 6EE5           03936         MOVWF   POSTDEC1
001C4C 50??           03937         MOVF    r0x00, W
001C4E 6EE5           03938         MOVWF   POSTDEC1
001C50 EC?? F0??      03939         CALL    __modulong
001C54 6E??           03940         MOVWF   r0x00
001C56 CFF3 F000      03941         MOVFF   PRODL, r0x01
001C5A CFF4 F000      03942         MOVFF   PRODH, r0x02
001C5E CFE9 F000      03943         MOVFF   FSR0L, r0x03
001C62 0E08           03944         MOVLW   0x08
001C64 26E1           03945         ADDWF   FSR1L, F
001C66 0E30           03946         MOVLW   0x30
001C68 26??           03947         ADDWF   r0x00, F
001C6A 50??           03948         MOVF    r0x00, W
001C6C ????           03949         BANKSEL (_print_tela_s_tempo_1_227 + 2)
001C6E 6F??           03950         MOVWF   (_print_tela_s_tempo_1_227 + 2), B
001C70 ????           03951         BANKSEL (_timer + 4)
                      03952 ;       .line   1233; interface.c       s_tempo[1] = (((timer[1] + 10) / 1000) % 10) + 0x30;
001C72 51??           03953         MOVF    (_timer + 4), W, B
001C74 0F0A           03954         ADDLW   0x0a
001C76 6E??           03955         MOVWF   r0x00
001C78 0E00           03956         MOVLW   0x00
001C7A ????           03957         BANKSEL (_timer + 5)
001C7C 21??           03958         ADDWFC  (_timer + 5), W, B
001C7E 6E??           03959         MOVWF   r0x01
001C80 0E00           03960         MOVLW   0x00
001C82 ????           03961         BANKSEL (_timer + 6)
001C84 21??           03962         ADDWFC  (_timer + 6), W, B
001C86 6E??           03963         MOVWF   r0x02
001C88 0E00           03964         MOVLW   0x00
001C8A ????           03965         BANKSEL (_timer + 7)
001C8C 21??           03966         ADDWFC  (_timer + 7), W, B
001C8E 6E??           03967         MOVWF   r0x03
001C90 0E00           03968         MOVLW   0x00
001C92 6EE5           03969         MOVWF   POSTDEC1
001C94 0E00           03970         MOVLW   0x00
001C96 6EE5           03971         MOVWF   POSTDEC1
001C98 0E03           03972         MOVLW   0x03
001C9A 6EE5           03973         MOVWF   POSTDEC1
001C9C 0EE8           03974         MOVLW   0xe8
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE 76


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

001C9E 6EE5           03975         MOVWF   POSTDEC1
001CA0 50??           03976         MOVF    r0x03, W
001CA2 6EE5           03977         MOVWF   POSTDEC1
001CA4 50??           03978         MOVF    r0x02, W
001CA6 6EE5           03979         MOVWF   POSTDEC1
001CA8 50??           03980         MOVF    r0x01, W
001CAA 6EE5           03981         MOVWF   POSTDEC1
001CAC 50??           03982         MOVF    r0x00, W
001CAE 6EE5           03983         MOVWF   POSTDEC1
001CB0 EC?? F0??      03984         CALL    __divulong
001CB4 6E??           03985         MOVWF   r0x00
001CB6 CFF3 F000      03986         MOVFF   PRODL, r0x01
001CBA CFF4 F000      03987         MOVFF   PRODH, r0x02
001CBE CFE9 F000      03988         MOVFF   FSR0L, r0x03
001CC2 0E08           03989         MOVLW   0x08
001CC4 26E1           03990         ADDWF   FSR1L, F
001CC6 0E00           03991         MOVLW   0x00
001CC8 6EE5           03992         MOVWF   POSTDEC1
001CCA 0E00           03993         MOVLW   0x00
001CCC 6EE5           03994         MOVWF   POSTDEC1
001CCE 0E00           03995         MOVLW   0x00
001CD0 6EE5           03996         MOVWF   POSTDEC1
001CD2 0E0A           03997         MOVLW   0x0a
001CD4 6EE5           03998         MOVWF   POSTDEC1
001CD6 50??           03999         MOVF    r0x03, W
001CD8 6EE5           04000         MOVWF   POSTDEC1
001CDA 50??           04001         MOVF    r0x02, W
001CDC 6EE5           04002         MOVWF   POSTDEC1
001CDE 50??           04003         MOVF    r0x01, W
001CE0 6EE5           04004         MOVWF   POSTDEC1
001CE2 50??           04005         MOVF    r0x00, W
001CE4 6EE5           04006         MOVWF   POSTDEC1
001CE6 EC?? F0??      04007         CALL    __modulong
001CEA 6E??           04008         MOVWF   r0x00
001CEC CFF3 F000      04009         MOVFF   PRODL, r0x01
001CF0 CFF4 F000      04010         MOVFF   PRODH, r0x02
001CF4 CFE9 F000      04011         MOVFF   FSR0L, r0x03
001CF8 0E08           04012         MOVLW   0x08
001CFA 26E1           04013         ADDWF   FSR1L, F
001CFC 0E30           04014         MOVLW   0x30
001CFE 26??           04015         ADDWF   r0x00, F
001D00 50??           04016         MOVF    r0x00, W
001D02 ????           04017         BANKSEL (_print_tela_s_tempo_1_227 + 1)
001D04 6F??           04018         MOVWF   (_print_tela_s_tempo_1_227 + 1), B
001D06 ????           04019         BANKSEL (_timer + 4)
                      04020 ;       .line   1234; interface.c       s_tempo[0] = (((timer[1] + 10) / 10000) % 10) + 0x30;
001D08 51??           04021         MOVF    (_timer + 4), W, B
001D0A 0F0A           04022         ADDLW   0x0a
001D0C 6E??           04023         MOVWF   r0x00
001D0E 0E00           04024         MOVLW   0x00
001D10 ????           04025         BANKSEL (_timer + 5)
001D12 21??           04026         ADDWFC  (_timer + 5), W, B
001D14 6E??           04027         MOVWF   r0x01
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE 77


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

001D16 0E00           04028         MOVLW   0x00
001D18 ????           04029         BANKSEL (_timer + 6)
001D1A 21??           04030         ADDWFC  (_timer + 6), W, B
001D1C 6E??           04031         MOVWF   r0x02
001D1E 0E00           04032         MOVLW   0x00
001D20 ????           04033         BANKSEL (_timer + 7)
001D22 21??           04034         ADDWFC  (_timer + 7), W, B
001D24 6E??           04035         MOVWF   r0x03
001D26 0E00           04036         MOVLW   0x00
001D28 6EE5           04037         MOVWF   POSTDEC1
001D2A 0E00           04038         MOVLW   0x00
001D2C 6EE5           04039         MOVWF   POSTDEC1
001D2E 0E27           04040         MOVLW   0x27
001D30 6EE5           04041         MOVWF   POSTDEC1
001D32 0E10           04042         MOVLW   0x10
001D34 6EE5           04043         MOVWF   POSTDEC1
001D36 50??           04044         MOVF    r0x03, W
001D38 6EE5           04045         MOVWF   POSTDEC1
001D3A 50??           04046         MOVF    r0x02, W
001D3C 6EE5           04047         MOVWF   POSTDEC1
001D3E 50??           04048         MOVF    r0x01, W
001D40 6EE5           04049         MOVWF   POSTDEC1
001D42 50??           04050         MOVF    r0x00, W
001D44 6EE5           04051         MOVWF   POSTDEC1
001D46 EC?? F0??      04052         CALL    __divulong
001D4A 6E??           04053         MOVWF   r0x00
001D4C CFF3 F000      04054         MOVFF   PRODL, r0x01
001D50 CFF4 F000      04055         MOVFF   PRODH, r0x02
001D54 CFE9 F000      04056         MOVFF   FSR0L, r0x03
001D58 0E08           04057         MOVLW   0x08
001D5A 26E1           04058         ADDWF   FSR1L, F
001D5C 0E00           04059         MOVLW   0x00
001D5E 6EE5           04060         MOVWF   POSTDEC1
001D60 0E00           04061         MOVLW   0x00
001D62 6EE5           04062         MOVWF   POSTDEC1
001D64 0E00           04063         MOVLW   0x00
001D66 6EE5           04064         MOVWF   POSTDEC1
001D68 0E0A           04065         MOVLW   0x0a
001D6A 6EE5           04066         MOVWF   POSTDEC1
001D6C 50??           04067         MOVF    r0x03, W
001D6E 6EE5           04068         MOVWF   POSTDEC1
001D70 50??           04069         MOVF    r0x02, W
001D72 6EE5           04070         MOVWF   POSTDEC1
001D74 50??           04071         MOVF    r0x01, W
001D76 6EE5           04072         MOVWF   POSTDEC1
001D78 50??           04073         MOVF    r0x00, W
001D7A 6EE5           04074         MOVWF   POSTDEC1
001D7C EC?? F0??      04075         CALL    __modulong
001D80 6E??           04076         MOVWF   r0x00
001D82 CFF3 F000      04077         MOVFF   PRODL, r0x01
001D86 CFF4 F000      04078         MOVFF   PRODH, r0x02
001D8A CFE9 F000      04079         MOVFF   FSR0L, r0x03
001D8E 0E08           04080         MOVLW   0x08
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE 78


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

001D90 26E1           04081         ADDWF   FSR1L, F
001D92 0E30           04082         MOVLW   0x30
001D94 26??           04083         ADDWF   r0x00, F
001D96 50??           04084         MOVF    r0x00, W
001D98 ????           04085         BANKSEL _print_tela_s_tempo_1_227
001D9A 6F??           04086         MOVWF   _print_tela_s_tempo_1_227, B
                      04087 ;       .line   1235; interface.c       print_lcd_string(s_tempo);
001D9C 0E??           04088         MOVLW   HIGH(_print_tela_s_tempo_1_227)
001D9E 6E??           04089         MOVWF   r0x01
001DA0 0E??           04090         MOVLW   LOW(_print_tela_s_tempo_1_227)
001DA2 6E??           04091         MOVWF   r0x00
001DA4 0E80           04092         MOVLW   0x80
001DA6 6E??           04093         MOVWF   r0x02
001DA8 50??           04094         MOVF    r0x02, W
001DAA 6EE5           04095         MOVWF   POSTDEC1
001DAC 50??           04096         MOVF    r0x01, W
001DAE 6EE5           04097         MOVWF   POSTDEC1
001DB0 50??           04098         MOVF    r0x00, W
001DB2 6EE5           04099         MOVWF   POSTDEC1
001DB4 EC?? F0??      04100         CALL    _print_lcd_string
001DB8 0E03           04101         MOVLW   0x03
001DBA 26E1           04102         ADDWF   FSR1L, F
                      04103 ;       .line   1236; interface.c       print_lcd_string("     ");
001DBC 0E??           04104         MOVLW   UPPER(__str_12)
001DBE 6E??           04105         MOVWF   r0x02
001DC0 0E??           04106         MOVLW   HIGH(__str_12)
001DC2 6E??           04107         MOVWF   r0x01
001DC4 0E??           04108         MOVLW   LOW(__str_12)
001DC6 6E??           04109         MOVWF   r0x00
001DC8 50??           04110         MOVF    r0x02, W
001DCA 6EE5           04111         MOVWF   POSTDEC1
001DCC 50??           04112         MOVF    r0x01, W
001DCE 6EE5           04113         MOVWF   POSTDEC1
001DD0 50??           04114         MOVF    r0x00, W
001DD2 6EE5           04115         MOVWF   POSTDEC1
001DD4 EC?? F0??      04116         CALL    _print_lcd_string
001DD8 0E03           04117         MOVLW   0x03
001DDA 26E1           04118         ADDWF   FSR1L, F
                      04119 ;       .line   1237; interface.c       print_lcd_ln();
001DDC EC?? F0??      04120         CALL    _print_lcd_ln
                      04121 ;       .line   1238; interface.c       print_lcd_string("6:+ 4.- 5:OK 3:");
001DE0 0E??           04122         MOVLW   UPPER(__str_57)
001DE2 6E??           04123         MOVWF   r0x02
001DE4 0E??           04124         MOVLW   HIGH(__str_57)
001DE6 6E??           04125         MOVWF   r0x01
001DE8 0E??           04126         MOVLW   LOW(__str_57)
001DEA 6E??           04127         MOVWF   r0x00
001DEC 50??           04128         MOVF    r0x02, W
001DEE 6EE5           04129         MOVWF   POSTDEC1
001DF0 50??           04130         MOVF    r0x01, W
001DF2 6EE5           04131         MOVWF   POSTDEC1
001DF4 50??           04132         MOVF    r0x00, W
001DF6 6EE5           04133         MOVWF   POSTDEC1
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE 79


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

001DF8 EC?? F0??      04134         CALL    _print_lcd_string
001DFC 0E03           04135         MOVLW   0x03
001DFE 26E1           04136         ADDWF   FSR1L, F
                      04137 ;       .line   1239; interface.c       print_lcd_tela();
001E00 EC?? F0??      04138         CALL    _print_lcd_tela
                      04139 ;       .line   1240; interface.c       break;
001E04 EF?? F0??      04140         GOTO    _01835_DS_
001E08                04141 _01828_DS_:
                      04142 ;       .line   1242; interface.c       print_lcd_string("PWM: ");
001E08 0E??           04143         MOVLW   UPPER(__str_34)
001E0A 6E??           04144         MOVWF   r0x02
001E0C 0E??           04145         MOVLW   HIGH(__str_34)
001E0E 6E??           04146         MOVWF   r0x01
001E10 0E??           04147         MOVLW   LOW(__str_34)
001E12 6E??           04148         MOVWF   r0x00
001E14 50??           04149         MOVF    r0x02, W
001E16 6EE5           04150         MOVWF   POSTDEC1
001E18 50??           04151         MOVF    r0x01, W
001E1A 6EE5           04152         MOVWF   POSTDEC1
001E1C 50??           04153         MOVF    r0x00, W
001E1E 6EE5           04154         MOVWF   POSTDEC1
001E20 EC?? F0??      04155         CALL    _print_lcd_string
001E24 0E03           04156         MOVLW   0x03
001E26 26E1           04157         ADDWF   FSR1L, F
                      04158 ;       .line   1243; interface.c       s_pwm[2] = (teste_pwm % 10) + 0x30;
001E28 0E0A           04159         MOVLW   0x0a
001E2A 6EE5           04160         MOVWF   POSTDEC1
001E2C C??? F???      04161         MOVFF   _teste_pwm, POSTDEC1
001E30 EC?? F0??      04162         CALL    __moduchar
001E34 6E??           04163         MOVWF   r0x00
001E36 50E4           04164         MOVF    PREINC1, W
001E38 50E4           04165         MOVF    PREINC1, W
001E3A 0E30           04166         MOVLW   0x30
001E3C 26??           04167         ADDWF   r0x00, F
001E3E 50??           04168         MOVF    r0x00, W
001E40 ????           04169         BANKSEL (_print_tela_s_pwm_1_227 + 2)
001E42 6F??           04170         MOVWF   (_print_tela_s_pwm_1_227 + 2), B
                      04171 ;       .line   1244; interface.c       s_pwm[1] = ((teste_pwm / 10) % 10) + 0x30;
001E44 0E0A           04172         MOVLW   0x0a
001E46 6EE5           04173         MOVWF   POSTDEC1
001E48 C??? F???      04174         MOVFF   _teste_pwm, POSTDEC1
001E4C EC?? F0??      04175         CALL    __divuchar
001E50 6E??           04176         MOVWF   r0x00
001E52 50E4           04177         MOVF    PREINC1, W
001E54 50E4           04178         MOVF    PREINC1, W
001E56 0E0A           04179         MOVLW   0x0a
001E58 6EE5           04180         MOVWF   POSTDEC1
001E5A C??? F???      04181         MOVFF   r0x00, POSTDEC1
001E5E EC?? F0??      04182         CALL    __moduchar
001E62 6E??           04183         MOVWF   r0x00
001E64 50E4           04184         MOVF    PREINC1, W
001E66 50E4           04185         MOVF    PREINC1, W
001E68 0E30           04186         MOVLW   0x30
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE 80


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

001E6A 26??           04187         ADDWF   r0x00, F
001E6C 50??           04188         MOVF    r0x00, W
001E6E ????           04189         BANKSEL (_print_tela_s_pwm_1_227 + 1)
001E70 6F??           04190         MOVWF   (_print_tela_s_pwm_1_227 + 1), B
                      04191 ;       .line   1245; interface.c       s_pwm[0] = ((teste_pwm / 100) % 10) + 0x30;
001E72 0E64           04192         MOVLW   0x64
001E74 6EE5           04193         MOVWF   POSTDEC1
001E76 C??? F???      04194         MOVFF   _teste_pwm, POSTDEC1
001E7A EC?? F0??      04195         CALL    __divuchar
001E7E 6E??           04196         MOVWF   r0x00
001E80 50E4           04197         MOVF    PREINC1, W
001E82 50E4           04198         MOVF    PREINC1, W
001E84 0E0A           04199         MOVLW   0x0a
001E86 6EE5           04200         MOVWF   POSTDEC1
001E88 C??? F???      04201         MOVFF   r0x00, POSTDEC1
001E8C EC?? F0??      04202         CALL    __moduchar
001E90 6E??           04203         MOVWF   r0x00
001E92 50E4           04204         MOVF    PREINC1, W
001E94 50E4           04205         MOVF    PREINC1, W
001E96 0E30           04206         MOVLW   0x30
001E98 26??           04207         ADDWF   r0x00, F
001E9A 50??           04208         MOVF    r0x00, W
001E9C ????           04209         BANKSEL _print_tela_s_pwm_1_227
001E9E 6F??           04210         MOVWF   _print_tela_s_pwm_1_227, B
                      04211 ;       .line   1246; interface.c       print_lcd_string(s_pwm);
001EA0 0E??           04212         MOVLW   HIGH(_print_tela_s_pwm_1_227)
001EA2 6E??           04213         MOVWF   r0x01
001EA4 0E??           04214         MOVLW   LOW(_print_tela_s_pwm_1_227)
001EA6 6E??           04215         MOVWF   r0x00
001EA8 0E80           04216         MOVLW   0x80
001EAA 6E??           04217         MOVWF   r0x02
001EAC 50??           04218         MOVF    r0x02, W
001EAE 6EE5           04219         MOVWF   POSTDEC1
001EB0 50??           04220         MOVF    r0x01, W
001EB2 6EE5           04221         MOVWF   POSTDEC1
001EB4 50??           04222         MOVF    r0x00, W
001EB6 6EE5           04223         MOVWF   POSTDEC1
001EB8 EC?? F0??      04224         CALL    _print_lcd_string
001EBC 0E03           04225         MOVLW   0x03
001EBE 26E1           04226         ADDWF   FSR1L, F
                      04227 ;       .line   1247; interface.c       print_lcd_string("         ");
001EC0 0E??           04228         MOVLW   UPPER(__str_58)
001EC2 6E??           04229         MOVWF   r0x02
001EC4 0E??           04230         MOVLW   HIGH(__str_58)
001EC6 6E??           04231         MOVWF   r0x01
001EC8 0E??           04232         MOVLW   LOW(__str_58)
001ECA 6E??           04233         MOVWF   r0x00
001ECC 50??           04234         MOVF    r0x02, W
001ECE 6EE5           04235         MOVWF   POSTDEC1
001ED0 50??           04236         MOVF    r0x01, W
001ED2 6EE5           04237         MOVWF   POSTDEC1
001ED4 50??           04238         MOVF    r0x00, W
001ED6 6EE5           04239         MOVWF   POSTDEC1
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE 81


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

001ED8 EC?? F0??      04240         CALL    _print_lcd_string
001EDC 0E03           04241         MOVLW   0x03
001EDE 26E1           04242         ADDWF   FSR1L, F
                      04243 ;       .line   1248; interface.c       print_lcd_ln();
001EE0 EC?? F0??      04244         CALL    _print_lcd_ln
                      04245 ;       .line   1249; interface.c       print_lcd_string("5:+ 3.- 6:OK 4:");
001EE4 0E??           04246         MOVLW   UPPER(__str_59)
001EE6 6E??           04247         MOVWF   r0x02
001EE8 0E??           04248         MOVLW   HIGH(__str_59)
001EEA 6E??           04249         MOVWF   r0x01
001EEC 0E??           04250         MOVLW   LOW(__str_59)
001EEE 6E??           04251         MOVWF   r0x00
001EF0 50??           04252         MOVF    r0x02, W
001EF2 6EE5           04253         MOVWF   POSTDEC1
001EF4 50??           04254         MOVF    r0x01, W
001EF6 6EE5           04255         MOVWF   POSTDEC1
001EF8 50??           04256         MOVF    r0x00, W
001EFA 6EE5           04257         MOVWF   POSTDEC1
001EFC EC?? F0??      04258         CALL    _print_lcd_string
001F00 0E03           04259         MOVLW   0x03
001F02 26E1           04260         ADDWF   FSR1L, F
                      04261 ;       .line   1250; interface.c       print_lcd_tela();
001F04 EC?? F0??      04262         CALL    _print_lcd_tela
                      04263 ;       .line   1251; interface.c       break;
001F08 D???           04264         BRA     _01835_DS_
001F0A                04265 _01829_DS_:
                      04266 ;       .line   1253; interface.c       print_lcd_string("TESTE SENSORES\n");
001F0A 0E??           04267         MOVLW   UPPER(__str_60)
001F0C 6E??           04268         MOVWF   r0x02
001F0E 0E??           04269         MOVLW   HIGH(__str_60)
001F10 6E??           04270         MOVWF   r0x01
001F12 0E??           04271         MOVLW   LOW(__str_60)
001F14 6E??           04272         MOVWF   r0x00
001F16 50??           04273         MOVF    r0x02, W
001F18 6EE5           04274         MOVWF   POSTDEC1
001F1A 50??           04275         MOVF    r0x01, W
001F1C 6EE5           04276         MOVWF   POSTDEC1
001F1E 50??           04277         MOVF    r0x00, W
001F20 6EE5           04278         MOVWF   POSTDEC1
001F22 EC?? F0??      04279         CALL    _print_lcd_string
001F26 0E03           04280         MOVLW   0x03
001F28 26E1           04281         ADDWF   FSR1L, F
                      04282 ;       .line   1254; interface.c       print_lcd_string("3:OK   4:");
001F2A 0E??           04283         MOVLW   UPPER(__str_51)
001F2C 6E??           04284         MOVWF   r0x02
001F2E 0E??           04285         MOVLW   HIGH(__str_51)
001F30 6E??           04286         MOVWF   r0x01
001F32 0E??           04287         MOVLW   LOW(__str_51)
001F34 6E??           04288         MOVWF   r0x00
001F36 50??           04289         MOVF    r0x02, W
001F38 6EE5           04290         MOVWF   POSTDEC1
001F3A 50??           04291         MOVF    r0x01, W
001F3C 6EE5           04292         MOVWF   POSTDEC1
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE 82


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

001F3E 50??           04293         MOVF    r0x00, W
001F40 6EE5           04294         MOVWF   POSTDEC1
001F42 EC?? F0??      04295         CALL    _print_lcd_string
001F46 0E03           04296         MOVLW   0x03
001F48 26E1           04297         ADDWF   FSR1L, F
                      04298 ;       .line   1255; interface.c       print_lcd_tela();
001F4A EC?? F0??      04299         CALL    _print_lcd_tela
                      04300 ;       .line   1256; interface.c       print_lcd_string("      ");
001F4E 0E??           04301         MOVLW   UPPER(__str_61)
001F50 6E??           04302         MOVWF   r0x02
001F52 0E??           04303         MOVLW   HIGH(__str_61)
001F54 6E??           04304         MOVWF   r0x01
001F56 0E??           04305         MOVLW   LOW(__str_61)
001F58 6E??           04306         MOVWF   r0x00
001F5A 50??           04307         MOVF    r0x02, W
001F5C 6EE5           04308         MOVWF   POSTDEC1
001F5E 50??           04309         MOVF    r0x01, W
001F60 6EE5           04310         MOVWF   POSTDEC1
001F62 50??           04311         MOVF    r0x00, W
001F64 6EE5           04312         MOVWF   POSTDEC1
001F66 EC?? F0??      04313         CALL    _print_lcd_string
001F6A 0E03           04314         MOVLW   0x03
001F6C 26E1           04315         ADDWF   FSR1L, F
                      04316 ;       .line   1257; interface.c       break;
001F6E D???           04317         BRA     _01835_DS_
001F70                04318 _01830_DS_:
                      04319 ;       .line   1259; interface.c       print_lcd_string("T:");
001F70 0E??           04320         MOVLW   UPPER(__str_0)
001F72 6E??           04321         MOVWF   r0x02
001F74 0E??           04322         MOVLW   HIGH(__str_0)
001F76 6E??           04323         MOVWF   r0x01
001F78 0E??           04324         MOVLW   LOW(__str_0)
001F7A 6E??           04325         MOVWF   r0x00
001F7C 50??           04326         MOVF    r0x02, W
001F7E 6EE5           04327         MOVWF   POSTDEC1
001F80 50??           04328         MOVF    r0x01, W
001F82 6EE5           04329         MOVWF   POSTDEC1
001F84 50??           04330         MOVF    r0x00, W
001F86 6EE5           04331         MOVWF   POSTDEC1
001F88 EC?? F0??      04332         CALL    _print_lcd_string
001F8C 0E03           04333         MOVLW   0x03
001F8E 26E1           04334         ADDWF   FSR1L, F
                      04335 ;       .line   1260; interface.c       s_temp[3] = (temp % 10) + 0x30;
001F90 0E00           04336         MOVLW   0x00
001F92 6EE5           04337         MOVWF   POSTDEC1
001F94 0E0A           04338         MOVLW   0x0a
001F96 6EE5           04339         MOVWF   POSTDEC1
001F98 ????           04340         BANKSEL (_temp + 1)
001F9A 51??           04341         MOVF    (_temp + 1), W, B
001F9C 6EE5           04342         MOVWF   POSTDEC1
001F9E ????           04343         BANKSEL _temp
001FA0 51??           04344         MOVF    _temp, W, B
001FA2 6EE5           04345         MOVWF   POSTDEC1
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE 83


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

001FA4 EC?? F0??      04346         CALL    __moduint
001FA8 6E??           04347         MOVWF   r0x00
001FAA CFF3 F000      04348         MOVFF   PRODL, r0x01
001FAE 0E04           04349         MOVLW   0x04
001FB0 26E1           04350         ADDWF   FSR1L, F
001FB2 0E30           04351         MOVLW   0x30
001FB4 26??           04352         ADDWF   r0x00, F
001FB6 50??           04353         MOVF    r0x00, W
001FB8 ????           04354         BANKSEL (_print_tela_s_temp_1_227 + 3)
001FBA 6F??           04355         MOVWF   (_print_tela_s_temp_1_227 + 3), B
                      04356 ;       .line   1261; interface.c       s_temp[1] = ((temp / 10) % 10) + 0x30;
001FBC 0E00           04357         MOVLW   0x00
001FBE 6EE5           04358         MOVWF   POSTDEC1
001FC0 0E0A           04359         MOVLW   0x0a
001FC2 6EE5           04360         MOVWF   POSTDEC1
001FC4 ????           04361         BANKSEL (_temp + 1)
001FC6 51??           04362         MOVF    (_temp + 1), W, B
001FC8 6EE5           04363         MOVWF   POSTDEC1
001FCA ????           04364         BANKSEL _temp
001FCC 51??           04365         MOVF    _temp, W, B
001FCE 6EE5           04366         MOVWF   POSTDEC1
001FD0 EC?? F0??      04367         CALL    __divuint
001FD4 6E??           04368         MOVWF   r0x00
001FD6 CFF3 F000      04369         MOVFF   PRODL, r0x01
001FDA 0E04           04370         MOVLW   0x04
001FDC 26E1           04371         ADDWF   FSR1L, F
001FDE 0E00           04372         MOVLW   0x00
001FE0 6EE5           04373         MOVWF   POSTDEC1
001FE2 0E0A           04374         MOVLW   0x0a
001FE4 6EE5           04375         MOVWF   POSTDEC1
001FE6 50??           04376         MOVF    r0x01, W
001FE8 6EE5           04377         MOVWF   POSTDEC1
001FEA 50??           04378         MOVF    r0x00, W
001FEC 6EE5           04379         MOVWF   POSTDEC1
001FEE EC?? F0??      04380         CALL    __moduint
001FF2 6E??           04381         MOVWF   r0x00
001FF4 CFF3 F000      04382         MOVFF   PRODL, r0x01
001FF8 0E04           04383         MOVLW   0x04
001FFA 26E1           04384         ADDWF   FSR1L, F
001FFC 0E30           04385         MOVLW   0x30
001FFE 26??           04386         ADDWF   r0x00, F
002000 50??           04387         MOVF    r0x00, W
002002 ????           04388         BANKSEL (_print_tela_s_temp_1_227 + 1)
002004 6F??           04389         MOVWF   (_print_tela_s_temp_1_227 + 1), B
                      04390 ;       .line   1262; interface.c       s_temp[0] = ((temp / 100) % 10) + 0x30;
002006 0E00           04391         MOVLW   0x00
002008 6EE5           04392         MOVWF   POSTDEC1
00200A 0E64           04393         MOVLW   0x64
00200C 6EE5           04394         MOVWF   POSTDEC1
00200E ????           04395         BANKSEL (_temp + 1)
002010 51??           04396         MOVF    (_temp + 1), W, B
002012 6EE5           04397         MOVWF   POSTDEC1
002014 ????           04398         BANKSEL _temp
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE 84


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

002016 51??           04399         MOVF    _temp, W, B
002018 6EE5           04400         MOVWF   POSTDEC1
00201A EC?? F0??      04401         CALL    __divuint
00201E 6E??           04402         MOVWF   r0x00
002020 CFF3 F000      04403         MOVFF   PRODL, r0x01
002024 0E04           04404         MOVLW   0x04
002026 26E1           04405         ADDWF   FSR1L, F
002028 0E00           04406         MOVLW   0x00
00202A 6EE5           04407         MOVWF   POSTDEC1
00202C 0E0A           04408         MOVLW   0x0a
00202E 6EE5           04409         MOVWF   POSTDEC1
002030 50??           04410         MOVF    r0x01, W
002032 6EE5           04411         MOVWF   POSTDEC1
002034 50??           04412         MOVF    r0x00, W
002036 6EE5           04413         MOVWF   POSTDEC1
002038 EC?? F0??      04414         CALL    __moduint
00203C 6E??           04415         MOVWF   r0x00
00203E CFF3 F000      04416         MOVFF   PRODL, r0x01
002042 0E04           04417         MOVLW   0x04
002044 26E1           04418         ADDWF   FSR1L, F
002046 0E30           04419         MOVLW   0x30
002048 26??           04420         ADDWF   r0x00, F
00204A 50??           04421         MOVF    r0x00, W
00204C ????           04422         BANKSEL _print_tela_s_temp_1_227
00204E 6F??           04423         MOVWF   _print_tela_s_temp_1_227, B
                      04424 ;       .line   1263; interface.c       print_lcd_string(s_temp);
002050 0E??           04425         MOVLW   HIGH(_print_tela_s_temp_1_227)
002052 6E??           04426         MOVWF   r0x01
002054 0E??           04427         MOVLW   LOW(_print_tela_s_temp_1_227)
002056 6E??           04428         MOVWF   r0x00
002058 0E80           04429         MOVLW   0x80
00205A 6E??           04430         MOVWF   r0x02
00205C 50??           04431         MOVF    r0x02, W
00205E 6EE5           04432         MOVWF   POSTDEC1
002060 50??           04433         MOVF    r0x01, W
002062 6EE5           04434         MOVWF   POSTDEC1
002064 50??           04435         MOVF    r0x00, W
002066 6EE5           04436         MOVWF   POSTDEC1
002068 EC?? F0??      04437         CALL    _print_lcd_string
00206C 0E03           04438         MOVLW   0x03
00206E 26E1           04439         ADDWF   FSR1L, F
                      04440 ;       .line   1264; interface.c       print_lcd_string(" L:");
002070 0E??           04441         MOVLW   UPPER(__str_62)
002072 6E??           04442         MOVWF   r0x02
002074 0E??           04443         MOVLW   HIGH(__str_62)
002076 6E??           04444         MOVWF   r0x01
002078 0E??           04445         MOVLW   LOW(__str_62)
00207A 6E??           04446         MOVWF   r0x00
00207C 50??           04447         MOVF    r0x02, W
00207E 6EE5           04448         MOVWF   POSTDEC1
002080 50??           04449         MOVF    r0x01, W
002082 6EE5           04450         MOVWF   POSTDEC1
002084 50??           04451         MOVF    r0x00, W
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE 85


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

002086 6EE5           04452         MOVWF   POSTDEC1
002088 EC?? F0??      04453         CALL    _print_lcd_string
00208C 0E03           04454         MOVLW   0x03
00208E 26E1           04455         ADDWF   FSR1L, F
                      04456 ;       .line   1265; interface.c       s_lumi[2] = (lumi % 10) + 0x30;
002090 0E00           04457         MOVLW   0x00
002092 6EE5           04458         MOVWF   POSTDEC1
002094 0E0A           04459         MOVLW   0x0a
002096 6EE5           04460         MOVWF   POSTDEC1
002098 ????           04461         BANKSEL (_lumi + 1)
00209A 51??           04462         MOVF    (_lumi + 1), W, B
00209C 6EE5           04463         MOVWF   POSTDEC1
00209E ????           04464         BANKSEL _lumi
0020A0 51??           04465         MOVF    _lumi, W, B
0020A2 6EE5           04466         MOVWF   POSTDEC1
0020A4 EC?? F0??      04467         CALL    __moduint
0020A8 6E??           04468         MOVWF   r0x00
0020AA CFF3 F000      04469         MOVFF   PRODL, r0x01
0020AE 0E04           04470         MOVLW   0x04
0020B0 26E1           04471         ADDWF   FSR1L, F
0020B2 0E30           04472         MOVLW   0x30
0020B4 26??           04473         ADDWF   r0x00, F
0020B6 50??           04474         MOVF    r0x00, W
0020B8 ????           04475         BANKSEL (_print_tela_s_lumi_1_227 + 2)
0020BA 6F??           04476         MOVWF   (_print_tela_s_lumi_1_227 + 2), B
                      04477 ;       .line   1266; interface.c       s_lumi[1] = ((lumi / 10) % 10) + 0x30;
0020BC 0E00           04478         MOVLW   0x00
0020BE 6EE5           04479         MOVWF   POSTDEC1
0020C0 0E0A           04480         MOVLW   0x0a
0020C2 6EE5           04481         MOVWF   POSTDEC1
0020C4 ????           04482         BANKSEL (_lumi + 1)
0020C6 51??           04483         MOVF    (_lumi + 1), W, B
0020C8 6EE5           04484         MOVWF   POSTDEC1
0020CA ????           04485         BANKSEL _lumi
0020CC 51??           04486         MOVF    _lumi, W, B
0020CE 6EE5           04487         MOVWF   POSTDEC1
0020D0 EC?? F0??      04488         CALL    __divuint
0020D4 6E??           04489         MOVWF   r0x00
0020D6 CFF3 F000      04490         MOVFF   PRODL, r0x01
0020DA 0E04           04491         MOVLW   0x04
0020DC 26E1           04492         ADDWF   FSR1L, F
0020DE 0E00           04493         MOVLW   0x00
0020E0 6EE5           04494         MOVWF   POSTDEC1
0020E2 0E0A           04495         MOVLW   0x0a
0020E4 6EE5           04496         MOVWF   POSTDEC1
0020E6 50??           04497         MOVF    r0x01, W
0020E8 6EE5           04498         MOVWF   POSTDEC1
0020EA 50??           04499         MOVF    r0x00, W
0020EC 6EE5           04500         MOVWF   POSTDEC1
0020EE EC?? F0??      04501         CALL    __moduint
0020F2 6E??           04502         MOVWF   r0x00
0020F4 CFF3 F000      04503         MOVFF   PRODL, r0x01
0020F8 0E04           04504         MOVLW   0x04
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE 86


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0020FA 26E1           04505         ADDWF   FSR1L, F
0020FC 0E30           04506         MOVLW   0x30
0020FE 26??           04507         ADDWF   r0x00, F
002100 50??           04508         MOVF    r0x00, W
002102 ????           04509         BANKSEL (_print_tela_s_lumi_1_227 + 1)
002104 6F??           04510         MOVWF   (_print_tela_s_lumi_1_227 + 1), B
                      04511 ;       .line   1267; interface.c       s_lumi[0] = ((lumi / 100) % 10) + 0x30;
002106 0E00           04512         MOVLW   0x00
002108 6EE5           04513         MOVWF   POSTDEC1
00210A 0E64           04514         MOVLW   0x64
00210C 6EE5           04515         MOVWF   POSTDEC1
00210E ????           04516         BANKSEL (_lumi + 1)
002110 51??           04517         MOVF    (_lumi + 1), W, B
002112 6EE5           04518         MOVWF   POSTDEC1
002114 ????           04519         BANKSEL _lumi
002116 51??           04520         MOVF    _lumi, W, B
002118 6EE5           04521         MOVWF   POSTDEC1
00211A EC?? F0??      04522         CALL    __divuint
00211E 6E??           04523         MOVWF   r0x00
002120 CFF3 F000      04524         MOVFF   PRODL, r0x01
002124 0E04           04525         MOVLW   0x04
002126 26E1           04526         ADDWF   FSR1L, F
002128 0E00           04527         MOVLW   0x00
00212A 6EE5           04528         MOVWF   POSTDEC1
00212C 0E0A           04529         MOVLW   0x0a
00212E 6EE5           04530         MOVWF   POSTDEC1
002130 50??           04531         MOVF    r0x01, W
002132 6EE5           04532         MOVWF   POSTDEC1
002134 50??           04533         MOVF    r0x00, W
002136 6EE5           04534         MOVWF   POSTDEC1
002138 EC?? F0??      04535         CALL    __moduint
00213C 6E??           04536         MOVWF   r0x00
00213E CFF3 F000      04537         MOVFF   PRODL, r0x01
002142 0E04           04538         MOVLW   0x04
002144 26E1           04539         ADDWF   FSR1L, F
002146 0E30           04540         MOVLW   0x30
002148 26??           04541         ADDWF   r0x00, F
00214A 50??           04542         MOVF    r0x00, W
00214C ????           04543         BANKSEL _print_tela_s_lumi_1_227
00214E 6F??           04544         MOVWF   _print_tela_s_lumi_1_227, B
                      04545 ;       .line   1268; interface.c       print_lcd_string(s_lumi);
002150 0E??           04546         MOVLW   HIGH(_print_tela_s_lumi_1_227)
002152 6E??           04547         MOVWF   r0x01
002154 0E??           04548         MOVLW   LOW(_print_tela_s_lumi_1_227)
002156 6E??           04549         MOVWF   r0x00
002158 0E80           04550         MOVLW   0x80
00215A 6E??           04551         MOVWF   r0x02
00215C 50??           04552         MOVF    r0x02, W
00215E 6EE5           04553         MOVWF   POSTDEC1
002160 50??           04554         MOVF    r0x01, W
002162 6EE5           04555         MOVWF   POSTDEC1
002164 50??           04556         MOVF    r0x00, W
002166 6EE5           04557         MOVWF   POSTDEC1
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE 87


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

002168 EC?? F0??      04558         CALL    _print_lcd_string
00216C 0E03           04559         MOVLW   0x03
00216E 26E1           04560         ADDWF   FSR1L, F
                      04561 ;       .line   1269; interface.c       print_lcd_string("   ");
002170 0E??           04562         MOVLW   UPPER(__str_24)
002172 6E??           04563         MOVWF   r0x02
002174 0E??           04564         MOVLW   HIGH(__str_24)
002176 6E??           04565         MOVWF   r0x01
002178 0E??           04566         MOVLW   LOW(__str_24)
00217A 6E??           04567         MOVWF   r0x00
00217C 50??           04568         MOVF    r0x02, W
00217E 6EE5           04569         MOVWF   POSTDEC1
002180 50??           04570         MOVF    r0x01, W
002182 6EE5           04571         MOVWF   POSTDEC1
002184 50??           04572         MOVF    r0x00, W
002186 6EE5           04573         MOVWF   POSTDEC1
002188 EC?? F0??      04574         CALL    _print_lcd_string
00218C 0E03           04575         MOVLW   0x03
00218E 26E1           04576         ADDWF   FSR1L, F
                      04577 ;       .line   1270; interface.c       print_lcd_ln();
002190 EC?? F0??      04578         CALL    _print_lcd_ln
                      04579 ;       .line   1271; interface.c       print_lcd_string("5:OK     6:");
002194 0E??           04580         MOVLW   UPPER(__str_63)
002196 6E??           04581         MOVWF   r0x02
002198 0E??           04582         MOVLW   HIGH(__str_63)
00219A 6E??           04583         MOVWF   r0x01
00219C 0E??           04584         MOVLW   LOW(__str_63)
00219E 6E??           04585         MOVWF   r0x00
0021A0 50??           04586         MOVF    r0x02, W
0021A2 6EE5           04587         MOVWF   POSTDEC1
0021A4 50??           04588         MOVF    r0x01, W
0021A6 6EE5           04589         MOVWF   POSTDEC1
0021A8 50??           04590         MOVF    r0x00, W
0021AA 6EE5           04591         MOVWF   POSTDEC1
0021AC EC?? F0??      04592         CALL    _print_lcd_string
0021B0 0E03           04593         MOVLW   0x03
0021B2 26E1           04594         ADDWF   FSR1L, F
                      04595 ;       .line   1272; interface.c       print_lcd_tela();
0021B4 EC?? F0??      04596         CALL    _print_lcd_tela
                      04597 ;       .line   1273; interface.c       break;
0021B8 D???           04598         BRA     _01835_DS_
0021BA                04599 _01831_DS_:
                      04600 ;       .line   1275; interface.c       print_lcd_string("FIM DOS TESTES  ");
0021BA 0E??           04601         MOVLW   UPPER(__str_64)
0021BC 6E??           04602         MOVWF   r0x02
0021BE 0E??           04603         MOVLW   HIGH(__str_64)
0021C0 6E??           04604         MOVWF   r0x01
0021C2 0E??           04605         MOVLW   LOW(__str_64)
0021C4 6E??           04606         MOVWF   r0x00
0021C6 50??           04607         MOVF    r0x02, W
0021C8 6EE5           04608         MOVWF   POSTDEC1
0021CA 50??           04609         MOVF    r0x01, W
0021CC 6EE5           04610         MOVWF   POSTDEC1
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE 88


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0021CE 50??           04611         MOVF    r0x00, W
0021D0 6EE5           04612         MOVWF   POSTDEC1
0021D2 EC?? F0??      04613         CALL    _print_lcd_string
0021D6 0E03           04614         MOVLW   0x03
0021D8 26E1           04615         ADDWF   FSR1L, F
                      04616 ;       .line   1276; interface.c       print_lcd_ln();
0021DA EC?? F0??      04617         CALL    _print_lcd_ln
                      04618 ;       .line   1277; interface.c       print_lcd_string("4:");
0021DE 0E??           04619         MOVLW   UPPER(__str_65)
0021E0 6E??           04620         MOVWF   r0x02
0021E2 0E??           04621         MOVLW   HIGH(__str_65)
0021E4 6E??           04622         MOVWF   r0x01
0021E6 0E??           04623         MOVLW   LOW(__str_65)
0021E8 6E??           04624         MOVWF   r0x00
0021EA 50??           04625         MOVF    r0x02, W
0021EC 6EE5           04626         MOVWF   POSTDEC1
0021EE 50??           04627         MOVF    r0x01, W
0021F0 6EE5           04628         MOVWF   POSTDEC1
0021F2 50??           04629         MOVF    r0x00, W
0021F4 6EE5           04630         MOVWF   POSTDEC1
0021F6 EC?? F0??      04631         CALL    _print_lcd_string
0021FA 0E03           04632         MOVLW   0x03
0021FC 26E1           04633         ADDWF   FSR1L, F
                      04634 ;       .line   1278; interface.c       print_lcd_tela();
0021FE EC?? F0??      04635         CALL    _print_lcd_tela
                      04636 ;       .line   1279; interface.c       print_lcd_string("             ");
002202 0E??           04637         MOVLW   UPPER(__str_42)
002204 6E??           04638         MOVWF   r0x02
002206 0E??           04639         MOVLW   HIGH(__str_42)
002208 6E??           04640         MOVWF   r0x01
00220A 0E??           04641         MOVLW   LOW(__str_42)
00220C 6E??           04642         MOVWF   r0x00
00220E 50??           04643         MOVF    r0x02, W
002210 6EE5           04644         MOVWF   POSTDEC1
002212 50??           04645         MOVF    r0x01, W
002214 6EE5           04646         MOVWF   POSTDEC1
002216 50??           04647         MOVF    r0x00, W
002218 6EE5           04648         MOVWF   POSTDEC1
00221A EC?? F0??      04649         CALL    _print_lcd_string
00221E 0E03           04650         MOVLW   0x03
                      04651 ;       .line   1280; interface.c       break;
002220 26E1           04652         ADDWF   FSR1L, F
002222                04653 _01835_DS_:
                      04654 ;       .line   1285; interface.c       }
002222 CFE4 F000      04655         MOVFF   PREINC1, r0x04
002226 CFE4 F000      04656         MOVFF   PREINC1, r0x03
00222A CFE4 F000      04657         MOVFF   PREINC1, r0x02
00222E CFE4 F000      04658         MOVFF   PREINC1, r0x01
002232 CFE4 F000      04659         MOVFF   PREINC1, r0x00
002236 CFE4 FFD9      04660         MOVFF   PREINC1, FSR2L
00223A 0012           04661         RETURN  
                      04662 
                      04663 ; ; Starting pCode block
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE 89


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      04664 S_interface__serial_lcd code
000000                04665 _serial_lcd:
                      04666 ;       .line   915; interface.c        unsigned char serial_lcd()
000000 CFD9 FFE5      04667         MOVFF   FSR2L, POSTDEC1
000004 CFE1 FFD9      04668         MOVFF   FSR1L, FSR2L
                      04669 ;       .line   917; interface.c        return SERIAL_LCD;
000008 0E34           04670         MOVLW   0x34
00000A CFE4 FFD9      04671         MOVFF   PREINC1, FSR2L
00000E 0012           04672         RETURN  
                      04673 
                      04674 ; ; Starting pCode block
                      04675 S_interface__teste_fim  code
000000                04676 _teste_fim:
                      04677 ;       .line   904; interface.c        unsigned char teste_fim(void)
000000 CFD9 FFE5      04678         MOVFF   FSR2L, POSTDEC1
000004 CFE1 FFD9      04679         MOVFF   FSR1L, FSR2L
000008 C??? F???      04680         MOVFF   r0x00, POSTDEC1
                      04681 ;       .line   908; interface.c        tecla = le_tecla();
00000C EC?? F0??      04682         CALL    _le_tecla
000010 6E??           04683         MOVWF   r0x00
                      04684 ;       .line   909; interface.c        if (tecla == SW4)
000012 50??           04685         MOVF    r0x00, W
000014 0A01           04686         XORLW   0x01
000016 E1??           04687         BNZ     _01736_DS_
                      04688 ;       .line   910; interface.c        return TELA_PRINCIPAL;
000018 6AE8           04689         CLRF    WREG
00001A D???           04690         BRA     _01737_DS_
00001C                04691 _01736_DS_:
                      04692 ;       .line   912; interface.c        return TESTE_FIM;
00001C 0E33           04693         MOVLW   0x33
00001E                04694 _01737_DS_:
00001E CFE4 F000      04695         MOVFF   PREINC1, r0x00
000022 CFE4 FFD9      04696         MOVFF   PREINC1, FSR2L
000026 0012           04697         RETURN  
                      04698 
                      04699 ; ; Starting pCode block
                      04700 S_interface__teste_sensores_mais        code
000000                04701 _teste_sensores_mais:
                      04702 ;       .line   891; interface.c        unsigned char teste_sensores_mais(void)
000000 CFD9 FFE5      04703         MOVFF   FSR2L, POSTDEC1
000004 CFE1 FFD9      04704         MOVFF   FSR1L, FSR2L
000008 C??? F???      04705         MOVFF   r0x00, POSTDEC1
                      04706 ;       .line   895; interface.c        tecla = le_tecla();
00000C EC?? F0??      04707         CALL    _le_tecla
000010 6E??           04708         MOVWF   r0x00
                      04709 ;       .line   896; interface.c        if (tecla == SW5)
000012 50??           04710         MOVF    r0x00, W
000014 0A02           04711         XORLW   0x02
000016 E1??           04712         BNZ     _01717_DS_
                      04713 ;       .line   897; interface.c        return TESTE_FIM;
000018 0E33           04714         MOVLW   0x33
00001A D???           04715         BRA     _01719_DS_
00001C                04716 _01717_DS_:
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE 90


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      04717 ;       .line   898; interface.c        else if (tecla == SW6)
00001C 50??           04718         MOVF    r0x00, W
00001E 0A03           04719         XORLW   0x03
000020 E1??           04720         BNZ     _01718_DS_
                      04721 ;       .line   899; interface.c        return TELA_PRINCIPAL;
000022 6AE8           04722         CLRF    WREG
000024 D???           04723         BRA     _01719_DS_
000026                04724 _01718_DS_:
                      04725 ;       .line   901; interface.c        return TESTE_SENSORES_MAIS;
000026 0E32           04726         MOVLW   0x32
000028                04727 _01719_DS_:
000028 CFE4 F000      04728         MOVFF   PREINC1, r0x00
00002C CFE4 FFD9      04729         MOVFF   PREINC1, FSR2L
000030 0012           04730         RETURN  
                      04731 
                      04732 ; ; Starting pCode block
                      04733 S_interface__teste_sensores     code
000000                04734 _teste_sensores:
                      04735 ;       .line   878; interface.c        unsigned char teste_sensores(void)
000000 CFD9 FFE5      04736         MOVFF   FSR2L, POSTDEC1
000004 CFE1 FFD9      04737         MOVFF   FSR1L, FSR2L
000008 C??? F???      04738         MOVFF   r0x00, POSTDEC1
                      04739 ;       .line   882; interface.c        tecla = le_tecla();
00000C EC?? F0??      04740         CALL    _le_tecla
000010 6E??           04741         MOVWF   r0x00
                      04742 ;       .line   883; interface.c        if (tecla == SW3)
000012 50??           04743         MOVF    r0x00, W
000014 E1??           04744         BNZ     _01698_DS_
                      04745 ;       .line   884; interface.c        return TESTE_SENSORES_MAIS;
000016 0E32           04746         MOVLW   0x32
000018 D???           04747         BRA     _01700_DS_
00001A                04748 _01698_DS_:
                      04749 ;       .line   885; interface.c        else if (tecla == SW4)
00001A 50??           04750         MOVF    r0x00, W
00001C 0A01           04751         XORLW   0x01
00001E E1??           04752         BNZ     _01699_DS_
                      04753 ;       .line   886; interface.c        return TELA_PRINCIPAL;
000020 6AE8           04754         CLRF    WREG
000022 D???           04755         BRA     _01700_DS_
000024                04756 _01699_DS_:
                      04757 ;       .line   888; interface.c        return TESTE_SENSORES;
000024 0E31           04758         MOVLW   0x31
000026                04759 _01700_DS_:
000026 CFE4 F000      04760         MOVFF   PREINC1, r0x00
00002A CFE4 FFD9      04761         MOVFF   PREINC1, FSR2L
00002E 0012           04762         RETURN  
                      04763 
                      04764 ; ; Starting pCode block
                      04765 S_interface__teste_leds_pwm     code
000000                04766 _teste_leds_pwm:
                      04767 ;       .line   848; interface.c        unsigned char teste_leds_pwm(void)
000000 CFD9 FFE5      04768         MOVFF   FSR2L, POSTDEC1
000004 CFE1 FFD9      04769         MOVFF   FSR1L, FSR2L
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE 91


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000008 C??? F???      04770         MOVFF   r0x00, POSTDEC1
00000C C??? F???      04771         MOVFF   r0x01, POSTDEC1
000010 C??? F???      04772         MOVFF   r0x02, POSTDEC1
000014 C??? F???      04773         MOVFF   r0x03, POSTDEC1
000018 ????           04774         BANKSEL _teste_pwm
                      04775 ;       .line   853; interface.c        set_pwm(0, teste_pwm);
00001A 51??           04776         MOVF    _teste_pwm, W, B
00001C 6EE5           04777         MOVWF   POSTDEC1
00001E 0E00           04778         MOVLW   0x00
000020 6EE5           04779         MOVWF   POSTDEC1
000022 EC?? F0??      04780         CALL    _set_pwm
000026 52E6           04781         MOVF    POSTINC1, F
000028 52E6           04782         MOVF    POSTINC1, F
00002A ????           04783         BANKSEL _teste_pwm
                      04784 ;       .line   854; interface.c        set_pwm(1, teste_pwm);
00002C 51??           04785         MOVF    _teste_pwm, W, B
00002E 6EE5           04786         MOVWF   POSTDEC1
000030 0E01           04787         MOVLW   0x01
000032 6EE5           04788         MOVWF   POSTDEC1
000034 EC?? F0??      04789         CALL    _set_pwm
000038 52E6           04790         MOVF    POSTINC1, F
00003A 52E6           04791         MOVF    POSTINC1, F
                      04792 ;       .line   856; interface.c        tecla = le_tecla();
00003C EC?? F0??      04793         CALL    _le_tecla
000040 6E??           04794         MOVWF   r0x00
                      04795 ;       .line   857; interface.c        tecla_c = le_tecla_continua();
000042 EC?? F0??      04796         CALL    _le_tecla_continua
000046 6E??           04797         MOVWF   r0x01
                      04798 ;       .line   859; interface.c        if (tecla_c == SW5) {
000048 50??           04799         MOVF    r0x01, W
00004A 0A02           04800         XORLW   0x02
00004C E1??           04801         BNZ     _01662_DS_
                      04802 ;       .line   860; interface.c        if (teste_pwm + 1 > 255)
00004E C??? F???      04803         MOVFF   _teste_pwm, r0x02
000052 6A??           04804         CLRF    r0x03
000054 4A??           04805         INFSNZ  r0x02, F
000056 2A??           04806         INCF    r0x03, F
000058 50??           04807         MOVF    r0x03, W
00005A 0F80           04808         ADDLW   0x80
00005C 0F7F           04809         ADDLW   0x7f
00005E E1??           04810         BNZ     _01686_DS_
000060 0E00           04811         MOVLW   0x00
000062 5C??           04812         SUBWF   r0x02, W
000064                04813 _01686_DS_:
000064 E3??           04814         BNC     _01648_DS_
                      04815 ;       .line   861; interface.c        teste_pwm = 255;
000066 0EFF           04816         MOVLW   0xff
000068 ????           04817         BANKSEL _teste_pwm
00006A 6F??           04818         MOVWF   _teste_pwm, B
00006C D???           04819         BRA     _01663_DS_
00006E                04820 _01648_DS_:
00006E ????           04821         BANKSEL _teste_pwm
                      04822 ;       .line   863; interface.c        teste_pwm += 1;
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE 92


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000070 2B??           04823         INCF    _teste_pwm, F, B
000072 D???           04824         BRA     _01663_DS_
000074                04825 _01662_DS_:
                      04826 ;       .line   864; interface.c        } else if (tecla_c == SW3) {
000074 50??           04827         MOVF    r0x01, W
000076 E1??           04828         BNZ     _01659_DS_
                      04829 ;       .line   865; interface.c        if (teste_pwm - 1 < 0)
000078 C??? F???      04830         MOVFF   _teste_pwm, r0x01
00007C 6A??           04831         CLRF    r0x02
00007E 0EFF           04832         MOVLW   0xff
000080 26??           04833         ADDWF   r0x01, F
000082 22??           04834         ADDWFC  r0x02, F
000084 80D8           04835         BSF     STATUS, 0
000086 AE??           04836         BTFSS   r0x02, 7
000088 90D8           04837         BCF     STATUS, 0
00008A E3??           04838         BNC     _01651_DS_
00008C ????           04839         BANKSEL _teste_pwm
                      04840 ;       .line   866; interface.c        teste_pwm = 0;
00008E 6B??           04841         CLRF    _teste_pwm, B
000090 D???           04842         BRA     _01663_DS_
000092                04843 _01651_DS_:
000092 ????           04844         BANKSEL _teste_pwm
                      04845 ;       .line   868; interface.c        teste_pwm -= 1;
000094 07??           04846         DECF    _teste_pwm, F, B
000096 D???           04847         BRA     _01663_DS_
000098                04848 _01659_DS_:
                      04849 ;       .line   869; interface.c        } else if (tecla == SW6) {
000098 50??           04850         MOVF    r0x00, W
00009A 0A03           04851         XORLW   0x03
00009C E1??           04852         BNZ     _01656_DS_
                      04853 ;       .line   870; interface.c        return TESTE_SENSORES;
00009E 0E31           04854         MOVLW   0x31
0000A0 D???           04855         BRA     _01664_DS_
0000A2                04856 _01656_DS_:
                      04857 ;       .line   871; interface.c        } else if (tecla == SW4) {
0000A2 50??           04858         MOVF    r0x00, W
0000A4 0A01           04859         XORLW   0x01
0000A6 E1??           04860         BNZ     _01663_DS_
                      04861 ;       .line   872; interface.c        return TELA_PRINCIPAL;
0000A8 6AE8           04862         CLRF    WREG
0000AA D???           04863         BRA     _01664_DS_
0000AC                04864 _01663_DS_:
                      04865 ;       .line   875; interface.c        return TESTE_LEDS_PWM;
0000AC 0E30           04866         MOVLW   0x30
0000AE                04867 _01664_DS_:
0000AE CFE4 F000      04868         MOVFF   PREINC1, r0x03
0000B2 CFE4 F000      04869         MOVFF   PREINC1, r0x02
0000B6 CFE4 F000      04870         MOVFF   PREINC1, r0x01
0000BA CFE4 F000      04871         MOVFF   PREINC1, r0x00
0000BE CFE4 FFD9      04872         MOVFF   PREINC1, FSR2L
0000C2 0012           04873         RETURN  
                      04874 
                      04875 ; ; Starting pCode block
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE 93


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      04876 S_interface__teste_leds_timer   code
000000                04877 _teste_leds_timer:
                      04878 ;       .line   817; interface.c        unsigned char teste_leds_timer(void)
000000 CFD9 FFE5      04879         MOVFF   FSR2L, POSTDEC1
000004 CFE1 FFD9      04880         MOVFF   FSR1L, FSR2L
000008 C??? F???      04881         MOVFF   r0x00, POSTDEC1
00000C C??? F???      04882         MOVFF   r0x01, POSTDEC1
000010 C??? F???      04883         MOVFF   r0x02, POSTDEC1
000014 C??? F???      04884         MOVFF   r0x03, POSTDEC1
000018 C??? F???      04885         MOVFF   r0x04, POSTDEC1
00001C C??? F???      04886         MOVFF   r0x05, POSTDEC1
                      04887 ;       .line   822; interface.c        if (timer_expired(timer)) {
000020 0E??           04888         MOVLW   HIGH(_timer)
000022 6E??           04889         MOVWF   r0x01
000024 0E??           04890         MOVLW   LOW(_timer)
000026 6E??           04891         MOVWF   r0x00
000028 0E80           04892         MOVLW   0x80
00002A 6E??           04893         MOVWF   r0x02
00002C 50??           04894         MOVF    r0x02, W
00002E 6EE5           04895         MOVWF   POSTDEC1
000030 50??           04896         MOVF    r0x01, W
000032 6EE5           04897         MOVWF   POSTDEC1
000034 50??           04898         MOVF    r0x00, W
000036 6EE5           04899         MOVWF   POSTDEC1
000038 EC?? F0??      04900         CALL    _timer_expired
00003C 6E??           04901         MOVWF   r0x00
00003E 0E03           04902         MOVLW   0x03
000040 26E1           04903         ADDWF   FSR1L, F
000042 50??           04904         MOVF    r0x00, W
000044 E0??           04905         BZ      _01601_DS_
                      04906 ;       .line   823; interface.c        timer_start(timer);
000046 0E??           04907         MOVLW   HIGH(_timer)
000048 6E??           04908         MOVWF   r0x01
00004A 0E??           04909         MOVLW   LOW(_timer)
00004C 6E??           04910         MOVWF   r0x00
00004E 0E80           04911         MOVLW   0x80
000050 6E??           04912         MOVWF   r0x02
000052 50??           04913         MOVF    r0x02, W
000054 6EE5           04914         MOVWF   POSTDEC1
000056 50??           04915         MOVF    r0x01, W
000058 6EE5           04916         MOVWF   POSTDEC1
00005A 50??           04917         MOVF    r0x00, W
00005C 6EE5           04918         MOVWF   POSTDEC1
00005E EC?? F0??      04919         CALL    _timer_start
000062 0E03           04920         MOVLW   0x03
000064 26E1           04921         ADDWF   FSR1L, F
                      04922 ;       .line   824; interface.c        led(0, FLIP);
000066 0E02           04923         MOVLW   0x02
000068 6EE5           04924         MOVWF   POSTDEC1
00006A 0E00           04925         MOVLW   0x00
00006C 6EE5           04926         MOVWF   POSTDEC1
00006E EC?? F0??      04927         CALL    _led
000072 52E6           04928         MOVF    POSTINC1, F
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE 94


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000074 52E6           04929         MOVF    POSTINC1, F
                      04930 ;       .line   825; interface.c        led(1, FLIP);
000076 0E02           04931         MOVLW   0x02
000078 6EE5           04932         MOVWF   POSTDEC1
00007A 0E01           04933         MOVLW   0x01
00007C 6EE5           04934         MOVWF   POSTDEC1
00007E EC?? F0??      04935         CALL    _led
000082 52E6           04936         MOVF    POSTINC1, F
000084 52E6           04937         MOVF    POSTINC1, F
                      04938 ;       .line   826; interface.c        led(2, FLIP);
000086 0E02           04939         MOVLW   0x02
000088 6EE5           04940         MOVWF   POSTDEC1
00008A 0E02           04941         MOVLW   0x02
00008C 6EE5           04942         MOVWF   POSTDEC1
00008E EC?? F0??      04943         CALL    _led
000092 52E6           04944         MOVF    POSTINC1, F
000094 52E6           04945         MOVF    POSTINC1, F
000096                04946 _01601_DS_:
                      04947 ;       .line   829; interface.c        tecla = le_tecla();
000096 EC?? F0??      04948         CALL    _le_tecla
00009A 6E??           04949         MOVWF   r0x00
                      04950 ;       .line   830; interface.c        tecla_c = le_tecla_continua();
00009C EC?? F0??      04951         CALL    _le_tecla_continua
0000A0 6E??           04952         MOVWF   r0x01
                      04953 ;       .line   832; interface.c        if (tecla_c == SW6) {
0000A2 50??           04954         MOVF    r0x01, W
0000A4 0A03           04955         XORLW   0x03
0000A6 E1??           04956         BNZ     _01614_DS_
0000A8                04957 _01637_DS_:
0000A8 ????           04958         BANKSEL (_timer + 4)
                      04959 ;       .line   833; interface.c        timer[1] += 10;
0000AA 51??           04960         MOVF    (_timer + 4), W, B
0000AC 0F0A           04961         ADDLW   0x0a
0000AE 6E??           04962         MOVWF   r0x02
0000B0 0E00           04963         MOVLW   0x00
0000B2 ????           04964         BANKSEL (_timer + 5)
0000B4 21??           04965         ADDWFC  (_timer + 5), W, B
0000B6 6E??           04966         MOVWF   r0x03
0000B8 0E00           04967         MOVLW   0x00
0000BA ????           04968         BANKSEL (_timer + 6)
0000BC 21??           04969         ADDWFC  (_timer + 6), W, B
0000BE 6E??           04970         MOVWF   r0x04
0000C0 0E00           04971         MOVLW   0x00
0000C2 ????           04972         BANKSEL (_timer + 7)
0000C4 21??           04973         ADDWFC  (_timer + 7), W, B
0000C6 6E??           04974         MOVWF   r0x05
0000C8 50??           04975         MOVF    r0x02, W
0000CA ????           04976         BANKSEL (_timer + 4)
0000CC 6F??           04977         MOVWF   (_timer + 4), B
0000CE 50??           04978         MOVF    r0x03, W
0000D0 ????           04979         BANKSEL (_timer + 5)
0000D2 6F??           04980         MOVWF   (_timer + 5), B
0000D4 50??           04981         MOVF    r0x04, W
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE 95


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0000D6 ????           04982         BANKSEL (_timer + 6)
0000D8 6F??           04983         MOVWF   (_timer + 6), B
0000DA 50??           04984         MOVF    r0x05, W
0000DC ????           04985         BANKSEL (_timer + 7)
0000DE 6F??           04986         MOVWF   (_timer + 7), B
0000E0 D???           04987         BRA     _01615_DS_
0000E2                04988 _01614_DS_:
                      04989 ;       .line   834; interface.c        } else if (tecla_c == SW4) {
0000E2 50??           04990         MOVF    r0x01, W
0000E4 0A01           04991         XORLW   0x01
0000E6 E0??           04992         BZ      _01639_DS_
0000E8 D???           04993         BRA     _01611_DS_
0000EA                04994 _01639_DS_:
0000EA ????           04995         BANKSEL (_timer + 4)
                      04996 ;       .line   835; interface.c        if (timer[1] - 10 > timer[1])
0000EC 51??           04997         MOVF    (_timer + 4), W, B
0000EE 0FF6           04998         ADDLW   0xf6
0000F0 6E??           04999         MOVWF   r0x01
0000F2 0EFF           05000         MOVLW   0xff
0000F4 ????           05001         BANKSEL (_timer + 5)
0000F6 21??           05002         ADDWFC  (_timer + 5), W, B
0000F8 6E??           05003         MOVWF   r0x02
0000FA 0EFF           05004         MOVLW   0xff
0000FC ????           05005         BANKSEL (_timer + 6)
0000FE 21??           05006         ADDWFC  (_timer + 6), W, B
000100 6E??           05007         MOVWF   r0x03
000102 0EFF           05008         MOVLW   0xff
000104 ????           05009         BANKSEL (_timer + 7)
000106 21??           05010         ADDWFC  (_timer + 7), W, B
000108 6E??           05011         MOVWF   r0x04
00010A 50??           05012         MOVF    r0x04, W
00010C ????           05013         BANKSEL (_timer + 7)
00010E 5D??           05014         SUBWF   (_timer + 7), W, B
000110 E1??           05015         BNZ     _01640_DS_
000112 50??           05016         MOVF    r0x03, W
000114 ????           05017         BANKSEL (_timer + 6)
000116 5D??           05018         SUBWF   (_timer + 6), W, B
000118 E1??           05019         BNZ     _01640_DS_
00011A 50??           05020         MOVF    r0x02, W
00011C ????           05021         BANKSEL (_timer + 5)
00011E 5D??           05022         SUBWF   (_timer + 5), W, B
000120 E1??           05023         BNZ     _01640_DS_
000122 50??           05024         MOVF    r0x01, W
000124 ????           05025         BANKSEL (_timer + 4)
000126 5D??           05026         SUBWF   (_timer + 4), W, B
000128                05027 _01640_DS_:
000128 E2??           05028         BC      _01603_DS_
00012A ????           05029         BANKSEL (_timer + 4)
                      05030 ;       .line   836; interface.c        timer[1] = 0;
00012C 6B??           05031         CLRF    (_timer + 4), B
00012E ????           05032         BANKSEL (_timer + 5)
000130 6B??           05033         CLRF    (_timer + 5), B
000132 ????           05034         BANKSEL (_timer + 6)
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE 96


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000134 6B??           05035         CLRF    (_timer + 6), B
000136 ????           05036         BANKSEL (_timer + 7)
000138 6B??           05037         CLRF    (_timer + 7), B
00013A D???           05038         BRA     _01615_DS_
00013C                05039 _01603_DS_:
                      05040 ;       .line   838; interface.c        timer[1] -= 10;
00013C 50??           05041         MOVF    r0x01, W
00013E ????           05042         BANKSEL (_timer + 4)
000140 6F??           05043         MOVWF   (_timer + 4), B
000142 50??           05044         MOVF    r0x02, W
000144 ????           05045         BANKSEL (_timer + 5)
000146 6F??           05046         MOVWF   (_timer + 5), B
000148 50??           05047         MOVF    r0x03, W
00014A ????           05048         BANKSEL (_timer + 6)
00014C 6F??           05049         MOVWF   (_timer + 6), B
00014E 50??           05050         MOVF    r0x04, W
000150 ????           05051         BANKSEL (_timer + 7)
000152 6F??           05052         MOVWF   (_timer + 7), B
000154 D???           05053         BRA     _01615_DS_
000156                05054 _01611_DS_:
                      05055 ;       .line   839; interface.c        } else if (tecla == SW5) {
000156 50??           05056         MOVF    r0x00, W
000158 0A02           05057         XORLW   0x02
00015A E1??           05058         BNZ     _01608_DS_
                      05059 ;       .line   840; interface.c        return TESTE_LEDS_PWM;
00015C 0E30           05060         MOVLW   0x30
00015E D???           05061         BRA     _01616_DS_
000160                05062 _01608_DS_:
                      05063 ;       .line   841; interface.c        } else if (tecla == SW3) {
000160 50??           05064         MOVF    r0x00, W
000162 E1??           05065         BNZ     _01615_DS_
                      05066 ;       .line   842; interface.c        return TELA_PRINCIPAL;
000164 6AE8           05067         CLRF    WREG
000166 D???           05068         BRA     _01616_DS_
000168                05069 _01615_DS_:
                      05070 ;       .line   845; interface.c        return TESTE_LEDS_TIMER;
000168 0E2F           05071         MOVLW   0x2f
00016A                05072 _01616_DS_:
00016A CFE4 F000      05073         MOVFF   PREINC1, r0x05
00016E CFE4 F000      05074         MOVFF   PREINC1, r0x04
000172 CFE4 F000      05075         MOVFF   PREINC1, r0x03
000176 CFE4 F000      05076         MOVFF   PREINC1, r0x02
00017A CFE4 F000      05077         MOVFF   PREINC1, r0x01
00017E CFE4 F000      05078         MOVFF   PREINC1, r0x00
000182 CFE4 FFD9      05079         MOVFF   PREINC1, FSR2L
000186 0012           05080         RETURN  
                      05081 
                      05082 ; ; Starting pCode block
                      05083 S_interface__teste_leds code
000000                05084 _teste_leds:
                      05085 ;       .line   800; interface.c        unsigned char teste_leds(void)
000000 CFD9 FFE5      05086         MOVFF   FSR2L, POSTDEC1
000004 CFE1 FFD9      05087         MOVFF   FSR1L, FSR2L
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE 97


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000008 C??? F???      05088         MOVFF   r0x00, POSTDEC1
                      05089 ;       .line   804; interface.c        inicializa_led();
00000C EC?? F0??      05090         CALL    _inicializa_led
                      05091 ;       .line   805; interface.c        led(0, ON);
000010 0E01           05092         MOVLW   0x01
000012 6EE5           05093         MOVWF   POSTDEC1
000014 0E00           05094         MOVLW   0x00
000016 6EE5           05095         MOVWF   POSTDEC1
000018 EC?? F0??      05096         CALL    _led
00001C 52E6           05097         MOVF    POSTINC1, F
00001E 52E6           05098         MOVF    POSTINC1, F
                      05099 ;       .line   806; interface.c        led(1, ON);
000020 0E01           05100         MOVLW   0x01
000022 6EE5           05101         MOVWF   POSTDEC1
000024 0E01           05102         MOVLW   0x01
000026 6EE5           05103         MOVWF   POSTDEC1
000028 EC?? F0??      05104         CALL    _led
00002C 52E6           05105         MOVF    POSTINC1, F
00002E 52E6           05106         MOVF    POSTINC1, F
                      05107 ;       .line   807; interface.c        led(2, ON);
000030 0E01           05108         MOVLW   0x01
000032 6EE5           05109         MOVWF   POSTDEC1
000034 0E02           05110         MOVLW   0x02
000036 6EE5           05111         MOVWF   POSTDEC1
000038 EC?? F0??      05112         CALL    _led
00003C 52E6           05113         MOVF    POSTINC1, F
00003E 52E6           05114         MOVF    POSTINC1, F
                      05115 ;       .line   808; interface.c        tecla = le_tecla();
000040 EC?? F0??      05116         CALL    _le_tecla
000044 6E??           05117         MOVWF   r0x00
                      05118 ;       .line   809; interface.c        if (tecla == SW3)
000046 50??           05119         MOVF    r0x00, W
000048 E1??           05120         BNZ     _01584_DS_
                      05121 ;       .line   810; interface.c        return TESTE_LEDS_TIMER;
00004A 0E2F           05122         MOVLW   0x2f
00004C D???           05123         BRA     _01586_DS_
00004E                05124 _01584_DS_:
                      05125 ;       .line   811; interface.c        else if (tecla == SW4)
00004E 50??           05126         MOVF    r0x00, W
000050 0A01           05127         XORLW   0x01
000052 E1??           05128         BNZ     _01585_DS_
                      05129 ;       .line   812; interface.c        return TELA_PRINCIPAL;
000054 6AE8           05130         CLRF    WREG
000056 D???           05131         BRA     _01586_DS_
000058                05132 _01585_DS_:
                      05133 ;       .line   814; interface.c        return TESTE_LEDS;
000058 0E2E           05134         MOVLW   0x2e
00005A                05135 _01586_DS_:
00005A CFE4 F000      05136         MOVFF   PREINC1, r0x00
00005E CFE4 FFD9      05137         MOVFF   PREINC1, FSR2L
000062 0012           05138         RETURN  
                      05139 
                      05140 ; ; Starting pCode block
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE 98


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      05141 S_interface__teste_serial_msg   code
000000                05142 _teste_serial_msg:
                      05143 ;       .line   787; interface.c        unsigned char teste_serial_msg(void)
000000 CFD9 FFE5      05144         MOVFF   FSR2L, POSTDEC1
000004 CFE1 FFD9      05145         MOVFF   FSR1L, FSR2L
000008 C??? F???      05146         MOVFF   r0x00, POSTDEC1
                      05147 ;       .line   791; interface.c        tecla = le_tecla();
00000C EC?? F0??      05148         CALL    _le_tecla
000010 6E??           05149         MOVWF   r0x00
                      05150 ;       .line   792; interface.c        if (tecla == SW5)
000012 50??           05151         MOVF    r0x00, W
000014 0A02           05152         XORLW   0x02
000016 E1??           05153         BNZ     _01563_DS_
                      05154 ;       .line   793; interface.c        return TESTE_LEDS;
000018 0E2E           05155         MOVLW   0x2e
00001A D???           05156         BRA     _01565_DS_
00001C                05157 _01563_DS_:
                      05158 ;       .line   794; interface.c        else if (tecla == SW6)
00001C 50??           05159         MOVF    r0x00, W
00001E 0A03           05160         XORLW   0x03
000020 E1??           05161         BNZ     _01564_DS_
                      05162 ;       .line   795; interface.c        return TELA_PRINCIPAL;
000022 6AE8           05163         CLRF    WREG
000024 D???           05164         BRA     _01565_DS_
000026                05165 _01564_DS_:
                      05166 ;       .line   797; interface.c        return TESTE_SERIAL_MSG;
000026 0E2D           05167         MOVLW   0x2d
000028                05168 _01565_DS_:
000028 CFE4 F000      05169         MOVFF   PREINC1, r0x00
00002C CFE4 FFD9      05170         MOVFF   PREINC1, FSR2L
000030 0012           05171         RETURN  
                      05172 
                      05173 ; ; Starting pCode block
                      05174 S_interface__teste_serial       code
000000                05175 _teste_serial:
                      05176 ;       .line   774; interface.c        unsigned char teste_serial(void)
000000 CFD9 FFE5      05177         MOVFF   FSR2L, POSTDEC1
000004 CFE1 FFD9      05178         MOVFF   FSR1L, FSR2L
000008 C??? F???      05179         MOVFF   r0x00, POSTDEC1
                      05180 ;       .line   778; interface.c        tecla = le_tecla();
00000C EC?? F0??      05181         CALL    _le_tecla
000010 6E??           05182         MOVWF   r0x00
                      05183 ;       .line   779; interface.c        if (tecla == SW3)
000012 50??           05184         MOVF    r0x00, W
000014 E1??           05185         BNZ     _01544_DS_
                      05186 ;       .line   780; interface.c        return TESTE_SERIAL_MSG;
000016 0E2D           05187         MOVLW   0x2d
000018 D???           05188         BRA     _01546_DS_
00001A                05189 _01544_DS_:
                      05190 ;       .line   781; interface.c        else if (tecla == SW4)
00001A 50??           05191         MOVF    r0x00, W
00001C 0A01           05192         XORLW   0x01
00001E E1??           05193         BNZ     _01545_DS_
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE 99


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      05194 ;       .line   782; interface.c        return TELA_PRINCIPAL;
000020 6AE8           05195         CLRF    WREG
000022 D???           05196         BRA     _01546_DS_
000024                05197 _01545_DS_:
                      05198 ;       .line   784; interface.c        return TESTE_SERIAL;
000024 0E2C           05199         MOVLW   0x2c
000026                05200 _01546_DS_:
000026 CFE4 F000      05201         MOVFF   PREINC1, r0x00
00002A CFE4 FFD9      05202         MOVFF   PREINC1, FSR2L
00002E 0012           05203         RETURN  
                      05204 
                      05205 ; ; Starting pCode block
                      05206 S_interface__teste_teclado_4    code
000000                05207 _teste_teclado_4:
                      05208 ;       .line   763; interface.c        unsigned char teste_teclado_4(void)
000000 CFD9 FFE5      05209         MOVFF   FSR2L, POSTDEC1
000004 CFE1 FFD9      05210         MOVFF   FSR1L, FSR2L
000008 C??? F???      05211         MOVFF   r0x00, POSTDEC1
                      05212 ;       .line   767; interface.c        tecla = le_tecla();
00000C EC?? F0??      05213         CALL    _le_tecla
000010 6E??           05214         MOVWF   r0x00
                      05215 ;       .line   768; interface.c        if (tecla == SW6)
000012 50??           05216         MOVF    r0x00, W
000014 0A03           05217         XORLW   0x03
000016 E1??           05218         BNZ     _01529_DS_
                      05219 ;       .line   769; interface.c        return TESTE_SERIAL;
000018 0E2C           05220         MOVLW   0x2c
00001A D???           05221         BRA     _01530_DS_
00001C                05222 _01529_DS_:
                      05223 ;       .line   771; interface.c        return TESTE_TECLADO_4;
00001C 0E2B           05224         MOVLW   0x2b
00001E                05225 _01530_DS_:
00001E CFE4 F000      05226         MOVFF   PREINC1, r0x00
000022 CFE4 FFD9      05227         MOVFF   PREINC1, FSR2L
000026 0012           05228         RETURN  
                      05229 
                      05230 ; ; Starting pCode block
                      05231 S_interface__teste_teclado_3    code
000000                05232 _teste_teclado_3:
                      05233 ;       .line   752; interface.c        unsigned char teste_teclado_3(void)
000000 CFD9 FFE5      05234         MOVFF   FSR2L, POSTDEC1
000004 CFE1 FFD9      05235         MOVFF   FSR1L, FSR2L
000008 C??? F???      05236         MOVFF   r0x00, POSTDEC1
                      05237 ;       .line   756; interface.c        tecla = le_tecla();
00000C EC?? F0??      05238         CALL    _le_tecla
000010 6E??           05239         MOVWF   r0x00
                      05240 ;       .line   757; interface.c        if (tecla == SW5)
000012 50??           05241         MOVF    r0x00, W
000014 0A02           05242         XORLW   0x02
000016 E1??           05243         BNZ     _01516_DS_
                      05244 ;       .line   758; interface.c        return TESTE_TECLADO_4;
000018 0E2B           05245         MOVLW   0x2b
00001A D???           05246         BRA     _01517_DS_
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE 100


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00001C                05247 _01516_DS_:
                      05248 ;       .line   760; interface.c        return TESTE_TECLADO_3;
00001C 0E2A           05249         MOVLW   0x2a
00001E                05250 _01517_DS_:
00001E CFE4 F000      05251         MOVFF   PREINC1, r0x00
000022 CFE4 FFD9      05252         MOVFF   PREINC1, FSR2L
000026 0012           05253         RETURN  
                      05254 
                      05255 ; ; Starting pCode block
                      05256 S_interface__teste_teclado_2    code
000000                05257 _teste_teclado_2:
                      05258 ;       .line   741; interface.c        unsigned char teste_teclado_2(void)
000000 CFD9 FFE5      05259         MOVFF   FSR2L, POSTDEC1
000004 CFE1 FFD9      05260         MOVFF   FSR1L, FSR2L
000008 C??? F???      05261         MOVFF   r0x00, POSTDEC1
                      05262 ;       .line   745; interface.c        tecla = le_tecla();
00000C EC?? F0??      05263         CALL    _le_tecla
000010 6E??           05264         MOVWF   r0x00
                      05265 ;       .line   746; interface.c        if (tecla == SW4)
000012 50??           05266         MOVF    r0x00, W
000014 0A01           05267         XORLW   0x01
000016 E1??           05268         BNZ     _01503_DS_
                      05269 ;       .line   747; interface.c        return TESTE_TECLADO_3;
000018 0E2A           05270         MOVLW   0x2a
00001A D???           05271         BRA     _01504_DS_
00001C                05272 _01503_DS_:
                      05273 ;       .line   749; interface.c        return TESTE_TECLADO_2;
00001C 0E29           05274         MOVLW   0x29
00001E                05275 _01504_DS_:
00001E CFE4 F000      05276         MOVFF   PREINC1, r0x00
000022 CFE4 FFD9      05277         MOVFF   PREINC1, FSR2L
000026 0012           05278         RETURN  
                      05279 
                      05280 ; ; Starting pCode block
                      05281 S_interface__teste_teclado_1    code
000000                05282 _teste_teclado_1:
                      05283 ;       .line   730; interface.c        unsigned char teste_teclado_1(void)
000000 CFD9 FFE5      05284         MOVFF   FSR2L, POSTDEC1
000004 CFE1 FFD9      05285         MOVFF   FSR1L, FSR2L
000008 C??? F???      05286         MOVFF   r0x00, POSTDEC1
                      05287 ;       .line   734; interface.c        tecla = le_tecla();
00000C EC?? F0??      05288         CALL    _le_tecla
000010 6E??           05289         MOVWF   r0x00
                      05290 ;       .line   735; interface.c        if (tecla == SW3)
000012 50??           05291         MOVF    r0x00, W
000014 E1??           05292         BNZ     _01496_DS_
                      05293 ;       .line   736; interface.c        return TESTE_TECLADO_2;
000016 0E29           05294         MOVLW   0x29
000018 D???           05295         BRA     _01497_DS_
00001A                05296 _01496_DS_:
                      05297 ;       .line   738; interface.c        return TESTE_TECLADO_1;
00001A 0E28           05298         MOVLW   0x28
00001C                05299 _01497_DS_:
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE 101


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00001C CFE4 F000      05300         MOVFF   PREINC1, r0x00
000020 CFE4 FFD9      05301         MOVFF   PREINC1, FSR2L
000024 0012           05302         RETURN  
                      05303 
                      05304 ; ; Starting pCode block
                      05305 S_interface__teste_lcd  code
000000                05306 _teste_lcd:
                      05307 ;       .line   717; interface.c        unsigned char teste_lcd(void)
000000 CFD9 FFE5      05308         MOVFF   FSR2L, POSTDEC1
000004 CFE1 FFD9      05309         MOVFF   FSR1L, FSR2L
000008 C??? F???      05310         MOVFF   r0x00, POSTDEC1
                      05311 ;       .line   721; interface.c        tecla = le_tecla();
00000C EC?? F0??      05312         CALL    _le_tecla
000010 6E??           05313         MOVWF   r0x00
                      05314 ;       .line   722; interface.c        if (tecla == SW5)
000012 50??           05315         MOVF    r0x00, W
000014 0A02           05316         XORLW   0x02
000016 E1??           05317         BNZ     _01477_DS_
                      05318 ;       .line   723; interface.c        return TESTE_TECLADO_1;
000018 0E28           05319         MOVLW   0x28
00001A D???           05320         BRA     _01479_DS_
00001C                05321 _01477_DS_:
                      05322 ;       .line   724; interface.c        else if (tecla == SW6)
00001C 50??           05323         MOVF    r0x00, W
00001E 0A03           05324         XORLW   0x03
000020 E1??           05325         BNZ     _01478_DS_
                      05326 ;       .line   725; interface.c        return TELA_PRINCIPAL;
000022 6AE8           05327         CLRF    WREG
000024 D???           05328         BRA     _01479_DS_
000026                05329 _01478_DS_:
                      05330 ;       .line   727; interface.c        return TESTE_LCD;
000026 0E27           05331         MOVLW   0x27
000028                05332 _01479_DS_:
000028 CFE4 F000      05333         MOVFF   PREINC1, r0x00
00002C CFE4 FFD9      05334         MOVFF   PREINC1, FSR2L
000030 0012           05335         RETURN  
                      05336 
                      05337 ; ; Starting pCode block
                      05338 S_interface__menu_teclado       code
000000                05339 _menu_teclado:
                      05340 ;       .line   712; interface.c        unsigned char menu_teclado(void)
000000 CFD9 FFE5      05341         MOVFF   FSR2L, POSTDEC1
000004 CFE1 FFD9      05342         MOVFF   FSR1L, FSR2L
                      05343 ;       .line   714; interface.c        return TELA_PRINCIPAL;
000008 6AE8           05344         CLRF    WREG
00000A CFE4 FFD9      05345         MOVFF   PREINC1, FSR2L
00000E 0012           05346         RETURN  
                      05347 
                      05348 ; ; Starting pCode block
                      05349 S_interface__menu_porta_8_seta  code
000000                05350 _menu_porta_8_seta:
                      05351 ;       .line   695; interface.c        unsigned char menu_porta_8_seta(void)
000000 CFD9 FFE5      05352         MOVFF   FSR2L, POSTDEC1
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE 102


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000004 CFE1 FFD9      05353         MOVFF   FSR1L, FSR2L
000008 C??? F???      05354         MOVFF   r0x00, POSTDEC1
                      05355 ;       .line   699; interface.c        tecla = le_tecla();
00000C EC?? F0??      05356         CALL    _le_tecla
000010 6E??           05357         MOVWF   r0x00
                      05358 ;       .line   700; interface.c        if (tecla == SW3)
000012 50??           05359         MOVF    r0x00, W
000014 E1??           05360         BNZ     _01443_DS_
                      05361 ;       .line   701; interface.c        seta_porta(8, ON);
000016 0E01           05362         MOVLW   0x01
000018 6EE5           05363         MOVWF   POSTDEC1
00001A 0E08           05364         MOVLW   0x08
00001C 6EE5           05365         MOVWF   POSTDEC1
00001E EC?? F0??      05366         CALL    _seta_porta
000022 52E6           05367         MOVF    POSTINC1, F
000024 52E6           05368         MOVF    POSTINC1, F
000026 D???           05369         BRA     _01444_DS_
000028                05370 _01443_DS_:
                      05371 ;       .line   702; interface.c        else if (tecla == SW4)
000028 50??           05372         MOVF    r0x00, W
00002A 0A01           05373         XORLW   0x01
00002C E1??           05374         BNZ     _01440_DS_
                      05375 ;       .line   703; interface.c        seta_porta(8, OFF);
00002E 0E00           05376         MOVLW   0x00
000030 6EE5           05377         MOVWF   POSTDEC1
000032 0E08           05378         MOVLW   0x08
000034 6EE5           05379         MOVWF   POSTDEC1
000036 EC?? F0??      05380         CALL    _seta_porta
00003A 52E6           05381         MOVF    POSTINC1, F
00003C 52E6           05382         MOVF    POSTINC1, F
00003E D???           05383         BRA     _01444_DS_
000040                05384 _01440_DS_:
                      05385 ;       .line   704; interface.c        else if (tecla == SW5)
000040 50??           05386         MOVF    r0x00, W
000042 0A02           05387         XORLW   0x02
000044 E1??           05388         BNZ     _01437_DS_
                      05389 ;       .line   705; interface.c        seta_porta(8, FLIP);
000046 0E02           05390         MOVLW   0x02
000048 6EE5           05391         MOVWF   POSTDEC1
00004A 0E08           05392         MOVLW   0x08
00004C 6EE5           05393         MOVWF   POSTDEC1
00004E EC?? F0??      05394         CALL    _seta_porta
000052 52E6           05395         MOVF    POSTINC1, F
000054 52E6           05396         MOVF    POSTINC1, F
000056 D???           05397         BRA     _01444_DS_
000058                05398 _01437_DS_:
                      05399 ;       .line   706; interface.c        else if (tecla == SW6)
000058 50??           05400         MOVF    r0x00, W
00005A 0A03           05401         XORLW   0x03
00005C E1??           05402         BNZ     _01444_DS_
                      05403 ;       .line   707; interface.c        return MENU_PORTAS_7_8;
00005E 0E15           05404         MOVLW   0x15
000060 D???           05405         BRA     _01445_DS_
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE 103


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000062                05406 _01444_DS_:
                      05407 ;       .line   709; interface.c        return MENU_PORTA_8_SETA;
000062 0E25           05408         MOVLW   0x25
000064                05409 _01445_DS_:
000064 CFE4 F000      05410         MOVFF   PREINC1, r0x00
000068 CFE4 FFD9      05411         MOVFF   PREINC1, FSR2L
00006C 0012           05412         RETURN  
                      05413 
                      05414 ; ; Starting pCode block
                      05415 S_interface__menu_porta_7_seta  code
000000                05416 _menu_porta_7_seta:
                      05417 ;       .line   678; interface.c        unsigned char menu_porta_7_seta(void)
000000 CFD9 FFE5      05418         MOVFF   FSR2L, POSTDEC1
000004 CFE1 FFD9      05419         MOVFF   FSR1L, FSR2L
000008 C??? F???      05420         MOVFF   r0x00, POSTDEC1
                      05421 ;       .line   682; interface.c        tecla = le_tecla();
00000C EC?? F0??      05422         CALL    _le_tecla
000010 6E??           05423         MOVWF   r0x00
                      05424 ;       .line   683; interface.c        if (tecla == SW3)
000012 50??           05425         MOVF    r0x00, W
000014 E1??           05426         BNZ     _01408_DS_
                      05427 ;       .line   684; interface.c        seta_porta(7, ON);
000016 0E01           05428         MOVLW   0x01
000018 6EE5           05429         MOVWF   POSTDEC1
00001A 0E07           05430         MOVLW   0x07
00001C 6EE5           05431         MOVWF   POSTDEC1
00001E EC?? F0??      05432         CALL    _seta_porta
000022 52E6           05433         MOVF    POSTINC1, F
000024 52E6           05434         MOVF    POSTINC1, F
000026 D???           05435         BRA     _01409_DS_
000028                05436 _01408_DS_:
                      05437 ;       .line   685; interface.c        else if (tecla == SW4)
000028 50??           05438         MOVF    r0x00, W
00002A 0A01           05439         XORLW   0x01
00002C E1??           05440         BNZ     _01405_DS_
                      05441 ;       .line   686; interface.c        seta_porta(7, OFF);
00002E 0E00           05442         MOVLW   0x00
000030 6EE5           05443         MOVWF   POSTDEC1
000032 0E07           05444         MOVLW   0x07
000034 6EE5           05445         MOVWF   POSTDEC1
000036 EC?? F0??      05446         CALL    _seta_porta
00003A 52E6           05447         MOVF    POSTINC1, F
00003C 52E6           05448         MOVF    POSTINC1, F
00003E D???           05449         BRA     _01409_DS_
000040                05450 _01405_DS_:
                      05451 ;       .line   687; interface.c        else if (tecla == SW5)
000040 50??           05452         MOVF    r0x00, W
000042 0A02           05453         XORLW   0x02
000044 E1??           05454         BNZ     _01402_DS_
                      05455 ;       .line   688; interface.c        seta_porta(7, FLIP);
000046 0E02           05456         MOVLW   0x02
000048 6EE5           05457         MOVWF   POSTDEC1
00004A 0E07           05458         MOVLW   0x07
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE 104


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00004C 6EE5           05459         MOVWF   POSTDEC1
00004E EC?? F0??      05460         CALL    _seta_porta
000052 52E6           05461         MOVF    POSTINC1, F
000054 52E6           05462         MOVF    POSTINC1, F
000056 D???           05463         BRA     _01409_DS_
000058                05464 _01402_DS_:
                      05465 ;       .line   689; interface.c        else if (tecla == SW6)
000058 50??           05466         MOVF    r0x00, W
00005A 0A03           05467         XORLW   0x03
00005C E1??           05468         BNZ     _01409_DS_
                      05469 ;       .line   690; interface.c        return MENU_PORTAS_7_8;
00005E 0E15           05470         MOVLW   0x15
000060 D???           05471         BRA     _01410_DS_
000062                05472 _01409_DS_:
                      05473 ;       .line   692; interface.c        return MENU_PORTA_7_SETA;
000062 0E24           05474         MOVLW   0x24
000064                05475 _01410_DS_:
000064 CFE4 F000      05476         MOVFF   PREINC1, r0x00
000068 CFE4 FFD9      05477         MOVFF   PREINC1, FSR2L
00006C 0012           05478         RETURN  
                      05479 
                      05480 ; ; Starting pCode block
                      05481 S_interface__menu_porta_6_seta  code
000000                05482 _menu_porta_6_seta:
                      05483 ;       .line   661; interface.c        unsigned char menu_porta_6_seta(void)
000000 CFD9 FFE5      05484         MOVFF   FSR2L, POSTDEC1
000004 CFE1 FFD9      05485         MOVFF   FSR1L, FSR2L
000008 C??? F???      05486         MOVFF   r0x00, POSTDEC1
                      05487 ;       .line   665; interface.c        tecla = le_tecla();
00000C EC?? F0??      05488         CALL    _le_tecla
000010 6E??           05489         MOVWF   r0x00
                      05490 ;       .line   666; interface.c        if (tecla == SW3)
000012 50??           05491         MOVF    r0x00, W
000014 E1??           05492         BNZ     _01373_DS_
                      05493 ;       .line   667; interface.c        seta_porta(6, ON);
000016 0E01           05494         MOVLW   0x01
000018 6EE5           05495         MOVWF   POSTDEC1
00001A 0E06           05496         MOVLW   0x06
00001C 6EE5           05497         MOVWF   POSTDEC1
00001E EC?? F0??      05498         CALL    _seta_porta
000022 52E6           05499         MOVF    POSTINC1, F
000024 52E6           05500         MOVF    POSTINC1, F
000026 D???           05501         BRA     _01374_DS_
000028                05502 _01373_DS_:
                      05503 ;       .line   668; interface.c        else if (tecla == SW4)
000028 50??           05504         MOVF    r0x00, W
00002A 0A01           05505         XORLW   0x01
00002C E1??           05506         BNZ     _01370_DS_
                      05507 ;       .line   669; interface.c        seta_porta(6, OFF);
00002E 0E00           05508         MOVLW   0x00
000030 6EE5           05509         MOVWF   POSTDEC1
000032 0E06           05510         MOVLW   0x06
000034 6EE5           05511         MOVWF   POSTDEC1
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE 105


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000036 EC?? F0??      05512         CALL    _seta_porta
00003A 52E6           05513         MOVF    POSTINC1, F
00003C 52E6           05514         MOVF    POSTINC1, F
00003E D???           05515         BRA     _01374_DS_
000040                05516 _01370_DS_:
                      05517 ;       .line   670; interface.c        else if (tecla == SW5)
000040 50??           05518         MOVF    r0x00, W
000042 0A02           05519         XORLW   0x02
000044 E1??           05520         BNZ     _01367_DS_
                      05521 ;       .line   671; interface.c        seta_porta(6, FLIP);
000046 0E02           05522         MOVLW   0x02
000048 6EE5           05523         MOVWF   POSTDEC1
00004A 0E06           05524         MOVLW   0x06
00004C 6EE5           05525         MOVWF   POSTDEC1
00004E EC?? F0??      05526         CALL    _seta_porta
000052 52E6           05527         MOVF    POSTINC1, F
000054 52E6           05528         MOVF    POSTINC1, F
000056 D???           05529         BRA     _01374_DS_
000058                05530 _01367_DS_:
                      05531 ;       .line   672; interface.c        else if (tecla == SW6)
000058 50??           05532         MOVF    r0x00, W
00005A 0A03           05533         XORLW   0x03
00005C E1??           05534         BNZ     _01374_DS_
                      05535 ;       .line   673; interface.c        return MENU_PORTAS_5_6;
00005E 0E14           05536         MOVLW   0x14
000060 D???           05537         BRA     _01375_DS_
000062                05538 _01374_DS_:
                      05539 ;       .line   675; interface.c        return MENU_PORTA_6_SETA;
000062 0E23           05540         MOVLW   0x23
000064                05541 _01375_DS_:
000064 CFE4 F000      05542         MOVFF   PREINC1, r0x00
000068 CFE4 FFD9      05543         MOVFF   PREINC1, FSR2L
00006C 0012           05544         RETURN  
                      05545 
                      05546 ; ; Starting pCode block
                      05547 S_interface__menu_porta_5_seta  code
000000                05548 _menu_porta_5_seta:
                      05549 ;       .line   644; interface.c        unsigned char menu_porta_5_seta(void)
000000 CFD9 FFE5      05550         MOVFF   FSR2L, POSTDEC1
000004 CFE1 FFD9      05551         MOVFF   FSR1L, FSR2L
000008 C??? F???      05552         MOVFF   r0x00, POSTDEC1
                      05553 ;       .line   648; interface.c        tecla = le_tecla();
00000C EC?? F0??      05554         CALL    _le_tecla
000010 6E??           05555         MOVWF   r0x00
                      05556 ;       .line   649; interface.c        if (tecla == SW3)
000012 50??           05557         MOVF    r0x00, W
000014 E1??           05558         BNZ     _01338_DS_
                      05559 ;       .line   650; interface.c        seta_porta(5, ON);
000016 0E01           05560         MOVLW   0x01
000018 6EE5           05561         MOVWF   POSTDEC1
00001A 0E05           05562         MOVLW   0x05
00001C 6EE5           05563         MOVWF   POSTDEC1
00001E EC?? F0??      05564         CALL    _seta_porta
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE 106


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000022 52E6           05565         MOVF    POSTINC1, F
000024 52E6           05566         MOVF    POSTINC1, F
000026 D???           05567         BRA     _01339_DS_
000028                05568 _01338_DS_:
                      05569 ;       .line   651; interface.c        else if (tecla == SW4)
000028 50??           05570         MOVF    r0x00, W
00002A 0A01           05571         XORLW   0x01
00002C E1??           05572         BNZ     _01335_DS_
                      05573 ;       .line   652; interface.c        seta_porta(5, OFF);
00002E 0E00           05574         MOVLW   0x00
000030 6EE5           05575         MOVWF   POSTDEC1
000032 0E05           05576         MOVLW   0x05
000034 6EE5           05577         MOVWF   POSTDEC1
000036 EC?? F0??      05578         CALL    _seta_porta
00003A 52E6           05579         MOVF    POSTINC1, F
00003C 52E6           05580         MOVF    POSTINC1, F
00003E D???           05581         BRA     _01339_DS_
000040                05582 _01335_DS_:
                      05583 ;       .line   653; interface.c        else if (tecla == SW5)
000040 50??           05584         MOVF    r0x00, W
000042 0A02           05585         XORLW   0x02
000044 E1??           05586         BNZ     _01332_DS_
                      05587 ;       .line   654; interface.c        seta_porta(5, FLIP);
000046 0E02           05588         MOVLW   0x02
000048 6EE5           05589         MOVWF   POSTDEC1
00004A 0E05           05590         MOVLW   0x05
00004C 6EE5           05591         MOVWF   POSTDEC1
00004E EC?? F0??      05592         CALL    _seta_porta
000052 52E6           05593         MOVF    POSTINC1, F
000054 52E6           05594         MOVF    POSTINC1, F
000056 D???           05595         BRA     _01339_DS_
000058                05596 _01332_DS_:
                      05597 ;       .line   655; interface.c        else if (tecla == SW6)
000058 50??           05598         MOVF    r0x00, W
00005A 0A03           05599         XORLW   0x03
00005C E1??           05600         BNZ     _01339_DS_
                      05601 ;       .line   656; interface.c        return MENU_PORTAS_5_6;
00005E 0E14           05602         MOVLW   0x14
000060 D???           05603         BRA     _01340_DS_
000062                05604 _01339_DS_:
                      05605 ;       .line   658; interface.c        return MENU_PORTA_5_SETA;
000062 0E22           05606         MOVLW   0x22
000064                05607 _01340_DS_:
000064 CFE4 F000      05608         MOVFF   PREINC1, r0x00
000068 CFE4 FFD9      05609         MOVFF   PREINC1, FSR2L
00006C 0012           05610         RETURN  
                      05611 
                      05612 ; ; Starting pCode block
                      05613 S_interface__menu_porta_4_seta  code
000000                05614 _menu_porta_4_seta:
                      05615 ;       .line   627; interface.c        unsigned char menu_porta_4_seta(void)
000000 CFD9 FFE5      05616         MOVFF   FSR2L, POSTDEC1
000004 CFE1 FFD9      05617         MOVFF   FSR1L, FSR2L
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE 107


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000008 C??? F???      05618         MOVFF   r0x00, POSTDEC1
                      05619 ;       .line   631; interface.c        tecla = le_tecla();
00000C EC?? F0??      05620         CALL    _le_tecla
000010 6E??           05621         MOVWF   r0x00
                      05622 ;       .line   632; interface.c        if (tecla == SW3)
000012 50??           05623         MOVF    r0x00, W
000014 E1??           05624         BNZ     _01303_DS_
                      05625 ;       .line   633; interface.c        seta_porta(4, ON);
000016 0E01           05626         MOVLW   0x01
000018 6EE5           05627         MOVWF   POSTDEC1
00001A 0E04           05628         MOVLW   0x04
00001C 6EE5           05629         MOVWF   POSTDEC1
00001E EC?? F0??      05630         CALL    _seta_porta
000022 52E6           05631         MOVF    POSTINC1, F
000024 52E6           05632         MOVF    POSTINC1, F
000026 D???           05633         BRA     _01304_DS_
000028                05634 _01303_DS_:
                      05635 ;       .line   634; interface.c        else if (tecla == SW4)
000028 50??           05636         MOVF    r0x00, W
00002A 0A01           05637         XORLW   0x01
00002C E1??           05638         BNZ     _01300_DS_
                      05639 ;       .line   635; interface.c        seta_porta(4, OFF);
00002E 0E00           05640         MOVLW   0x00
000030 6EE5           05641         MOVWF   POSTDEC1
000032 0E04           05642         MOVLW   0x04
000034 6EE5           05643         MOVWF   POSTDEC1
000036 EC?? F0??      05644         CALL    _seta_porta
00003A 52E6           05645         MOVF    POSTINC1, F
00003C 52E6           05646         MOVF    POSTINC1, F
00003E D???           05647         BRA     _01304_DS_
000040                05648 _01300_DS_:
                      05649 ;       .line   636; interface.c        else if (tecla == SW5)
000040 50??           05650         MOVF    r0x00, W
000042 0A02           05651         XORLW   0x02
000044 E1??           05652         BNZ     _01297_DS_
                      05653 ;       .line   637; interface.c        seta_porta(4, FLIP);
000046 0E02           05654         MOVLW   0x02
000048 6EE5           05655         MOVWF   POSTDEC1
00004A 0E04           05656         MOVLW   0x04
00004C 6EE5           05657         MOVWF   POSTDEC1
00004E EC?? F0??      05658         CALL    _seta_porta
000052 52E6           05659         MOVF    POSTINC1, F
000054 52E6           05660         MOVF    POSTINC1, F
000056 D???           05661         BRA     _01304_DS_
000058                05662 _01297_DS_:
                      05663 ;       .line   638; interface.c        else if (tecla == SW6)
000058 50??           05664         MOVF    r0x00, W
00005A 0A03           05665         XORLW   0x03
00005C E1??           05666         BNZ     _01304_DS_
                      05667 ;       .line   639; interface.c        return MENU_PORTAS_3_4;
00005E 0E13           05668         MOVLW   0x13
000060 D???           05669         BRA     _01305_DS_
000062                05670 _01304_DS_:
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE 108


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      05671 ;       .line   641; interface.c        return MENU_PORTA_4_SETA;
000062 0E21           05672         MOVLW   0x21
000064                05673 _01305_DS_:
000064 CFE4 F000      05674         MOVFF   PREINC1, r0x00
000068 CFE4 FFD9      05675         MOVFF   PREINC1, FSR2L
00006C 0012           05676         RETURN  
                      05677 
                      05678 ; ; Starting pCode block
                      05679 S_interface__menu_porta_3_seta  code
000000                05680 _menu_porta_3_seta:
                      05681 ;       .line   610; interface.c        unsigned char menu_porta_3_seta(void)
000000 CFD9 FFE5      05682         MOVFF   FSR2L, POSTDEC1
000004 CFE1 FFD9      05683         MOVFF   FSR1L, FSR2L
000008 C??? F???      05684         MOVFF   r0x00, POSTDEC1
                      05685 ;       .line   614; interface.c        tecla = le_tecla();
00000C EC?? F0??      05686         CALL    _le_tecla
000010 6E??           05687         MOVWF   r0x00
                      05688 ;       .line   615; interface.c        if (tecla == SW3)
000012 50??           05689         MOVF    r0x00, W
000014 E1??           05690         BNZ     _01268_DS_
                      05691 ;       .line   616; interface.c        seta_porta(3, ON);
000016 0E01           05692         MOVLW   0x01
000018 6EE5           05693         MOVWF   POSTDEC1
00001A 0E03           05694         MOVLW   0x03
00001C 6EE5           05695         MOVWF   POSTDEC1
00001E EC?? F0??      05696         CALL    _seta_porta
000022 52E6           05697         MOVF    POSTINC1, F
000024 52E6           05698         MOVF    POSTINC1, F
000026 D???           05699         BRA     _01269_DS_
000028                05700 _01268_DS_:
                      05701 ;       .line   617; interface.c        else if (tecla == SW4)
000028 50??           05702         MOVF    r0x00, W
00002A 0A01           05703         XORLW   0x01
00002C E1??           05704         BNZ     _01265_DS_
                      05705 ;       .line   618; interface.c        seta_porta(3, OFF);
00002E 0E00           05706         MOVLW   0x00
000030 6EE5           05707         MOVWF   POSTDEC1
000032 0E03           05708         MOVLW   0x03
000034 6EE5           05709         MOVWF   POSTDEC1
000036 EC?? F0??      05710         CALL    _seta_porta
00003A 52E6           05711         MOVF    POSTINC1, F
00003C 52E6           05712         MOVF    POSTINC1, F
00003E D???           05713         BRA     _01269_DS_
000040                05714 _01265_DS_:
                      05715 ;       .line   619; interface.c        else if (tecla == SW5)
000040 50??           05716         MOVF    r0x00, W
000042 0A02           05717         XORLW   0x02
000044 E1??           05718         BNZ     _01262_DS_
                      05719 ;       .line   620; interface.c        seta_porta(3, FLIP);
000046 0E02           05720         MOVLW   0x02
000048 6EE5           05721         MOVWF   POSTDEC1
00004A 0E03           05722         MOVLW   0x03
00004C 6EE5           05723         MOVWF   POSTDEC1
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE 109


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00004E EC?? F0??      05724         CALL    _seta_porta
000052 52E6           05725         MOVF    POSTINC1, F
000054 52E6           05726         MOVF    POSTINC1, F
000056 D???           05727         BRA     _01269_DS_
000058                05728 _01262_DS_:
                      05729 ;       .line   621; interface.c        else if (tecla == SW6)
000058 50??           05730         MOVF    r0x00, W
00005A 0A03           05731         XORLW   0x03
00005C E1??           05732         BNZ     _01269_DS_
                      05733 ;       .line   622; interface.c        return MENU_PORTAS_3_4;
00005E 0E13           05734         MOVLW   0x13
000060 D???           05735         BRA     _01270_DS_
000062                05736 _01269_DS_:
                      05737 ;       .line   624; interface.c        return MENU_PORTA_3_SETA;
000062 0E20           05738         MOVLW   0x20
000064                05739 _01270_DS_:
000064 CFE4 F000      05740         MOVFF   PREINC1, r0x00
000068 CFE4 FFD9      05741         MOVFF   PREINC1, FSR2L
00006C 0012           05742         RETURN  
                      05743 
                      05744 ; ; Starting pCode block
                      05745 S_interface__menu_porta_2_seta  code
000000                05746 _menu_porta_2_seta:
                      05747 ;       .line   593; interface.c        unsigned char menu_porta_2_seta(void)
000000 CFD9 FFE5      05748         MOVFF   FSR2L, POSTDEC1
000004 CFE1 FFD9      05749         MOVFF   FSR1L, FSR2L
000008 C??? F???      05750         MOVFF   r0x00, POSTDEC1
                      05751 ;       .line   597; interface.c        tecla = le_tecla();
00000C EC?? F0??      05752         CALL    _le_tecla
000010 6E??           05753         MOVWF   r0x00
                      05754 ;       .line   598; interface.c        if (tecla == SW3)
000012 50??           05755         MOVF    r0x00, W
000014 E1??           05756         BNZ     _01233_DS_
                      05757 ;       .line   599; interface.c        seta_porta(2, ON);
000016 0E01           05758         MOVLW   0x01
000018 6EE5           05759         MOVWF   POSTDEC1
00001A 0E02           05760         MOVLW   0x02
00001C 6EE5           05761         MOVWF   POSTDEC1
00001E EC?? F0??      05762         CALL    _seta_porta
000022 52E6           05763         MOVF    POSTINC1, F
000024 52E6           05764         MOVF    POSTINC1, F
000026 D???           05765         BRA     _01234_DS_
000028                05766 _01233_DS_:
                      05767 ;       .line   600; interface.c        else if (tecla == SW4)
000028 50??           05768         MOVF    r0x00, W
00002A 0A01           05769         XORLW   0x01
00002C E1??           05770         BNZ     _01230_DS_
                      05771 ;       .line   601; interface.c        seta_porta(2, OFF);
00002E 0E00           05772         MOVLW   0x00
000030 6EE5           05773         MOVWF   POSTDEC1
000032 0E02           05774         MOVLW   0x02
000034 6EE5           05775         MOVWF   POSTDEC1
000036 EC?? F0??      05776         CALL    _seta_porta
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE 110


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00003A 52E6           05777         MOVF    POSTINC1, F
00003C 52E6           05778         MOVF    POSTINC1, F
00003E D???           05779         BRA     _01234_DS_
000040                05780 _01230_DS_:
                      05781 ;       .line   602; interface.c        else if (tecla == SW5)
000040 50??           05782         MOVF    r0x00, W
000042 0A02           05783         XORLW   0x02
000044 E1??           05784         BNZ     _01227_DS_
                      05785 ;       .line   603; interface.c        seta_porta(2, FLIP);
000046 0E02           05786         MOVLW   0x02
000048 6EE5           05787         MOVWF   POSTDEC1
00004A 0E02           05788         MOVLW   0x02
00004C 6EE5           05789         MOVWF   POSTDEC1
00004E EC?? F0??      05790         CALL    _seta_porta
000052 52E6           05791         MOVF    POSTINC1, F
000054 52E6           05792         MOVF    POSTINC1, F
000056 D???           05793         BRA     _01234_DS_
000058                05794 _01227_DS_:
                      05795 ;       .line   604; interface.c        else if (tecla == SW6)
000058 50??           05796         MOVF    r0x00, W
00005A 0A03           05797         XORLW   0x03
00005C E1??           05798         BNZ     _01234_DS_
                      05799 ;       .line   605; interface.c        return MENU_PORTAS_1_2;
00005E 0E12           05800         MOVLW   0x12
000060 D???           05801         BRA     _01235_DS_
000062                05802 _01234_DS_:
                      05803 ;       .line   607; interface.c        return MENU_PORTA_2_SETA;
000062 0E1F           05804         MOVLW   0x1f
000064                05805 _01235_DS_:
000064 CFE4 F000      05806         MOVFF   PREINC1, r0x00
000068 CFE4 FFD9      05807         MOVFF   PREINC1, FSR2L
00006C 0012           05808         RETURN  
                      05809 
                      05810 ; ; Starting pCode block
                      05811 S_interface__menu_porta_1_seta  code
000000                05812 _menu_porta_1_seta:
                      05813 ;       .line   576; interface.c        unsigned char menu_porta_1_seta(void)
000000 CFD9 FFE5      05814         MOVFF   FSR2L, POSTDEC1
000004 CFE1 FFD9      05815         MOVFF   FSR1L, FSR2L
000008 C??? F???      05816         MOVFF   r0x00, POSTDEC1
                      05817 ;       .line   580; interface.c        tecla = le_tecla();
00000C EC?? F0??      05818         CALL    _le_tecla
000010 6E??           05819         MOVWF   r0x00
                      05820 ;       .line   581; interface.c        if (tecla == SW3)
000012 50??           05821         MOVF    r0x00, W
000014 E1??           05822         BNZ     _01198_DS_
                      05823 ;       .line   582; interface.c        seta_porta(1, ON);
000016 0E01           05824         MOVLW   0x01
000018 6EE5           05825         MOVWF   POSTDEC1
00001A 0E01           05826         MOVLW   0x01
00001C 6EE5           05827         MOVWF   POSTDEC1
00001E EC?? F0??      05828         CALL    _seta_porta
000022 52E6           05829         MOVF    POSTINC1, F
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE 111


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000024 52E6           05830         MOVF    POSTINC1, F
000026 D???           05831         BRA     _01199_DS_
000028                05832 _01198_DS_:
                      05833 ;       .line   583; interface.c        else if (tecla == SW4)
000028 50??           05834         MOVF    r0x00, W
00002A 0A01           05835         XORLW   0x01
00002C E1??           05836         BNZ     _01195_DS_
                      05837 ;       .line   584; interface.c        seta_porta(1, OFF);
00002E 0E00           05838         MOVLW   0x00
000030 6EE5           05839         MOVWF   POSTDEC1
000032 0E01           05840         MOVLW   0x01
000034 6EE5           05841         MOVWF   POSTDEC1
000036 EC?? F0??      05842         CALL    _seta_porta
00003A 52E6           05843         MOVF    POSTINC1, F
00003C 52E6           05844         MOVF    POSTINC1, F
00003E D???           05845         BRA     _01199_DS_
000040                05846 _01195_DS_:
                      05847 ;       .line   585; interface.c        else if (tecla == SW5)
000040 50??           05848         MOVF    r0x00, W
000042 0A02           05849         XORLW   0x02
000044 E1??           05850         BNZ     _01192_DS_
                      05851 ;       .line   586; interface.c        seta_porta(1, FLIP);
000046 0E02           05852         MOVLW   0x02
000048 6EE5           05853         MOVWF   POSTDEC1
00004A 0E01           05854         MOVLW   0x01
00004C 6EE5           05855         MOVWF   POSTDEC1
00004E EC?? F0??      05856         CALL    _seta_porta
000052 52E6           05857         MOVF    POSTINC1, F
000054 52E6           05858         MOVF    POSTINC1, F
000056 D???           05859         BRA     _01199_DS_
000058                05860 _01192_DS_:
                      05861 ;       .line   587; interface.c        else if (tecla == SW6)
000058 50??           05862         MOVF    r0x00, W
00005A 0A03           05863         XORLW   0x03
00005C E1??           05864         BNZ     _01199_DS_
                      05865 ;       .line   588; interface.c        return MENU_PORTAS_1_2;
00005E 0E12           05866         MOVLW   0x12
000060 D???           05867         BRA     _01200_DS_
000062                05868 _01199_DS_:
                      05869 ;       .line   590; interface.c        return MENU_PORTA_1_SETA;
000062 0E1E           05870         MOVLW   0x1e
000064                05871 _01200_DS_:
000064 CFE4 F000      05872         MOVFF   PREINC1, r0x00
000068 CFE4 FFD9      05873         MOVFF   PREINC1, FSR2L
00006C 0012           05874         RETURN  
                      05875 
                      05876 ; ; Starting pCode block
                      05877 S_interface__menu_porta_8_configura     code
000000                05878 _menu_porta_8_configura:
                      05879 ;       .line   559; interface.c        unsigned char menu_porta_8_configura(void)
000000 CFD9 FFE5      05880         MOVFF   FSR2L, POSTDEC1
000004 CFE1 FFD9      05881         MOVFF   FSR1L, FSR2L
000008 C??? F???      05882         MOVFF   r0x00, POSTDEC1
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE 112


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      05883 ;       .line   563; interface.c        tecla = le_tecla();
00000C EC?? F0??      05884         CALL    _le_tecla
000010 6E??           05885         MOVWF   r0x00
                      05886 ;       .line   564; interface.c        if (tecla == SW3)
000012 50??           05887         MOVF    r0x00, W
000014 E1??           05888         BNZ     _01163_DS_
                      05889 ;       .line   565; interface.c        configura_porta(8, SAIDA);
000016 0E00           05890         MOVLW   0x00
000018 6EE5           05891         MOVWF   POSTDEC1
00001A 0E08           05892         MOVLW   0x08
00001C 6EE5           05893         MOVWF   POSTDEC1
00001E EC?? F0??      05894         CALL    _configura_porta
000022 52E6           05895         MOVF    POSTINC1, F
000024 52E6           05896         MOVF    POSTINC1, F
000026 D???           05897         BRA     _01164_DS_
000028                05898 _01163_DS_:
                      05899 ;       .line   566; interface.c        else if (tecla == SW4)
000028 50??           05900         MOVF    r0x00, W
00002A 0A01           05901         XORLW   0x01
00002C E1??           05902         BNZ     _01160_DS_
                      05903 ;       .line   567; interface.c        configura_porta(8, ENTRADA);
00002E 0E01           05904         MOVLW   0x01
000030 6EE5           05905         MOVWF   POSTDEC1
000032 0E08           05906         MOVLW   0x08
000034 6EE5           05907         MOVWF   POSTDEC1
000036 EC?? F0??      05908         CALL    _configura_porta
00003A 52E6           05909         MOVF    POSTINC1, F
00003C 52E6           05910         MOVF    POSTINC1, F
00003E D???           05911         BRA     _01164_DS_
000040                05912 _01160_DS_:
                      05913 ;       .line   568; interface.c        else if (tecla == SW5)
000040 50??           05914         MOVF    r0x00, W
000042 0A02           05915         XORLW   0x02
000044 E1??           05916         BNZ     _01157_DS_
                      05917 ;       .line   569; interface.c        return TELA_PRINCIPAL;
000046 6AE8           05918         CLRF    WREG
000048 D???           05919         BRA     _01165_DS_
00004A                05920 _01157_DS_:
                      05921 ;       .line   570; interface.c        else if (tecla == SW6)
00004A 50??           05922         MOVF    r0x00, W
00004C 0A03           05923         XORLW   0x03
00004E E1??           05924         BNZ     _01164_DS_
                      05925 ;       .line   571; interface.c        return MENU_PORTAS_7_8;
000050 0E15           05926         MOVLW   0x15
000052 D???           05927         BRA     _01165_DS_
000054                05928 _01164_DS_:
                      05929 ;       .line   573; interface.c        return MENU_PORTA_8_CONFIGURA;
000054 0E1D           05930         MOVLW   0x1d
000056                05931 _01165_DS_:
000056 CFE4 F000      05932         MOVFF   PREINC1, r0x00
00005A CFE4 FFD9      05933         MOVFF   PREINC1, FSR2L
00005E 0012           05934         RETURN  
                      05935 
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE 113


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      05936 ; ; Starting pCode block
                      05937 S_interface__menu_porta_7_configura     code
000000                05938 _menu_porta_7_configura:
                      05939 ;       .line   542; interface.c        unsigned char menu_porta_7_configura(void)
000000 CFD9 FFE5      05940         MOVFF   FSR2L, POSTDEC1
000004 CFE1 FFD9      05941         MOVFF   FSR1L, FSR2L
000008 C??? F???      05942         MOVFF   r0x00, POSTDEC1
                      05943 ;       .line   546; interface.c        tecla = le_tecla();
00000C EC?? F0??      05944         CALL    _le_tecla
000010 6E??           05945         MOVWF   r0x00
                      05946 ;       .line   547; interface.c        if (tecla == SW3)
000012 50??           05947         MOVF    r0x00, W
000014 E1??           05948         BNZ     _01128_DS_
                      05949 ;       .line   548; interface.c        configura_porta(7, SAIDA);
000016 0E00           05950         MOVLW   0x00
000018 6EE5           05951         MOVWF   POSTDEC1
00001A 0E07           05952         MOVLW   0x07
00001C 6EE5           05953         MOVWF   POSTDEC1
00001E EC?? F0??      05954         CALL    _configura_porta
000022 52E6           05955         MOVF    POSTINC1, F
000024 52E6           05956         MOVF    POSTINC1, F
000026 D???           05957         BRA     _01129_DS_
000028                05958 _01128_DS_:
                      05959 ;       .line   549; interface.c        else if (tecla == SW4)
000028 50??           05960         MOVF    r0x00, W
00002A 0A01           05961         XORLW   0x01
00002C E1??           05962         BNZ     _01125_DS_
                      05963 ;       .line   550; interface.c        configura_porta(7, ENTRADA);
00002E 0E01           05964         MOVLW   0x01
000030 6EE5           05965         MOVWF   POSTDEC1
000032 0E07           05966         MOVLW   0x07
000034 6EE5           05967         MOVWF   POSTDEC1
000036 EC?? F0??      05968         CALL    _configura_porta
00003A 52E6           05969         MOVF    POSTINC1, F
00003C 52E6           05970         MOVF    POSTINC1, F
00003E D???           05971         BRA     _01129_DS_
000040                05972 _01125_DS_:
                      05973 ;       .line   551; interface.c        else if (tecla == SW5)
000040 50??           05974         MOVF    r0x00, W
000042 0A02           05975         XORLW   0x02
000044 E1??           05976         BNZ     _01122_DS_
                      05977 ;       .line   552; interface.c        return TELA_PRINCIPAL;
000046 6AE8           05978         CLRF    WREG
000048 D???           05979         BRA     _01130_DS_
00004A                05980 _01122_DS_:
                      05981 ;       .line   553; interface.c        else if (tecla == SW6)
00004A 50??           05982         MOVF    r0x00, W
00004C 0A03           05983         XORLW   0x03
00004E E1??           05984         BNZ     _01129_DS_
                      05985 ;       .line   554; interface.c        return MENU_PORTAS_7_8;
000050 0E15           05986         MOVLW   0x15
000052 D???           05987         BRA     _01130_DS_
000054                05988 _01129_DS_:
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE 114


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      05989 ;       .line   556; interface.c        return MENU_PORTA_7_CONFIGURA;
000054 0E1C           05990         MOVLW   0x1c
000056                05991 _01130_DS_:
000056 CFE4 F000      05992         MOVFF   PREINC1, r0x00
00005A CFE4 FFD9      05993         MOVFF   PREINC1, FSR2L
00005E 0012           05994         RETURN  
                      05995 
                      05996 ; ; Starting pCode block
                      05997 S_interface__menu_porta_6_configura     code
000000                05998 _menu_porta_6_configura:
                      05999 ;       .line   525; interface.c        unsigned char menu_porta_6_configura(void)
000000 CFD9 FFE5      06000         MOVFF   FSR2L, POSTDEC1
000004 CFE1 FFD9      06001         MOVFF   FSR1L, FSR2L
000008 C??? F???      06002         MOVFF   r0x00, POSTDEC1
                      06003 ;       .line   529; interface.c        tecla = le_tecla();
00000C EC?? F0??      06004         CALL    _le_tecla
000010 6E??           06005         MOVWF   r0x00
                      06006 ;       .line   530; interface.c        if (tecla == SW3)
000012 50??           06007         MOVF    r0x00, W
000014 E1??           06008         BNZ     _01093_DS_
                      06009 ;       .line   531; interface.c        configura_porta(6, SAIDA);
000016 0E00           06010         MOVLW   0x00
000018 6EE5           06011         MOVWF   POSTDEC1
00001A 0E06           06012         MOVLW   0x06
00001C 6EE5           06013         MOVWF   POSTDEC1
00001E EC?? F0??      06014         CALL    _configura_porta
000022 52E6           06015         MOVF    POSTINC1, F
000024 52E6           06016         MOVF    POSTINC1, F
000026 D???           06017         BRA     _01094_DS_
000028                06018 _01093_DS_:
                      06019 ;       .line   532; interface.c        else if (tecla == SW4)
000028 50??           06020         MOVF    r0x00, W
00002A 0A01           06021         XORLW   0x01
00002C E1??           06022         BNZ     _01090_DS_
                      06023 ;       .line   533; interface.c        configura_porta(6, ENTRADA);
00002E 0E01           06024         MOVLW   0x01
000030 6EE5           06025         MOVWF   POSTDEC1
000032 0E06           06026         MOVLW   0x06
000034 6EE5           06027         MOVWF   POSTDEC1
000036 EC?? F0??      06028         CALL    _configura_porta
00003A 52E6           06029         MOVF    POSTINC1, F
00003C 52E6           06030         MOVF    POSTINC1, F
00003E D???           06031         BRA     _01094_DS_
000040                06032 _01090_DS_:
                      06033 ;       .line   534; interface.c        else if (tecla == SW5)
000040 50??           06034         MOVF    r0x00, W
000042 0A02           06035         XORLW   0x02
000044 E1??           06036         BNZ     _01087_DS_
                      06037 ;       .line   535; interface.c        return TELA_PRINCIPAL;
000046 6AE8           06038         CLRF    WREG
000048 D???           06039         BRA     _01095_DS_
00004A                06040 _01087_DS_:
                      06041 ;       .line   536; interface.c        else if (tecla == SW6)
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE 115


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00004A 50??           06042         MOVF    r0x00, W
00004C 0A03           06043         XORLW   0x03
00004E E1??           06044         BNZ     _01094_DS_
                      06045 ;       .line   537; interface.c        return MENU_PORTAS_5_6;
000050 0E14           06046         MOVLW   0x14
000052 D???           06047         BRA     _01095_DS_
000054                06048 _01094_DS_:
                      06049 ;       .line   539; interface.c        return MENU_PORTA_6_CONFIGURA;
000054 0E1B           06050         MOVLW   0x1b
000056                06051 _01095_DS_:
000056 CFE4 F000      06052         MOVFF   PREINC1, r0x00
00005A CFE4 FFD9      06053         MOVFF   PREINC1, FSR2L
00005E 0012           06054         RETURN  
                      06055 
                      06056 ; ; Starting pCode block
                      06057 S_interface__menu_porta_5_configura     code
000000                06058 _menu_porta_5_configura:
                      06059 ;       .line   508; interface.c        unsigned char menu_porta_5_configura(void)
000000 CFD9 FFE5      06060         MOVFF   FSR2L, POSTDEC1
000004 CFE1 FFD9      06061         MOVFF   FSR1L, FSR2L
000008 C??? F???      06062         MOVFF   r0x00, POSTDEC1
                      06063 ;       .line   512; interface.c        tecla = le_tecla();
00000C EC?? F0??      06064         CALL    _le_tecla
000010 6E??           06065         MOVWF   r0x00
                      06066 ;       .line   513; interface.c        if (tecla == SW3)
000012 50??           06067         MOVF    r0x00, W
000014 E1??           06068         BNZ     _01058_DS_
                      06069 ;       .line   514; interface.c        configura_porta(5, SAIDA);
000016 0E00           06070         MOVLW   0x00
000018 6EE5           06071         MOVWF   POSTDEC1
00001A 0E05           06072         MOVLW   0x05
00001C 6EE5           06073         MOVWF   POSTDEC1
00001E EC?? F0??      06074         CALL    _configura_porta
000022 52E6           06075         MOVF    POSTINC1, F
000024 52E6           06076         MOVF    POSTINC1, F
000026 D???           06077         BRA     _01059_DS_
000028                06078 _01058_DS_:
                      06079 ;       .line   515; interface.c        else if (tecla == SW4)
000028 50??           06080         MOVF    r0x00, W
00002A 0A01           06081         XORLW   0x01
00002C E1??           06082         BNZ     _01055_DS_
                      06083 ;       .line   516; interface.c        configura_porta(5, ENTRADA);
00002E 0E01           06084         MOVLW   0x01
000030 6EE5           06085         MOVWF   POSTDEC1
000032 0E05           06086         MOVLW   0x05
000034 6EE5           06087         MOVWF   POSTDEC1
000036 EC?? F0??      06088         CALL    _configura_porta
00003A 52E6           06089         MOVF    POSTINC1, F
00003C 52E6           06090         MOVF    POSTINC1, F
00003E D???           06091         BRA     _01059_DS_
000040                06092 _01055_DS_:
                      06093 ;       .line   517; interface.c        else if (tecla == SW5)
000040 50??           06094         MOVF    r0x00, W
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE 116


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000042 0A02           06095         XORLW   0x02
000044 E1??           06096         BNZ     _01052_DS_
                      06097 ;       .line   518; interface.c        return TELA_PRINCIPAL;
000046 6AE8           06098         CLRF    WREG
000048 D???           06099         BRA     _01060_DS_
00004A                06100 _01052_DS_:
                      06101 ;       .line   519; interface.c        else if (tecla == SW6)
00004A 50??           06102         MOVF    r0x00, W
00004C 0A03           06103         XORLW   0x03
00004E E1??           06104         BNZ     _01059_DS_
                      06105 ;       .line   520; interface.c        return MENU_PORTAS_5_6;
000050 0E14           06106         MOVLW   0x14
000052 D???           06107         BRA     _01060_DS_
000054                06108 _01059_DS_:
                      06109 ;       .line   522; interface.c        return MENU_PORTA_5_CONFIGURA;
000054 0E1A           06110         MOVLW   0x1a
000056                06111 _01060_DS_:
000056 CFE4 F000      06112         MOVFF   PREINC1, r0x00
00005A CFE4 FFD9      06113         MOVFF   PREINC1, FSR2L
00005E 0012           06114         RETURN  
                      06115 
                      06116 ; ; Starting pCode block
                      06117 S_interface__menu_porta_4_configura     code
000000                06118 _menu_porta_4_configura:
                      06119 ;       .line   491; interface.c        unsigned char menu_porta_4_configura(void)
000000 CFD9 FFE5      06120         MOVFF   FSR2L, POSTDEC1
000004 CFE1 FFD9      06121         MOVFF   FSR1L, FSR2L
000008 C??? F???      06122         MOVFF   r0x00, POSTDEC1
                      06123 ;       .line   495; interface.c        tecla = le_tecla();
00000C EC?? F0??      06124         CALL    _le_tecla
000010 6E??           06125         MOVWF   r0x00
                      06126 ;       .line   496; interface.c        if (tecla == SW3)
000012 50??           06127         MOVF    r0x00, W
000014 E1??           06128         BNZ     _01023_DS_
                      06129 ;       .line   497; interface.c        configura_porta(4, SAIDA);
000016 0E00           06130         MOVLW   0x00
000018 6EE5           06131         MOVWF   POSTDEC1
00001A 0E04           06132         MOVLW   0x04
00001C 6EE5           06133         MOVWF   POSTDEC1
00001E EC?? F0??      06134         CALL    _configura_porta
000022 52E6           06135         MOVF    POSTINC1, F
000024 52E6           06136         MOVF    POSTINC1, F
000026 D???           06137         BRA     _01024_DS_
000028                06138 _01023_DS_:
                      06139 ;       .line   498; interface.c        else if (tecla == SW4)
000028 50??           06140         MOVF    r0x00, W
00002A 0A01           06141         XORLW   0x01
00002C E1??           06142         BNZ     _01020_DS_
                      06143 ;       .line   499; interface.c        configura_porta(4, ENTRADA);
00002E 0E01           06144         MOVLW   0x01
000030 6EE5           06145         MOVWF   POSTDEC1
000032 0E04           06146         MOVLW   0x04
000034 6EE5           06147         MOVWF   POSTDEC1
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE 117


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000036 EC?? F0??      06148         CALL    _configura_porta
00003A 52E6           06149         MOVF    POSTINC1, F
00003C 52E6           06150         MOVF    POSTINC1, F
00003E D???           06151         BRA     _01024_DS_
000040                06152 _01020_DS_:
                      06153 ;       .line   500; interface.c        else if (tecla == SW5)
000040 50??           06154         MOVF    r0x00, W
000042 0A02           06155         XORLW   0x02
000044 E1??           06156         BNZ     _01017_DS_
                      06157 ;       .line   501; interface.c        return TELA_PRINCIPAL;
000046 6AE8           06158         CLRF    WREG
000048 D???           06159         BRA     _01025_DS_
00004A                06160 _01017_DS_:
                      06161 ;       .line   502; interface.c        else if (tecla == SW6)
00004A 50??           06162         MOVF    r0x00, W
00004C 0A03           06163         XORLW   0x03
00004E E1??           06164         BNZ     _01024_DS_
                      06165 ;       .line   503; interface.c        return MENU_PORTAS_3_4;
000050 0E13           06166         MOVLW   0x13
000052 D???           06167         BRA     _01025_DS_
000054                06168 _01024_DS_:
                      06169 ;       .line   505; interface.c        return MENU_PORTA_4_CONFIGURA;
000054 0E19           06170         MOVLW   0x19
000056                06171 _01025_DS_:
000056 CFE4 F000      06172         MOVFF   PREINC1, r0x00
00005A CFE4 FFD9      06173         MOVFF   PREINC1, FSR2L
00005E 0012           06174         RETURN  
                      06175 
                      06176 ; ; Starting pCode block
                      06177 S_interface__menu_porta_3_configura     code
000000                06178 _menu_porta_3_configura:
                      06179 ;       .line   474; interface.c        unsigned char menu_porta_3_configura(void)
000000 CFD9 FFE5      06180         MOVFF   FSR2L, POSTDEC1
000004 CFE1 FFD9      06181         MOVFF   FSR1L, FSR2L
000008 C??? F???      06182         MOVFF   r0x00, POSTDEC1
                      06183 ;       .line   478; interface.c        tecla = le_tecla();
00000C EC?? F0??      06184         CALL    _le_tecla
000010 6E??           06185         MOVWF   r0x00
                      06186 ;       .line   479; interface.c        if (tecla == SW3)
000012 50??           06187         MOVF    r0x00, W
000014 E1??           06188         BNZ     _00988_DS_
                      06189 ;       .line   480; interface.c        configura_porta(3, SAIDA);
000016 0E00           06190         MOVLW   0x00
000018 6EE5           06191         MOVWF   POSTDEC1
00001A 0E03           06192         MOVLW   0x03
00001C 6EE5           06193         MOVWF   POSTDEC1
00001E EC?? F0??      06194         CALL    _configura_porta
000022 52E6           06195         MOVF    POSTINC1, F
000024 52E6           06196         MOVF    POSTINC1, F
000026 D???           06197         BRA     _00989_DS_
000028                06198 _00988_DS_:
                      06199 ;       .line   481; interface.c        else if (tecla == SW4)
000028 50??           06200         MOVF    r0x00, W
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE 118


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00002A 0A01           06201         XORLW   0x01
00002C E1??           06202         BNZ     _00985_DS_
                      06203 ;       .line   482; interface.c        configura_porta(3, ENTRADA);
00002E 0E01           06204         MOVLW   0x01
000030 6EE5           06205         MOVWF   POSTDEC1
000032 0E03           06206         MOVLW   0x03
000034 6EE5           06207         MOVWF   POSTDEC1
000036 EC?? F0??      06208         CALL    _configura_porta
00003A 52E6           06209         MOVF    POSTINC1, F
00003C 52E6           06210         MOVF    POSTINC1, F
00003E D???           06211         BRA     _00989_DS_
000040                06212 _00985_DS_:
                      06213 ;       .line   483; interface.c        else if (tecla == SW5)
000040 50??           06214         MOVF    r0x00, W
000042 0A02           06215         XORLW   0x02
000044 E1??           06216         BNZ     _00982_DS_
                      06217 ;       .line   484; interface.c        return TELA_PRINCIPAL;
000046 6AE8           06218         CLRF    WREG
000048 D???           06219         BRA     _00990_DS_
00004A                06220 _00982_DS_:
                      06221 ;       .line   485; interface.c        else if (tecla == SW6)
00004A 50??           06222         MOVF    r0x00, W
00004C 0A03           06223         XORLW   0x03
00004E E1??           06224         BNZ     _00989_DS_
                      06225 ;       .line   486; interface.c        return MENU_PORTAS_3_4;
000050 0E13           06226         MOVLW   0x13
000052 D???           06227         BRA     _00990_DS_
000054                06228 _00989_DS_:
                      06229 ;       .line   488; interface.c        return MENU_PORTA_3_CONFIGURA;
000054 0E18           06230         MOVLW   0x18
000056                06231 _00990_DS_:
000056 CFE4 F000      06232         MOVFF   PREINC1, r0x00
00005A CFE4 FFD9      06233         MOVFF   PREINC1, FSR2L
00005E 0012           06234         RETURN  
                      06235 
                      06236 ; ; Starting pCode block
                      06237 S_interface__menu_porta_2_configura     code
000000                06238 _menu_porta_2_configura:
                      06239 ;       .line   457; interface.c        unsigned char menu_porta_2_configura(void)
000000 CFD9 FFE5      06240         MOVFF   FSR2L, POSTDEC1
000004 CFE1 FFD9      06241         MOVFF   FSR1L, FSR2L
000008 C??? F???      06242         MOVFF   r0x00, POSTDEC1
                      06243 ;       .line   461; interface.c        tecla = le_tecla();
00000C EC?? F0??      06244         CALL    _le_tecla
000010 6E??           06245         MOVWF   r0x00
                      06246 ;       .line   462; interface.c        if (tecla == SW3)
000012 50??           06247         MOVF    r0x00, W
000014 E1??           06248         BNZ     _00953_DS_
                      06249 ;       .line   463; interface.c        configura_porta(2, SAIDA);
000016 0E00           06250         MOVLW   0x00
000018 6EE5           06251         MOVWF   POSTDEC1
00001A 0E02           06252         MOVLW   0x02
00001C 6EE5           06253         MOVWF   POSTDEC1
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE 119


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00001E EC?? F0??      06254         CALL    _configura_porta
000022 52E6           06255         MOVF    POSTINC1, F
000024 52E6           06256         MOVF    POSTINC1, F
000026 D???           06257         BRA     _00954_DS_
000028                06258 _00953_DS_:
                      06259 ;       .line   464; interface.c        else if (tecla == SW4)
000028 50??           06260         MOVF    r0x00, W
00002A 0A01           06261         XORLW   0x01
00002C E1??           06262         BNZ     _00950_DS_
                      06263 ;       .line   465; interface.c        configura_porta(2, ENTRADA);
00002E 0E01           06264         MOVLW   0x01
000030 6EE5           06265         MOVWF   POSTDEC1
000032 0E02           06266         MOVLW   0x02
000034 6EE5           06267         MOVWF   POSTDEC1
000036 EC?? F0??      06268         CALL    _configura_porta
00003A 52E6           06269         MOVF    POSTINC1, F
00003C 52E6           06270         MOVF    POSTINC1, F
00003E D???           06271         BRA     _00954_DS_
000040                06272 _00950_DS_:
                      06273 ;       .line   466; interface.c        else if (tecla == SW5)
000040 50??           06274         MOVF    r0x00, W
000042 0A02           06275         XORLW   0x02
000044 E1??           06276         BNZ     _00947_DS_
                      06277 ;       .line   467; interface.c        return TELA_PRINCIPAL;
000046 6AE8           06278         CLRF    WREG
000048 D???           06279         BRA     _00955_DS_
00004A                06280 _00947_DS_:
                      06281 ;       .line   468; interface.c        else if (tecla == SW6)
00004A 50??           06282         MOVF    r0x00, W
00004C 0A03           06283         XORLW   0x03
00004E E1??           06284         BNZ     _00954_DS_
                      06285 ;       .line   469; interface.c        return MENU_PORTAS_1_2;
000050 0E12           06286         MOVLW   0x12
000052 D???           06287         BRA     _00955_DS_
000054                06288 _00954_DS_:
                      06289 ;       .line   471; interface.c        return MENU_PORTA_2_CONFIGURA;
000054 0E17           06290         MOVLW   0x17
000056                06291 _00955_DS_:
000056 CFE4 F000      06292         MOVFF   PREINC1, r0x00
00005A CFE4 FFD9      06293         MOVFF   PREINC1, FSR2L
00005E 0012           06294         RETURN  
                      06295 
                      06296 ; ; Starting pCode block
                      06297 S_interface__menu_porta_1_configura     code
000000                06298 _menu_porta_1_configura:
                      06299 ;       .line   440; interface.c        unsigned char menu_porta_1_configura(void)
000000 CFD9 FFE5      06300         MOVFF   FSR2L, POSTDEC1
000004 CFE1 FFD9      06301         MOVFF   FSR1L, FSR2L
000008 C??? F???      06302         MOVFF   r0x00, POSTDEC1
                      06303 ;       .line   444; interface.c        tecla = le_tecla();
00000C EC?? F0??      06304         CALL    _le_tecla
000010 6E??           06305         MOVWF   r0x00
                      06306 ;       .line   445; interface.c        if (tecla == SW3)
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE 120


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000012 50??           06307         MOVF    r0x00, W
000014 E1??           06308         BNZ     _00918_DS_
                      06309 ;       .line   446; interface.c        configura_porta(1, SAIDA);
000016 0E00           06310         MOVLW   0x00
000018 6EE5           06311         MOVWF   POSTDEC1
00001A 0E01           06312         MOVLW   0x01
00001C 6EE5           06313         MOVWF   POSTDEC1
00001E EC?? F0??      06314         CALL    _configura_porta
000022 52E6           06315         MOVF    POSTINC1, F
000024 52E6           06316         MOVF    POSTINC1, F
000026 D???           06317         BRA     _00919_DS_
000028                06318 _00918_DS_:
                      06319 ;       .line   447; interface.c        else if (tecla == SW4)
000028 50??           06320         MOVF    r0x00, W
00002A 0A01           06321         XORLW   0x01
00002C E1??           06322         BNZ     _00915_DS_
                      06323 ;       .line   448; interface.c        configura_porta(1, ENTRADA);
00002E 0E01           06324         MOVLW   0x01
000030 6EE5           06325         MOVWF   POSTDEC1
000032 0E01           06326         MOVLW   0x01
000034 6EE5           06327         MOVWF   POSTDEC1
000036 EC?? F0??      06328         CALL    _configura_porta
00003A 52E6           06329         MOVF    POSTINC1, F
00003C 52E6           06330         MOVF    POSTINC1, F
00003E D???           06331         BRA     _00919_DS_
000040                06332 _00915_DS_:
                      06333 ;       .line   449; interface.c        else if (tecla == SW5)
000040 50??           06334         MOVF    r0x00, W
000042 0A02           06335         XORLW   0x02
000044 E1??           06336         BNZ     _00912_DS_
                      06337 ;       .line   450; interface.c        return TELA_PRINCIPAL;
000046 6AE8           06338         CLRF    WREG
000048 D???           06339         BRA     _00920_DS_
00004A                06340 _00912_DS_:
                      06341 ;       .line   451; interface.c        else if (tecla == SW6)
00004A 50??           06342         MOVF    r0x00, W
00004C 0A03           06343         XORLW   0x03
00004E E1??           06344         BNZ     _00919_DS_
                      06345 ;       .line   452; interface.c        return MENU_PORTAS_1_2;
000050 0E12           06346         MOVLW   0x12
000052 D???           06347         BRA     _00920_DS_
000054                06348 _00919_DS_:
                      06349 ;       .line   454; interface.c        return MENU_PORTA_1_CONFIGURA;
000054 0E16           06350         MOVLW   0x16
000056                06351 _00920_DS_:
000056 CFE4 F000      06352         MOVFF   PREINC1, r0x00
00005A CFE4 FFD9      06353         MOVFF   PREINC1, FSR2L
00005E 0012           06354         RETURN  
                      06355 
                      06356 ; ; Starting pCode block
                      06357 S_interface__menu_portas_7_8    code
000000                06358 _menu_portas_7_8:
                      06359 ;       .line   423; interface.c        unsigned char menu_portas_7_8(void)
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE 121


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000000 CFD9 FFE5      06360         MOVFF   FSR2L, POSTDEC1
000004 CFE1 FFD9      06361         MOVFF   FSR1L, FSR2L
000008 C??? F???      06362         MOVFF   r0x00, POSTDEC1
                      06363 ;       .line   427; interface.c        tecla = le_tecla();
00000C EC?? F0??      06364         CALL    _le_tecla
000010 6E??           06365         MOVWF   r0x00
                      06366 ;       .line   428; interface.c        if (tecla == SW3)
000012 50??           06367         MOVF    r0x00, W
000014 E1??           06368         BNZ     _00883_DS_
                      06369 ;       .line   429; interface.c        return MENU_PORTA_7_CONFIGURA;
000016 0E1C           06370         MOVLW   0x1c
000018 D???           06371         BRA     _00885_DS_
00001A                06372 _00883_DS_:
                      06373 ;       .line   430; interface.c        else if (tecla == SW4)
00001A 50??           06374         MOVF    r0x00, W
00001C 0A01           06375         XORLW   0x01
00001E E1??           06376         BNZ     _00880_DS_
                      06377 ;       .line   431; interface.c        return MENU_PORTA_8_CONFIGURA;
000020 0E1D           06378         MOVLW   0x1d
000022 D???           06379         BRA     _00885_DS_
000024                06380 _00880_DS_:
                      06381 ;       .line   432; interface.c        else if (tecla == SW5)
000024 50??           06382         MOVF    r0x00, W
000026 0A02           06383         XORLW   0x02
000028 E1??           06384         BNZ     _00877_DS_
                      06385 ;       .line   433; interface.c        return TELA_PRINCIPAL;
00002A 6AE8           06386         CLRF    WREG
00002C D???           06387         BRA     _00885_DS_
00002E                06388 _00877_DS_:
                      06389 ;       .line   434; interface.c        else if (tecla == SW6)
00002E 50??           06390         MOVF    r0x00, W
000030 0A03           06391         XORLW   0x03
000032 E1??           06392         BNZ     _00881_DS_
                      06393 ;       .line   435; interface.c        return MENU_MAIS;
000034 0E02           06394         MOVLW   0x02
000036 D???           06395         BRA     _00885_DS_
000038                06396 _00881_DS_:
                      06397 ;       .line   437; interface.c        return MENU_PORTAS_7_8;
000038 0E15           06398         MOVLW   0x15
00003A                06399 _00885_DS_:
00003A CFE4 F000      06400         MOVFF   PREINC1, r0x00
00003E CFE4 FFD9      06401         MOVFF   PREINC1, FSR2L
000042 0012           06402         RETURN  
                      06403 
                      06404 ; ; Starting pCode block
                      06405 S_interface__menu_portas_5_6    code
000000                06406 _menu_portas_5_6:
                      06407 ;       .line   406; interface.c        unsigned char menu_portas_5_6(void)
000000 CFD9 FFE5      06408         MOVFF   FSR2L, POSTDEC1
000004 CFE1 FFD9      06409         MOVFF   FSR1L, FSR2L
000008 C??? F???      06410         MOVFF   r0x00, POSTDEC1
                      06411 ;       .line   410; interface.c        tecla = le_tecla();
00000C EC?? F0??      06412         CALL    _le_tecla
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE 122


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000010 6E??           06413         MOVWF   r0x00
                      06414 ;       .line   411; interface.c        if (tecla == SW3)
000012 50??           06415         MOVF    r0x00, W
000014 E1??           06416         BNZ     _00848_DS_
                      06417 ;       .line   412; interface.c        return MENU_PORTA_5_CONFIGURA;
000016 0E1A           06418         MOVLW   0x1a
000018 D???           06419         BRA     _00850_DS_
00001A                06420 _00848_DS_:
                      06421 ;       .line   413; interface.c        else if (tecla == SW4)
00001A 50??           06422         MOVF    r0x00, W
00001C 0A01           06423         XORLW   0x01
00001E E1??           06424         BNZ     _00845_DS_
                      06425 ;       .line   414; interface.c        return MENU_PORTA_6_CONFIGURA;
000020 0E1B           06426         MOVLW   0x1b
000022 D???           06427         BRA     _00850_DS_
000024                06428 _00845_DS_:
                      06429 ;       .line   415; interface.c        else if (tecla == SW5)
000024 50??           06430         MOVF    r0x00, W
000026 0A02           06431         XORLW   0x02
000028 E1??           06432         BNZ     _00842_DS_
                      06433 ;       .line   416; interface.c        return TELA_PRINCIPAL;
00002A 6AE8           06434         CLRF    WREG
00002C D???           06435         BRA     _00850_DS_
00002E                06436 _00842_DS_:
                      06437 ;       .line   417; interface.c        else if (tecla == SW6)
00002E 50??           06438         MOVF    r0x00, W
000030 0A03           06439         XORLW   0x03
000032 E1??           06440         BNZ     _00846_DS_
                      06441 ;       .line   418; interface.c        return MENU_PORTAS_7_8;
000034 0E15           06442         MOVLW   0x15
000036 D???           06443         BRA     _00850_DS_
000038                06444 _00846_DS_:
                      06445 ;       .line   420; interface.c        return MENU_PORTAS_5_6;
000038 0E14           06446         MOVLW   0x14
00003A                06447 _00850_DS_:
00003A CFE4 F000      06448         MOVFF   PREINC1, r0x00
00003E CFE4 FFD9      06449         MOVFF   PREINC1, FSR2L
000042 0012           06450         RETURN  
                      06451 
                      06452 ; ; Starting pCode block
                      06453 S_interface__menu_portas_3_4    code
000000                06454 _menu_portas_3_4:
                      06455 ;       .line   389; interface.c        unsigned char menu_portas_3_4(void)
000000 CFD9 FFE5      06456         MOVFF   FSR2L, POSTDEC1
000004 CFE1 FFD9      06457         MOVFF   FSR1L, FSR2L
000008 C??? F???      06458         MOVFF   r0x00, POSTDEC1
                      06459 ;       .line   393; interface.c        tecla = le_tecla();
00000C EC?? F0??      06460         CALL    _le_tecla
000010 6E??           06461         MOVWF   r0x00
                      06462 ;       .line   394; interface.c        if (tecla == SW3)
000012 50??           06463         MOVF    r0x00, W
000014 E1??           06464         BNZ     _00813_DS_
                      06465 ;       .line   395; interface.c        return MENU_PORTA_3_CONFIGURA;
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE 123


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000016 0E18           06466         MOVLW   0x18
000018 D???           06467         BRA     _00815_DS_
00001A                06468 _00813_DS_:
                      06469 ;       .line   396; interface.c        else if (tecla == SW4)
00001A 50??           06470         MOVF    r0x00, W
00001C 0A01           06471         XORLW   0x01
00001E E1??           06472         BNZ     _00810_DS_
                      06473 ;       .line   397; interface.c        return MENU_PORTA_4_CONFIGURA;
000020 0E19           06474         MOVLW   0x19
000022 D???           06475         BRA     _00815_DS_
000024                06476 _00810_DS_:
                      06477 ;       .line   398; interface.c        else if (tecla == SW5)
000024 50??           06478         MOVF    r0x00, W
000026 0A02           06479         XORLW   0x02
000028 E1??           06480         BNZ     _00807_DS_
                      06481 ;       .line   399; interface.c        return TELA_PRINCIPAL;
00002A 6AE8           06482         CLRF    WREG
00002C D???           06483         BRA     _00815_DS_
00002E                06484 _00807_DS_:
                      06485 ;       .line   400; interface.c        else if (tecla == SW6)
00002E 50??           06486         MOVF    r0x00, W
000030 0A03           06487         XORLW   0x03
000032 E1??           06488         BNZ     _00811_DS_
                      06489 ;       .line   401; interface.c        return MENU_PORTAS_5_6;
000034 0E14           06490         MOVLW   0x14
000036 D???           06491         BRA     _00815_DS_
000038                06492 _00811_DS_:
                      06493 ;       .line   403; interface.c        return MENU_PORTAS_3_4;
000038 0E13           06494         MOVLW   0x13
00003A                06495 _00815_DS_:
00003A CFE4 F000      06496         MOVFF   PREINC1, r0x00
00003E CFE4 FFD9      06497         MOVFF   PREINC1, FSR2L
000042 0012           06498         RETURN  
                      06499 
                      06500 ; ; Starting pCode block
                      06501 S_interface__menu_portas_1_2    code
000000                06502 _menu_portas_1_2:
                      06503 ;       .line   372; interface.c        unsigned char menu_portas_1_2(void)
000000 CFD9 FFE5      06504         MOVFF   FSR2L, POSTDEC1
000004 CFE1 FFD9      06505         MOVFF   FSR1L, FSR2L
000008 C??? F???      06506         MOVFF   r0x00, POSTDEC1
                      06507 ;       .line   376; interface.c        tecla = le_tecla();
00000C EC?? F0??      06508         CALL    _le_tecla
000010 6E??           06509         MOVWF   r0x00
                      06510 ;       .line   377; interface.c        if (tecla == SW3)
000012 50??           06511         MOVF    r0x00, W
000014 E1??           06512         BNZ     _00778_DS_
                      06513 ;       .line   378; interface.c        return MENU_PORTA_1_CONFIGURA;
000016 0E16           06514         MOVLW   0x16
000018 D???           06515         BRA     _00780_DS_
00001A                06516 _00778_DS_:
                      06517 ;       .line   379; interface.c        else if (tecla == SW4)
00001A 50??           06518         MOVF    r0x00, W
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE 124


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00001C 0A01           06519         XORLW   0x01
00001E E1??           06520         BNZ     _00775_DS_
                      06521 ;       .line   380; interface.c        return MENU_PORTA_2_CONFIGURA;
000020 0E17           06522         MOVLW   0x17
000022 D???           06523         BRA     _00780_DS_
000024                06524 _00775_DS_:
                      06525 ;       .line   381; interface.c        else if (tecla == SW5)
000024 50??           06526         MOVF    r0x00, W
000026 0A02           06527         XORLW   0x02
000028 E1??           06528         BNZ     _00772_DS_
                      06529 ;       .line   382; interface.c        return TELA_PRINCIPAL;
00002A 6AE8           06530         CLRF    WREG
00002C D???           06531         BRA     _00780_DS_
00002E                06532 _00772_DS_:
                      06533 ;       .line   383; interface.c        else if (tecla == SW6)
00002E 50??           06534         MOVF    r0x00, W
000030 0A03           06535         XORLW   0x03
000032 E1??           06536         BNZ     _00776_DS_
                      06537 ;       .line   384; interface.c        return MENU_PORTAS_3_4;
000034 0E13           06538         MOVLW   0x13
000036 D???           06539         BRA     _00780_DS_
000038                06540 _00776_DS_:
                      06541 ;       .line   386; interface.c        return MENU_PORTAS_1_2;
000038 0E12           06542         MOVLW   0x12
00003A                06543 _00780_DS_:
00003A CFE4 F000      06544         MOVFF   PREINC1, r0x00
00003E CFE4 FFD9      06545         MOVFF   PREINC1, FSR2L
000042 0012           06546         RETURN  
                      06547 
                      06548 ; ; Starting pCode block
                      06549 S_interface__menu_led_2 code
000000                06550 _menu_led_2:
                      06551 ;       .line   345; interface.c        unsigned char menu_led_2(void)
000000 CFD9 FFE5      06552         MOVFF   FSR2L, POSTDEC1
000004 CFE1 FFD9      06553         MOVFF   FSR1L, FSR2L
000008 C??? F???      06554         MOVFF   r0x00, POSTDEC1
00000C C??? F???      06555         MOVFF   r0x01, POSTDEC1
000010 C??? F???      06556         MOVFF   r0x02, POSTDEC1
000014 C??? F???      06557         MOVFF   r0x03, POSTDEC1
000018 ????           06558         BANKSEL _pwm_2
                      06559 ;       .line   350; interface.c        set_pwm(1, pwm_2);
00001A 51??           06560         MOVF    _pwm_2, W, B
00001C 6EE5           06561         MOVWF   POSTDEC1
00001E 0E01           06562         MOVLW   0x01
000020 6EE5           06563         MOVWF   POSTDEC1
000022 EC?? F0??      06564         CALL    _set_pwm
000026 52E6           06565         MOVF    POSTINC1, F
000028 52E6           06566         MOVF    POSTINC1, F
                      06567 ;       .line   351; interface.c        tecla = le_tecla();
00002A EC?? F0??      06568         CALL    _le_tecla
00002E 6E??           06569         MOVWF   r0x00
                      06570 ;       .line   352; interface.c        tecla_c = le_tecla_continua();
000030 EC?? F0??      06571         CALL    _le_tecla_continua
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE 125


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000034 6E??           06572         MOVWF   r0x01
                      06573 ;       .line   353; interface.c        if (tecla_c == SW5) {
000036 50??           06574         MOVF    r0x01, W
000038 0A02           06575         XORLW   0x02
00003A E1??           06576         BNZ     _00736_DS_
                      06577 ;       .line   354; interface.c        if (pwm_2 + 1 > 255)
00003C C??? F???      06578         MOVFF   _pwm_2, r0x02
000040 6A??           06579         CLRF    r0x03
000042 4A??           06580         INFSNZ  r0x02, F
000044 2A??           06581         INCF    r0x03, F
000046 50??           06582         MOVF    r0x03, W
000048 0F80           06583         ADDLW   0x80
00004A 0F7F           06584         ADDLW   0x7f
00004C E1??           06585         BNZ     _00760_DS_
00004E 0E00           06586         MOVLW   0x00
000050 5C??           06587         SUBWF   r0x02, W
000052                06588 _00760_DS_:
000052 E3??           06589         BNC     _00722_DS_
                      06590 ;       .line   355; interface.c        pwm_2 = 255;
000054 0EFF           06591         MOVLW   0xff
000056 ????           06592         BANKSEL _pwm_2
000058 6F??           06593         MOVWF   _pwm_2, B
00005A D???           06594         BRA     _00737_DS_
00005C                06595 _00722_DS_:
00005C ????           06596         BANKSEL _pwm_2
                      06597 ;       .line   357; interface.c        pwm_2++;
00005E 2B??           06598         INCF    _pwm_2, F, B
000060 D???           06599         BRA     _00737_DS_
000062                06600 _00736_DS_:
                      06601 ;       .line   358; interface.c        } else if (tecla_c == SW3) {
000062 50??           06602         MOVF    r0x01, W
000064 E1??           06603         BNZ     _00733_DS_
                      06604 ;       .line   359; interface.c        if (pwm_2 - 1 < 0)
000066 C??? F???      06605         MOVFF   _pwm_2, r0x01
00006A 6A??           06606         CLRF    r0x02
00006C 0EFF           06607         MOVLW   0xff
00006E 26??           06608         ADDWF   r0x01, F
000070 22??           06609         ADDWFC  r0x02, F
000072 80D8           06610         BSF     STATUS, 0
000074 AE??           06611         BTFSS   r0x02, 7
000076 90D8           06612         BCF     STATUS, 0
000078 E3??           06613         BNC     _00725_DS_
00007A ????           06614         BANKSEL _pwm_2
                      06615 ;       .line   360; interface.c        pwm_2 = 0;
00007C 6B??           06616         CLRF    _pwm_2, B
00007E D???           06617         BRA     _00737_DS_
000080                06618 _00725_DS_:
000080 ????           06619         BANKSEL _pwm_2
                      06620 ;       .line   362; interface.c        pwm_2--;
000082 07??           06621         DECF    _pwm_2, F, B
000084 D???           06622         BRA     _00737_DS_
000086                06623 _00733_DS_:
                      06624 ;       .line   363; interface.c        } else if (tecla == SW6) {
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE 126


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000086 50??           06625         MOVF    r0x00, W
000088 0A03           06626         XORLW   0x03
00008A E1??           06627         BNZ     _00730_DS_
                      06628 ;       .line   364; interface.c        return MENU_LED;
00008C 0E0D           06629         MOVLW   0x0d
00008E D???           06630         BRA     _00738_DS_
000090                06631 _00730_DS_:
                      06632 ;       .line   365; interface.c        } else if (tecla == SW4) {
000090 50??           06633         MOVF    r0x00, W
000092 0A01           06634         XORLW   0x01
000094 E1??           06635         BNZ     _00737_DS_
                      06636 ;       .line   366; interface.c        return TELA_PRINCIPAL;
000096 6AE8           06637         CLRF    WREG
000098 D???           06638         BRA     _00738_DS_
00009A                06639 _00737_DS_:
                      06640 ;       .line   369; interface.c        return MENU_LED_2;
00009A 0E11           06641         MOVLW   0x11
00009C                06642 _00738_DS_:
00009C CFE4 F000      06643         MOVFF   PREINC1, r0x03
0000A0 CFE4 F000      06644         MOVFF   PREINC1, r0x02
0000A4 CFE4 F000      06645         MOVFF   PREINC1, r0x01
0000A8 CFE4 F000      06646         MOVFF   PREINC1, r0x00
0000AC CFE4 FFD9      06647         MOVFF   PREINC1, FSR2L
0000B0 0012           06648         RETURN  
                      06649 
                      06650 ; ; Starting pCode block
                      06651 S_interface__menu_led_1 code
000000                06652 _menu_led_1:
                      06653 ;       .line   318; interface.c        unsigned char menu_led_1(void)
000000 CFD9 FFE5      06654         MOVFF   FSR2L, POSTDEC1
000004 CFE1 FFD9      06655         MOVFF   FSR1L, FSR2L
000008 C??? F???      06656         MOVFF   r0x00, POSTDEC1
00000C C??? F???      06657         MOVFF   r0x01, POSTDEC1
000010 C??? F???      06658         MOVFF   r0x02, POSTDEC1
000014 C??? F???      06659         MOVFF   r0x03, POSTDEC1
000018 ????           06660         BANKSEL _pwm_1
                      06661 ;       .line   323; interface.c        set_pwm(0, pwm_1);
00001A 51??           06662         MOVF    _pwm_1, W, B
00001C 6EE5           06663         MOVWF   POSTDEC1
00001E 0E00           06664         MOVLW   0x00
000020 6EE5           06665         MOVWF   POSTDEC1
000022 EC?? F0??      06666         CALL    _set_pwm
000026 52E6           06667         MOVF    POSTINC1, F
000028 52E6           06668         MOVF    POSTINC1, F
                      06669 ;       .line   324; interface.c        tecla = le_tecla();
00002A EC?? F0??      06670         CALL    _le_tecla
00002E 6E??           06671         MOVWF   r0x00
                      06672 ;       .line   325; interface.c        tecla_c = le_tecla_continua();
000030 EC?? F0??      06673         CALL    _le_tecla_continua
000034 6E??           06674         MOVWF   r0x01
                      06675 ;       .line   326; interface.c        if (tecla_c == SW5) {
000036 50??           06676         MOVF    r0x01, W
000038 0A02           06677         XORLW   0x02
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE 127


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00003A E1??           06678         BNZ     _00688_DS_
                      06679 ;       .line   327; interface.c        if (pwm_1 + 1 > 255)
00003C C??? F???      06680         MOVFF   _pwm_1, r0x02
000040 6A??           06681         CLRF    r0x03
000042 4A??           06682         INFSNZ  r0x02, F
000044 2A??           06683         INCF    r0x03, F
000046 50??           06684         MOVF    r0x03, W
000048 0F80           06685         ADDLW   0x80
00004A 0F7F           06686         ADDLW   0x7f
00004C E1??           06687         BNZ     _00712_DS_
00004E 0E00           06688         MOVLW   0x00
000050 5C??           06689         SUBWF   r0x02, W
000052                06690 _00712_DS_:
000052 E3??           06691         BNC     _00674_DS_
                      06692 ;       .line   328; interface.c        pwm_1 = 255;
000054 0EFF           06693         MOVLW   0xff
000056 ????           06694         BANKSEL _pwm_1
000058 6F??           06695         MOVWF   _pwm_1, B
00005A D???           06696         BRA     _00689_DS_
00005C                06697 _00674_DS_:
00005C ????           06698         BANKSEL _pwm_1
                      06699 ;       .line   330; interface.c        pwm_1++;
00005E 2B??           06700         INCF    _pwm_1, F, B
000060 D???           06701         BRA     _00689_DS_
000062                06702 _00688_DS_:
                      06703 ;       .line   331; interface.c        } else if (tecla_c == SW3) {
000062 50??           06704         MOVF    r0x01, W
000064 E1??           06705         BNZ     _00685_DS_
                      06706 ;       .line   332; interface.c        if (pwm_1 - 1 < 0)
000066 C??? F???      06707         MOVFF   _pwm_1, r0x01
00006A 6A??           06708         CLRF    r0x02
00006C 0EFF           06709         MOVLW   0xff
00006E 26??           06710         ADDWF   r0x01, F
000070 22??           06711         ADDWFC  r0x02, F
000072 80D8           06712         BSF     STATUS, 0
000074 AE??           06713         BTFSS   r0x02, 7
000076 90D8           06714         BCF     STATUS, 0
000078 E3??           06715         BNC     _00677_DS_
00007A ????           06716         BANKSEL _pwm_1
                      06717 ;       .line   333; interface.c        pwm_1 = 0;
00007C 6B??           06718         CLRF    _pwm_1, B
00007E D???           06719         BRA     _00689_DS_
000080                06720 _00677_DS_:
000080 ????           06721         BANKSEL _pwm_1
                      06722 ;       .line   335; interface.c        pwm_1--;
000082 07??           06723         DECF    _pwm_1, F, B
000084 D???           06724         BRA     _00689_DS_
000086                06725 _00685_DS_:
                      06726 ;       .line   336; interface.c        } else if (tecla == SW6) {
000086 50??           06727         MOVF    r0x00, W
000088 0A03           06728         XORLW   0x03
00008A E1??           06729         BNZ     _00682_DS_
                      06730 ;       .line   337; interface.c        return MENU_LED;
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE 128


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00008C 0E0D           06731         MOVLW   0x0d
00008E D???           06732         BRA     _00690_DS_
000090                06733 _00682_DS_:
                      06734 ;       .line   338; interface.c        } else if (tecla == SW4) {
000090 50??           06735         MOVF    r0x00, W
000092 0A01           06736         XORLW   0x01
000094 E1??           06737         BNZ     _00689_DS_
                      06738 ;       .line   339; interface.c        return TELA_PRINCIPAL;
000096 6AE8           06739         CLRF    WREG
000098 D???           06740         BRA     _00690_DS_
00009A                06741 _00689_DS_:
                      06742 ;       .line   342; interface.c        return MENU_LED_1;
00009A 0E10           06743         MOVLW   0x10
00009C                06744 _00690_DS_:
00009C CFE4 F000      06745         MOVFF   PREINC1, r0x03
0000A0 CFE4 F000      06746         MOVFF   PREINC1, r0x02
0000A4 CFE4 F000      06747         MOVFF   PREINC1, r0x01
0000A8 CFE4 F000      06748         MOVFF   PREINC1, r0x00
0000AC CFE4 FFD9      06749         MOVFF   PREINC1, FSR2L
0000B0 0012           06750         RETURN  
                      06751 
                      06752 ; ; Starting pCode block
                      06753 S_interface__menu_led_0 code
000000                06754 _menu_led_0:
                      06755 ;       .line   302; interface.c        unsigned char menu_led_0(void)
000000 CFD9 FFE5      06756         MOVFF   FSR2L, POSTDEC1
000004 CFE1 FFD9      06757         MOVFF   FSR1L, FSR2L
000008 C??? F???      06758         MOVFF   r0x00, POSTDEC1
                      06759 ;       .line   305; interface.c        tecla = le_tecla();
00000C EC?? F0??      06760         CALL    _le_tecla
000010 6E??           06761         MOVWF   r0x00
                      06762 ;       .line   306; interface.c        if (tecla == SW5)
000012 50??           06763         MOVF    r0x00, W
000014 0A02           06764         XORLW   0x02
000016 E1??           06765         BNZ     _00647_DS_
                      06766 ;       .line   307; interface.c        led(0, ON);
000018 0E01           06767         MOVLW   0x01
00001A 6EE5           06768         MOVWF   POSTDEC1
00001C 0E00           06769         MOVLW   0x00
00001E 6EE5           06770         MOVWF   POSTDEC1
000020 EC?? F0??      06771         CALL    _led
000024 52E6           06772         MOVF    POSTINC1, F
000026 52E6           06773         MOVF    POSTINC1, F
000028 D???           06774         BRA     _00648_DS_
00002A                06775 _00647_DS_:
                      06776 ;       .line   308; interface.c        else if (tecla == SW3)
00002A 50??           06777         MOVF    r0x00, W
00002C E1??           06778         BNZ     _00644_DS_
                      06779 ;       .line   309; interface.c        led(0, OFF);
00002E 0E00           06780         MOVLW   0x00
000030 6EE5           06781         MOVWF   POSTDEC1
000032 0E00           06782         MOVLW   0x00
000034 6EE5           06783         MOVWF   POSTDEC1
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE 129


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000036 EC?? F0??      06784         CALL    _led
00003A 52E6           06785         MOVF    POSTINC1, F
00003C 52E6           06786         MOVF    POSTINC1, F
00003E D???           06787         BRA     _00648_DS_
000040                06788 _00644_DS_:
                      06789 ;       .line   310; interface.c        else if (tecla == SW6)
000040 50??           06790         MOVF    r0x00, W
000042 0A03           06791         XORLW   0x03
000044 E1??           06792         BNZ     _00641_DS_
                      06793 ;       .line   311; interface.c        return MENU_LED_MAIS;
000046 0E0E           06794         MOVLW   0x0e
000048 D???           06795         BRA     _00649_DS_
00004A                06796 _00641_DS_:
                      06797 ;       .line   312; interface.c        else if (tecla == SW4)
00004A 50??           06798         MOVF    r0x00, W
00004C 0A01           06799         XORLW   0x01
00004E E1??           06800         BNZ     _00648_DS_
                      06801 ;       .line   313; interface.c        return TELA_PRINCIPAL;
000050 6AE8           06802         CLRF    WREG
000052 D???           06803         BRA     _00649_DS_
000054                06804 _00648_DS_:
                      06805 ;       .line   315; interface.c        return MENU_LED_0;
000054 0E0F           06806         MOVLW   0x0f
000056                06807 _00649_DS_:
000056 CFE4 F000      06808         MOVFF   PREINC1, r0x00
00005A CFE4 FFD9      06809         MOVFF   PREINC1, FSR2L
00005E 0012           06810         RETURN  
                      06811 
                      06812 ; ; Starting pCode block
                      06813 S_interface__menu_led_mais      code
000000                06814 _menu_led_mais:
                      06815 ;       .line   287; interface.c        unsigned char menu_led_mais(void)
000000 CFD9 FFE5      06816         MOVFF   FSR2L, POSTDEC1
000004 CFE1 FFD9      06817         MOVFF   FSR1L, FSR2L
000008 C??? F???      06818         MOVFF   r0x00, POSTDEC1
                      06819 ;       .line   291; interface.c        tecla = le_tecla();
00000C EC?? F0??      06820         CALL    _le_tecla
000010 6E??           06821         MOVWF   r0x00
                      06822 ;       .line   292; interface.c        if (tecla == SW3)
000012 50??           06823         MOVF    r0x00, W
000014 E1??           06824         BNZ     _00617_DS_
                      06825 ;       .line   293; interface.c        return MENU_LED_0;
000016 0E0F           06826         MOVLW   0x0f
000018 D???           06827         BRA     _00619_DS_
00001A                06828 _00617_DS_:
                      06829 ;       .line   294; interface.c        else if (tecla == SW5)
00001A 50??           06830         MOVF    r0x00, W
00001C 0A02           06831         XORLW   0x02
00001E E1??           06832         BNZ     _00614_DS_
                      06833 ;       .line   295; interface.c        return TELA_PRINCIPAL;
000020 6AE8           06834         CLRF    WREG
000022 D???           06835         BRA     _00619_DS_
000024                06836 _00614_DS_:
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE 130


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      06837 ;       .line   296; interface.c        else if (tecla == SW6)
000024 50??           06838         MOVF    r0x00, W
000026 0A03           06839         XORLW   0x03
000028 E1??           06840         BNZ     _00618_DS_
                      06841 ;       .line   297; interface.c        return MENU_LED;
00002A 0E0D           06842         MOVLW   0x0d
00002C D???           06843         BRA     _00619_DS_
00002E                06844 _00618_DS_:
                      06845 ;       .line   299; interface.c        return MENU_LED_MAIS;
00002E 0E0E           06846         MOVLW   0x0e
000030                06847 _00619_DS_:
000030 CFE4 F000      06848         MOVFF   PREINC1, r0x00
000034 CFE4 FFD9      06849         MOVFF   PREINC1, FSR2L
000038 0012           06850         RETURN  
                      06851 
                      06852 ; ; Starting pCode block
                      06853 S_interface__menu_led   code
000000                06854 _menu_led:
                      06855 ;       .line   270; interface.c        unsigned char menu_led(void)
000000 CFD9 FFE5      06856         MOVFF   FSR2L, POSTDEC1
000004 CFE1 FFD9      06857         MOVFF   FSR1L, FSR2L
000008 C??? F???      06858         MOVFF   r0x00, POSTDEC1
                      06859 ;       .line   274; interface.c        tecla = le_tecla();
00000C EC?? F0??      06860         CALL    _le_tecla
000010 6E??           06861         MOVWF   r0x00
                      06862 ;       .line   275; interface.c        if (tecla == SW3)
000012 50??           06863         MOVF    r0x00, W
000014 E1??           06864         BNZ     _00585_DS_
                      06865 ;       .line   276; interface.c        return MENU_LED_1;
000016 0E10           06866         MOVLW   0x10
000018 D???           06867         BRA     _00587_DS_
00001A                06868 _00585_DS_:
                      06869 ;       .line   277; interface.c        else if (tecla == SW4)
00001A 50??           06870         MOVF    r0x00, W
00001C 0A01           06871         XORLW   0x01
00001E E1??           06872         BNZ     _00582_DS_
                      06873 ;       .line   278; interface.c        return MENU_LED_2;
000020 0E11           06874         MOVLW   0x11
000022 D???           06875         BRA     _00587_DS_
000024                06876 _00582_DS_:
                      06877 ;       .line   279; interface.c        else if (tecla == SW5)
000024 50??           06878         MOVF    r0x00, W
000026 0A02           06879         XORLW   0x02
000028 E1??           06880         BNZ     _00579_DS_
                      06881 ;       .line   280; interface.c        return TELA_PRINCIPAL;
00002A 6AE8           06882         CLRF    WREG
00002C D???           06883         BRA     _00587_DS_
00002E                06884 _00579_DS_:
                      06885 ;       .line   281; interface.c        else if (tecla == SW6)
00002E 50??           06886         MOVF    r0x00, W
000030 0A03           06887         XORLW   0x03
000032 E1??           06888         BNZ     _00583_DS_
                      06889 ;       .line   282; interface.c        return MENU_LED_MAIS;
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE 131


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000034 0E0E           06890         MOVLW   0x0e
000036 D???           06891         BRA     _00587_DS_
000038                06892 _00583_DS_:
                      06893 ;       .line   284; interface.c        return MENU_LED;
000038 0E0D           06894         MOVLW   0x0d
00003A                06895 _00587_DS_:
00003A CFE4 F000      06896         MOVFF   PREINC1, r0x00
00003E CFE4 FFD9      06897         MOVFF   PREINC1, FSR2L
000042 0012           06898         RETURN  
                      06899 
                      06900 ; ; Starting pCode block
                      06901 S_interface__menu_configuracao_tempo    code
000000                06902 _menu_configuracao_tempo:
                      06903 ;       .line   247; interface.c        unsigned char menu_configuracao_tempo(void)
000000 CFD9 FFE5      06904         MOVFF   FSR2L, POSTDEC1
000004 CFE1 FFD9      06905         MOVFF   FSR1L, FSR2L
000008 C??? F???      06906         MOVFF   r0x00, POSTDEC1
00000C C??? F???      06907         MOVFF   r0x01, POSTDEC1
000010 C??? F???      06908         MOVFF   r0x02, POSTDEC1
000014 C??? F???      06909         MOVFF   r0x03, POSTDEC1
000018 C??? F???      06910         MOVFF   r0x04, POSTDEC1
00001C C??? F???      06911         MOVFF   r0x05, POSTDEC1
                      06912 ;       .line   252; interface.c        tecla = le_tecla();
000020 EC?? F0??      06913         CALL    _le_tecla
000024 6E??           06914         MOVWF   r0x00
                      06915 ;       .line   253; interface.c        tecla_c = le_tecla_continua();
000026 EC?? F0??      06916         CALL    _le_tecla_continua
00002A 6E??           06917         MOVWF   r0x01
                      06918 ;       .line   254; interface.c        if (tecla_c == SW3)
00002C 50??           06919         MOVF    r0x01, W
00002E E1??           06920         BNZ     _00530_DS_
000030 ????           06921         BANKSEL (_sys_timer_pool + 4)
                      06922 ;       .line   255; interface.c        sys_timer_pool[1] += 10;
000032 51??           06923         MOVF    (_sys_timer_pool + 4), W, B
000034 0F0A           06924         ADDLW   0x0a
000036 6E??           06925         MOVWF   r0x02
000038 0E00           06926         MOVLW   0x00
00003A ????           06927         BANKSEL (_sys_timer_pool + 5)
00003C 21??           06928         ADDWFC  (_sys_timer_pool + 5), W, B
00003E 6E??           06929         MOVWF   r0x03
000040 0E00           06930         MOVLW   0x00
000042 ????           06931         BANKSEL (_sys_timer_pool + 6)
000044 21??           06932         ADDWFC  (_sys_timer_pool + 6), W, B
000046 6E??           06933         MOVWF   r0x04
000048 0E00           06934         MOVLW   0x00
00004A ????           06935         BANKSEL (_sys_timer_pool + 7)
00004C 21??           06936         ADDWFC  (_sys_timer_pool + 7), W, B
00004E 6E??           06937         MOVWF   r0x05
000050 50??           06938         MOVF    r0x02, W
000052 ????           06939         BANKSEL (_sys_timer_pool + 4)
000054 6F??           06940         MOVWF   (_sys_timer_pool + 4), B
000056 50??           06941         MOVF    r0x03, W
000058 ????           06942         BANKSEL (_sys_timer_pool + 5)
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE 132


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00005A 6F??           06943         MOVWF   (_sys_timer_pool + 5), B
00005C 50??           06944         MOVF    r0x04, W
00005E ????           06945         BANKSEL (_sys_timer_pool + 6)
000060 6F??           06946         MOVWF   (_sys_timer_pool + 6), B
000062 50??           06947         MOVF    r0x05, W
000064 ????           06948         BANKSEL (_sys_timer_pool + 7)
000066 6F??           06949         MOVWF   (_sys_timer_pool + 7), B
000068                06950 _00530_DS_:
                      06951 ;       .line   256; interface.c        if (sys_timer_pool[1] > TIMER_POOL_MAX)
000068 C??? F???      06952         MOVFF   (_sys_timer_pool + 4), r0x02
00006C C??? F???      06953         MOVFF   (_sys_timer_pool + 5), r0x03
000070 C??? F???      06954         MOVFF   (_sys_timer_pool + 6), r0x04
000074 C??? F???      06955         MOVFF   (_sys_timer_pool + 7), r0x05
000078 0E00           06956         MOVLW   0x00
00007A 5C??           06957         SUBWF   r0x05, W
00007C E1??           06958         BNZ     _00564_DS_
00007E 0E01           06959         MOVLW   0x01
000080 5C??           06960         SUBWF   r0x04, W
000082 E1??           06961         BNZ     _00564_DS_
000084 0E86           06962         MOVLW   0x86
000086 5C??           06963         SUBWF   r0x03, W
000088 E1??           06964         BNZ     _00564_DS_
00008A 0EA1           06965         MOVLW   0xa1
00008C 5C??           06966         SUBWF   r0x02, W
00008E                06967 _00564_DS_:
00008E E3??           06968         BNC     _00534_DS_
                      06969 ;       .line   257; interface.c        sys_timer_pool[1] = TIMER_POOL_MAX;
000090 0EA0           06970         MOVLW   0xa0
000092 ????           06971         BANKSEL (_sys_timer_pool + 4)
000094 6F??           06972         MOVWF   (_sys_timer_pool + 4), B
000096 0E86           06973         MOVLW   0x86
000098 ????           06974         BANKSEL (_sys_timer_pool + 5)
00009A 6F??           06975         MOVWF   (_sys_timer_pool + 5), B
00009C 0E01           06976         MOVLW   0x01
00009E ????           06977         BANKSEL (_sys_timer_pool + 6)
0000A0 6F??           06978         MOVWF   (_sys_timer_pool + 6), B
0000A2 ????           06979         BANKSEL (_sys_timer_pool + 7)
0000A4 6B??           06980         CLRF    (_sys_timer_pool + 7), B
0000A6 D???           06981         BRA     _00535_DS_
0000A8                06982 _00534_DS_:
                      06983 ;       .line   258; interface.c        else if (tecla_c == SW4)
0000A8 50??           06984         MOVF    r0x01, W
0000AA 0A01           06985         XORLW   0x01
0000AC E1??           06986         BNZ     _00535_DS_
                      06987 ;       .line   259; interface.c        sys_timer_pool[1] -= 10;
0000AE 0EF6           06988         MOVLW   0xf6
0000B0 26??           06989         ADDWF   r0x02, F
0000B2 0EFF           06990         MOVLW   0xff
0000B4 22??           06991         ADDWFC  r0x03, F
0000B6 22??           06992         ADDWFC  r0x04, F
0000B8 22??           06993         ADDWFC  r0x05, F
0000BA 50??           06994         MOVF    r0x02, W
0000BC ????           06995         BANKSEL (_sys_timer_pool + 4)
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE 133


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0000BE 6F??           06996         MOVWF   (_sys_timer_pool + 4), B
0000C0 50??           06997         MOVF    r0x03, W
0000C2 ????           06998         BANKSEL (_sys_timer_pool + 5)
0000C4 6F??           06999         MOVWF   (_sys_timer_pool + 5), B
0000C6 50??           07000         MOVF    r0x04, W
0000C8 ????           07001         BANKSEL (_sys_timer_pool + 6)
0000CA 6F??           07002         MOVWF   (_sys_timer_pool + 6), B
0000CC 50??           07003         MOVF    r0x05, W
0000CE ????           07004         BANKSEL (_sys_timer_pool + 7)
0000D0 6F??           07005         MOVWF   (_sys_timer_pool + 7), B
0000D2                07006 _00535_DS_:
                      07007 ;       .line   260; interface.c        if (sys_timer_pool[1] < TIMER_POOL_MIN)
0000D2 0E00           07008         MOVLW   0x00
0000D4 ????           07009         BANKSEL (_sys_timer_pool + 7)
0000D6 5D??           07010         SUBWF   (_sys_timer_pool + 7), W, B
0000D8 E1??           07011         BNZ     _00567_DS_
0000DA 0E00           07012         MOVLW   0x00
0000DC ????           07013         BANKSEL (_sys_timer_pool + 6)
0000DE 5D??           07014         SUBWF   (_sys_timer_pool + 6), W, B
0000E0 E1??           07015         BNZ     _00567_DS_
0000E2 0E00           07016         MOVLW   0x00
0000E4 ????           07017         BANKSEL (_sys_timer_pool + 5)
0000E6 5D??           07018         SUBWF   (_sys_timer_pool + 5), W, B
0000E8 E1??           07019         BNZ     _00567_DS_
0000EA 0E0A           07020         MOVLW   0x0a
0000EC ????           07021         BANKSEL (_sys_timer_pool + 4)
0000EE 5D??           07022         SUBWF   (_sys_timer_pool + 4), W, B
0000F0                07023 _00567_DS_:
0000F0 E2??           07024         BC      _00542_DS_
                      07025 ;       .line   261; interface.c        sys_timer_pool[1] = TIMER_POOL_MIN;
0000F2 0E0A           07026         MOVLW   0x0a
0000F4 ????           07027         BANKSEL (_sys_timer_pool + 4)
0000F6 6F??           07028         MOVWF   (_sys_timer_pool + 4), B
0000F8 ????           07029         BANKSEL (_sys_timer_pool + 5)
0000FA 6B??           07030         CLRF    (_sys_timer_pool + 5), B
0000FC ????           07031         BANKSEL (_sys_timer_pool + 6)
0000FE 6B??           07032         CLRF    (_sys_timer_pool + 6), B
000100 ????           07033         BANKSEL (_sys_timer_pool + 7)
000102 6B??           07034         CLRF    (_sys_timer_pool + 7), B
000104 D???           07035         BRA     _00543_DS_
000106                07036 _00542_DS_:
                      07037 ;       .line   262; interface.c        else if (tecla == SW5)
000106 50??           07038         MOVF    r0x00, W
000108 0A02           07039         XORLW   0x02
00010A E1??           07040         BNZ     _00539_DS_
                      07041 ;       .line   263; interface.c        return TELA_PRINCIPAL;
00010C 6AE8           07042         CLRF    WREG
00010E D???           07043         BRA     _00544_DS_
000110                07044 _00539_DS_:
                      07045 ;       .line   264; interface.c        else if (tecla == SW6)
000110 50??           07046         MOVF    r0x00, W
000112 0A03           07047         XORLW   0x03
000114 E1??           07048         BNZ     _00543_DS_
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE 134


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      07049 ;       .line   265; interface.c        return MENU_CONFIGURACAO_MAIS;
000116 0E05           07050         MOVLW   0x05
000118 D???           07051         BRA     _00544_DS_
00011A                07052 _00543_DS_:
                      07053 ;       .line   267; interface.c        return MENU_CONFIGURACAO_TEMPO;
00011A 0E0C           07054         MOVLW   0x0c
00011C                07055 _00544_DS_:
00011C CFE4 F000      07056         MOVFF   PREINC1, r0x05
000120 CFE4 F000      07057         MOVFF   PREINC1, r0x04
000124 CFE4 F000      07058         MOVFF   PREINC1, r0x03
000128 CFE4 F000      07059         MOVFF   PREINC1, r0x02
00012C CFE4 F000      07060         MOVFF   PREINC1, r0x01
000130 CFE4 F000      07061         MOVFF   PREINC1, r0x00
000134 CFE4 FFD9      07062         MOVFF   PREINC1, FSR2L
000138 0012           07063         RETURN  
                      07064 
                      07065 ; ; Starting pCode block
                      07066 S_interface__menu_configuracao_lumi_baixa       code
000000                07067 _menu_configuracao_lumi_baixa:
                      07068 ;       .line   224; interface.c        unsigned char menu_configuracao_lumi_baixa(void)
000000 CFD9 FFE5      07069         MOVFF   FSR2L, POSTDEC1
000004 CFE1 FFD9      07070         MOVFF   FSR1L, FSR2L
000008 C??? F???      07071         MOVFF   r0x00, POSTDEC1
00000C C??? F???      07072         MOVFF   r0x01, POSTDEC1
                      07073 ;       .line   229; interface.c        tecla = le_tecla();
000010 EC?? F0??      07074         CALL    _le_tecla
000014 6E??           07075         MOVWF   r0x00
                      07076 ;       .line   230; interface.c        tecla_c = le_tecla_continua();
000016 EC?? F0??      07077         CALL    _le_tecla_continua
00001A 6E??           07078         MOVWF   r0x01
                      07079 ;       .line   231; interface.c        if (tecla_c == SW3)
00001C 50??           07080         MOVF    r0x01, W
00001E E1??           07081         BNZ     _00483_DS_
000020 ????           07082         BANKSEL _sys_lumi_min
                      07083 ;       .line   232; interface.c        sys_lumi_min += 1;
000022 3F??           07084         INCFSZ  _sys_lumi_min, F, B
000024 D???           07085         BRA     _11753_DS_
000026 ????           07086         BANKSEL (_sys_lumi_min + 1)
000028 2B??           07087         INCF    (_sys_lumi_min + 1), F, B
00002A                07088 _11753_DS_:
00002A                07089 _00483_DS_:
                      07090 ;       .line   233; interface.c        if (sys_lumi_min > LUMI_MAX)
00002A 0E00           07091         MOVLW   0x00
00002C ????           07092         BANKSEL (_sys_lumi_min + 1)
00002E 5D??           07093         SUBWF   (_sys_lumi_min + 1), W, B
000030 E1??           07094         BNZ     _00517_DS_
000032 0E65           07095         MOVLW   0x65
000034 ????           07096         BANKSEL _sys_lumi_min
000036 5D??           07097         SUBWF   _sys_lumi_min, W, B
000038                07098 _00517_DS_:
000038 E3??           07099         BNC     _00487_DS_
                      07100 ;       .line   234; interface.c        sys_lumi_min = LUMI_MAX;
00003A 0E64           07101         MOVLW   0x64
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE 135


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00003C ????           07102         BANKSEL _sys_lumi_min
00003E 6F??           07103         MOVWF   _sys_lumi_min, B
000040 ????           07104         BANKSEL (_sys_lumi_min + 1)
000042 6B??           07105         CLRF    (_sys_lumi_min + 1), B
000044 D???           07106         BRA     _00488_DS_
000046                07107 _00487_DS_:
                      07108 ;       .line   235; interface.c        else if (tecla_c == SW4)
000046 50??           07109         MOVF    r0x01, W
000048 0A01           07110         XORLW   0x01
00004A E1??           07111         BNZ     _00488_DS_
                      07112 ;       .line   236; interface.c        sys_lumi_min -= 1;
00004C 0EFF           07113         MOVLW   0xff
00004E ????           07114         BANKSEL _sys_lumi_min
000050 27??           07115         ADDWF   _sys_lumi_min, F, B
000052 ????           07116         BANKSEL (_sys_lumi_min + 1)
000054 23??           07117         ADDWFC  (_sys_lumi_min + 1), F, B
000056                07118 _00488_DS_:
                      07119 ;       .line   237; interface.c        if (sys_lumi_min < LUMI_MIN)
000056 0E00           07120         MOVLW   0x00
000058 ????           07121         BANKSEL (_sys_lumi_min + 1)
00005A 5D??           07122         SUBWF   (_sys_lumi_min + 1), W, B
00005C E1??           07123         BNZ     _00520_DS_
00005E 0E01           07124         MOVLW   0x01
000060 ????           07125         BANKSEL _sys_lumi_min
000062 5D??           07126         SUBWF   _sys_lumi_min, W, B
000064                07127 _00520_DS_:
000064 E2??           07128         BC      _00495_DS_
                      07129 ;       .line   238; interface.c        sys_lumi_min = LUMI_MIN;
000066 0E01           07130         MOVLW   0x01
000068 ????           07131         BANKSEL _sys_lumi_min
00006A 6F??           07132         MOVWF   _sys_lumi_min, B
00006C ????           07133         BANKSEL (_sys_lumi_min + 1)
00006E 6B??           07134         CLRF    (_sys_lumi_min + 1), B
000070 D???           07135         BRA     _00496_DS_
000072                07136 _00495_DS_:
                      07137 ;       .line   239; interface.c        else if (tecla == SW5)
000072 50??           07138         MOVF    r0x00, W
000074 0A02           07139         XORLW   0x02
000076 E1??           07140         BNZ     _00492_DS_
                      07141 ;       .line   240; interface.c        return TELA_PRINCIPAL;
000078 6AE8           07142         CLRF    WREG
00007A D???           07143         BRA     _00497_DS_
00007C                07144 _00492_DS_:
                      07145 ;       .line   241; interface.c        else if (tecla == SW6)
00007C 50??           07146         MOVF    r0x00, W
00007E 0A03           07147         XORLW   0x03
000080 E1??           07148         BNZ     _00496_DS_
                      07149 ;       .line   242; interface.c        return MENU_CONFIGURACAO_LUMI;
000082 0E07           07150         MOVLW   0x07
000084 D???           07151         BRA     _00497_DS_
000086                07152 _00496_DS_:
                      07153 ;       .line   244; interface.c        return MENU_CONFIGURACAO_LUMI_BAIXA;
000086 0E0B           07154         MOVLW   0x0b
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE 136


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000088                07155 _00497_DS_:
000088 CFE4 F000      07156         MOVFF   PREINC1, r0x01
00008C CFE4 F000      07157         MOVFF   PREINC1, r0x00
000090 CFE4 FFD9      07158         MOVFF   PREINC1, FSR2L
000094 0012           07159         RETURN  
                      07160 
                      07161 ; ; Starting pCode block
                      07162 S_interface__menu_configuracao_lumi_alta        code
000000                07163 _menu_configuracao_lumi_alta:
                      07164 ;       .line   201; interface.c        unsigned char menu_configuracao_lumi_alta(void)
000000 CFD9 FFE5      07165         MOVFF   FSR2L, POSTDEC1
000004 CFE1 FFD9      07166         MOVFF   FSR1L, FSR2L
000008 C??? F???      07167         MOVFF   r0x00, POSTDEC1
00000C C??? F???      07168         MOVFF   r0x01, POSTDEC1
                      07169 ;       .line   206; interface.c        tecla = le_tecla();
000010 EC?? F0??      07170         CALL    _le_tecla
000014 6E??           07171         MOVWF   r0x00
                      07172 ;       .line   207; interface.c        tecla_c = le_tecla_continua();
000016 EC?? F0??      07173         CALL    _le_tecla_continua
00001A 6E??           07174         MOVWF   r0x01
                      07175 ;       .line   208; interface.c        if (tecla_c == SW3) {
00001C 50??           07176         MOVF    r0x01, W
00001E E1??           07177         BNZ     _00448_DS_
000020 ????           07178         BANKSEL _sys_lumi_max
                      07179 ;       .line   209; interface.c        sys_lumi_max++;
000022 3F??           07180         INCFSZ  _sys_lumi_max, F, B
000024 D???           07181         BRA     _21754_DS_
000026 ????           07182         BANKSEL (_sys_lumi_max + 1)
000028 2B??           07183         INCF    (_sys_lumi_max + 1), F, B
00002A                07184 _21754_DS_:
                      07185 ;       .line   210; interface.c        if (sys_lumi_max > LUMI_MAX)
00002A 0E00           07186         MOVLW   0x00
00002C ????           07187         BANKSEL (_sys_lumi_max + 1)
00002E 5D??           07188         SUBWF   (_sys_lumi_max + 1), W, B
000030 E1??           07189         BNZ     _00470_DS_
000032 0E65           07190         MOVLW   0x65
000034 ????           07191         BANKSEL _sys_lumi_max
000036 5D??           07192         SUBWF   _sys_lumi_max, W, B
000038                07193 _00470_DS_:
000038 E3??           07194         BNC     _00449_DS_
                      07195 ;       .line   211; interface.c        sys_lumi_max = LUMI_MAX;
00003A 0E64           07196         MOVLW   0x64
00003C ????           07197         BANKSEL _sys_lumi_max
00003E 6F??           07198         MOVWF   _sys_lumi_max, B
000040 ????           07199         BANKSEL (_sys_lumi_max + 1)
000042 6B??           07200         CLRF    (_sys_lumi_max + 1), B
000044 D???           07201         BRA     _00449_DS_
000046                07202 _00448_DS_:
                      07203 ;       .line   212; interface.c        } else if (tecla_c == SW4) {
000046 50??           07204         MOVF    r0x01, W
000048 0A01           07205         XORLW   0x01
00004A E1??           07206         BNZ     _00445_DS_
                      07207 ;       .line   213; interface.c        sys_lumi_max--;
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE 137


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00004C 0EFF           07208         MOVLW   0xff
00004E ????           07209         BANKSEL _sys_lumi_max
000050 27??           07210         ADDWF   _sys_lumi_max, F, B
000052 ????           07211         BANKSEL (_sys_lumi_max + 1)
000054 23??           07212         ADDWFC  (_sys_lumi_max + 1), F, B
                      07213 ;       .line   214; interface.c        if (sys_lumi_max < LUMI_MIN)
000056 0E00           07214         MOVLW   0x00
000058 ????           07215         BANKSEL (_sys_lumi_max + 1)
00005A 5D??           07216         SUBWF   (_sys_lumi_max + 1), W, B
00005C E1??           07217         BNZ     _00473_DS_
00005E 0E01           07218         MOVLW   0x01
000060 ????           07219         BANKSEL _sys_lumi_max
000062 5D??           07220         SUBWF   _sys_lumi_max, W, B
000064                07221 _00473_DS_:
000064 E2??           07222         BC      _00449_DS_
                      07223 ;       .line   215; interface.c        sys_lumi_max = LUMI_MIN;
000066 0E01           07224         MOVLW   0x01
000068 ????           07225         BANKSEL _sys_lumi_max
00006A 6F??           07226         MOVWF   _sys_lumi_max, B
00006C ????           07227         BANKSEL (_sys_lumi_max + 1)
00006E 6B??           07228         CLRF    (_sys_lumi_max + 1), B
000070 D???           07229         BRA     _00449_DS_
000072                07230 _00445_DS_:
                      07231 ;       .line   216; interface.c        } else if (tecla == SW5) {
000072 50??           07232         MOVF    r0x00, W
000074 0A02           07233         XORLW   0x02
000076 E1??           07234         BNZ     _00442_DS_
                      07235 ;       .line   217; interface.c        return TELA_PRINCIPAL;
000078 6AE8           07236         CLRF    WREG
00007A D???           07237         BRA     _00450_DS_
00007C                07238 _00442_DS_:
                      07239 ;       .line   218; interface.c        } else if (tecla == SW6)
00007C 50??           07240         MOVF    r0x00, W
00007E 0A03           07241         XORLW   0x03
000080 E1??           07242         BNZ     _00449_DS_
                      07243 ;       .line   219; interface.c        return MENU_CONFIGURACAO_LUMI;
000082 0E07           07244         MOVLW   0x07
000084 D???           07245         BRA     _00450_DS_
000086                07246 _00449_DS_:
                      07247 ;       .line   221; interface.c        return MENU_CONFIGURACAO_LUMI_ALTA;
000086 0E0A           07248         MOVLW   0x0a
000088                07249 _00450_DS_:
000088 CFE4 F000      07250         MOVFF   PREINC1, r0x01
00008C CFE4 F000      07251         MOVFF   PREINC1, r0x00
000090 CFE4 FFD9      07252         MOVFF   PREINC1, FSR2L
000094 0012           07253         RETURN  
                      07254 
                      07255 ; ; Starting pCode block
                      07256 S_interface__menu_configuracao_temp_baixa       code
000000                07257 _menu_configuracao_temp_baixa:
                      07258 ;       .line   179; interface.c        unsigned char menu_configuracao_temp_baixa(void)
000000 CFD9 FFE5      07259         MOVFF   FSR2L, POSTDEC1
000004 CFE1 FFD9      07260         MOVFF   FSR1L, FSR2L
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE 138


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000008 C??? F???      07261         MOVFF   r0x00, POSTDEC1
00000C C??? F???      07262         MOVFF   r0x01, POSTDEC1
                      07263 ;       .line   184; interface.c        tecla_c = le_tecla_continua();
000010 EC?? F0??      07264         CALL    _le_tecla_continua
000014 6E??           07265         MOVWF   r0x00
                      07266 ;       .line   185; interface.c        tecla = le_tecla();
000016 EC?? F0??      07267         CALL    _le_tecla
00001A 6E??           07268         MOVWF   r0x01
                      07269 ;       .line   186; interface.c        if (tecla_c == SW3) {
00001C 50??           07270         MOVF    r0x00, W
00001E E1??           07271         BNZ     _00401_DS_
000020 ????           07272         BANKSEL _sys_temp_min
                      07273 ;       .line   187; interface.c        if (++sys_temp_min > TEMP_MAX)
000022 3F??           07274         INCFSZ  _sys_temp_min, F, B
000024 D???           07275         BRA     _31755_DS_
000026 ????           07276         BANKSEL (_sys_temp_min + 1)
000028 2B??           07277         INCF    (_sys_temp_min + 1), F, B
00002A                07278 _31755_DS_:
00002A 0E01           07279         MOVLW   0x01
00002C ????           07280         BANKSEL (_sys_temp_min + 1)
00002E 5D??           07281         SUBWF   (_sys_temp_min + 1), W, B
000030 E1??           07282         BNZ     _00423_DS_
000032 0E5F           07283         MOVLW   0x5f
000034 ????           07284         BANKSEL _sys_temp_min
000036 5D??           07285         SUBWF   _sys_temp_min, W, B
000038                07286 _00423_DS_:
000038 E3??           07287         BNC     _00402_DS_
                      07288 ;       .line   188; interface.c        sys_temp_min = TEMP_MAX;
00003A 0E5E           07289         MOVLW   0x5e
00003C ????           07290         BANKSEL _sys_temp_min
00003E 6F??           07291         MOVWF   _sys_temp_min, B
000040 0E01           07292         MOVLW   0x01
000042 ????           07293         BANKSEL (_sys_temp_min + 1)
000044 6F??           07294         MOVWF   (_sys_temp_min + 1), B
000046 D???           07295         BRA     _00402_DS_
000048                07296 _00401_DS_:
                      07297 ;       .line   189; interface.c        } else if (tecla_c == SW4) {
000048 50??           07298         MOVF    r0x00, W
00004A 0A01           07299         XORLW   0x01
00004C E1??           07300         BNZ     _00398_DS_
                      07301 ;       .line   190; interface.c        if (--sys_temp_min < TEMP_MIN)
00004E 0EFF           07302         MOVLW   0xff
000050 ????           07303         BANKSEL _sys_temp_min
000052 27??           07304         ADDWF   _sys_temp_min, F, B
000054 ????           07305         BANKSEL (_sys_temp_min + 1)
000056 23??           07306         ADDWFC  (_sys_temp_min + 1), F, B
000058 0E00           07307         MOVLW   0x00
00005A ????           07308         BANKSEL (_sys_temp_min + 1)
00005C 5D??           07309         SUBWF   (_sys_temp_min + 1), W, B
00005E E1??           07310         BNZ     _00426_DS_
000060 0EC8           07311         MOVLW   0xc8
000062 ????           07312         BANKSEL _sys_temp_min
000064 5D??           07313         SUBWF   _sys_temp_min, W, B
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE 139


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000066                07314 _00426_DS_:
000066 E2??           07315         BC      _00402_DS_
                      07316 ;       .line   191; interface.c        sys_temp_min = TEMP_MIN;
000068 0EC8           07317         MOVLW   0xc8
00006A ????           07318         BANKSEL _sys_temp_min
00006C 6F??           07319         MOVWF   _sys_temp_min, B
00006E ????           07320         BANKSEL (_sys_temp_min + 1)
000070 6B??           07321         CLRF    (_sys_temp_min + 1), B
000072 D???           07322         BRA     _00402_DS_
000074                07323 _00398_DS_:
                      07324 ;       .line   192; interface.c        } else if (tecla == SW5) {
000074 50??           07325         MOVF    r0x01, W
000076 0A02           07326         XORLW   0x02
000078 E1??           07327         BNZ     _00395_DS_
                      07328 ;       .line   193; interface.c        return TELA_PRINCIPAL;
00007A 6AE8           07329         CLRF    WREG
00007C D???           07330         BRA     _00403_DS_
00007E                07331 _00395_DS_:
                      07332 ;       .line   194; interface.c        } else if (tecla == SW6) {
00007E 50??           07333         MOVF    r0x01, W
000080 0A03           07334         XORLW   0x03
000082 E1??           07335         BNZ     _00402_DS_
                      07336 ;       .line   195; interface.c        return MENU_CONFIGURACAO_TEMP;
000084 0E06           07337         MOVLW   0x06
000086 D???           07338         BRA     _00403_DS_
000088                07339 _00402_DS_:
                      07340 ;       .line   198; interface.c        return MENU_CONFIGURACAO_TEMP_BAIXA;
000088 0E09           07341         MOVLW   0x09
00008A                07342 _00403_DS_:
00008A CFE4 F000      07343         MOVFF   PREINC1, r0x01
00008E CFE4 F000      07344         MOVFF   PREINC1, r0x00
000092 CFE4 FFD9      07345         MOVFF   PREINC1, FSR2L
000096 0012           07346         RETURN  
                      07347 
                      07348 ; ; Starting pCode block
                      07349 S_interface__menu_configuracao_temp_alta        code
000000                07350 _menu_configuracao_temp_alta:
                      07351 ;       .line   157; interface.c        unsigned char menu_configuracao_temp_alta(void)
000000 CFD9 FFE5      07352         MOVFF   FSR2L, POSTDEC1
000004 CFE1 FFD9      07353         MOVFF   FSR1L, FSR2L
000008 C??? F???      07354         MOVFF   r0x00, POSTDEC1
00000C C??? F???      07355         MOVFF   r0x01, POSTDEC1
                      07356 ;       .line   162; interface.c        tecla = le_tecla();
000010 EC?? F0??      07357         CALL    _le_tecla
000014 6E??           07358         MOVWF   r0x00
                      07359 ;       .line   163; interface.c        tecla_c = le_tecla_continua();
000016 EC?? F0??      07360         CALL    _le_tecla_continua
00001A 6E??           07361         MOVWF   r0x01
                      07362 ;       .line   164; interface.c        if (tecla_c == SW3) {
00001C 50??           07363         MOVF    r0x01, W
00001E E1??           07364         BNZ     _00354_DS_
000020 ????           07365         BANKSEL _sys_temp_max
                      07366 ;       .line   165; interface.c        if (++sys_temp_max > TEMP_MAX)
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE 140


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000022 3F??           07367         INCFSZ  _sys_temp_max, F, B
000024 D???           07368         BRA     _41756_DS_
000026 ????           07369         BANKSEL (_sys_temp_max + 1)
000028 2B??           07370         INCF    (_sys_temp_max + 1), F, B
00002A                07371 _41756_DS_:
00002A 0E01           07372         MOVLW   0x01
00002C ????           07373         BANKSEL (_sys_temp_max + 1)
00002E 5D??           07374         SUBWF   (_sys_temp_max + 1), W, B
000030 E1??           07375         BNZ     _00376_DS_
000032 0E5F           07376         MOVLW   0x5f
000034 ????           07377         BANKSEL _sys_temp_max
000036 5D??           07378         SUBWF   _sys_temp_max, W, B
000038                07379 _00376_DS_:
000038 E3??           07380         BNC     _00355_DS_
                      07381 ;       .line   166; interface.c        sys_temp_max = TEMP_MAX;
00003A 0E5E           07382         MOVLW   0x5e
00003C ????           07383         BANKSEL _sys_temp_max
00003E 6F??           07384         MOVWF   _sys_temp_max, B
000040 0E01           07385         MOVLW   0x01
000042 ????           07386         BANKSEL (_sys_temp_max + 1)
000044 6F??           07387         MOVWF   (_sys_temp_max + 1), B
000046 D???           07388         BRA     _00355_DS_
000048                07389 _00354_DS_:
                      07390 ;       .line   167; interface.c        } else if (tecla_c == SW4) {
000048 50??           07391         MOVF    r0x01, W
00004A 0A01           07392         XORLW   0x01
00004C E1??           07393         BNZ     _00351_DS_
                      07394 ;       .line   168; interface.c        if (--sys_temp_max < TEMP_MIN)
00004E 0EFF           07395         MOVLW   0xff
000050 ????           07396         BANKSEL _sys_temp_max
000052 27??           07397         ADDWF   _sys_temp_max, F, B
000054 ????           07398         BANKSEL (_sys_temp_max + 1)
000056 23??           07399         ADDWFC  (_sys_temp_max + 1), F, B
000058 0E00           07400         MOVLW   0x00
00005A ????           07401         BANKSEL (_sys_temp_max + 1)
00005C 5D??           07402         SUBWF   (_sys_temp_max + 1), W, B
00005E E1??           07403         BNZ     _00379_DS_
000060 0EC8           07404         MOVLW   0xc8
000062 ????           07405         BANKSEL _sys_temp_max
000064 5D??           07406         SUBWF   _sys_temp_max, W, B
000066                07407 _00379_DS_:
000066 E2??           07408         BC      _00355_DS_
                      07409 ;       .line   169; interface.c        sys_temp_max = TEMP_MIN;
000068 0EC8           07410         MOVLW   0xc8
00006A ????           07411         BANKSEL _sys_temp_max
00006C 6F??           07412         MOVWF   _sys_temp_max, B
00006E ????           07413         BANKSEL (_sys_temp_max + 1)
000070 6B??           07414         CLRF    (_sys_temp_max + 1), B
000072 D???           07415         BRA     _00355_DS_
000074                07416 _00351_DS_:
                      07417 ;       .line   170; interface.c        } else if (tecla == SW5) {
000074 50??           07418         MOVF    r0x00, W
000076 0A02           07419         XORLW   0x02
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE 141


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000078 E1??           07420         BNZ     _00348_DS_
                      07421 ;       .line   171; interface.c        return TELA_PRINCIPAL;
00007A 6AE8           07422         CLRF    WREG
00007C D???           07423         BRA     _00356_DS_
00007E                07424 _00348_DS_:
                      07425 ;       .line   172; interface.c        } else if (tecla == SW6) {
00007E 50??           07426         MOVF    r0x00, W
000080 0A03           07427         XORLW   0x03
000082 E1??           07428         BNZ     _00355_DS_
                      07429 ;       .line   173; interface.c        return MENU_CONFIGURACAO_TEMP;
000084 0E06           07430         MOVLW   0x06
000086 D???           07431         BRA     _00356_DS_
000088                07432 _00355_DS_:
                      07433 ;       .line   176; interface.c        return MENU_CONFIGURACAO_TEMP_ALTA;
000088 0E08           07434         MOVLW   0x08
00008A                07435 _00356_DS_:
00008A CFE4 F000      07436         MOVFF   PREINC1, r0x01
00008E CFE4 F000      07437         MOVFF   PREINC1, r0x00
000092 CFE4 FFD9      07438         MOVFF   PREINC1, FSR2L
000096 0012           07439         RETURN  
                      07440 
                      07441 ; ; Starting pCode block
                      07442 S_interface__menu_configuracao_lumi     code
000000                07443 _menu_configuracao_lumi:
                      07444 ;       .line   141; interface.c        unsigned char menu_configuracao_lumi(void)
000000 CFD9 FFE5      07445         MOVFF   FSR2L, POSTDEC1
000004 CFE1 FFD9      07446         MOVFF   FSR1L, FSR2L
000008 C??? F???      07447         MOVFF   r0x00, POSTDEC1
                      07448 ;       .line   144; interface.c        tecla = le_tecla();
00000C EC?? F0??      07449         CALL    _le_tecla
000010 6E??           07450         MOVWF   r0x00
                      07451 ;       .line   145; interface.c        if (tecla == SW3)
000012 50??           07452         MOVF    r0x00, W
000014 E1??           07453         BNZ     _00315_DS_
                      07454 ;       .line   146; interface.c        return MENU_CONFIGURACAO_LUMI_ALTA;
000016 0E0A           07455         MOVLW   0x0a
000018 D???           07456         BRA     _00317_DS_
00001A                07457 _00315_DS_:
                      07458 ;       .line   147; interface.c        else if (tecla == SW4)
00001A 50??           07459         MOVF    r0x00, W
00001C 0A01           07460         XORLW   0x01
00001E E1??           07461         BNZ     _00312_DS_
                      07462 ;       .line   148; interface.c        return MENU_CONFIGURACAO_LUMI_BAIXA;
000020 0E0B           07463         MOVLW   0x0b
000022 D???           07464         BRA     _00317_DS_
000024                07465 _00312_DS_:
                      07466 ;       .line   149; interface.c        else if (tecla == SW5)
000024 50??           07467         MOVF    r0x00, W
000026 0A02           07468         XORLW   0x02
000028 E1??           07469         BNZ     _00309_DS_
                      07470 ;       .line   150; interface.c        return TELA_PRINCIPAL;
00002A 6AE8           07471         CLRF    WREG
00002C D???           07472         BRA     _00317_DS_
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE 142


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00002E                07473 _00309_DS_:
                      07474 ;       .line   151; interface.c        else if (tecla == SW6)
00002E 50??           07475         MOVF    r0x00, W
000030 0A03           07476         XORLW   0x03
000032 E1??           07477         BNZ     _00313_DS_
                      07478 ;       .line   152; interface.c        return MENU_CONFIGURACAO;
000034 0E04           07479         MOVLW   0x04
000036 D???           07480         BRA     _00317_DS_
000038                07481 _00313_DS_:
                      07482 ;       .line   154; interface.c        return MENU_CONFIGURACAO_LUMI;
000038 0E07           07483         MOVLW   0x07
00003A                07484 _00317_DS_:
00003A CFE4 F000      07485         MOVFF   PREINC1, r0x00
00003E CFE4 FFD9      07486         MOVFF   PREINC1, FSR2L
000042 0012           07487         RETURN  
                      07488 
                      07489 ; ; Starting pCode block
                      07490 S_interface__menu_configuracao_temp     code
000000                07491 _menu_configuracao_temp:
                      07492 ;       .line   125; interface.c        unsigned char menu_configuracao_temp(void)
000000 CFD9 FFE5      07493         MOVFF   FSR2L, POSTDEC1
000004 CFE1 FFD9      07494         MOVFF   FSR1L, FSR2L
000008 C??? F???      07495         MOVFF   r0x00, POSTDEC1
                      07496 ;       .line   128; interface.c        tecla = le_tecla();
00000C EC?? F0??      07497         CALL    _le_tecla
000010 6E??           07498         MOVWF   r0x00
                      07499 ;       .line   129; interface.c        if (tecla == SW3)
000012 50??           07500         MOVF    r0x00, W
000014 E1??           07501         BNZ     _00280_DS_
                      07502 ;       .line   130; interface.c        return MENU_CONFIGURACAO_TEMP_ALTA;
000016 0E08           07503         MOVLW   0x08
000018 D???           07504         BRA     _00282_DS_
00001A                07505 _00280_DS_:
                      07506 ;       .line   131; interface.c        else if (tecla == SW4)
00001A 50??           07507         MOVF    r0x00, W
00001C 0A01           07508         XORLW   0x01
00001E E1??           07509         BNZ     _00277_DS_
                      07510 ;       .line   132; interface.c        return MENU_CONFIGURACAO_TEMP_BAIXA;
000020 0E09           07511         MOVLW   0x09
000022 D???           07512         BRA     _00282_DS_
000024                07513 _00277_DS_:
                      07514 ;       .line   133; interface.c        else if (tecla == SW5)
000024 50??           07515         MOVF    r0x00, W
000026 0A02           07516         XORLW   0x02
000028 E1??           07517         BNZ     _00274_DS_
                      07518 ;       .line   134; interface.c        return TELA_PRINCIPAL;
00002A 6AE8           07519         CLRF    WREG
00002C D???           07520         BRA     _00282_DS_
00002E                07521 _00274_DS_:
                      07522 ;       .line   135; interface.c        else if (tecla == SW6)
00002E 50??           07523         MOVF    r0x00, W
000030 0A03           07524         XORLW   0x03
000032 E1??           07525         BNZ     _00278_DS_
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE 143


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      07526 ;       .line   136; interface.c        return MENU_CONFIGURACAO;
000034 0E04           07527         MOVLW   0x04
000036 D???           07528         BRA     _00282_DS_
000038                07529 _00278_DS_:
                      07530 ;       .line   138; interface.c        return MENU_CONFIGURACAO_TEMP;
000038 0E06           07531         MOVLW   0x06
00003A                07532 _00282_DS_:
00003A CFE4 F000      07533         MOVFF   PREINC1, r0x00
00003E CFE4 FFD9      07534         MOVFF   PREINC1, FSR2L
000042 0012           07535         RETURN  
                      07536 
                      07537 ; ; Starting pCode block
                      07538 S_interface__menu_configuracao_mais     code
000000                07539 _menu_configuracao_mais:
                      07540 ;       .line   111; interface.c        unsigned char menu_configuracao_mais(void)
000000 CFD9 FFE5      07541         MOVFF   FSR2L, POSTDEC1
000004 CFE1 FFD9      07542         MOVFF   FSR1L, FSR2L
000008 C??? F???      07543         MOVFF   r0x00, POSTDEC1
                      07544 ;       .line   114; interface.c        tecla = le_tecla();
00000C EC?? F0??      07545         CALL    _le_tecla
000010 6E??           07546         MOVWF   r0x00
                      07547 ;       .line   115; interface.c        if (tecla == SW3)
000012 50??           07548         MOVF    r0x00, W
000014 E1??           07549         BNZ     _00250_DS_
                      07550 ;       .line   116; interface.c        return MENU_CONFIGURACAO_TEMPO;
000016 0E0C           07551         MOVLW   0x0c
000018 D???           07552         BRA     _00252_DS_
00001A                07553 _00250_DS_:
                      07554 ;       .line   117; interface.c        else if (tecla == SW5)
00001A 50??           07555         MOVF    r0x00, W
00001C 0A02           07556         XORLW   0x02
00001E E1??           07557         BNZ     _00247_DS_
                      07558 ;       .line   118; interface.c        return TELA_PRINCIPAL;
000020 6AE8           07559         CLRF    WREG
000022 D???           07560         BRA     _00252_DS_
000024                07561 _00247_DS_:
                      07562 ;       .line   119; interface.c        else if (tecla == SW6)
000024 50??           07563         MOVF    r0x00, W
000026 0A03           07564         XORLW   0x03
000028 E1??           07565         BNZ     _00251_DS_
                      07566 ;       .line   120; interface.c        return MENU_CONFIGURACAO;
00002A 0E04           07567         MOVLW   0x04
00002C D???           07568         BRA     _00252_DS_
00002E                07569 _00251_DS_:
                      07570 ;       .line   122; interface.c        return MENU_CONFIGURACAO_MAIS;
00002E 0E05           07571         MOVLW   0x05
000030                07572 _00252_DS_:
000030 CFE4 F000      07573         MOVFF   PREINC1, r0x00
000034 CFE4 FFD9      07574         MOVFF   PREINC1, FSR2L
000038 0012           07575         RETURN  
                      07576 
                      07577 ; ; Starting pCode block
                      07578 S_interface__menu_configuracao  code
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE 144


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000000                07579 _menu_configuracao:
                      07580 ;       .line   94; interface.c unsigned char menu_configuracao(void)
000000 CFD9 FFE5      07581         MOVFF   FSR2L, POSTDEC1
000004 CFE1 FFD9      07582         MOVFF   FSR1L, FSR2L
000008 C??? F???      07583         MOVFF   r0x00, POSTDEC1
                      07584 ;       .line   98; interface.c tecla = le_tecla();
00000C EC?? F0??      07585         CALL    _le_tecla
000010 6E??           07586         MOVWF   r0x00
                      07587 ;       .line   99; interface.c if (tecla == SW3)
000012 50??           07588         MOVF    r0x00, W
000014 E1??           07589         BNZ     _00218_DS_
                      07590 ;       .line   100; interface.c        return MENU_CONFIGURACAO_TEMP;
000016 0E06           07591         MOVLW   0x06
000018 D???           07592         BRA     _00220_DS_
00001A                07593 _00218_DS_:
                      07594 ;       .line   101; interface.c        else if (tecla == SW4)
00001A 50??           07595         MOVF    r0x00, W
00001C 0A01           07596         XORLW   0x01
00001E E1??           07597         BNZ     _00215_DS_
                      07598 ;       .line   102; interface.c        return MENU_CONFIGURACAO_LUMI;
000020 0E07           07599         MOVLW   0x07
000022 D???           07600         BRA     _00220_DS_
000024                07601 _00215_DS_:
                      07602 ;       .line   103; interface.c        else if (tecla == SW5)
000024 50??           07603         MOVF    r0x00, W
000026 0A02           07604         XORLW   0x02
000028 E1??           07605         BNZ     _00212_DS_
                      07606 ;       .line   104; interface.c        return TELA_PRINCIPAL;
00002A 6AE8           07607         CLRF    WREG
00002C D???           07608         BRA     _00220_DS_
00002E                07609 _00212_DS_:
                      07610 ;       .line   105; interface.c        else if (tecla == SW6)
00002E 50??           07611         MOVF    r0x00, W
000030 0A03           07612         XORLW   0x03
000032 E1??           07613         BNZ     _00216_DS_
                      07614 ;       .line   106; interface.c        return MENU;
000034 0E01           07615         MOVLW   0x01
000036 D???           07616         BRA     _00220_DS_
000038                07617 _00216_DS_:
                      07618 ;       .line   108; interface.c        return MENU_CONFIGURACAO;
000038 0E04           07619         MOVLW   0x04
00003A                07620 _00220_DS_:
00003A CFE4 F000      07621         MOVFF   PREINC1, r0x00
00003E CFE4 FFD9      07622         MOVFF   PREINC1, FSR2L
000042 0012           07623         RETURN  
                      07624 
                      07625 ; ; Starting pCode block
                      07626 S_interface__menu_mais_mais     code
000000                07627 _menu_mais_mais:
                      07628 ;       .line   78; interface.c unsigned char menu_mais_mais(void)
000000 CFD9 FFE5      07629         MOVFF   FSR2L, POSTDEC1
000004 CFE1 FFD9      07630         MOVFF   FSR1L, FSR2L
000008 C??? F???      07631         MOVFF   r0x00, POSTDEC1
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE 145


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      07632 ;       .line   82; interface.c tecla = le_tecla();
00000C EC?? F0??      07633         CALL    _le_tecla
000010 6E??           07634         MOVWF   r0x00
                      07635 ;       .line   83; interface.c if (tecla == SW3) {
000012 50??           07636         MOVF    r0x00, W
000014 E1??           07637         BNZ     _00188_DS_
                      07638 ;       .line   84; interface.c return MENU_TECLADO;
000016 0E26           07639         MOVLW   0x26
000018 D???           07640         BRA     _00190_DS_
00001A                07641 _00188_DS_:
                      07642 ;       .line   85; interface.c } else if (tecla == SW5) {
00001A 50??           07643         MOVF    r0x00, W
00001C 0A02           07644         XORLW   0x02
00001E E1??           07645         BNZ     _00185_DS_
                      07646 ;       .line   86; interface.c return TELA_PRINCIPAL;
000020 6AE8           07647         CLRF    WREG
000022 D???           07648         BRA     _00190_DS_
000024                07649 _00185_DS_:
                      07650 ;       .line   87; interface.c } else if (tecla == SW6) {
000024 50??           07651         MOVF    r0x00, W
000026 0A03           07652         XORLW   0x03
000028 E1??           07653         BNZ     _00189_DS_
                      07654 ;       .line   88; interface.c return MENU_MAIS;
00002A 0E02           07655         MOVLW   0x02
00002C D???           07656         BRA     _00190_DS_
00002E                07657 _00189_DS_:
                      07658 ;       .line   91; interface.c return MENU_MAIS;
00002E 0E02           07659         MOVLW   0x02
000030                07660 _00190_DS_:
000030 CFE4 F000      07661         MOVFF   PREINC1, r0x00
000034 CFE4 FFD9      07662         MOVFF   PREINC1, FSR2L
000038 0012           07663         RETURN  
                      07664 
                      07665 ; ; Starting pCode block
                      07666 S_interface__menu_mais  code
000000                07667 _menu_mais:
                      07668 ;       .line   60; interface.c unsigned char menu_mais()
000000 CFD9 FFE5      07669         MOVFF   FSR2L, POSTDEC1
000004 CFE1 FFD9      07670         MOVFF   FSR1L, FSR2L
000008 C??? F???      07671         MOVFF   r0x00, POSTDEC1
                      07672 ;       .line   64; interface.c tecla = le_tecla();
00000C EC?? F0??      07673         CALL    _le_tecla
000010 6E??           07674         MOVWF   r0x00
                      07675 ;       .line   65; interface.c if (tecla == SW4) {
000012 50??           07676         MOVF    r0x00, W
000014 0A01           07677         XORLW   0x01
000016 E1??           07678         BNZ     _00156_DS_
                      07679 ;       .line   66; interface.c return TESTE_LCD;
000018 0E27           07680         MOVLW   0x27
00001A D???           07681         BRA     _00158_DS_
00001C                07682 _00156_DS_:
                      07683 ;       .line   67; interface.c } else if (tecla == SW3) {
00001C 50??           07684         MOVF    r0x00, W
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE 146


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

00001E E1??           07685         BNZ     _00153_DS_
                      07686 ;       .line   68; interface.c return MENU_PORTAS_1_2;
000020 0E12           07687         MOVLW   0x12
000022 D???           07688         BRA     _00158_DS_
000024                07689 _00153_DS_:
                      07690 ;       .line   69; interface.c } else if (tecla == SW5) {
000024 50??           07691         MOVF    r0x00, W
000026 0A02           07692         XORLW   0x02
000028 E1??           07693         BNZ     _00150_DS_
                      07694 ;       .line   70; interface.c return TELA_PRINCIPAL;
00002A 6AE8           07695         CLRF    WREG
00002C D???           07696         BRA     _00158_DS_
00002E                07697 _00150_DS_:
                      07698 ;       .line   71; interface.c } else if (tecla == SW6) {
00002E 50??           07699         MOVF    r0x00, W
000030 0A03           07700         XORLW   0x03
000032 E1??           07701         BNZ     _00154_DS_
                      07702 ;       .line   72; interface.c return MENU;
000034 0E01           07703         MOVLW   0x01
000036 D???           07704         BRA     _00158_DS_
000038                07705 _00154_DS_:
                      07706 ;       .line   75; interface.c return MENU_MAIS;
000038 0E02           07707         MOVLW   0x02
00003A                07708 _00158_DS_:
00003A CFE4 F000      07709         MOVFF   PREINC1, r0x00
00003E CFE4 FFD9      07710         MOVFF   PREINC1, FSR2L
000042 0012           07711         RETURN  
                      07712 
                      07713 ; ; Starting pCode block
                      07714 S_interface__menu       code
000000                07715 _menu:
                      07716 ;       .line   43; interface.c unsigned char menu()
000000 CFD9 FFE5      07717         MOVFF   FSR2L, POSTDEC1
000004 CFE1 FFD9      07718         MOVFF   FSR1L, FSR2L
000008 C??? F???      07719         MOVFF   r0x00, POSTDEC1
                      07720 ;       .line   47; interface.c tecla = le_tecla();
00000C EC?? F0??      07721         CALL    _le_tecla
000010 6E??           07722         MOVWF   r0x00
                      07723 ;       .line   48; interface.c if (tecla == SW3)
000012 50??           07724         MOVF    r0x00, W
000014 E1??           07725         BNZ     _00121_DS_
                      07726 ;       .line   49; interface.c return MENU_CONFIGURACAO;
000016 0E04           07727         MOVLW   0x04
000018 D???           07728         BRA     _00123_DS_
00001A                07729 _00121_DS_:
                      07730 ;       .line   50; interface.c else if (tecla == SW4)
00001A 50??           07731         MOVF    r0x00, W
00001C 0A01           07732         XORLW   0x01
00001E E1??           07733         BNZ     _00118_DS_
                      07734 ;       .line   51; interface.c return MENU_LED;
000020 0E0D           07735         MOVLW   0x0d
000022 D???           07736         BRA     _00123_DS_
000024                07737 _00118_DS_:
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE 147


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      07738 ;       .line   52; interface.c else if (tecla == SW5)
000024 50??           07739         MOVF    r0x00, W
000026 0A02           07740         XORLW   0x02
000028 E1??           07741         BNZ     _00115_DS_
                      07742 ;       .line   53; interface.c return TELA_PRINCIPAL;
00002A 6AE8           07743         CLRF    WREG
00002C D???           07744         BRA     _00123_DS_
00002E                07745 _00115_DS_:
                      07746 ;       .line   54; interface.c else if (tecla == SW6)
00002E 50??           07747         MOVF    r0x00, W
000030 0A03           07748         XORLW   0x03
000032 E1??           07749         BNZ     _00119_DS_
                      07750 ;       .line   55; interface.c return MENU_MAIS;
000034 0E02           07751         MOVLW   0x02
000036 D???           07752         BRA     _00123_DS_
000038                07753 _00119_DS_:
                      07754 ;       .line   57; interface.c return MENU;
000038 0E01           07755         MOVLW   0x01
00003A                07756 _00123_DS_:
00003A CFE4 F000      07757         MOVFF   PREINC1, r0x00
00003E CFE4 FFD9      07758         MOVFF   PREINC1, FSR2L
000042 0012           07759         RETURN  
                      07760 
                      07761 ; ; Starting pCode block
                      07762 S_interface__tela_principal     code
000000                07763 _tela_principal:
                      07764 ;       .line   31; interface.c unsigned char tela_principal()
000000 CFD9 FFE5      07765         MOVFF   FSR2L, POSTDEC1
000004 CFE1 FFD9      07766         MOVFF   FSR1L, FSR2L
000008 C??? F???      07767         MOVFF   r0x00, POSTDEC1
                      07768 ;       .line   35; interface.c tecla = le_tecla();
00000C EC?? F0??      07769         CALL    _le_tecla
000010 6E??           07770         MOVWF   r0x00
                      07771 ;       .line   36; interface.c if (tecla == SW3) {
000012 50??           07772         MOVF    r0x00, W
000014 E1??           07773         BNZ     _00106_DS_
                      07774 ;       .line   37; interface.c return MENU;
000016 0E01           07775         MOVLW   0x01
000018 D???           07776         BRA     _00107_DS_
00001A                07777 _00106_DS_:
                      07778 ;       .line   40; interface.c return TELA_PRINCIPAL;
00001A 6AE8           07779         CLRF    WREG
00001C                07780 _00107_DS_:
00001C CFE4 F000      07781         MOVFF   PREINC1, r0x00
000020 CFE4 FFD9      07782         MOVFF   PREINC1, FSR2L
000024 0012           07783         RETURN  
                      07784 
                      07785 ; ; Starting pCode block
000026                07786 __str_0:
000026 3A54 0000      07787         DB      0x54, 0x3a, 0x00
                      07788 ; ; Starting pCode block
00002A                07789 __str_1:
00002A 2043 3A4C 0000 07790         DB      0x43, 0x20, 0x4c, 0x3a, 0x00
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE 148


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

                      07791 ; ; Starting pCode block
000030                07792 __str_2:
000030 0020           07793         DB      0x20, 0x00
                      07794 ; ; Starting pCode block
000032                07795 __str_3:
000032 4553 534E 524F 07796         DB      0x53, 0x45, 0x4e, 0x53, 0x4f, 0x52, 0x45, 0x53, 0x20, 0x4f, 0x46, 0x46
       5345 4F20 4646 
00003E 2020 2020 0000 07797         DB      0x20, 0x20, 0x20, 0x20, 0x00
                      07798 ; ; Starting pCode block
000044                07799 __str_4:
000044 000A           07800         DB      0x0a, 0x00
                      07801 ; ; Starting pCode block
000046                07802 __str_5:
000046 3A33 454D 554E 07803         DB      0x33, 0x3a, 0x4d, 0x45, 0x4e, 0x55, 0x00
       0000           
                      07804 ; ; Starting pCode block
00004E                07805 __str_6:
00004E 2020 5020 5245 07806         DB      0x20, 0x20, 0x20, 0x50, 0x45, 0x52, 0x49, 0x47, 0x4f, 0x21, 0x00
       4749 214F 0000 
                      07807 ; ; Starting pCode block
00005A                07808 __str_7:
00005A 2020 2020 2020 07809         DB      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00
       2020 2020 0000 
                      07810 ; ; Starting pCode block
000066                07811 __str_8:
000066 2020 4C41 202E 07812         DB      0x20, 0x20, 0x41, 0x4c, 0x2e, 0x20, 0x4f, 0x46, 0x46, 0x20, 0x00
       464F 2046 0000 
                      07813 ; ; Starting pCode block
000072                07814 __str_9:
000072 3A33 4C41 5241 07815         DB      0x33, 0x3a, 0x41, 0x4c, 0x41, 0x52, 0x4d, 0x20, 0x34, 0x3a, 0x4c, 0x45
       204D 3A34 454C 
00007E 2044 2020 0000 07816         DB      0x44, 0x20, 0x20, 0x20, 0x00
                      07817 ; ; Starting pCode block
000084                07818 __str_10:
000084 3A35 0000      07819         DB      0x35, 0x3a, 0x00
                      07820 ; ; Starting pCode block
000088                07821 __str_11:
000088 2020 2020 3620 07822         DB      0x20, 0x20, 0x20, 0x20, 0x20, 0x36, 0x3a, 0x00
       003A           
                      07823 ; ; Starting pCode block
000090                07824 __str_12:
000090 2020 2020 0020 07825         DB      0x20, 0x20, 0x20, 0x20, 0x20, 0x00
                      07826 ; ; Starting pCode block
000096                07827 __str_13:
000096 3A33 4F50 5452 07828         DB      0x33, 0x3a, 0x50, 0x4f, 0x52, 0x54, 0x53, 0x20, 0x34, 0x3a, 0x54, 0x45
       2053 3A34 4554 
0000A2 5453 0045      07829         DB      0x53, 0x54, 0x45, 0x00
                      07830 ; ; Starting pCode block
0000A6                07831 __str_14:
0000A6 3A33 4554 4C43 07832         DB      0x33, 0x3a, 0x54, 0x45, 0x43, 0x4c, 0x41, 0x44, 0x4f, 0x20, 0x20, 0x20
       4441 204F 2020 
0000B2 2020 2020 0000 07833         DB      0x20, 0x20, 0x20, 0x20, 0x00
                      07834 ; ; Starting pCode block
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE 149


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0000B8                07835 __str_15:
0000B8 3A33 4554 504D 07836         DB      0x33, 0x3a, 0x54, 0x45, 0x4d, 0x50, 0x20, 0x20, 0x34, 0x3a, 0x4c, 0x55
       2020 3A34 554C 
0000C4 494D 2020 0000 07837         DB      0x4d, 0x49, 0x20, 0x20, 0x00
                      07838 ; ; Starting pCode block
0000CA                07839 __str_16:
0000CA 2020 2020 0000 07840         DB      0x20, 0x20, 0x20, 0x20, 0x00
                      07841 ; ; Starting pCode block
0000D0                07842 __str_17:
0000D0 3A33 4554 504D 07843         DB      0x33, 0x3a, 0x54, 0x45, 0x4d, 0x50, 0x4f, 0x20, 0x20, 0x20, 0x20, 0x20
       204F 2020 2020 
0000DC 2020 2020 0000 07844         DB      0x20, 0x20, 0x20, 0x20, 0x00
                      07845 ; ; Starting pCode block
0000E2                07846 __str_18:
0000E2 3A33 4C41 4154 07847         DB      0x33, 0x3a, 0x41, 0x4c, 0x54, 0x41, 0x20, 0x20, 0x34, 0x3a, 0x42, 0x41
       2020 3A34 4142 
0000EE 5849 2041 0000 07848         DB      0x49, 0x58, 0x41, 0x20, 0x00
                      07849 ; ; Starting pCode block
0000F4                07850 __str_19:
0000F4 2E54 4120 544C 07851         DB      0x54, 0x2e, 0x20, 0x41, 0x4c, 0x54, 0x41, 0x3a, 0x20, 0x00
       3A41 0020      
                      07852 ; ; Starting pCode block
0000FE                07853 __str_20:
0000FE 2020 2020 2020 07854         DB      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00
       2020 2020 0020 
                      07855 ; ; Starting pCode block
00010A                07856 __str_21:
00010A 3A33 202B 2E34 07857         DB      0x33, 0x3a, 0x2b, 0x20, 0x34, 0x2e, 0x2d, 0x20, 0x35, 0x3a, 0x00
       202D 3A35 0000 
                      07858 ; ; Starting pCode block
000116                07859 __str_22:
000116 3620 003A      07860         DB      0x20, 0x36, 0x3a, 0x00
                      07861 ; ; Starting pCode block
00011A                07862 __str_23:
00011A 4B4F 0000      07863         DB      0x4f, 0x4b, 0x00
                      07864 ; ; Starting pCode block
00011E                07865 __str_24:
00011E 2020 0020      07866         DB      0x20, 0x20, 0x20, 0x00
                      07867 ; ; Starting pCode block
000122                07868 __str_25:
000122 2E54 4220 4941 07869         DB      0x54, 0x2e, 0x20, 0x42, 0x41, 0x49, 0x58, 0x3a, 0x20, 0x00
       3A58 0020      
                      07870 ; ; Starting pCode block
00012C                07871 __str_26:
00012C 2E4C 4120 544C 07872         DB      0x4c, 0x2e, 0x20, 0x41, 0x4c, 0x54, 0x41, 0x3a, 0x20, 0x00
       3A41 0020      
                      07873 ; ; Starting pCode block
000136                07874 __str_27:
000136 2E4C 4220 4941 07875         DB      0x4c, 0x2e, 0x20, 0x42, 0x41, 0x49, 0x58, 0x41, 0x3a, 0x20, 0x00
       4158 203A 0000 
                      07876 ; ; Starting pCode block
000142                07877 __str_28:
000142 4554 504D 3A4F 07878         DB      0x54, 0x45, 0x4d, 0x50, 0x4f, 0x3a, 0x20, 0x00
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE 150


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

       0020           
                      07879 ; ; Starting pCode block
00014A                07880 __str_29:
00014A 2020 2020 2020 07881         DB      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00
       0020           
                      07882 ; ; Starting pCode block
000152                07883 __str_30:
000152 3A33 454C 3144 07884         DB      0x33, 0x3a, 0x4c, 0x45, 0x44, 0x31, 0x20, 0x20, 0x34, 0x3a, 0x4c, 0x45
       2020 3A34 454C 
00015E 3244 000A      07885         DB      0x44, 0x32, 0x0a, 0x00
                      07886 ; ; Starting pCode block
000162                07887 __str_31:
000162 2E33 454C 3044 07888         DB      0x33, 0x2e, 0x4c, 0x45, 0x44, 0x30, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20
       2020 2020 2020 
00016E 2020 000A      07889         DB      0x20, 0x20, 0x0a, 0x00
                      07890 ; ; Starting pCode block
000172                07891 __str_32:
000172 494C 4147 442F 07892         DB      0x4c, 0x49, 0x47, 0x41, 0x2f, 0x44, 0x45, 0x53, 0x4c, 0x49, 0x47, 0x41
       5345 494C 4147 
00017E 2020 000A      07893         DB      0x20, 0x20, 0x0a, 0x00
                      07894 ; ; Starting pCode block
000182                07895 __str_33:
000182 3A35 202B 2E33 07896         DB      0x35, 0x3a, 0x2b, 0x20, 0x33, 0x2e, 0x2d, 0x20, 0x34, 0x3a, 0x00
       202D 3A34 0000 
                      07897 ; ; Starting pCode block
00018E                07898 __str_34:
00018E 5750 3A4D 0020 07899         DB      0x50, 0x57, 0x4d, 0x3a, 0x20, 0x00
                      07900 ; ; Starting pCode block
000194                07901 __str_35:
000194 2020 2020 2020 07902         DB      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x0a, 0x00
       0A20 0000      
                      07903 ; ; Starting pCode block
00019E                07904 __str_36:
00019E 3A33 4550 2031 07905         DB      0x33, 0x3a, 0x50, 0x45, 0x31, 0x20, 0x20, 0x20, 0x34, 0x3a, 0x50, 0x45
       2020 3A34 4550 
0001AA 2032 2020 0000 07906         DB      0x32, 0x20, 0x20, 0x20, 0x00
                      07907 ; ; Starting pCode block
0001B0                07908 __str_37:
0001B0 3A33 4550 2033 07909         DB      0x33, 0x3a, 0x50, 0x45, 0x33, 0x20, 0x20, 0x20, 0x34, 0x3a, 0x50, 0x45
       2020 3A34 4550 
0001BC 2034 2020 0000 07910         DB      0x34, 0x20, 0x20, 0x20, 0x00
                      07911 ; ; Starting pCode block
0001C2                07912 __str_38:
0001C2 3A33 4550 2035 07913         DB      0x33, 0x3a, 0x50, 0x45, 0x35, 0x20, 0x20, 0x20, 0x34, 0x3a, 0x50, 0x45
       2020 3A34 4550 
0001CE 2036 2020 0000 07914         DB      0x36, 0x20, 0x20, 0x20, 0x00
                      07915 ; ; Starting pCode block
0001D4                07916 __str_39:
0001D4 3A33 4550 2037 07917         DB      0x33, 0x3a, 0x50, 0x45, 0x37, 0x20, 0x20, 0x20, 0x34, 0x3a, 0x50, 0x45
       2020 3A34 4550 
0001E0 2038 2020 0000 07918         DB      0x38, 0x20, 0x20, 0x20, 0x00
                      07919 ; ; Starting pCode block
0001E6                07920 __str_40:
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE 151


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0001E6 3A33 4153 4449 07921         DB      0x33, 0x3a, 0x53, 0x41, 0x49, 0x44, 0x41, 0x20, 0x34, 0x3a, 0x45, 0x4e
       2041 3A34 4E45 
0001F2 5254 4144 0000 07922         DB      0x54, 0x52, 0x44, 0x41, 0x00
                      07923 ; ; Starting pCode block
0001F8                07924 __str_41:
0001F8 3A33 4E4F 3420 07925         DB      0x33, 0x3a, 0x4f, 0x4e, 0x20, 0x34, 0x3a, 0x4f, 0x46, 0x46, 0x20, 0x35
       4F3A 4646 3520 
000204 463A 504C 0000 07926         DB      0x3a, 0x46, 0x4c, 0x50, 0x00
                      07927 ; ; Starting pCode block
00020A                07928 __str_42:
00020A 2020 2020 2020 07929         DB      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20
       2020 2020 2020 
000216 0020           07930         DB      0x20, 0x00
                      07931 ; ; Starting pCode block
000218                07932 __str_43:
000218 4554 5453 2045 07933         DB      0x54, 0x45, 0x53, 0x54, 0x45, 0x20, 0x44, 0x4f, 0x20, 0x4c, 0x43, 0x44
       4F44 4C20 4443 
000224 2020 0020      07934         DB      0x20, 0x20, 0x20, 0x00
                      07935 ; ; Starting pCode block
000228                07936 __str_44:
000228 3A35 4B4F 2020 07937         DB      0x35, 0x3a, 0x4f, 0x4b, 0x20, 0x20, 0x20, 0x20, 0x36, 0x3a, 0x00
       2020 3A36 0000 
                      07938 ; ; Starting pCode block
000234                07939 __str_45:
000234 4554 5453 2045 07940         DB      0x54, 0x45, 0x53, 0x54, 0x45, 0x20, 0x44, 0x4f, 0x20, 0x54, 0x45, 0x43
       4F44 5420 4345 
000240 414C 4F44 0000 07941         DB      0x4c, 0x41, 0x44, 0x4f, 0x00
                      07942 ; ; Starting pCode block
000246                07943 __str_46:
000246 4B4F 333A 2020 07944         DB      0x4f, 0x4b, 0x3a, 0x33, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20
       2020 2020 2020 
000252 2020 2020 0000 07945         DB      0x20, 0x20, 0x20, 0x20, 0x00
                      07946 ; ; Starting pCode block
000258                07947 __str_47:
000258 4B4F 343A 2020 07948         DB      0x4f, 0x4b, 0x3a, 0x34, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20
       2020 2020 2020 
000264 2020 2020 0000 07949         DB      0x20, 0x20, 0x20, 0x20, 0x00
                      07950 ; ; Starting pCode block
00026A                07951 __str_48:
00026A 4B4F 353A 2020 07952         DB      0x4f, 0x4b, 0x3a, 0x35, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20
       2020 2020 2020 
000276 2020 2020 0000 07953         DB      0x20, 0x20, 0x20, 0x20, 0x00
                      07954 ; ; Starting pCode block
00027C                07955 __str_49:
00027C 4B4F 363A 2020 07956         DB      0x4f, 0x4b, 0x3a, 0x36, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20
       2020 2020 2020 
000288 2020 2020 0000 07957         DB      0x20, 0x20, 0x20, 0x20, 0x00
                      07958 ; ; Starting pCode block
00028E                07959 __str_50:
00028E 4554 5453 2045 07960         DB      0x54, 0x45, 0x53, 0x54, 0x45, 0x20, 0x44, 0x41, 0x20, 0x53, 0x45, 0x52
       4144 5320 5245 
00029A 4149 204C 0000 07961         DB      0x49, 0x41, 0x4c, 0x20, 0x00
                      07962 ; ; Starting pCode block
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE 152


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

0002A0                07963 __str_51:
0002A0 3A33 4B4F 2020 07964         DB      0x33, 0x3a, 0x4f, 0x4b, 0x20, 0x20, 0x20, 0x34, 0x3a, 0x00
       3420 003A      
                      07965 ; ; Starting pCode block
0002AA                07966 __str_52:
0002AA 4554 5453 2045 07967         DB      0x54, 0x45, 0x53, 0x54, 0x45, 0x20, 0x53, 0x45, 0x52, 0x49, 0x41, 0x4c
       4553 4952 4C41 
0002B6 0000           07968         DB      0x00
                      07969 ; ; Starting pCode block
0002B8                07970 __str_53:
0002B8 454D 534E 4741 07971         DB      0x4d, 0x45, 0x4e, 0x53, 0x41, 0x47, 0x45, 0x4d, 0x20, 0x45, 0x4e, 0x56
       4D45 4520 564E 
0002C4 4149 4144 0000 07972         DB      0x49, 0x41, 0x44, 0x41, 0x00
                      07973 ; ; Starting pCode block
0002CA                07974 __str_54:
0002CA 3A35 4B4F 2020 07975         DB      0x35, 0x3a, 0x4f, 0x4b, 0x20, 0x20, 0x20, 0x36, 0x3a, 0x00
       3620 003A      
                      07976 ; ; Starting pCode block
0002D4                07977 __str_55:
0002D4 4554 5453 2045 07978         DB      0x54, 0x45, 0x53, 0x54, 0x45, 0x20, 0x44, 0x4f, 0x53, 0x20, 0x4c, 0x45
       4F44 2053 454C 
0002E0 5344 2020 0000 07979         DB      0x44, 0x53, 0x20, 0x20, 0x00
                      07980 ; ; Starting pCode block
0002E6                07981 __str_56:
0002E6 4954 454D 3A52 07982         DB      0x54, 0x49, 0x4d, 0x45, 0x52, 0x3a, 0x20, 0x00
       0020           
                      07983 ; ; Starting pCode block
0002EE                07984 __str_57:
0002EE 3A36 202B 2E34 07985         DB      0x36, 0x3a, 0x2b, 0x20, 0x34, 0x2e, 0x2d, 0x20, 0x35, 0x3a, 0x4f, 0x4b
       202D 3A35 4B4F 
0002FA 3320 003A      07986         DB      0x20, 0x33, 0x3a, 0x00
                      07987 ; ; Starting pCode block
0002FE                07988 __str_58:
0002FE 2020 2020 2020 07989         DB      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00
       2020 0020      
                      07990 ; ; Starting pCode block
000308                07991 __str_59:
000308 3A35 202B 2E33 07992         DB      0x35, 0x3a, 0x2b, 0x20, 0x33, 0x2e, 0x2d, 0x20, 0x36, 0x3a, 0x4f, 0x4b
       202D 3A36 4B4F 
000314 3420 003A      07993         DB      0x20, 0x34, 0x3a, 0x00
                      07994 ; ; Starting pCode block
000318                07995 __str_60:
000318 4554 5453 2045 07996         DB      0x54, 0x45, 0x53, 0x54, 0x45, 0x20, 0x53, 0x45, 0x4e, 0x53, 0x4f, 0x52
       4553 534E 524F 
000324 5345 000A      07997         DB      0x45, 0x53, 0x0a, 0x00
                      07998 ; ; Starting pCode block
000328                07999 __str_61:
000328 2020 2020 2020 08000         DB      0x20, 0x20, 0x20, 0x20, 0x20, 0x20, 0x00
       0000           
                      08001 ; ; Starting pCode block
000330                08002 __str_62:
000330 4C20 003A      08003         DB      0x20, 0x4c, 0x3a, 0x00
                      08004 ; ; Starting pCode block
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE 153


LOC  OBJECT CODE     LINE SOURCE TEXT
  VALUE

000334                08005 __str_63:
000334 3A35 4B4F 2020 08006         DB      0x35, 0x3a, 0x4f, 0x4b, 0x20, 0x20, 0x20, 0x20, 0x20, 0x36, 0x3a, 0x00
       2020 3620 003A 
                      08007 ; ; Starting pCode block
000340                08008 __str_64:
000340 4946 204D 4F44 08009         DB      0x46, 0x49, 0x4d, 0x20, 0x44, 0x4f, 0x53, 0x20, 0x54, 0x45, 0x53, 0x54
       2053 4554 5453 
00034C 5345 2020 0000 08010         DB      0x45, 0x53, 0x20, 0x20, 0x00
                      08011 ; ; Starting pCode block
000352                08012 __str_65:
000352 3A34 0000      08013         DB      0x34, 0x3a, 0x00
                      08014 
                      08015 
                      08016 ; Statistics:
                      08017 ; code size:    14032 (0x36d0) bytes (10.71%)
                      08018 ;                7016 (0x1b68) words
                      08019 ; udata size:      20 (0x0014) bytes ( 1.12%)
                      08020 ; access size:      6 (0x0006) bytes
                      08021 
                      08022 
                      08023         end
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE 154


SYMBOL TABLE
  LABEL                             VALUE

FSR0L                             00000FE9
FSR1L                             00000FE1
FSR2L                             00000FD9
PCL                               00000FF9
PCLATH                            00000FFA
PCLATU                            00000FFB
PLUSW2                            00000FDB
POSTDEC1                          00000FE5
POSTINC1                          00000FE6
PREINC1                           00000FE4
PRODH                             00000FF4
PRODL                             00000FF3
STATUS                            00000FD8
WREG                              00000FE8
_00106_DS_                        0000001A
_00107_DS_                        0000001C
_00115_DS_                        0000002E
_00118_DS_                        00000024
_00119_DS_                        00000038
_00121_DS_                        0000001A
_00123_DS_                        0000003A
_00150_DS_                        0000002E
_00153_DS_                        00000024
_00154_DS_                        00000038
_00156_DS_                        0000001C
_00158_DS_                        0000003A
_00185_DS_                        00000024
_00188_DS_                        0000001A
_00189_DS_                        0000002E
_00190_DS_                        00000030
_00212_DS_                        0000002E
_00215_DS_                        00000024
_00216_DS_                        00000038
_00218_DS_                        0000001A
_00220_DS_                        0000003A
_00247_DS_                        00000024
_00250_DS_                        0000001A
_00251_DS_                        0000002E
_00252_DS_                        00000030
_00274_DS_                        0000002E
_00277_DS_                        00000024
_00278_DS_                        00000038
_00280_DS_                        0000001A
_00282_DS_                        0000003A
_00309_DS_                        0000002E
_00312_DS_                        00000024
_00313_DS_                        00000038
_00315_DS_                        0000001A
_00317_DS_                        0000003A
_00348_DS_                        0000007E
_00351_DS_                        00000074
_00354_DS_                        00000048
_00355_DS_                        00000088
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE 155


SYMBOL TABLE
  LABEL                             VALUE 

_00356_DS_                        0000008A
_00376_DS_                        00000038
_00379_DS_                        00000066
_00395_DS_                        0000007E
_00398_DS_                        00000074
_00401_DS_                        00000048
_00402_DS_                        00000088
_00403_DS_                        0000008A
_00423_DS_                        00000038
_00426_DS_                        00000066
_00442_DS_                        0000007C
_00445_DS_                        00000072
_00448_DS_                        00000046
_00449_DS_                        00000086
_00450_DS_                        00000088
_00470_DS_                        00000038
_00473_DS_                        00000064
_00483_DS_                        0000002A
_00487_DS_                        00000046
_00488_DS_                        00000056
_00492_DS_                        0000007C
_00495_DS_                        00000072
_00496_DS_                        00000086
_00497_DS_                        00000088
_00517_DS_                        00000038
_00520_DS_                        00000064
_00530_DS_                        00000068
_00534_DS_                        000000A8
_00535_DS_                        000000D2
_00539_DS_                        00000110
_00542_DS_                        00000106
_00543_DS_                        0000011A
_00544_DS_                        0000011C
_00564_DS_                        0000008E
_00567_DS_                        000000F0
_00579_DS_                        0000002E
_00582_DS_                        00000024
_00583_DS_                        00000038
_00585_DS_                        0000001A
_00587_DS_                        0000003A
_00614_DS_                        00000024
_00617_DS_                        0000001A
_00618_DS_                        0000002E
_00619_DS_                        00000030
_00641_DS_                        0000004A
_00644_DS_                        00000040
_00647_DS_                        0000002A
_00648_DS_                        00000054
_00649_DS_                        00000056
_00674_DS_                        0000005C
_00677_DS_                        00000080
_00682_DS_                        00000090
_00685_DS_                        00000086
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE 156


SYMBOL TABLE
  LABEL                             VALUE 

_00688_DS_                        00000062
_00689_DS_                        0000009A
_00690_DS_                        0000009C
_00712_DS_                        00000052
_00722_DS_                        0000005C
_00725_DS_                        00000080
_00730_DS_                        00000090
_00733_DS_                        00000086
_00736_DS_                        00000062
_00737_DS_                        0000009A
_00738_DS_                        0000009C
_00760_DS_                        00000052
_00772_DS_                        0000002E
_00775_DS_                        00000024
_00776_DS_                        00000038
_00778_DS_                        0000001A
_00780_DS_                        0000003A
_00807_DS_                        0000002E
_00810_DS_                        00000024
_00811_DS_                        00000038
_00813_DS_                        0000001A
_00815_DS_                        0000003A
_00842_DS_                        0000002E
_00845_DS_                        00000024
_00846_DS_                        00000038
_00848_DS_                        0000001A
_00850_DS_                        0000003A
_00877_DS_                        0000002E
_00880_DS_                        00000024
_00881_DS_                        00000038
_00883_DS_                        0000001A
_00885_DS_                        0000003A
_00912_DS_                        0000004A
_00915_DS_                        00000040
_00918_DS_                        00000028
_00919_DS_                        00000054
_00920_DS_                        00000056
_00947_DS_                        0000004A
_00950_DS_                        00000040
_00953_DS_                        00000028
_00954_DS_                        00000054
_00955_DS_                        00000056
_00982_DS_                        0000004A
_00985_DS_                        00000040
_00988_DS_                        00000028
_00989_DS_                        00000054
_00990_DS_                        00000056
_01017_DS_                        0000004A
_01020_DS_                        00000040
_01023_DS_                        00000028
_01024_DS_                        00000054
_01025_DS_                        00000056
_01052_DS_                        0000004A
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE 157


SYMBOL TABLE
  LABEL                             VALUE 

_01055_DS_                        00000040
_01058_DS_                        00000028
_01059_DS_                        00000054
_01060_DS_                        00000056
_01087_DS_                        0000004A
_01090_DS_                        00000040
_01093_DS_                        00000028
_01094_DS_                        00000054
_01095_DS_                        00000056
_01122_DS_                        0000004A
_01125_DS_                        00000040
_01128_DS_                        00000028
_01129_DS_                        00000054
_01130_DS_                        00000056
_01157_DS_                        0000004A
_01160_DS_                        00000040
_01163_DS_                        00000028
_01164_DS_                        00000054
_01165_DS_                        00000056
_01192_DS_                        00000058
_01195_DS_                        00000040
_01198_DS_                        00000028
_01199_DS_                        00000062
_01200_DS_                        00000064
_01227_DS_                        00000058
_01230_DS_                        00000040
_01233_DS_                        00000028
_01234_DS_                        00000062
_01235_DS_                        00000064
_01262_DS_                        00000058
_01265_DS_                        00000040
_01268_DS_                        00000028
_01269_DS_                        00000062
_01270_DS_                        00000064
_01297_DS_                        00000058
_01300_DS_                        00000040
_01303_DS_                        00000028
_01304_DS_                        00000062
_01305_DS_                        00000064
_01332_DS_                        00000058
_01335_DS_                        00000040
_01338_DS_                        00000028
_01339_DS_                        00000062
_01340_DS_                        00000064
_01367_DS_                        00000058
_01370_DS_                        00000040
_01373_DS_                        00000028
_01374_DS_                        00000062
_01375_DS_                        00000064
_01402_DS_                        00000058
_01405_DS_                        00000040
_01408_DS_                        00000028
_01409_DS_                        00000062
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE 158


SYMBOL TABLE
  LABEL                             VALUE 

_01410_DS_                        00000064
_01437_DS_                        00000058
_01440_DS_                        00000040
_01443_DS_                        00000028
_01444_DS_                        00000062
_01445_DS_                        00000064
_01477_DS_                        0000001C
_01478_DS_                        00000026
_01479_DS_                        00000028
_01496_DS_                        0000001A
_01497_DS_                        0000001C
_01503_DS_                        0000001C
_01504_DS_                        0000001E
_01516_DS_                        0000001C
_01517_DS_                        0000001E
_01529_DS_                        0000001C
_01530_DS_                        0000001E
_01544_DS_                        0000001A
_01545_DS_                        00000024
_01546_DS_                        00000026
_01563_DS_                        0000001C
_01564_DS_                        00000026
_01565_DS_                        00000028
_01584_DS_                        0000004E
_01585_DS_                        00000058
_01586_DS_                        0000005A
_01601_DS_                        00000096
_01603_DS_                        0000013C
_01608_DS_                        00000160
_01611_DS_                        00000156
_01614_DS_                        000000E2
_01615_DS_                        00000168
_01616_DS_                        0000016A
_01637_DS_                        000000A8
_01639_DS_                        000000EA
_01640_DS_                        00000128
_01648_DS_                        0000006E
_01651_DS_                        00000092
_01656_DS_                        000000A2
_01659_DS_                        00000098
_01662_DS_                        00000074
_01663_DS_                        000000AC
_01664_DS_                        000000AE
_01686_DS_                        00000064
_01698_DS_                        0000001A
_01699_DS_                        00000024
_01700_DS_                        00000026
_01717_DS_                        0000001C
_01718_DS_                        00000026
_01719_DS_                        00000028
_01736_DS_                        0000001C
_01737_DS_                        0000001E
_01753_DS_                        0000013E
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE 159


SYMBOL TABLE
  LABEL                             VALUE 

_01756_DS_                        0000014E
_01757_DS_                        00000374
_01758_DS_                        0000039C
_01761_DS_                        0000040C
_01764_DS_                        00000430
_01766_DS_                        00000454
_01767_DS_                        00000500
_01768_DS_                        000005AC
_01769_DS_                        00000658
_01770_DS_                        00000704
_01772_DS_                        000007B0
_01773_DS_                        0000085C
_01774_DS_                        00000A24
_01775_DS_                        00000BEC
_01776_DS_                        00000DB4
_01777_DS_                        00000F7C
_01778_DS_                        000012C4
_01779_DS_                        00001350
_01780_DS_                        000013DC
_01782_DS_                        00001468
_01786_DS_                        0000150A
_01787_DS_                        0000158A
_01791_DS_                        00001636
_01795_DS_                        000016AE
_01798_DS_                        00001686
_01801_DS_                        0000165E
_01802_DS_                        000016D4
_01808_DS_                        00001740
_01809_DS_                        00001740
_01810_DS_                        00001740
_01816_DS_                        000017CC
_01817_DS_                        000017CC
_01818_DS_                        000017CC
_01819_DS_                        00001854
_01820_DS_                        000018A0
_01821_DS_                        000018E8
_01822_DS_                        00001930
_01823_DS_                        00001978
_01824_DS_                        000019C0
_01825_DS_                        00001A0C
_01826_DS_                        00001A78
_01827_DS_                        00001AC4
_01828_DS_                        00001E08
_01829_DS_                        00001F0A
_01830_DS_                        00001F70
_01831_DS_                        000021BA
_01835_DS_                        00002222
_01871_DS_                        0000006A
_01877_DS_                        00001490
_01879_DS_                        00001512
_11753_DS_                        0000002A
_21754_DS_                        0000002A
_31755_DS_                        0000002A
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE 160


SYMBOL TABLE
  LABEL                             VALUE 

_41756_DS_                        0000002A
_ADCON0                           00000000
_ADCON0bits                       00000000
_ADCON1                           00000000
_ADCON1bits                       00000000
_ADCON2                           00000000
_ADCON2bits                       00000000
_ADRES                            00000000
_ADRESH                           00000000
_ADRESL                           00000000
_BAUDCON                          00000000
_BAUDCONbits                      00000000
_BAUDCTL                          00000000
_BAUDCTLbits                      00000000
_BSR                              00000000
_CCP1AS                           00000000
_CCP1ASbits                       00000000
_CCP1CON                          00000000
_CCP1CONbits                      00000000
_CCP1DEL                          00000000
_CCP1DELbits                      00000000
_CCP2CON                          00000000
_CCP2CONbits                      00000000
_CCPR1                            00000000
_CCPR1H                           00000000
_CCPR1L                           00000000
_CCPR2                            00000000
_CCPR2H                           00000000
_CCPR2L                           00000000
_CMCON                            00000000
_CMCONbits                        00000000
_CVRCON                           00000000
_CVRCONbits                       00000000
_DDRA                             00000000
_DDRAbits                         00000000
_DDRB                             00000000
_DDRBbits                         00000000
_DDRC                             00000000
_DDRCbits                         00000000
_DDRD                             00000000
_DDRDbits                         00000000
_DDRE                             00000000
_DDREbits                         00000000
_ECCP1AS                          00000000
_ECCP1ASbits                      00000000
_ECCP1CON                         00000000
_ECCP1CONbits                     00000000
_ECCP1DEL                         00000000
_ECCP1DELbits                     00000000
_EEADR                            00000000
_EECON1                           00000000
_EECON1bits                       00000000
_EECON2                           00000000
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE 161


SYMBOL TABLE
  LABEL                             VALUE 

_EEDATA                           00000000
_FSR0H                            00000000
_FSR0L                            00000000
_FSR1H                            00000000
_FSR1L                            00000000
_FSR2H                            00000000
_FSR2L                            00000000
_HLVDCON                          00000000
_HLVDCONbits                      00000000
_INDF0                            00000000
_INDF1                            00000000
_INDF2                            00000000
_INTCON                           00000000
_INTCON2                          00000000
_INTCON2bits                      00000000
_INTCON3                          00000000
_INTCON3bits                      00000000
_INTCONbits                       00000000
_IPR1                             00000000
_IPR1bits                         00000000
_IPR2                             00000000
_IPR2bits                         00000000
_LATA                             00000000
_LATAbits                         00000000
_LATB                             00000000
_LATBbits                         00000000
_LATC                             00000000
_LATCbits                         00000000
_LATD                             00000000
_LATDbits                         00000000
_LATE                             00000000
_LATEbits                         00000000
_LVDCON                           00000000
_LVDCONbits                       00000000
_OSCCON                           00000000
_OSCCONbits                       00000000
_OSCTUNE                          00000000
_OSCTUNEbits                      00000000
_PC                               00000000
_PCL                              00000000
_PCLATH                           00000000
_PCLATU                           00000000
_PIE1                             00000000
_PIE1bits                         00000000
_PIE2                             00000000
_PIE2bits                         00000000
_PIR1                             00000000
_PIR1bits                         00000000
_PIR2                             00000000
_PIR2bits                         00000000
_PLUSW0                           00000000
_PLUSW1                           00000000
_PLUSW2                           00000000
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE 162


SYMBOL TABLE
  LABEL                             VALUE 

_PORTA                            00000000
_PORTAbits                        00000000
_PORTB                            00000000
_PORTBbits                        00000000
_PORTC                            00000000
_PORTCbits                        00000000
_PORTD                            00000000
_PORTDbits                        00000000
_PORTE                            00000000
_PORTEbits                        00000000
_POSTDEC0                         00000000
_POSTDEC1                         00000000
_POSTDEC2                         00000000
_POSTINC0                         00000000
_POSTINC1                         00000000
_POSTINC2                         00000000
_PR2                              00000000
_PREINC0                          00000000
_PREINC1                          00000000
_PREINC2                          00000000
_PROD                             00000000
_PRODH                            00000000
_PRODL                            00000000
_RCON                             00000000
_RCONbits                         00000000
_RCREG                            00000000
_RCSTA                            00000000
_RCSTAbits                        00000000
_SPBRG                            00000000
_SPBRGH                           00000000
_SPPCFG                           00000000
_SPPCFGbits                       00000000
_SPPCON                           00000000
_SPPCONbits                       00000000
_SPPDATA                          00000000
_SPPEPS                           00000000
_SPPEPSbits                       00000000
_SSPADD                           00000000
_SSPBUF                           00000000
_SSPCON1                          00000000
_SSPCON1bits                      00000000
_SSPCON2                          00000000
_SSPCON2bits                      00000000
_SSPSTAT                          00000000
_SSPSTATbits                      00000000
_STATUS                           00000000
_STATUSbits                       00000000
_STKPTR                           00000000
_STKPTRbits                       00000000
_T0CON                            00000000
_T0CONbits                        00000000
_T1CON                            00000000
_T1CONbits                        00000000
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE 163


SYMBOL TABLE
  LABEL                             VALUE 

_T2CON                            00000000
_T2CONbits                        00000000
_T3CON                            00000000
_T3CONbits                        00000000
_TABLAT                           00000000
_TBLPTR                           00000000
_TBLPTRH                          00000000
_TBLPTRL                          00000000
_TBLPTRU                          00000000
_TMR0                             00000000
_TMR0H                            00000000
_TMR0L                            00000000
_TMR1                             00000000
_TMR1H                            00000000
_TMR1L                            00000000
_TMR2                             00000000
_TMR3                             00000000
_TMR3H                            00000000
_TMR3L                            00000000
_TOS                              00000000
_TOSH                             00000000
_TOSL                             00000000
_TOSU                             00000000
_TRISA                            00000000
_TRISAbits                        00000000
_TRISB                            00000000
_TRISBbits                        00000000
_TRISC                            00000000
_TRISCbits                        00000000
_TRISD                            00000000
_TRISDbits                        00000000
_TRISE                            00000000
_TRISEbits                        00000000
_TXREG                            00000000
_TXSTA                            00000000
_TXSTAbits                        00000000
_UADDR                            00000000
_UADDRbits                        00000000
_UCFG                             00000000
_UCFGbits                         00000000
_UCON                             00000000
_UCONbits                         00000000
_UEIE                             00000000
_UEIEbits                         00000000
_UEIR                             00000000
_UEIRbits                         00000000
_UEP0                             00000000
_UEP0bits                         00000000
_UEP1                             00000000
_UEP10                            00000000
_UEP10bits                        00000000
_UEP11                            00000000
_UEP11bits                        00000000
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE 164


SYMBOL TABLE
  LABEL                             VALUE 

_UEP12                            00000000
_UEP12bits                        00000000
_UEP13                            00000000
_UEP13bits                        00000000
_UEP14                            00000000
_UEP14bits                        00000000
_UEP15                            00000000
_UEP15bits                        00000000
_UEP1bits                         00000000
_UEP2                             00000000
_UEP2bits                         00000000
_UEP3                             00000000
_UEP3bits                         00000000
_UEP4                             00000000
_UEP4bits                         00000000
_UEP5                             00000000
_UEP5bits                         00000000
_UEP6                             00000000
_UEP6bits                         00000000
_UEP7                             00000000
_UEP7bits                         00000000
_UEP8                             00000000
_UEP8bits                         00000000
_UEP9                             00000000
_UEP9bits                         00000000
_UFRM                             00000000
_UFRMH                            00000000
_UFRMHbits                        00000000
_UFRML                            00000000
_UFRMLbits                        00000000
_UIE                              00000000
_UIEbits                          00000000
_UIR                              00000000
_UIRbits                          00000000
_USTAT                            00000000
_USTATbits                        00000000
_WDTCON                           00000000
_WDTCONbits                       00000000
_WREG                             00000000
__18F4550                         00000001
__divuchar                        00000000
__divuint                         00000000
__divulong                        00000000
__moduchar                        00000000
__moduint                         00000000
__modulong                        00000000
__str_0                           00000026
__str_1                           0000002A
__str_10                          00000084
__str_11                          00000088
__str_12                          00000090
__str_13                          00000096
__str_14                          000000A6
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE 165


SYMBOL TABLE
  LABEL                             VALUE 

__str_15                          000000B8
__str_16                          000000CA
__str_17                          000000D0
__str_18                          000000E2
__str_19                          000000F4
__str_2                           00000030
__str_20                          000000FE
__str_21                          0000010A
__str_22                          00000116
__str_23                          0000011A
__str_24                          0000011E
__str_25                          00000122
__str_26                          0000012C
__str_27                          00000136
__str_28                          00000142
__str_29                          0000014A
__str_3                           00000032
__str_30                          00000152
__str_31                          00000162
__str_32                          00000172
__str_33                          00000182
__str_34                          0000018E
__str_35                          00000194
__str_36                          0000019E
__str_37                          000001B0
__str_38                          000001C2
__str_39                          000001D4
__str_4                           00000044
__str_40                          000001E6
__str_41                          000001F8
__str_42                          0000020A
__str_43                          00000218
__str_44                          00000228
__str_45                          00000234
__str_46                          00000246
__str_47                          00000258
__str_48                          0000026A
__str_49                          0000027C
__str_5                           00000046
__str_50                          0000028E
__str_51                          000002A0
__str_52                          000002AA
__str_53                          000002B8
__str_54                          000002CA
__str_55                          000002D4
__str_56                          000002E6
__str_57                          000002EE
__str_58                          000002FE
__str_59                          00000308
__str_6                           0000004E
__str_60                          00000318
__str_61                          00000328
__str_62                          00000330
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE 166


SYMBOL TABLE
  LABEL                             VALUE 

__str_63                          00000334
__str_64                          00000340
__str_65                          00000352
__str_7                           0000005A
__str_8                           00000066
__str_9                           00000072
_alarme                           00000000
_configura_porta                  00000000
_hab_alarme                       00000000
_hab_sensor                       00000000
_inicializa_led                   00000000
_le_tecla                         00000000
_le_tecla_continua                00000000
_led                              00000000
_lumi                             00000000
_menu                             00000000
_menu_configuracao                00000000
_menu_configuracao_lumi           00000000
_menu_configuracao_lumi_alta      00000000
_menu_configuracao_lumi_baixa     00000000
_menu_configuracao_mais           00000000
_menu_configuracao_temp           00000000
_menu_configuracao_temp_alta      00000000
_menu_configuracao_temp_baixa     00000000
_menu_configuracao_tempo          00000000
_menu_led                         00000000
_menu_led_0                       00000000
_menu_led_1                       00000000
_menu_led_2                       00000000
_menu_led_mais                    00000000
_menu_mais                        00000000
_menu_mais_mais                   00000000
_menu_porta_1_configura           00000000
_menu_porta_1_seta                00000000
_menu_porta_2_configura           00000000
_menu_porta_2_seta                00000000
_menu_porta_3_configura           00000000
_menu_porta_3_seta                00000000
_menu_porta_4_configura           00000000
_menu_porta_4_seta                00000000
_menu_porta_5_configura           00000000
_menu_porta_5_seta                00000000
_menu_porta_6_configura           00000000
_menu_porta_6_seta                00000000
_menu_porta_7_configura           00000000
_menu_porta_7_seta                00000000
_menu_porta_8_configura           00000000
_menu_porta_8_seta                00000000
_menu_portas_1_2                  00000000
_menu_portas_3_4                  00000000
_menu_portas_5_6                  00000000
_menu_portas_7_8                  00000000
_menu_teclado                     00000000
gpasm-1.2.0 #980 (Jun  5 2013) build/default/   12-5-2013  11:22:27         PAGE 167


SYMBOL TABLE
  LABEL                             VALUE 

_print_lcd_graus                  00000000
_print_lcd_ln                     00000000
_print_lcd_mais                   00000000
_print_lcd_menos                  00000000
_print_lcd_string                 00000000
_print_lcd_tela                   00000000
_print_serial_string              00000000
_print_tela                       00000000
_print_tela_s_lumi_1_227          00000000
_print_tela_s_pwm_1_227           00000000
_print_tela_s_temp_1_227          00000000
_print_tela_s_tempo_1_227         00000000
_pwm_1                            00000000
_pwm_2                            00000001
_retorna_lcd                      00000000
_serial_lcd                       00000000
_set_pwm                          00000000
_seta_porta                       00000000
_sys_lumi_max                     00000000
_sys_lumi_min                     00000000
_sys_temp_max                     00000000
_sys_temp_min                     00000000
_sys_timer_pool                   00000000
_tela_principal                   00000000
_temp                             00000000
_teste_fim                        00000000
_teste_lcd                        00000000
_teste_leds                       00000000
_teste_leds_pwm                   00000000
_teste_leds_timer                 00000000
_teste_pwm                        00000002
_teste_sensores                   00000000
_teste_sensores_mais              00000000
_teste_serial                     00000000
_teste_serial_msg                 00000000
_teste_teclado_1                  00000000
_teste_teclado_2                  00000000
_teste_teclado_3                  00000000
_teste_teclado_4                  00000000
_timer                            00000003
_timer_expired                    00000000
_timer_start                      00000000
r0x00                             00000000
r0x01                             00000001
r0x02                             00000002
r0x03                             00000003
r0x04                             00000004
r0x05                             00000005

Errors   :     0
Warnings :     0 reported,     0 suppressed
Messages :     0 reported,     0 suppressed

