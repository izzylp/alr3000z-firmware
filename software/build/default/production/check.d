<><><><><><><><><><><><><><><><><>
starting	/home/sdcc-builder/build/sdcc-build/orig/sdcc/src/pic16/ralloc.c:pic16_assignRegisters
ebbs before optimizing:

----------------------------------------------------------------
Basic Block _entry : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 1 : bbnum = 0 1st iCode = 1 , last iCode = 5
visited 0 : hasFcall = 0

defines bitVector :bitvector Size = 102 bSize = 13
Bits on { (2) (4) (92) }

local defines bitVector :bitvector Size = 102 bSize = 13
Bits on { (2) (4) (92) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :
outDefs Set bitvector :bitvector Size = 102 bSize = 13
Bits on { (2) (4) (92) }

usesDefs Set bitvector :bitvector Size = 102 bSize = 13
Bits on { (2) }

----------------------------------------------------------------
check.c(l19:s1:k0:d0:s0)	 _entry($17) :
check.c(l19:s2:k1:d0:s0)		proc _check_crc [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char function ( char generic* fixed) fixed}
check.c(l19:s3:k2:d0:s0)	iTemp0 [k2 lr3:55 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_crc_comando_1_70} = recv _check_crc [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char function ( char generic* fixed) fixed}
check.c(l25:s4:k4:d0:s0)		iTemp2 [k6 lr4:57 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_crc_calc_1_71} := 0x5 {const-unsigned-char literal}
check.c(l34:s5:k92:d0:s0)		iTemp5 [k11 lr5:13 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_size_1_71} := 0x0 {const-char literal}

----------------------------------------------------------------
Basic Block preHeaderLbl6 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 2 : bbnum = 1 1st iCode = 6 , last iCode = 6
visited 0 : hasFcall = 0

defines bitVector :bitvector Size = 102 bSize = 13
Bits on { }

local defines bitVector :
pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 102 bSize = 13
Bits on { (2) (4) (92) }

outDefs Set bitvector :bitvector Size = 102 bSize = 13
Bits on { (2) (4) (92) }

usesDefs Set bitvector :bitvector Size = 102 bSize = 13
Bits on { }

----------------------------------------------------------------
check.c(l34:s6:k100:d0:s0)	 preHeaderLbl6($34) :

----------------------------------------------------------------
Basic Block _whilecontinue_0 : loop Depth = 1 noPath = 0 , lastinLoop = 0
depth 1st num 3 : bbnum = 2 1st iCode = 7 , last iCode = 12
visited 0 : hasFcall = 0

defines bitVector :bitvector Size = 102 bSize = 13
Bits on { (7) (8) (10) (11) }

local defines bitVector :bitvector Size = 102 bSize = 13
Bits on { (7) (8) (10) (11) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 102 bSize = 13
Bits on { (2) (4) (7) (8) (10) (11) (92) }

outDefs Set bitvector :bitvector Size = 102 bSize = 13
Bits on { (2) (4) (7) (8) (10) (11) }

usesDefs Set bitvector :bitvector Size = 102 bSize = 13
Bits on { (2) (7) (8) (10) (11) (92) }

----------------------------------------------------------------
check.c(l34:s7:k6:d1:s0)	 _whilecontinue_0($1) :
check.c(l34:s8:k7:d1:s0)		iTemp4 [k10 lr8:10 so:0]{ ia0 a2p0 re0 rm0 nos1 ru0 dp0}{char fixed} := iTemp5 [k11 lr5:13 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_size_1_71}
check.c(l34:s9:k8:d1:s0)		iTemp5 [k11 lr5:13 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_size_1_71} = iTemp5 [k11 lr5:13 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_size_1_71} + 0x1 {const-unsigned-char literal}
check.c(l34:s10:k10:d1:s0)		iTemp6 [k12 lr10:11 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed} = iTemp0 [k2 lr3:55 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_crc_comando_1_70} + iTemp4 [k10 lr8:10 so:0]{ ia0 a2p0 re0 rm0 nos1 ru0 dp0}{char fixed}
check.c(l34:s11:k11:d1:s0)		iTemp7 [k13 lr11:12 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register} = @[iTemp6 [k12 lr10:11 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed} + 0x0 {const-unsigned-char literal}]
check.c(l34:s12:k12:d1:s0)		if iTemp7 [k13 lr11:12 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register} != 0 goto _whilecontinue_0($1)

----------------------------------------------------------------
Basic Block _eBBlock10 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 4 : bbnum = 3 1st iCode = 13 , last iCode = 18
visited 0 : hasFcall = 0

defines bitVector :bitvector Size = 102 bSize = 13
Bits on { (17) (18) (19) (20) (21) }

local defines bitVector :bitvector Size = 102 bSize = 13
Bits on { (17) (18) (19) (20) (21) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 102 bSize = 13
Bits on { (2) (4) (7) (8) (10) (11) }

outDefs Set bitvector :bitvector Size = 102 bSize = 13
Bits on { (2) (4) (7) (8) (10) (11) (17) (18) (19) (20) (21) }

usesDefs Set bitvector :bitvector Size = 102 bSize = 13
Bits on { (2) (8) (17) (18) (19) (20) (21) }

----------------------------------------------------------------
check.c(l36:s13:k17:d0:s0)		iTemp8 [k14 lr13:14 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}{ sir@ _check_crc_size_1_71} = iTemp5 [k11 lr5:13 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_size_1_71} - 0x3 {char literal}
check.c(l36:s14:k18:d0:s0)		iTemp1 [k4 lr14:55 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_size_1_71} := iTemp8 [k14 lr13:14 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}{ sir@ _check_crc_size_1_71}
check.c(l37:s15:k19:d0:s0)		iTemp9 [k15 lr15:16 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed} = iTemp0 [k2 lr3:55 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_crc_comando_1_70} + iTemp1 [k4 lr14:55 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_size_1_71}
check.c(l37:s16:k20:d0:s0)		iTemp10 [k16 lr16:25 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register} = @[iTemp9 [k15 lr15:16 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed} + 0x0 {const-unsigned-char literal}]
check.c(l37:s17:k21:d0:s0)		iTemp11 [k17 lr17:18 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp10 [k16 lr16:25 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register} < 0x41 {const-char literal}
check.c(l37:s18:k22:d0:s0)		if iTemp11 [k17 lr17:18 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _iffalse_0($5)

----------------------------------------------------------------
Basic Block _eBBlock11 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 5 : bbnum = 4 1st iCode = 19 , last iCode = 23
visited 0 : hasFcall = 0

defines bitVector :bitvector Size = 102 bSize = 13
Bits on { (27) (28) (29) (30) }

local defines bitVector :bitvector Size = 102 bSize = 13
Bits on { (27) (28) (29) (30) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 102 bSize = 13
Bits on { (2) (4) (7) (8) (10) (11) (17) (18) (19) (20) (21) }

outDefs Set bitvector :bitvector Size = 102 bSize = 13
Bits on { (2) (4) (7) (8) (10) (11) (17) (18) (19) (20) (21) (27) (28) (29) (30) }

usesDefs Set bitvector :bitvector Size = 102 bSize = 13
Bits on { (20) (27) (28) (29) }

----------------------------------------------------------------
check.c(l38:s19:k27:d0:s0)		iTemp14 [k20 lr19:20 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register} = iTemp10 [k16 lr16:25 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register} - 0x37 {char literal}
check.c(l38:s20:k28:d0:s0)		iTemp15 [k21 lr20:21 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register} = iTemp14 [k20 lr19:20 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register} * 0x10 {const-unsigned-char literal}
check.c(l38:s21:k29:d0:s0)		iTemp16 [k22 lr21:22 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}{ sir@ _check_crc_crc_env_1_71} := iTemp15 [k21 lr20:21 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}
check.c(l38:s22:k30:d0:s0)		iTemp3 [k8 lr22:57 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_crc_env_1_71} := iTemp16 [k22 lr21:22 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}{ sir@ _check_crc_crc_env_1_71}
check.c(l38:s23:k31:d0:s0)		 goto _ifend_0($6)

----------------------------------------------------------------
Basic Block _iffalse_0 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 6 : bbnum = 5 1st iCode = 24 , last iCode = 28
visited 0 : hasFcall = 0

defines bitVector :bitvector Size = 102 bSize = 13
Bits on { (35) (36) (37) (38) }

local defines bitVector :bitvector Size = 102 bSize = 13
Bits on { (35) (36) (37) (38) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 102 bSize = 13
Bits on { (2) (4) (7) (8) (10) (11) (17) (18) (19) (20) (21) }

outDefs Set bitvector :bitvector Size = 102 bSize = 13
Bits on { (2) (4) (7) (8) (10) (11) (17) (18) (19) (20) (21) (35) (36) (37) (38) }

usesDefs Set bitvector :bitvector Size = 102 bSize = 13
Bits on { (20) (35) (36) (37) }

----------------------------------------------------------------
check.c(l38:s24:k32:d0:s0)	 _iffalse_0($5) :
check.c(l40:s25:k35:d0:s0)		iTemp19 [k25 lr25:26 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register} = iTemp10 [k16 lr16:25 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register} - 0x30 {char literal}
check.c(l40:s26:k36:d0:s0)		iTemp20 [k26 lr26:27 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register} = iTemp19 [k25 lr25:26 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register} * 0x10 {const-unsigned-char literal}
check.c(l40:s27:k37:d0:s0)		iTemp21 [k27 lr27:28 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register} := iTemp20 [k26 lr26:27 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}
check.c(l40:s28:k38:d0:s0)		iTemp3 [k8 lr22:57 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_crc_env_1_71} := iTemp21 [k27 lr27:28 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}

----------------------------------------------------------------
Basic Block _ifend_0 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 7 : bbnum = 6 1st iCode = 29 , last iCode = 35
visited 0 : hasFcall = 0

defines bitVector :bitvector Size = 102 bSize = 13
Bits on { (40) (41) (42) (43) (44) }

local defines bitVector :bitvector Size = 102 bSize = 13
Bits on { (40) (41) (42) (43) (44) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 102 bSize = 13
Bits on { (2) (4) (7) (8) (10) (11) (17) (18) (19) (20) (21) (27) (28) (29) (30) (35) (36) (37) (38) }

outDefs Set bitvector :bitvector Size = 102 bSize = 13
Bits on { (2) (4) (7) (8) (10) (11) (17) (18) (19) (20) (21) (27) (28) (29) (30) (35) (36) (37) (38) (40) (41) (42) (43) (44) }

usesDefs Set bitvector :bitvector Size = 102 bSize = 13
Bits on { (2) (18) (40) (41) (42) (43) (44) }

----------------------------------------------------------------
check.c(l40:s29:k39:d0:s0)	 _ifend_0($6) :
check.c(l42:s30:k40:d0:s0)		iTemp22 [k28 lr30:31 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed} = (int fixed)iTemp1 [k4 lr14:55 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_size_1_71}
check.c(l42:s31:k41:d0:s0)		iTemp23 [k29 lr31:32 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register} = iTemp22 [k28 lr30:31 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed} + 0x1 {int literal}
check.c(l42:s32:k42:d0:s0)		iTemp24 [k30 lr32:33 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed} = iTemp0 [k2 lr3:55 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_crc_comando_1_70} + iTemp23 [k29 lr31:32 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}
check.c(l42:s33:k43:d0:s0)		iTemp25 [k31 lr33:41 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register} = @[iTemp24 [k30 lr32:33 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed} + 0x0 {const-unsigned-char literal}]
check.c(l42:s34:k44:d0:s0)		iTemp26 [k32 lr34:35 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp25 [k31 lr33:41 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register} < 0x41 {const-char literal}
check.c(l42:s35:k45:d0:s0)		if iTemp26 [k32 lr34:35 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _iffalse_1($8)

----------------------------------------------------------------
Basic Block _eBBlock12 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 8 : bbnum = 7 1st iCode = 36 , last iCode = 39
visited 0 : hasFcall = 0

defines bitVector :bitvector Size = 102 bSize = 13
Bits on { (52) (53) (54) }

local defines bitVector :bitvector Size = 102 bSize = 13
Bits on { (52) (53) (54) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 102 bSize = 13
Bits on { (2) (4) (7) (8) (10) (11) (17) (18) (19) (20) (21) (27) (28) (29) (30) (35) (36) (37) (38) (40) (41) (42) (43) (44) }

outDefs Set bitvector :bitvector Size = 102 bSize = 13
Bits on { (2) (4) (7) (8) (10) (11) (17) (18) (19) (20) (21) (27) (28) (29) (35) (36) (37) (40) (41) (42) (43) (44) (52) (53) (54) }

usesDefs Set bitvector :bitvector Size = 102 bSize = 13
Bits on { (30) (38) (43) (52) (53) }

----------------------------------------------------------------
check.c(l43:s36:k52:d0:s0)		iTemp31 [k37 lr36:37 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register} = iTemp25 [k31 lr33:41 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register} - 0x37 {char literal}
check.c(l43:s37:k53:d0:s0)		iTemp32 [k38 lr37:38 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register} = iTemp3 [k8 lr22:57 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_crc_env_1_71} + iTemp31 [k37 lr36:37 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}
check.c(l43:s38:k54:d0:s0)		iTemp3 [k8 lr22:57 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_crc_env_1_71} := iTemp32 [k38 lr37:38 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}
check.c(l43:s39:k55:d0:s0)		 goto preHeaderLbl1($23)

----------------------------------------------------------------
Basic Block _iffalse_1 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 9 : bbnum = 8 1st iCode = 40 , last iCode = 43
visited 0 : hasFcall = 0

defines bitVector :bitvector Size = 102 bSize = 13
Bits on { (61) (62) (63) }

local defines bitVector :bitvector Size = 102 bSize = 13
Bits on { (61) (62) (63) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 102 bSize = 13
Bits on { (2) (4) (7) (8) (10) (11) (17) (18) (19) (20) (21) (27) (28) (29) (30) (35) (36) (37) (38) (40) (41) (42) (43) (44) }

outDefs Set bitvector :bitvector Size = 102 bSize = 13
Bits on { (2) (4) (7) (8) (10) (11) (17) (18) (19) (20) (21) (27) (28) (29) (35) (36) (37) (40) (41) (42) (43) (44) (61) (62) (63) }

usesDefs Set bitvector :bitvector Size = 102 bSize = 13
Bits on { (30) (38) (43) (61) (62) }

----------------------------------------------------------------
check.c(l43:s40:k56:d0:s0)	 _iffalse_1($8) :
check.c(l45:s41:k61:d0:s0)		iTemp37 [k43 lr41:42 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register} = iTemp25 [k31 lr33:41 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register} - 0x30 {char literal}
check.c(l45:s42:k62:d0:s0)		iTemp38 [k44 lr42:43 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register} = iTemp3 [k8 lr22:57 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_crc_env_1_71} + iTemp37 [k43 lr41:42 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}
check.c(l45:s43:k63:d0:s0)		iTemp3 [k8 lr22:57 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_crc_env_1_71} := iTemp38 [k44 lr42:43 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}

----------------------------------------------------------------
Basic Block preHeaderLbl1 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 10 : bbnum = 9 1st iCode = 44 , last iCode = 45
visited 0 : hasFcall = 0

defines bitVector :bitvector Size = 102 bSize = 13
Bits on { (95) }

local defines bitVector :bitvector Size = 102 bSize = 13
Bits on { (95) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 102 bSize = 13
Bits on { (2) (4) (7) (8) (10) (11) (17) (18) (19) (20) (21) (27) (28) (29) (35) (36) (37) (40) (41) (42) (43) (44) (52) (53) (54) (61) (62) (63) }

outDefs Set bitvector :bitvector Size = 102 bSize = 13
Bits on { (2) (4) (7) (8) (10) (11) (17) (18) (19) (20) (21) (27) (28) (29) (35) (36) (37) (40) (41) (42) (43) (44) (52) (53) (54) (61) (62) (63) (95) }

usesDefs Set bitvector :bitvector Size = 102 bSize = 13
Bits on { }

----------------------------------------------------------------
check.c(l47:s44:k91:d0:s0)	 preHeaderLbl1($23) :
check.c(l47:s45:k95:d0:s0)		iTemp45 [k52 lr45:55 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_i_1_71} := 0x0 {const-char literal}

----------------------------------------------------------------
Basic Block preHeaderLbl7 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 11 : bbnum = 10 1st iCode = 46 , last iCode = 46
visited 0 : hasFcall = 0

defines bitVector :bitvector Size = 102 bSize = 13
Bits on { }

local defines bitVector :
pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 102 bSize = 13
Bits on { (2) (4) (7) (8) (10) (11) (17) (18) (19) (20) (21) (27) (28) (29) (35) (36) (37) (40) (41) (42) (43) (44) (52) (53) (54) (61) (62) (63) (95) }

outDefs Set bitvector :bitvector Size = 102 bSize = 13
Bits on { (2) (4) (7) (8) (10) (11) (17) (18) (19) (20) (21) (27) (28) (29) (35) (36) (37) (40) (41) (42) (43) (44) (52) (53) (54) (61) (62) (63) (95) }

usesDefs Set bitvector :bitvector Size = 102 bSize = 13
Bits on { }

----------------------------------------------------------------
check.c(l47:s46:k101:d0:s0)	 preHeaderLbl7($39) :

----------------------------------------------------------------
Basic Block _forcond_0 : loop Depth = 1 noPath = 0 , lastinLoop = 0
depth 1st num 12 : bbnum = 11 1st iCode = 47 , last iCode = 49
visited 0 : hasFcall = 0

defines bitVector :bitvector Size = 102 bSize = 13
Bits on { (67) }

local defines bitVector :bitvector Size = 102 bSize = 13
Bits on { (67) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 102 bSize = 13
Bits on { (2) (4) (7) (8) (10) (11) (17) (18) (19) (20) (21) (27) (28) (29) (35) (36) (37) (40) (41) (42) (43) (44) (52) (53) (54) (61) (62) (63) (67) (71) (72) (73) (74) (77) (95) }

outDefs Set bitvector :bitvector Size = 102 bSize = 13
Bits on { (2) (4) (7) (8) (10) (11) (17) (18) (19) (20) (21) (27) (28) (29) (35) (36) (37) (40) (41) (42) (43) (44) (52) (53) (54) (61) (62) (63) (67) (71) (72) (73) (74) (77) (95) }

usesDefs Set bitvector :bitvector Size = 102 bSize = 13
Bits on { (18) (67) (77) (95) }

----------------------------------------------------------------
check.c(l47:s47:k66:d1:s0)	 _forcond_0($14) :
check.c(l47:s48:k67:d1:s0)		iTemp40 [k47 lr48:49 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp45 [k52 lr45:55 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_i_1_71} < iTemp1 [k4 lr14:55 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_size_1_71}
check.c(l47:s49:k68:d1:s0)		if iTemp40 [k47 lr48:49 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} == 0 goto _forbreak_0($10)

----------------------------------------------------------------
Basic Block _eBBlock13 : loop Depth = 1 noPath = 0 , lastinLoop = 0
depth 1st num 13 : bbnum = 12 1st iCode = 50 , last iCode = 55
visited 0 : hasFcall = 0

defines bitVector :bitvector Size = 102 bSize = 13
Bits on { (71) (72) (73) (74) (77) }

local defines bitVector :bitvector Size = 102 bSize = 13
Bits on { (71) (72) (73) (74) (77) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 102 bSize = 13
Bits on { (2) (4) (7) (8) (10) (11) (17) (18) (19) (20) (21) (27) (28) (29) (35) (36) (37) (40) (41) (42) (43) (44) (52) (53) (54) (61) (62) (63) (67) (71) (72) (73) (74) (77) (95) }

outDefs Set bitvector :bitvector Size = 102 bSize = 13
Bits on { (2) (7) (8) (10) (11) (17) (18) (19) (20) (21) (27) (28) (29) (35) (36) (37) (40) (41) (42) (43) (44) (52) (53) (54) (61) (62) (63) (67) (71) (72) (73) (74) (77) }

usesDefs Set bitvector :bitvector Size = 102 bSize = 13
Bits on { (2) (4) (71) (72) (73) (74) (77) (95) }

----------------------------------------------------------------
check.c(l48:s50:k71:d1:s0)		iTemp41 [k48 lr50:51 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed} = iTemp0 [k2 lr3:55 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_crc_comando_1_70} + iTemp45 [k52 lr45:55 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_i_1_71}
check.c(l48:s51:k72:d1:s0)		iTemp42 [k49 lr51:52 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register} = @[iTemp41 [k48 lr50:51 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed} + 0x0 {const-unsigned-char literal}]
check.c(l48:s52:k73:d1:s0)		iTemp43 [k50 lr52:53 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp2 [k6 lr4:57 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_crc_calc_1_71} ^ iTemp42 [k49 lr51:52 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}
check.c(l48:s53:k74:d1:s0)		iTemp2 [k6 lr4:57 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_crc_calc_1_71} := iTemp43 [k50 lr52:53 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}
check.c(l47:s54:k77:d1:s0)		iTemp45 [k52 lr45:55 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_i_1_71} = iTemp45 [k52 lr45:55 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_i_1_71} + 0x1 {const-unsigned-char literal}
check.c(l47:s55:k79:d1:s0)		 goto _forcond_0($14)

----------------------------------------------------------------
Basic Block _forbreak_0 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 14 : bbnum = 13 1st iCode = 56 , last iCode = 58
visited 0 : hasFcall = 0

defines bitVector :bitvector Size = 102 bSize = 13
Bits on { (81) }

local defines bitVector :bitvector Size = 102 bSize = 13
Bits on { (81) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 102 bSize = 13
Bits on { (2) (4) (7) (8) (10) (11) (17) (18) (19) (20) (21) (27) (28) (29) (35) (36) (37) (40) (41) (42) (43) (44) (52) (53) (54) (61) (62) (63) (67) (71) (72) (73) (74) (77) (95) }

outDefs Set bitvector :bitvector Size = 102 bSize = 13
Bits on { (2) (4) (7) (8) (10) (11) (17) (18) (19) (20) (21) (27) (28) (29) (35) (36) (37) (40) (41) (42) (43) (44) (52) (53) (54) (61) (62) (63) (67) (71) (72) (73) (74) (77) (81) (95) }

usesDefs Set bitvector :bitvector Size = 102 bSize = 13
Bits on { (4) (54) (63) (74) (81) }

----------------------------------------------------------------
check.c(l47:s56:k80:d0:s0)	 _forbreak_0($10) :
check.c(l64:s57:k81:d0:s0)		iTemp46 [k53 lr57:58 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp2 [k6 lr4:57 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_crc_calc_1_71} == iTemp3 [k8 lr22:57 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_crc_env_1_71}
check.c(l64:s58:k82:d0:s0)		if iTemp46 [k53 lr57:58 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} == 0 goto _iffalse_2($12)

----------------------------------------------------------------
Basic Block _eBBlock14 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 15 : bbnum = 14 1st iCode = 59 , last iCode = 59
visited 1 : hasFcall = 0

defines bitVector :bitvector Size = 102 bSize = 13
Bits on { }

local defines bitVector :
pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 102 bSize = 13
Bits on { (2) (4) (7) (8) (10) (11) (17) (18) (19) (20) (21) (27) (28) (29) (35) (36) (37) (40) (41) (42) (43) (44) (52) (53) (54) (61) (62) (63) (67) (71) (72) (73) (74) (77) (81) (95) }

outDefs Set bitvector :bitvector Size = 102 bSize = 13
Bits on { (2) (4) (7) (8) (10) (11) (17) (18) (19) (20) (21) (27) (28) (29) (35) (36) (37) (40) (41) (42) (43) (44) (52) (53) (54) (61) (62) (63) (67) (71) (72) (73) (74) (77) (81) (95) }

usesDefs Set bitvector :bitvector Size = 102 bSize = 13
Bits on { }

----------------------------------------------------------------
check.c(l65:s59:k85:d0:s0)		ret 0x1 {const-unsigned-char literal}

----------------------------------------------------------------
Basic Block _iffalse_2 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 16 : bbnum = 15 1st iCode = 60 , last iCode = 61
visited 1 : hasFcall = 0

defines bitVector :bitvector Size = 102 bSize = 13
Bits on { }

local defines bitVector :
pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 102 bSize = 13
Bits on { (2) (4) (7) (8) (10) (11) (17) (18) (19) (20) (21) (27) (28) (29) (35) (36) (37) (40) (41) (42) (43) (44) (52) (53) (54) (61) (62) (63) (67) (71) (72) (73) (74) (77) (81) (95) }

outDefs Set bitvector :bitvector Size = 102 bSize = 13
Bits on { (2) (4) (7) (8) (10) (11) (17) (18) (19) (20) (21) (27) (28) (29) (35) (36) (37) (40) (41) (42) (43) (44) (52) (53) (54) (61) (62) (63) (67) (71) (72) (73) (74) (77) (81) (95) }

usesDefs Set bitvector :bitvector Size = 102 bSize = 13
Bits on { }

----------------------------------------------------------------
check.c(l65:s60:k86:d0:s0)	 _iffalse_2($12) :
check.c(l67:s61:k87:d0:s0)		ret 0x0 {const-char literal}

----------------------------------------------------------------
Basic Block _return : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 17 : bbnum = 16 1st iCode = 62 , last iCode = 63
visited 1 : hasFcall = 0

defines bitVector :bitvector Size = 102 bSize = 13
Bits on { }

local defines bitVector :
pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 102 bSize = 13
Bits on { (2) (4) (7) (8) (10) (11) (17) (18) (19) (20) (21) (27) (28) (29) (35) (36) (37) (40) (41) (42) (43) (44) (52) (53) (54) (61) (62) (63) (67) (71) (72) (73) (74) (77) (81) (95) }

outDefs Set bitvector :bitvector Size = 102 bSize = 13
Bits on { (2) (4) (7) (8) (10) (11) (17) (18) (19) (20) (21) (27) (28) (29) (35) (36) (37) (40) (41) (42) (43) (44) (52) (53) (54) (61) (62) (63) (67) (71) (72) (73) (74) (77) (81) (95) }

usesDefs Set bitvector :bitvector Size = 102 bSize = 13
Bits on { }

----------------------------------------------------------------
check.c(l67:s62:k88:d0:s0)	 _return($16) :
check.c(l67:s63:k89:d0:s0)		eproc _check_crc [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char function ( char generic* fixed) fixed}
pic16_freeAllRegs
pic16_packRegisters
3007	packRegsForAssign
ic->op = =
  result:iTemp2 [k6 lr4:57 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_crc_calc_1_71}
  left:
  right:0x5 {const-unsigned-char literal}
 3015 - actuall processing
  3027 - not packing - right is not temp
pic16_allocDirReg BAD, op is NULL
  result:iTemp2 [k6 lr4:57 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_crc_calc_1_71}
  left:
  right:0x5 {const-unsigned-char literal}
3007	packRegsForAssign
ic->op = =
  result:iTemp5 [k11 lr5:13 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_size_1_71}
  left:
  right:0x0 {const-char literal}
 3015 - actuall processing
  3027 - not packing - right is not temp
pic16_allocDirReg BAD, op is NULL
  result:iTemp5 [k11 lr5:13 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_size_1_71}
  left:
  right:0x0 {const-char literal}
 4213
x  left:_check_crc [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char function ( char generic* fixed) fixed}
    c   Symbol type: unsigned-char function ( char generic* fixed) fixed
 4213
x  left:_check_crc [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char function ( char generic* fixed) fixed}
    c   Symbol type: unsigned-char function ( char generic* fixed) fixed
  result:iTemp0 [k2 lr3:55 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_crc_comando_1_70}
          Symbol type: char generic* fixed
  4191 - pointer reg req = 0
 4213
packForReceive
  result:iTemp0 [k2 lr3:55 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_crc_comando_1_70}
  left:_check_crc [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char function ( char generic* fixed) fixed}
  right:
  hey we can remove this unnecessary assign
  result:iTemp2 [k6 lr4:57 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_crc_calc_1_71}
          Symbol type: char fixed
  4191 - pointer reg req = 0
 4213
  result:iTemp5 [k11 lr5:13 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_size_1_71}
          Symbol type: char fixed
  4191 - pointer reg req = 0
 4213
pic16_packRegisters
 4213
pic16_packRegisters
3007	packRegsForAssign
ic->op = =
  result:iTemp4 [k10 lr8:10 so:0]{ ia0 a2p0 re0 rm0 nos1 ru0 dp0}{char fixed}
  left:
  right:iTemp5 [k11 lr5:13 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_size_1_71}
 3015 - actuall processing
  3036 - not packing - right side fails 
  result:iTemp4 [k10 lr8:10 so:0]{ ia0 a2p0 re0 rm0 nos1 ru0 dp0}{char fixed}
  left:
  right:iTemp5 [k11 lr5:13 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_size_1_71}
 4213
  right:iTemp5 [k11 lr5:13 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_size_1_71}
         Symbol type: char fixed
  result:iTemp4 [k10 lr8:10 so:0]{ ia0 a2p0 re0 rm0 nos1 ru0 dp0}{char fixed}
          Symbol type: char fixed
  4191 - pointer reg req = 0
 4213
x  left:iTemp5 [k11 lr5:13 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_size_1_71}
    c   Symbol type: char fixed
  result:iTemp5 [k11 lr5:13 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_size_1_71}
          Symbol type: char fixed
  4191 - pointer reg req = 0
 4213
x  left:iTemp0 [k2 lr3:55 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_crc_comando_1_70}
    is a ptr
    c   Symbol type: char generic* fixed
  right:iTemp4 [k10 lr8:10 so:0]{ ia0 a2p0 re0 rm0 nos1 ru0 dp0}{char fixed}
         Symbol type: char fixed
  result:iTemp6 [k12 lr10:11 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}
          Symbol type: char generic* fixed
  4191 - pointer reg req = 0
 4213
x  left:iTemp6 [k12 lr10:11 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}
    is a ptr
    c   Symbol type: char generic* fixed
  result:iTemp7 [k13 lr11:12 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}
          Symbol type: char register
  marking as a pointer (get) =>  left:iTemp6 [k12 lr10:11 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp7 [k13 lr11:12 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}
    c   Symbol type: char register
  4191 - pointer reg req = 0
 4213
pic16_packRegisters
3007	packRegsForAssign
ic->op = =
  result:iTemp1 [k4 lr14:55 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_size_1_71}
  left:
  right:iTemp8 [k14 lr13:14 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}{ sir@ _check_crc_size_1_71}
 3015 - actuall processing
3072	Searching for iTempNN
  3097 - dic result key == ic right key -- pointer set=N
  packing. removing iTemp8
  replacing with iTemp8
  3199
  result:iTemp1 [k4 lr13:55 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_size_1_71}
  left:
  right:iTemp8 [k14 lr13:14 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}{ sir@ _check_crc_size_1_71}
x  left:iTemp5 [k11 lr5:13 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_size_1_71}
    c   Symbol type: char fixed
  result:iTemp1 [k4 lr13:55 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_size_1_71}
          Symbol type: char fixed
  4191 - pointer reg req = 0
 4213
x  left:iTemp0 [k2 lr3:55 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_crc_comando_1_70}
    is a ptr
    c   Symbol type: char generic* fixed
  right:iTemp1 [k4 lr13:55 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_size_1_71}
         Symbol type: char fixed
  result:iTemp9 [k15 lr15:16 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}
          Symbol type: char generic* fixed
  4191 - pointer reg req = 0
 4213
x  left:iTemp9 [k15 lr15:16 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}
    is a ptr
    c   Symbol type: char generic* fixed
  result:iTemp10 [k16 lr16:25 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}
          Symbol type: char register
  marking as a pointer (get) =>  left:iTemp9 [k15 lr15:16 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp10 [k16 lr16:25 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}
    c   Symbol type: char register
  result:iTemp11 [k17 lr17:18 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}
          Symbol type: char fixed
  4191 - pointer reg req = 0
  4208
x  left:iTemp11 [k17 lr17:18 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}
    c   Symbol type: char fixed
  4191 - pointer reg req = 0
 4213
pic16_packRegisters
3007	packRegsForAssign
ic->op = =
  result:iTemp16 [k22 lr21:22 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}{ sir@ _check_crc_crc_env_1_71}
  left:
  right:iTemp15 [k21 lr20:21 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}
 3015 - actuall processing
3072	Searching for iTempNN
  3097 - dic result key == ic right key -- pointer set=N
  packing. removing iTemp15
  replacing with iTemp15
  3199
  result:iTemp16 [k22 lr20:22 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}{ sir@ _check_crc_crc_env_1_71}
  left:
  right:iTemp15 [k21 lr20:21 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}
3007	packRegsForAssign
ic->op = =
  result:iTemp3 [k8 lr22:57 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_crc_env_1_71}
  left:
  right:iTemp16 [k22 lr20:22 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}{ sir@ _check_crc_crc_env_1_71}
 3015 - actuall processing
3072	Searching for iTempNN
  3097 - dic result key == ic right key -- pointer set=N
  packing. removing iTemp16
  replacing with iTemp16
  3199
  result:iTemp3 [k8 lr20:57 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_crc_env_1_71}
  left:
  right:iTemp16 [k22 lr20:22 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}{ sir@ _check_crc_crc_env_1_71}
x  left:iTemp10 [k16 lr16:25 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}
    c   Symbol type: char register
  result:iTemp14 [k20 lr19:20 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}
          Symbol type: char register
  4191 - pointer reg req = 0
 4213
x  left:iTemp14 [k20 lr19:20 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}
    c   Symbol type: char register
  result:iTemp3 [k8 lr20:57 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_crc_env_1_71}
          Symbol type: char fixed
  4191 - pointer reg req = 0
 4213
 4213
pic16_packRegisters
3007	packRegsForAssign
ic->op = =
  result:iTemp21 [k27 lr27:28 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}
  left:
  right:iTemp20 [k26 lr26:27 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}
 3015 - actuall processing
3072	Searching for iTempNN
  3097 - dic result key == ic right key -- pointer set=N
  packing. removing iTemp20
  replacing with iTemp20
  3199
  result:iTemp21 [k27 lr26:28 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}
  left:
  right:iTemp20 [k26 lr26:27 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}
3007	packRegsForAssign
ic->op = =
  result:iTemp3 [k8 lr20:57 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_crc_env_1_71}
  left:
  right:iTemp21 [k27 lr26:28 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}
 3015 - actuall processing
3072	Searching for iTempNN
  3097 - dic result key == ic right key -- pointer set=N
  packing. removing iTemp21
  replacing with iTemp21
  3199
  result:iTemp3 [k8 lr20:57 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_crc_env_1_71}
  left:
  right:iTemp21 [k27 lr26:28 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}
 4213
x  left:iTemp10 [k16 lr16:25 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}
    c   Symbol type: char register
  result:iTemp19 [k25 lr25:26 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}
          Symbol type: char register
  4191 - pointer reg req = 0
 4213
x  left:iTemp19 [k25 lr25:26 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}
    c   Symbol type: char register
  result:iTemp3 [k8 lr20:57 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_crc_env_1_71}
          Symbol type: char fixed
  4191 - pointer reg req = 0
 4213
pic16_packRegisters
 4213
  right:iTemp1 [k4 lr13:55 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_size_1_71}
         Symbol type: char fixed
  result:iTemp22 [k28 lr30:31 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}
          Symbol type: int fixed
  4191 - pointer reg req = 0
 4213
x  left:iTemp22 [k28 lr30:31 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}
    c   Symbol type: int fixed
  result:iTemp23 [k29 lr31:32 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}
          Symbol type: int register
  4191 - pointer reg req = 0
 4213
x  left:iTemp0 [k2 lr3:55 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_crc_comando_1_70}
    is a ptr
    c   Symbol type: char generic* fixed
  right:iTemp23 [k29 lr31:32 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}
         Symbol type: int register
  result:iTemp24 [k30 lr32:33 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}
          Symbol type: char generic* fixed
  4191 - pointer reg req = 0
 4213
x  left:iTemp24 [k30 lr32:33 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}
    is a ptr
    c   Symbol type: char generic* fixed
  result:iTemp25 [k31 lr33:41 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}
          Symbol type: char register
  marking as a pointer (get) =>  left:iTemp24 [k30 lr32:33 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp25 [k31 lr33:41 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}
    c   Symbol type: char register
  result:iTemp26 [k32 lr34:35 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}
          Symbol type: char fixed
  4191 - pointer reg req = 0
  4208
x  left:iTemp26 [k32 lr34:35 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}
    c   Symbol type: char fixed
  4191 - pointer reg req = 0
 4213
pic16_packRegisters
3007	packRegsForAssign
ic->op = =
  result:iTemp3 [k8 lr20:57 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_crc_env_1_71}
  left:
  right:iTemp32 [k38 lr37:38 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}
 3015 - actuall processing
3072	Searching for iTempNN
  3097 - dic result key == ic right key -- pointer set=N
  packing. removing iTemp32
  replacing with iTemp32
  3199
  result:iTemp3 [k8 lr20:57 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_crc_env_1_71}
  left:
  right:iTemp32 [k38 lr37:38 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}
x  left:iTemp25 [k31 lr33:41 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}
    c   Symbol type: char register
  result:iTemp31 [k37 lr36:37 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}
          Symbol type: char register
  4191 - pointer reg req = 0
 4213
x  left:iTemp3 [k8 lr20:57 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_crc_env_1_71}
    c   Symbol type: char fixed
  right:iTemp31 [k37 lr36:37 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}
         Symbol type: char register
  result:iTemp3 [k8 lr20:57 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_crc_env_1_71}
          Symbol type: char fixed
  4191 - pointer reg req = 0
 4213
 4213
pic16_packRegisters
3007	packRegsForAssign
ic->op = =
  result:iTemp3 [k8 lr20:57 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_crc_env_1_71}
  left:
  right:iTemp38 [k44 lr42:43 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}
 3015 - actuall processing
3072	Searching for iTempNN
  3097 - dic result key == ic right key -- pointer set=N
  packing. removing iTemp38
  replacing with iTemp38
  3199
  result:iTemp3 [k8 lr20:57 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_crc_env_1_71}
  left:
  right:iTemp38 [k44 lr42:43 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}
 4213
x  left:iTemp25 [k31 lr33:41 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}
    c   Symbol type: char register
  result:iTemp37 [k43 lr41:42 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}
          Symbol type: char register
  4191 - pointer reg req = 0
 4213
x  left:iTemp3 [k8 lr20:57 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_crc_env_1_71}
    c   Symbol type: char fixed
  right:iTemp37 [k43 lr41:42 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}
         Symbol type: char register
  result:iTemp3 [k8 lr20:57 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_crc_env_1_71}
          Symbol type: char fixed
  4191 - pointer reg req = 0
 4213
pic16_packRegisters
3007	packRegsForAssign
ic->op = =
  result:iTemp45 [k52 lr45:55 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_i_1_71}
  left:
  right:0x0 {const-char literal}
 3015 - actuall processing
  3027 - not packing - right is not temp
pic16_allocDirReg BAD, op is NULL
  result:iTemp45 [k52 lr45:55 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_i_1_71}
  left:
  right:0x0 {const-char literal}
 4213
  result:iTemp45 [k52 lr45:55 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_i_1_71}
          Symbol type: char fixed
  4191 - pointer reg req = 0
 4213
pic16_packRegisters
 4213
pic16_packRegisters
 4213
x  left:iTemp45 [k52 lr45:55 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_i_1_71}
    c   Symbol type: char fixed
  right:iTemp1 [k4 lr13:55 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_size_1_71}
         Symbol type: char fixed
  result:iTemp40 [k47 lr48:49 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}
          Symbol type: char fixed
  4191 - pointer reg req = 0
  4208
x  left:iTemp40 [k47 lr48:49 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}
    c   Symbol type: char fixed
  4191 - pointer reg req = 0
 4213
pic16_packRegisters
3007	packRegsForAssign
ic->op = =
  result:iTemp2 [k6 lr4:57 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_crc_calc_1_71}
  left:
  right:iTemp43 [k50 lr52:53 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}
 3015 - actuall processing
3072	Searching for iTempNN
  3097 - dic result key == ic right key -- pointer set=N
  packing. removing iTemp43
  replacing with iTemp43
  3199
  result:iTemp2 [k6 lr4:57 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_crc_calc_1_71}
  left:
  right:iTemp43 [k50 lr52:53 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}
x  left:iTemp0 [k2 lr3:55 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_crc_comando_1_70}
    is a ptr
    c   Symbol type: char generic* fixed
  right:iTemp45 [k52 lr45:55 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_i_1_71}
         Symbol type: char fixed
  result:iTemp41 [k48 lr50:51 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}
          Symbol type: char generic* fixed
  4191 - pointer reg req = 0
 4213
x  left:iTemp41 [k48 lr50:51 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}
    is a ptr
    c   Symbol type: char generic* fixed
  result:iTemp42 [k49 lr51:52 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}
          Symbol type: char register
  marking as a pointer (get) =>  left:iTemp41 [k48 lr50:51 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp2 [k6 lr4:57 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_crc_calc_1_71}
    c   Symbol type: char fixed
  right:iTemp42 [k49 lr51:52 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}
         Symbol type: char register
  result:iTemp2 [k6 lr4:57 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_crc_calc_1_71}
          Symbol type: char fixed
  4191 - pointer reg req = 0
isBitwiseOptimizable
 4213
x  left:iTemp45 [k52 lr45:55 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_i_1_71}
    c   Symbol type: char fixed
  result:iTemp45 [k52 lr45:55 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_i_1_71}
          Symbol type: char fixed
  4191 - pointer reg req = 0
 4213
 4213
pic16_packRegisters
 4213
x  left:iTemp2 [k6 lr4:57 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_crc_calc_1_71}
    c   Symbol type: char fixed
  right:iTemp3 [k8 lr20:57 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_crc_env_1_71}
         Symbol type: char fixed
  result:iTemp46 [k53 lr57:58 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}
          Symbol type: char fixed
  4191 - pointer reg req = 0
  4208
x  left:iTemp46 [k53 lr57:58 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}
    c   Symbol type: char fixed
  4191 - pointer reg req = 0
 4213
pic16_packRegisters
  4191 - pointer reg req = 0
 4213
pic16_packRegisters
 4213
  4191 - pointer reg req = 0
 4213
pic16_packRegisters
 4213
x  left:_check_crc [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char function ( char generic* fixed) fixed}
    c   Symbol type: unsigned-char function ( char generic* fixed) fixed
 4213
regTypeNum
  2754 - iTemp0
  2765 - itemp register
  reg name iTemp0,  reg type REG_GPR
  2754 - iTemp1
  2765 - itemp register
  reg name iTemp1,  reg type REG_GPR
  2754 - iTemp2
  2765 - itemp register
  reg name iTemp2,  reg type REG_GPR
  2754 - iTemp3
  2765 - itemp register
  reg name iTemp3,  reg type REG_GPR
  2754 - iTemp4
  2765 - itemp register
  reg name iTemp4,  reg type REG_GPR
  2754 - iTemp5
  2765 - itemp register
  reg name iTemp5,  reg type REG_GPR
  2754 - iTemp6
  2765 - itemp register
  reg name iTemp6,  reg type REG_GPR
  2754 - iTemp7
  2765 - itemp register
  reg name iTemp7,  reg type REG_GPR
  2754 - iTemp9
  2765 - itemp register
  reg name iTemp9,  reg type REG_GPR
  2754 - iTemp10
  2765 - itemp register
  reg name iTemp10,  reg type REG_GPR
  2754 - iTemp11
  2765 - itemp register
  2754 - iTemp14
  2765 - itemp register
  reg name iTemp14,  reg type REG_GPR
  2754 - iTemp19
  2765 - itemp register
  reg name iTemp19,  reg type REG_GPR
  2754 - iTemp22
  2765 - itemp register
  reg name iTemp22,  reg type REG_GPR
  2754 - iTemp23
  2765 - itemp register
  reg name iTemp23,  reg type REG_GPR
  2754 - iTemp24
  2765 - itemp register
  reg name iTemp24,  reg type REG_GPR
  2754 - iTemp25
  2765 - itemp register
  reg name iTemp25,  reg type REG_GPR
  2754 - iTemp26
  2765 - itemp register
  2754 - iTemp31
  2765 - itemp register
  reg name iTemp31,  reg type REG_GPR
  2754 - iTemp37
  2765 - itemp register
  reg name iTemp37,  reg type REG_GPR
  2754 - iTemp40
  2765 - itemp register
  2754 - iTemp41
  2765 - itemp register
  reg name iTemp41,  reg type REG_GPR
  2754 - iTemp42
  2765 - itemp register
  reg name iTemp42,  reg type REG_GPR
  2754 - iTemp45
  2765 - itemp register
  reg name iTemp45,  reg type REG_GPR
  2754 - iTemp46
  2765 - itemp register
serialRegAssign
  op: LABEL
deassignLRs
  op: FUNCTION
deassignLRs
  op: RECEIVE
deassignLRs
willCauseSpill
computeSpillable
When I get clever, I'll optimize the receive logic
bitvector Size = 102 bSize = 13
Bits on { (2) }
getRegGpr
allocReg of type REG_GPR for register rIdx: 0 (0x0)
getRegGpr
allocReg of type REG_GPR for register rIdx: 1 (0x1)
getRegGpr
allocReg of type REG_GPR for register rIdx: 2 (0x2)
  2457 - 
  2471 - 
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
bitvector Size = 102 bSize = 13
Bits on { (2) (6) }
getRegGpr
allocReg of type REG_GPR for register rIdx: 3 (0x3)
  2457 - 
  2471 - 
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
bitvector Size = 102 bSize = 13
Bits on { (2) (6) (11) }
getRegGpr
allocReg of type REG_GPR for register rIdx: 4 (0x4)
  2457 - 
  2471 - 
  op: LABEL
deassignLRs
  op: LABEL
deassignLRs
  op: =
deassignLRs
willCauseSpill
computeSpillable
bitvector Size = 102 bSize = 13
Bits on { (2) (6) (10) (11) }
getRegGpr
allocReg of type REG_GPR for register rIdx: 5 (0x5)
  2457 - 
  2471 - 
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
deassignLRs
nfreeRegsType
getRegGpr
allocReg of type REG_GPR for register rIdx: 6 (0x6)
getRegGpr
allocReg of type REG_GPR for register rIdx: 7 (0x7)
  op: GET_VALUE_AT_ADDRESS
pic16_allocDirReg BAD, op is NULL
deassignLRs
nfreeRegsType
freeReg
freeReg
  op: IFX
pic16_allocDirReg BAD, op is NULL
deassignLRs
freeReg
  op: -
pic16_allocDirReg BAD, op is NULL
deassignLRs
freeReg
willCauseSpill
computeSpillable
bitvector Size = 102 bSize = 13
Bits on { (2) (4) (6) }
getRegGpr
allocReg of type REG_GPR for register rIdx: 7 (0x7)
  2457 - 
positionRegs
  2471 - 
  op: +
deassignLRs
willCauseSpill
computeSpillable
bitvector Size = 102 bSize = 13
Bits on { (2) (4) (6) (15) }
getRegGpr
allocReg of type REG_GPR for register rIdx: 7 (0x7)
getRegGpr
allocReg of type REG_GPR for register rIdx: 7 (0x7)
getRegGpr
allocReg of type REG_GPR for register rIdx: 7 (0x7)
  2457 - 
positionRegs
positionRegs
  2471 - 
  op: GET_VALUE_AT_ADDRESS
pic16_allocDirReg BAD, op is NULL
deassignLRs
freeReg
freeReg
freeReg
willCauseSpill
computeSpillable
bitvector Size = 102 bSize = 13
Bits on { (2) (4) (6) (16) }
getRegGpr
allocReg of type REG_GPR for register rIdx: 7 (0x7)
  2457 - 
positionRegs
  2471 - 
  op: <
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: IFX
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: -
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
bitvector Size = 102 bSize = 13
Bits on { (2) (4) (6) (16) (20) }
getRegGpr
allocReg of type REG_GPR for register rIdx: 7 (0x7)
  2457 - 
positionRegs
  2471 - 
  op: *
pic16_allocDirReg BAD, op is NULL
deassignLRs
freeReg
willCauseSpill
computeSpillable
bitvector Size = 102 bSize = 13
Bits on { (2) (4) (6) (8) (16) }
getRegGpr
allocReg of type REG_GPR for register rIdx: 7 (0x7)
  2457 - 
positionRegs
  2471 - 
  op: GOTO
deassignLRs
  op: LABEL
deassignLRs
  op: -
pic16_allocDirReg BAD, op is NULL
deassignLRs
nfreeRegsType
  op: *
pic16_allocDirReg BAD, op is NULL
deassignLRs
freeReg
  op: LABEL
deassignLRs
  op: CAST
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
bitvector Size = 102 bSize = 13
Bits on { (2) (4) (6) (8) (28) }
getRegGpr
allocReg of type REG_GPR for register rIdx: 7 (0x7)
getRegGpr
allocReg of type REG_GPR for register rIdx: 7 (0x7)
  2457 - 
positionRegs
  2471 - 
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
nfreeRegsType
  op: +
deassignLRs
nfreeRegsType
getRegGpr
allocReg of type REG_GPR for register rIdx: 8 (0x8)
  op: GET_VALUE_AT_ADDRESS
pic16_allocDirReg BAD, op is NULL
deassignLRs
freeReg
freeReg
freeReg
willCauseSpill
computeSpillable
bitvector Size = 102 bSize = 13
Bits on { (2) (4) (6) (8) (31) }
getRegGpr
allocReg of type REG_GPR for register rIdx: 8 (0x8)
  2457 - 
positionRegs
  2471 - 
  op: <
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: IFX
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: -
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
bitvector Size = 102 bSize = 13
Bits on { (2) (4) (6) (8) (31) (37) }
getRegGpr
allocReg of type REG_GPR for register rIdx: 8 (0x8)
  2457 - 
positionRegs
  2471 - 
  op: +
deassignLRs
freeReg
  op: GOTO
deassignLRs
  op: LABEL
deassignLRs
  op: -
pic16_allocDirReg BAD, op is NULL
deassignLRs
nfreeRegsType
  op: +
deassignLRs
freeReg
  op: LABEL
deassignLRs
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
bitvector Size = 102 bSize = 13
Bits on { (2) (4) (6) (8) (52) }
getRegGpr
allocReg of type REG_GPR for register rIdx: 8 (0x8)
  2457 - 
  2471 - 
  op: LABEL
deassignLRs
  op: LABEL
deassignLRs
  op: <
deassignLRs
  op: IFX
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
deassignLRs
willCauseSpill
computeSpillable
bitvector Size = 102 bSize = 13
Bits on { (2) (4) (6) (8) (48) (52) }
getRegGpr
allocReg of type REG_GPR for register rIdx: 8 (0x8)
getRegGpr
allocReg of type REG_GPR for register rIdx: 8 (0x8)
getRegGpr
allocReg of type REG_GPR for register rIdx: 9 (0x9)
  2457 - 
positionRegs
positionRegs
  2471 - 
  op: GET_VALUE_AT_ADDRESS
pic16_allocDirReg BAD, op is NULL
deassignLRs
nfreeRegsType
freeReg
freeReg
  op: ^
deassignLRs
freeReg
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: GOTO
deassignLRs
freeReg
freeReg
freeReg
freeReg
freeReg
  op: LABEL
deassignLRs
  op: EQ_OP
deassignLRs
freeReg
freeReg
  op: IFX
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: RETURN
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: LABEL
deassignLRs
  op: RETURN
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: LABEL
deassignLRs
  op: ENDFUNCTION
deassignLRs
createRegMask
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
ebbs after optimizing:

----------------------------------------------------------------
Basic Block _entry : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 1 : bbnum = 0 1st iCode = 1 , last iCode = 5
visited 0 : hasFcall = 0

defines bitVector :bitvector Size = 102 bSize = 13
Bits on { (2) (4) (92) }

local defines bitVector :bitvector Size = 102 bSize = 13
Bits on { (2) (4) (92) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :
outDefs Set bitvector :bitvector Size = 102 bSize = 13
Bits on { (2) (4) (92) }

usesDefs Set bitvector :bitvector Size = 102 bSize = 13
Bits on { (2) }

----------------------------------------------------------------
check.c(l19:s1:k0:d0:s0)	 _entry($17) :
check.c(l19:s2:k1:d0:s0)		proc _check_crc [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char function ( char generic* fixed) fixed}
check.c(l19:s3:k2:d0:s0)	iTemp0 [k2 lr3:47 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_crc_comando_1_70}[r0x00 r0x01 r0x02 ] = recv _check_crc [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char function ( char generic* fixed) fixed}
check.c(l25:s4:k4:d0:s0)		iTemp2 [k6 lr4:49 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_crc_calc_1_71}[r0x03 ] := 0x5 {const-unsigned-char literal}
check.c(l34:s5:k92:d0:s0)		iTemp5 [k11 lr5:13 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_size_1_71}[r0x04 ] := 0x0 {const-char literal}
check.c(l34:s7:k6:d1:s0)	 _whilecontinue_0($1) :
check.c(l34:s8:k7:d1:s0)		iTemp4 [k10 lr8:10 so:0]{ ia0 a2p0 re0 rm0 nos1 ru0 dp0}{char fixed}[r0x05 ] := iTemp5 [k11 lr5:13 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_size_1_71}[r0x04 ]
check.c(l34:s9:k8:d1:s0)		iTemp5 [k11 lr5:13 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_size_1_71}[r0x04 ] = iTemp5 [k11 lr5:13 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_size_1_71}[r0x04 ] + 0x1 {const-unsigned-char literal}
check.c(l34:s10:k10:d1:s0)		iTemp6 [k12 lr10:11 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x05 r0x06 r0x07 ] = iTemp0 [k2 lr3:47 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_crc_comando_1_70}[r0x00 r0x01 r0x02 ] + iTemp4 [k10 lr8:10 so:0]{ ia0 a2p0 re0 rm0 nos1 ru0 dp0}{char fixed}[r0x05 ]
check.c(l34:s11:k11:d1:s0)		iTemp7 [k13 lr11:12 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = @[iTemp6 [k12 lr10:11 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x05 r0x06 r0x07 ] + 0x0 {const-unsigned-char literal}]
check.c(l34:s12:k12:d1:s0)		if iTemp7 [k13 lr11:12 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] != 0 goto _whilecontinue_0($1)
check.c(l36:s13:k17:d0:s0)		iTemp1 [k4 lr13:47 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_size_1_71}[r0x04 ] = iTemp5 [k11 lr5:13 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_size_1_71}[r0x04 ] - 0x3 {char literal}
check.c(l37:s14:k19:d0:s0)		iTemp9 [k15 lr14:15 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x05 r0x06 r0x07 ] = iTemp0 [k2 lr3:47 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_crc_comando_1_70}[r0x00 r0x01 r0x02 ] + iTemp1 [k4 lr13:47 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_size_1_71}[r0x04 ]
check.c(l37:s15:k20:d0:s0)		iTemp10 [k16 lr15:22 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = @[iTemp9 [k15 lr14:15 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x05 r0x06 r0x07 ] + 0x0 {const-unsigned-char literal}]
check.c(l37:s16:k21:d0:s0)		iTemp11 [k17 lr16:17 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp10 [k16 lr15:22 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] < 0x41 {const-char literal}
check.c(l37:s17:k22:d0:s0)		if iTemp11 [k17 lr16:17 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _iffalse_0($5)
check.c(l38:s18:k27:d0:s0)		iTemp14 [k20 lr18:19 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = iTemp10 [k16 lr15:22 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] - 0x37 {char literal}
check.c(l38:s19:k28:d0:s0)		iTemp3 [k8 lr19:49 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_crc_env_1_71}[r0x06 ] = iTemp14 [k20 lr18:19 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] * 0x10 {const-unsigned-char literal}
check.c(l38:s20:k31:d0:s0)		 goto _ifend_0($6)
check.c(l38:s21:k32:d0:s0)	 _iffalse_0($5) :
check.c(l40:s22:k35:d0:s0)		iTemp19 [k25 lr22:23 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = iTemp10 [k16 lr15:22 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] - 0x30 {char literal}
check.c(l40:s23:k36:d0:s0)		iTemp3 [k8 lr19:49 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_crc_env_1_71}[r0x06 ] = iTemp19 [k25 lr22:23 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] * 0x10 {const-unsigned-char literal}
check.c(l40:s24:k39:d0:s0)	 _ifend_0($6) :
check.c(l42:s25:k40:d0:s0)		iTemp22 [k28 lr25:26 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x05 r0x07 ] = (int fixed)iTemp1 [k4 lr13:47 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_size_1_71}[r0x04 ]
check.c(l42:s26:k41:d0:s0)		iTemp23 [k29 lr26:27 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x05 r0x07 ] = iTemp22 [k28 lr25:26 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x05 r0x07 ] + 0x1 {int literal}
check.c(l42:s27:k42:d0:s0)		iTemp24 [k30 lr27:28 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x05 r0x07 r0x08 ] = iTemp0 [k2 lr3:47 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_crc_comando_1_70}[r0x00 r0x01 r0x02 ] + iTemp23 [k29 lr26:27 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x05 r0x07 ]
check.c(l42:s28:k43:d0:s0)		iTemp25 [k31 lr28:35 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = @[iTemp24 [k30 lr27:28 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x05 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l42:s29:k44:d0:s0)		iTemp26 [k32 lr29:30 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp25 [k31 lr28:35 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] < 0x41 {const-char literal}
check.c(l42:s30:k45:d0:s0)		if iTemp26 [k32 lr29:30 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _iffalse_1($8)
check.c(l43:s31:k52:d0:s0)		iTemp31 [k37 lr31:32 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x07 ] = iTemp25 [k31 lr28:35 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] - 0x37 {char literal}
check.c(l43:s32:k53:d0:s0)		iTemp3 [k8 lr19:49 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_crc_env_1_71}[r0x06 ] = iTemp3 [k8 lr19:49 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_crc_env_1_71}[r0x06 ] + iTemp31 [k37 lr31:32 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x07 ]
check.c(l43:s33:k55:d0:s0)		 goto preHeaderLbl1($23)
check.c(l43:s34:k56:d0:s0)	 _iffalse_1($8) :
check.c(l45:s35:k61:d0:s0)		iTemp37 [k43 lr35:36 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = iTemp25 [k31 lr28:35 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] - 0x30 {char literal}
check.c(l45:s36:k62:d0:s0)		iTemp3 [k8 lr19:49 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_crc_env_1_71}[r0x06 ] = iTemp3 [k8 lr19:49 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_crc_env_1_71}[r0x06 ] + iTemp37 [k43 lr35:36 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ]
check.c(l47:s37:k91:d0:s0)	 preHeaderLbl1($23) :
check.c(l47:s38:k95:d0:s0)		iTemp45 [k52 lr38:47 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_i_1_71}[r0x05 ] := 0x0 {const-char literal}
check.c(l47:s40:k66:d1:s0)	 _forcond_0($14) :
check.c(l47:s41:k67:d1:s0)		iTemp40 [k47 lr41:42 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp45 [k52 lr38:47 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_i_1_71}[r0x05 ] < iTemp1 [k4 lr13:47 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_size_1_71}[r0x04 ]
check.c(l47:s42:k68:d1:s0)		if iTemp40 [k47 lr41:42 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} == 0 goto _forbreak_0($10)
check.c(l48:s43:k71:d1:s0)		iTemp41 [k48 lr43:44 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x07 r0x08 r0x09 ] = iTemp0 [k2 lr3:47 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_crc_comando_1_70}[r0x00 r0x01 r0x02 ] + iTemp45 [k52 lr38:47 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_i_1_71}[r0x05 ]
check.c(l48:s44:k72:d1:s0)		iTemp42 [k49 lr44:45 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x07 ] = @[iTemp41 [k48 lr43:44 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x07 r0x08 r0x09 ] + 0x0 {const-unsigned-char literal}]
check.c(l48:s45:k73:d1:s0)		iTemp2 [k6 lr4:49 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_crc_calc_1_71}[r0x03 ] = iTemp2 [k6 lr4:49 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_crc_calc_1_71}[r0x03 ] ^ iTemp42 [k49 lr44:45 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x07 ]
check.c(l47:s46:k77:d1:s0)		iTemp45 [k52 lr38:47 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_i_1_71}[r0x05 ] = iTemp45 [k52 lr38:47 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_i_1_71}[r0x05 ] + 0x1 {const-unsigned-char literal}
check.c(l47:s47:k79:d1:s0)		 goto _forcond_0($14)
check.c(l47:s48:k80:d0:s0)	 _forbreak_0($10) :
check.c(l64:s49:k81:d0:s0)		iTemp46 [k53 lr49:50 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp2 [k6 lr4:49 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_crc_calc_1_71}[r0x03 ] == iTemp3 [k8 lr19:49 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_crc_env_1_71}[r0x06 ]
check.c(l64:s50:k82:d0:s0)		if iTemp46 [k53 lr49:50 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} == 0 goto _iffalse_2($12)
check.c(l65:s51:k85:d0:s0)		ret 0x1 {const-unsigned-char literal}
check.c(l65:s52:k86:d0:s0)	 _iffalse_2($12) :
check.c(l67:s53:k87:d0:s0)		ret 0x0 {const-char literal}
check.c(l67:s54:k88:d0:s0)	 _return($16) :
check.c(l67:s55:k89:d0:s0)		eproc _check_crc [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char function ( char generic* fixed) fixed}

----------------------------------------------------------------
Basic Block preHeaderLbl6 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 2 : bbnum = 1 1st iCode = 6 , last iCode = 6
visited 0 : hasFcall = 0

defines bitVector :bitvector Size = 102 bSize = 13
Bits on { }

local defines bitVector :
pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 102 bSize = 13
Bits on { (2) (4) (92) }

outDefs Set bitvector :bitvector Size = 102 bSize = 13
Bits on { (2) (4) (92) }

usesDefs Set bitvector :bitvector Size = 102 bSize = 13
Bits on { }

----------------------------------------------------------------
check.c(l34:s6:k100:d0:s0)	 preHeaderLbl6($34) :
check.c(l34:s7:k6:d1:s0)	 _whilecontinue_0($1) :
check.c(l34:s8:k7:d1:s0)		iTemp4 [k10 lr8:10 so:0]{ ia0 a2p0 re0 rm0 nos1 ru0 dp0}{char fixed}[r0x05 ] := iTemp5 [k11 lr5:13 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_size_1_71}[r0x04 ]
check.c(l34:s9:k8:d1:s0)		iTemp5 [k11 lr5:13 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_size_1_71}[r0x04 ] = iTemp5 [k11 lr5:13 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_size_1_71}[r0x04 ] + 0x1 {const-unsigned-char literal}
check.c(l34:s10:k10:d1:s0)		iTemp6 [k12 lr10:11 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x05 r0x06 r0x07 ] = iTemp0 [k2 lr3:47 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_crc_comando_1_70}[r0x00 r0x01 r0x02 ] + iTemp4 [k10 lr8:10 so:0]{ ia0 a2p0 re0 rm0 nos1 ru0 dp0}{char fixed}[r0x05 ]
check.c(l34:s11:k11:d1:s0)		iTemp7 [k13 lr11:12 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = @[iTemp6 [k12 lr10:11 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x05 r0x06 r0x07 ] + 0x0 {const-unsigned-char literal}]
check.c(l34:s12:k12:d1:s0)		if iTemp7 [k13 lr11:12 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] != 0 goto _whilecontinue_0($1)
check.c(l36:s13:k17:d0:s0)		iTemp1 [k4 lr13:47 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_size_1_71}[r0x04 ] = iTemp5 [k11 lr5:13 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_size_1_71}[r0x04 ] - 0x3 {char literal}
check.c(l37:s14:k19:d0:s0)		iTemp9 [k15 lr14:15 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x05 r0x06 r0x07 ] = iTemp0 [k2 lr3:47 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_crc_comando_1_70}[r0x00 r0x01 r0x02 ] + iTemp1 [k4 lr13:47 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_size_1_71}[r0x04 ]
check.c(l37:s15:k20:d0:s0)		iTemp10 [k16 lr15:22 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = @[iTemp9 [k15 lr14:15 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x05 r0x06 r0x07 ] + 0x0 {const-unsigned-char literal}]
check.c(l37:s16:k21:d0:s0)		iTemp11 [k17 lr16:17 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp10 [k16 lr15:22 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] < 0x41 {const-char literal}
check.c(l37:s17:k22:d0:s0)		if iTemp11 [k17 lr16:17 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _iffalse_0($5)
check.c(l38:s18:k27:d0:s0)		iTemp14 [k20 lr18:19 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = iTemp10 [k16 lr15:22 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] - 0x37 {char literal}
check.c(l38:s19:k28:d0:s0)		iTemp3 [k8 lr19:49 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_crc_env_1_71}[r0x06 ] = iTemp14 [k20 lr18:19 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] * 0x10 {const-unsigned-char literal}
check.c(l38:s20:k31:d0:s0)		 goto _ifend_0($6)
check.c(l38:s21:k32:d0:s0)	 _iffalse_0($5) :
check.c(l40:s22:k35:d0:s0)		iTemp19 [k25 lr22:23 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = iTemp10 [k16 lr15:22 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] - 0x30 {char literal}
check.c(l40:s23:k36:d0:s0)		iTemp3 [k8 lr19:49 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_crc_env_1_71}[r0x06 ] = iTemp19 [k25 lr22:23 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] * 0x10 {const-unsigned-char literal}
check.c(l40:s24:k39:d0:s0)	 _ifend_0($6) :
check.c(l42:s25:k40:d0:s0)		iTemp22 [k28 lr25:26 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x05 r0x07 ] = (int fixed)iTemp1 [k4 lr13:47 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_size_1_71}[r0x04 ]
check.c(l42:s26:k41:d0:s0)		iTemp23 [k29 lr26:27 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x05 r0x07 ] = iTemp22 [k28 lr25:26 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x05 r0x07 ] + 0x1 {int literal}
check.c(l42:s27:k42:d0:s0)		iTemp24 [k30 lr27:28 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x05 r0x07 r0x08 ] = iTemp0 [k2 lr3:47 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_crc_comando_1_70}[r0x00 r0x01 r0x02 ] + iTemp23 [k29 lr26:27 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x05 r0x07 ]
check.c(l42:s28:k43:d0:s0)		iTemp25 [k31 lr28:35 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = @[iTemp24 [k30 lr27:28 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x05 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l42:s29:k44:d0:s0)		iTemp26 [k32 lr29:30 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp25 [k31 lr28:35 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] < 0x41 {const-char literal}
check.c(l42:s30:k45:d0:s0)		if iTemp26 [k32 lr29:30 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _iffalse_1($8)
check.c(l43:s31:k52:d0:s0)		iTemp31 [k37 lr31:32 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x07 ] = iTemp25 [k31 lr28:35 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] - 0x37 {char literal}
check.c(l43:s32:k53:d0:s0)		iTemp3 [k8 lr19:49 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_crc_env_1_71}[r0x06 ] = iTemp3 [k8 lr19:49 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_crc_env_1_71}[r0x06 ] + iTemp31 [k37 lr31:32 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x07 ]
check.c(l43:s33:k55:d0:s0)		 goto preHeaderLbl1($23)
check.c(l43:s34:k56:d0:s0)	 _iffalse_1($8) :
check.c(l45:s35:k61:d0:s0)		iTemp37 [k43 lr35:36 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = iTemp25 [k31 lr28:35 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] - 0x30 {char literal}
check.c(l45:s36:k62:d0:s0)		iTemp3 [k8 lr19:49 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_crc_env_1_71}[r0x06 ] = iTemp3 [k8 lr19:49 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_crc_env_1_71}[r0x06 ] + iTemp37 [k43 lr35:36 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ]
check.c(l47:s37:k91:d0:s0)	 preHeaderLbl1($23) :
check.c(l47:s38:k95:d0:s0)		iTemp45 [k52 lr38:47 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_i_1_71}[r0x05 ] := 0x0 {const-char literal}
check.c(l47:s40:k66:d1:s0)	 _forcond_0($14) :
check.c(l47:s41:k67:d1:s0)		iTemp40 [k47 lr41:42 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp45 [k52 lr38:47 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_i_1_71}[r0x05 ] < iTemp1 [k4 lr13:47 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_size_1_71}[r0x04 ]
check.c(l47:s42:k68:d1:s0)		if iTemp40 [k47 lr41:42 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} == 0 goto _forbreak_0($10)
check.c(l48:s43:k71:d1:s0)		iTemp41 [k48 lr43:44 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x07 r0x08 r0x09 ] = iTemp0 [k2 lr3:47 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_crc_comando_1_70}[r0x00 r0x01 r0x02 ] + iTemp45 [k52 lr38:47 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_i_1_71}[r0x05 ]
check.c(l48:s44:k72:d1:s0)		iTemp42 [k49 lr44:45 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x07 ] = @[iTemp41 [k48 lr43:44 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x07 r0x08 r0x09 ] + 0x0 {const-unsigned-char literal}]
check.c(l48:s45:k73:d1:s0)		iTemp2 [k6 lr4:49 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_crc_calc_1_71}[r0x03 ] = iTemp2 [k6 lr4:49 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_crc_calc_1_71}[r0x03 ] ^ iTemp42 [k49 lr44:45 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x07 ]
check.c(l47:s46:k77:d1:s0)		iTemp45 [k52 lr38:47 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_i_1_71}[r0x05 ] = iTemp45 [k52 lr38:47 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_i_1_71}[r0x05 ] + 0x1 {const-unsigned-char literal}
check.c(l47:s47:k79:d1:s0)		 goto _forcond_0($14)
check.c(l47:s48:k80:d0:s0)	 _forbreak_0($10) :
check.c(l64:s49:k81:d0:s0)		iTemp46 [k53 lr49:50 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp2 [k6 lr4:49 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_crc_calc_1_71}[r0x03 ] == iTemp3 [k8 lr19:49 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_crc_env_1_71}[r0x06 ]
check.c(l64:s50:k82:d0:s0)		if iTemp46 [k53 lr49:50 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} == 0 goto _iffalse_2($12)
check.c(l65:s51:k85:d0:s0)		ret 0x1 {const-unsigned-char literal}
check.c(l65:s52:k86:d0:s0)	 _iffalse_2($12) :
check.c(l67:s53:k87:d0:s0)		ret 0x0 {const-char literal}
check.c(l67:s54:k88:d0:s0)	 _return($16) :
check.c(l67:s55:k89:d0:s0)		eproc _check_crc [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char function ( char generic* fixed) fixed}

----------------------------------------------------------------
Basic Block _whilecontinue_0 : loop Depth = 1 noPath = 0 , lastinLoop = 0
depth 1st num 3 : bbnum = 2 1st iCode = 7 , last iCode = 12
visited 0 : hasFcall = 0

defines bitVector :bitvector Size = 102 bSize = 13
Bits on { (7) (8) (10) (11) }

local defines bitVector :bitvector Size = 102 bSize = 13
Bits on { (7) (8) (10) (11) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 102 bSize = 13
Bits on { (2) (4) (7) (8) (10) (11) (92) }

outDefs Set bitvector :bitvector Size = 102 bSize = 13
Bits on { (2) (4) (7) (8) (10) (11) }

usesDefs Set bitvector :bitvector Size = 102 bSize = 13
Bits on { (2) (7) (8) (10) (11) (92) }

----------------------------------------------------------------
check.c(l34:s7:k6:d1:s0)	 _whilecontinue_0($1) :
check.c(l34:s8:k7:d1:s0)		iTemp4 [k10 lr8:10 so:0]{ ia0 a2p0 re0 rm0 nos1 ru0 dp0}{char fixed}[r0x05 ] := iTemp5 [k11 lr5:13 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_size_1_71}[r0x04 ]
check.c(l34:s9:k8:d1:s0)		iTemp5 [k11 lr5:13 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_size_1_71}[r0x04 ] = iTemp5 [k11 lr5:13 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_size_1_71}[r0x04 ] + 0x1 {const-unsigned-char literal}
check.c(l34:s10:k10:d1:s0)		iTemp6 [k12 lr10:11 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x05 r0x06 r0x07 ] = iTemp0 [k2 lr3:47 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_crc_comando_1_70}[r0x00 r0x01 r0x02 ] + iTemp4 [k10 lr8:10 so:0]{ ia0 a2p0 re0 rm0 nos1 ru0 dp0}{char fixed}[r0x05 ]
check.c(l34:s11:k11:d1:s0)		iTemp7 [k13 lr11:12 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = @[iTemp6 [k12 lr10:11 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x05 r0x06 r0x07 ] + 0x0 {const-unsigned-char literal}]
check.c(l34:s12:k12:d1:s0)		if iTemp7 [k13 lr11:12 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] != 0 goto _whilecontinue_0($1)
check.c(l36:s13:k17:d0:s0)		iTemp1 [k4 lr13:47 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_size_1_71}[r0x04 ] = iTemp5 [k11 lr5:13 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_size_1_71}[r0x04 ] - 0x3 {char literal}
check.c(l37:s14:k19:d0:s0)		iTemp9 [k15 lr14:15 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x05 r0x06 r0x07 ] = iTemp0 [k2 lr3:47 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_crc_comando_1_70}[r0x00 r0x01 r0x02 ] + iTemp1 [k4 lr13:47 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_size_1_71}[r0x04 ]
check.c(l37:s15:k20:d0:s0)		iTemp10 [k16 lr15:22 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = @[iTemp9 [k15 lr14:15 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x05 r0x06 r0x07 ] + 0x0 {const-unsigned-char literal}]
check.c(l37:s16:k21:d0:s0)		iTemp11 [k17 lr16:17 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp10 [k16 lr15:22 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] < 0x41 {const-char literal}
check.c(l37:s17:k22:d0:s0)		if iTemp11 [k17 lr16:17 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _iffalse_0($5)
check.c(l38:s18:k27:d0:s0)		iTemp14 [k20 lr18:19 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = iTemp10 [k16 lr15:22 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] - 0x37 {char literal}
check.c(l38:s19:k28:d0:s0)		iTemp3 [k8 lr19:49 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_crc_env_1_71}[r0x06 ] = iTemp14 [k20 lr18:19 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] * 0x10 {const-unsigned-char literal}
check.c(l38:s20:k31:d0:s0)		 goto _ifend_0($6)
check.c(l38:s21:k32:d0:s0)	 _iffalse_0($5) :
check.c(l40:s22:k35:d0:s0)		iTemp19 [k25 lr22:23 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = iTemp10 [k16 lr15:22 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] - 0x30 {char literal}
check.c(l40:s23:k36:d0:s0)		iTemp3 [k8 lr19:49 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_crc_env_1_71}[r0x06 ] = iTemp19 [k25 lr22:23 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] * 0x10 {const-unsigned-char literal}
check.c(l40:s24:k39:d0:s0)	 _ifend_0($6) :
check.c(l42:s25:k40:d0:s0)		iTemp22 [k28 lr25:26 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x05 r0x07 ] = (int fixed)iTemp1 [k4 lr13:47 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_size_1_71}[r0x04 ]
check.c(l42:s26:k41:d0:s0)		iTemp23 [k29 lr26:27 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x05 r0x07 ] = iTemp22 [k28 lr25:26 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x05 r0x07 ] + 0x1 {int literal}
check.c(l42:s27:k42:d0:s0)		iTemp24 [k30 lr27:28 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x05 r0x07 r0x08 ] = iTemp0 [k2 lr3:47 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_crc_comando_1_70}[r0x00 r0x01 r0x02 ] + iTemp23 [k29 lr26:27 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x05 r0x07 ]
check.c(l42:s28:k43:d0:s0)		iTemp25 [k31 lr28:35 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = @[iTemp24 [k30 lr27:28 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x05 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l42:s29:k44:d0:s0)		iTemp26 [k32 lr29:30 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp25 [k31 lr28:35 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] < 0x41 {const-char literal}
check.c(l42:s30:k45:d0:s0)		if iTemp26 [k32 lr29:30 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _iffalse_1($8)
check.c(l43:s31:k52:d0:s0)		iTemp31 [k37 lr31:32 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x07 ] = iTemp25 [k31 lr28:35 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] - 0x37 {char literal}
check.c(l43:s32:k53:d0:s0)		iTemp3 [k8 lr19:49 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_crc_env_1_71}[r0x06 ] = iTemp3 [k8 lr19:49 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_crc_env_1_71}[r0x06 ] + iTemp31 [k37 lr31:32 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x07 ]
check.c(l43:s33:k55:d0:s0)		 goto preHeaderLbl1($23)
check.c(l43:s34:k56:d0:s0)	 _iffalse_1($8) :
check.c(l45:s35:k61:d0:s0)		iTemp37 [k43 lr35:36 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = iTemp25 [k31 lr28:35 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] - 0x30 {char literal}
check.c(l45:s36:k62:d0:s0)		iTemp3 [k8 lr19:49 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_crc_env_1_71}[r0x06 ] = iTemp3 [k8 lr19:49 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_crc_env_1_71}[r0x06 ] + iTemp37 [k43 lr35:36 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ]
check.c(l47:s37:k91:d0:s0)	 preHeaderLbl1($23) :
check.c(l47:s38:k95:d0:s0)		iTemp45 [k52 lr38:47 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_i_1_71}[r0x05 ] := 0x0 {const-char literal}
check.c(l47:s40:k66:d1:s0)	 _forcond_0($14) :
check.c(l47:s41:k67:d1:s0)		iTemp40 [k47 lr41:42 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp45 [k52 lr38:47 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_i_1_71}[r0x05 ] < iTemp1 [k4 lr13:47 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_size_1_71}[r0x04 ]
check.c(l47:s42:k68:d1:s0)		if iTemp40 [k47 lr41:42 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} == 0 goto _forbreak_0($10)
check.c(l48:s43:k71:d1:s0)		iTemp41 [k48 lr43:44 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x07 r0x08 r0x09 ] = iTemp0 [k2 lr3:47 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_crc_comando_1_70}[r0x00 r0x01 r0x02 ] + iTemp45 [k52 lr38:47 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_i_1_71}[r0x05 ]
check.c(l48:s44:k72:d1:s0)		iTemp42 [k49 lr44:45 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x07 ] = @[iTemp41 [k48 lr43:44 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x07 r0x08 r0x09 ] + 0x0 {const-unsigned-char literal}]
check.c(l48:s45:k73:d1:s0)		iTemp2 [k6 lr4:49 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_crc_calc_1_71}[r0x03 ] = iTemp2 [k6 lr4:49 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_crc_calc_1_71}[r0x03 ] ^ iTemp42 [k49 lr44:45 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x07 ]
check.c(l47:s46:k77:d1:s0)		iTemp45 [k52 lr38:47 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_i_1_71}[r0x05 ] = iTemp45 [k52 lr38:47 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_i_1_71}[r0x05 ] + 0x1 {const-unsigned-char literal}
check.c(l47:s47:k79:d1:s0)		 goto _forcond_0($14)
check.c(l47:s48:k80:d0:s0)	 _forbreak_0($10) :
check.c(l64:s49:k81:d0:s0)		iTemp46 [k53 lr49:50 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp2 [k6 lr4:49 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_crc_calc_1_71}[r0x03 ] == iTemp3 [k8 lr19:49 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_crc_env_1_71}[r0x06 ]
check.c(l64:s50:k82:d0:s0)		if iTemp46 [k53 lr49:50 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} == 0 goto _iffalse_2($12)
check.c(l65:s51:k85:d0:s0)		ret 0x1 {const-unsigned-char literal}
check.c(l65:s52:k86:d0:s0)	 _iffalse_2($12) :
check.c(l67:s53:k87:d0:s0)		ret 0x0 {const-char literal}
check.c(l67:s54:k88:d0:s0)	 _return($16) :
check.c(l67:s55:k89:d0:s0)		eproc _check_crc [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char function ( char generic* fixed) fixed}

----------------------------------------------------------------
Basic Block _eBBlock10 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 4 : bbnum = 3 1st iCode = 13 , last iCode = 17
visited 0 : hasFcall = 0

defines bitVector :bitvector Size = 102 bSize = 13
Bits on { (17) (18) (19) (20) (21) }

local defines bitVector :bitvector Size = 102 bSize = 13
Bits on { (17) (18) (19) (20) (21) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 102 bSize = 13
Bits on { (2) (4) (7) (8) (10) (11) }

outDefs Set bitvector :bitvector Size = 102 bSize = 13
Bits on { (2) (4) (7) (8) (10) (11) (17) (18) (19) (20) (21) }

usesDefs Set bitvector :bitvector Size = 102 bSize = 13
Bits on { (2) (8) (17) (18) (19) (20) (21) }

----------------------------------------------------------------
check.c(l36:s13:k17:d0:s0)		iTemp1 [k4 lr13:47 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_size_1_71}[r0x04 ] = iTemp5 [k11 lr5:13 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_size_1_71}[r0x04 ] - 0x3 {char literal}
check.c(l37:s14:k19:d0:s0)		iTemp9 [k15 lr14:15 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x05 r0x06 r0x07 ] = iTemp0 [k2 lr3:47 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_crc_comando_1_70}[r0x00 r0x01 r0x02 ] + iTemp1 [k4 lr13:47 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_size_1_71}[r0x04 ]
check.c(l37:s15:k20:d0:s0)		iTemp10 [k16 lr15:22 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = @[iTemp9 [k15 lr14:15 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x05 r0x06 r0x07 ] + 0x0 {const-unsigned-char literal}]
check.c(l37:s16:k21:d0:s0)		iTemp11 [k17 lr16:17 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp10 [k16 lr15:22 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] < 0x41 {const-char literal}
check.c(l37:s17:k22:d0:s0)		if iTemp11 [k17 lr16:17 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _iffalse_0($5)
check.c(l38:s18:k27:d0:s0)		iTemp14 [k20 lr18:19 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = iTemp10 [k16 lr15:22 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] - 0x37 {char literal}
check.c(l38:s19:k28:d0:s0)		iTemp3 [k8 lr19:49 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_crc_env_1_71}[r0x06 ] = iTemp14 [k20 lr18:19 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] * 0x10 {const-unsigned-char literal}
check.c(l38:s20:k31:d0:s0)		 goto _ifend_0($6)
check.c(l38:s21:k32:d0:s0)	 _iffalse_0($5) :
check.c(l40:s22:k35:d0:s0)		iTemp19 [k25 lr22:23 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = iTemp10 [k16 lr15:22 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] - 0x30 {char literal}
check.c(l40:s23:k36:d0:s0)		iTemp3 [k8 lr19:49 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_crc_env_1_71}[r0x06 ] = iTemp19 [k25 lr22:23 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] * 0x10 {const-unsigned-char literal}
check.c(l40:s24:k39:d0:s0)	 _ifend_0($6) :
check.c(l42:s25:k40:d0:s0)		iTemp22 [k28 lr25:26 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x05 r0x07 ] = (int fixed)iTemp1 [k4 lr13:47 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_size_1_71}[r0x04 ]
check.c(l42:s26:k41:d0:s0)		iTemp23 [k29 lr26:27 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x05 r0x07 ] = iTemp22 [k28 lr25:26 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x05 r0x07 ] + 0x1 {int literal}
check.c(l42:s27:k42:d0:s0)		iTemp24 [k30 lr27:28 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x05 r0x07 r0x08 ] = iTemp0 [k2 lr3:47 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_crc_comando_1_70}[r0x00 r0x01 r0x02 ] + iTemp23 [k29 lr26:27 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x05 r0x07 ]
check.c(l42:s28:k43:d0:s0)		iTemp25 [k31 lr28:35 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = @[iTemp24 [k30 lr27:28 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x05 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l42:s29:k44:d0:s0)		iTemp26 [k32 lr29:30 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp25 [k31 lr28:35 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] < 0x41 {const-char literal}
check.c(l42:s30:k45:d0:s0)		if iTemp26 [k32 lr29:30 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _iffalse_1($8)
check.c(l43:s31:k52:d0:s0)		iTemp31 [k37 lr31:32 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x07 ] = iTemp25 [k31 lr28:35 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] - 0x37 {char literal}
check.c(l43:s32:k53:d0:s0)		iTemp3 [k8 lr19:49 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_crc_env_1_71}[r0x06 ] = iTemp3 [k8 lr19:49 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_crc_env_1_71}[r0x06 ] + iTemp31 [k37 lr31:32 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x07 ]
check.c(l43:s33:k55:d0:s0)		 goto preHeaderLbl1($23)
check.c(l43:s34:k56:d0:s0)	 _iffalse_1($8) :
check.c(l45:s35:k61:d0:s0)		iTemp37 [k43 lr35:36 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = iTemp25 [k31 lr28:35 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] - 0x30 {char literal}
check.c(l45:s36:k62:d0:s0)		iTemp3 [k8 lr19:49 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_crc_env_1_71}[r0x06 ] = iTemp3 [k8 lr19:49 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_crc_env_1_71}[r0x06 ] + iTemp37 [k43 lr35:36 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ]
check.c(l47:s37:k91:d0:s0)	 preHeaderLbl1($23) :
check.c(l47:s38:k95:d0:s0)		iTemp45 [k52 lr38:47 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_i_1_71}[r0x05 ] := 0x0 {const-char literal}
check.c(l47:s40:k66:d1:s0)	 _forcond_0($14) :
check.c(l47:s41:k67:d1:s0)		iTemp40 [k47 lr41:42 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp45 [k52 lr38:47 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_i_1_71}[r0x05 ] < iTemp1 [k4 lr13:47 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_size_1_71}[r0x04 ]
check.c(l47:s42:k68:d1:s0)		if iTemp40 [k47 lr41:42 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} == 0 goto _forbreak_0($10)
check.c(l48:s43:k71:d1:s0)		iTemp41 [k48 lr43:44 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x07 r0x08 r0x09 ] = iTemp0 [k2 lr3:47 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_crc_comando_1_70}[r0x00 r0x01 r0x02 ] + iTemp45 [k52 lr38:47 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_i_1_71}[r0x05 ]
check.c(l48:s44:k72:d1:s0)		iTemp42 [k49 lr44:45 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x07 ] = @[iTemp41 [k48 lr43:44 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x07 r0x08 r0x09 ] + 0x0 {const-unsigned-char literal}]
check.c(l48:s45:k73:d1:s0)		iTemp2 [k6 lr4:49 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_crc_calc_1_71}[r0x03 ] = iTemp2 [k6 lr4:49 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_crc_calc_1_71}[r0x03 ] ^ iTemp42 [k49 lr44:45 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x07 ]
check.c(l47:s46:k77:d1:s0)		iTemp45 [k52 lr38:47 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_i_1_71}[r0x05 ] = iTemp45 [k52 lr38:47 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_i_1_71}[r0x05 ] + 0x1 {const-unsigned-char literal}
check.c(l47:s47:k79:d1:s0)		 goto _forcond_0($14)
check.c(l47:s48:k80:d0:s0)	 _forbreak_0($10) :
check.c(l64:s49:k81:d0:s0)		iTemp46 [k53 lr49:50 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp2 [k6 lr4:49 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_crc_calc_1_71}[r0x03 ] == iTemp3 [k8 lr19:49 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_crc_env_1_71}[r0x06 ]
check.c(l64:s50:k82:d0:s0)		if iTemp46 [k53 lr49:50 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} == 0 goto _iffalse_2($12)
check.c(l65:s51:k85:d0:s0)		ret 0x1 {const-unsigned-char literal}
check.c(l65:s52:k86:d0:s0)	 _iffalse_2($12) :
check.c(l67:s53:k87:d0:s0)		ret 0x0 {const-char literal}
check.c(l67:s54:k88:d0:s0)	 _return($16) :
check.c(l67:s55:k89:d0:s0)		eproc _check_crc [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char function ( char generic* fixed) fixed}

----------------------------------------------------------------
Basic Block _eBBlock11 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 5 : bbnum = 4 1st iCode = 18 , last iCode = 20
visited 0 : hasFcall = 0

defines bitVector :bitvector Size = 102 bSize = 13
Bits on { (27) (28) (29) (30) }

local defines bitVector :bitvector Size = 102 bSize = 13
Bits on { (27) (28) (29) (30) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 102 bSize = 13
Bits on { (2) (4) (7) (8) (10) (11) (17) (18) (19) (20) (21) }

outDefs Set bitvector :bitvector Size = 102 bSize = 13
Bits on { (2) (4) (7) (8) (10) (11) (17) (18) (19) (20) (21) (27) (28) (29) (30) }

usesDefs Set bitvector :bitvector Size = 102 bSize = 13
Bits on { (20) (27) (28) (29) }

----------------------------------------------------------------
check.c(l38:s18:k27:d0:s0)		iTemp14 [k20 lr18:19 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = iTemp10 [k16 lr15:22 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] - 0x37 {char literal}
check.c(l38:s19:k28:d0:s0)		iTemp3 [k8 lr19:49 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_crc_env_1_71}[r0x06 ] = iTemp14 [k20 lr18:19 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] * 0x10 {const-unsigned-char literal}
check.c(l38:s20:k31:d0:s0)		 goto _ifend_0($6)
check.c(l38:s21:k32:d0:s0)	 _iffalse_0($5) :
check.c(l40:s22:k35:d0:s0)		iTemp19 [k25 lr22:23 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = iTemp10 [k16 lr15:22 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] - 0x30 {char literal}
check.c(l40:s23:k36:d0:s0)		iTemp3 [k8 lr19:49 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_crc_env_1_71}[r0x06 ] = iTemp19 [k25 lr22:23 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] * 0x10 {const-unsigned-char literal}
check.c(l40:s24:k39:d0:s0)	 _ifend_0($6) :
check.c(l42:s25:k40:d0:s0)		iTemp22 [k28 lr25:26 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x05 r0x07 ] = (int fixed)iTemp1 [k4 lr13:47 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_size_1_71}[r0x04 ]
check.c(l42:s26:k41:d0:s0)		iTemp23 [k29 lr26:27 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x05 r0x07 ] = iTemp22 [k28 lr25:26 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x05 r0x07 ] + 0x1 {int literal}
check.c(l42:s27:k42:d0:s0)		iTemp24 [k30 lr27:28 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x05 r0x07 r0x08 ] = iTemp0 [k2 lr3:47 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_crc_comando_1_70}[r0x00 r0x01 r0x02 ] + iTemp23 [k29 lr26:27 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x05 r0x07 ]
check.c(l42:s28:k43:d0:s0)		iTemp25 [k31 lr28:35 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = @[iTemp24 [k30 lr27:28 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x05 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l42:s29:k44:d0:s0)		iTemp26 [k32 lr29:30 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp25 [k31 lr28:35 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] < 0x41 {const-char literal}
check.c(l42:s30:k45:d0:s0)		if iTemp26 [k32 lr29:30 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _iffalse_1($8)
check.c(l43:s31:k52:d0:s0)		iTemp31 [k37 lr31:32 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x07 ] = iTemp25 [k31 lr28:35 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] - 0x37 {char literal}
check.c(l43:s32:k53:d0:s0)		iTemp3 [k8 lr19:49 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_crc_env_1_71}[r0x06 ] = iTemp3 [k8 lr19:49 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_crc_env_1_71}[r0x06 ] + iTemp31 [k37 lr31:32 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x07 ]
check.c(l43:s33:k55:d0:s0)		 goto preHeaderLbl1($23)
check.c(l43:s34:k56:d0:s0)	 _iffalse_1($8) :
check.c(l45:s35:k61:d0:s0)		iTemp37 [k43 lr35:36 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = iTemp25 [k31 lr28:35 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] - 0x30 {char literal}
check.c(l45:s36:k62:d0:s0)		iTemp3 [k8 lr19:49 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_crc_env_1_71}[r0x06 ] = iTemp3 [k8 lr19:49 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_crc_env_1_71}[r0x06 ] + iTemp37 [k43 lr35:36 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ]
check.c(l47:s37:k91:d0:s0)	 preHeaderLbl1($23) :
check.c(l47:s38:k95:d0:s0)		iTemp45 [k52 lr38:47 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_i_1_71}[r0x05 ] := 0x0 {const-char literal}
check.c(l47:s40:k66:d1:s0)	 _forcond_0($14) :
check.c(l47:s41:k67:d1:s0)		iTemp40 [k47 lr41:42 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp45 [k52 lr38:47 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_i_1_71}[r0x05 ] < iTemp1 [k4 lr13:47 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_size_1_71}[r0x04 ]
check.c(l47:s42:k68:d1:s0)		if iTemp40 [k47 lr41:42 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} == 0 goto _forbreak_0($10)
check.c(l48:s43:k71:d1:s0)		iTemp41 [k48 lr43:44 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x07 r0x08 r0x09 ] = iTemp0 [k2 lr3:47 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_crc_comando_1_70}[r0x00 r0x01 r0x02 ] + iTemp45 [k52 lr38:47 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_i_1_71}[r0x05 ]
check.c(l48:s44:k72:d1:s0)		iTemp42 [k49 lr44:45 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x07 ] = @[iTemp41 [k48 lr43:44 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x07 r0x08 r0x09 ] + 0x0 {const-unsigned-char literal}]
check.c(l48:s45:k73:d1:s0)		iTemp2 [k6 lr4:49 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_crc_calc_1_71}[r0x03 ] = iTemp2 [k6 lr4:49 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_crc_calc_1_71}[r0x03 ] ^ iTemp42 [k49 lr44:45 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x07 ]
check.c(l47:s46:k77:d1:s0)		iTemp45 [k52 lr38:47 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_i_1_71}[r0x05 ] = iTemp45 [k52 lr38:47 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_i_1_71}[r0x05 ] + 0x1 {const-unsigned-char literal}
check.c(l47:s47:k79:d1:s0)		 goto _forcond_0($14)
check.c(l47:s48:k80:d0:s0)	 _forbreak_0($10) :
check.c(l64:s49:k81:d0:s0)		iTemp46 [k53 lr49:50 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp2 [k6 lr4:49 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_crc_calc_1_71}[r0x03 ] == iTemp3 [k8 lr19:49 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_crc_env_1_71}[r0x06 ]
check.c(l64:s50:k82:d0:s0)		if iTemp46 [k53 lr49:50 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} == 0 goto _iffalse_2($12)
check.c(l65:s51:k85:d0:s0)		ret 0x1 {const-unsigned-char literal}
check.c(l65:s52:k86:d0:s0)	 _iffalse_2($12) :
check.c(l67:s53:k87:d0:s0)		ret 0x0 {const-char literal}
check.c(l67:s54:k88:d0:s0)	 _return($16) :
check.c(l67:s55:k89:d0:s0)		eproc _check_crc [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char function ( char generic* fixed) fixed}

----------------------------------------------------------------
Basic Block _iffalse_0 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 6 : bbnum = 5 1st iCode = 21 , last iCode = 23
visited 0 : hasFcall = 0

defines bitVector :bitvector Size = 102 bSize = 13
Bits on { (35) (36) (37) (38) }

local defines bitVector :bitvector Size = 102 bSize = 13
Bits on { (35) (36) (37) (38) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 102 bSize = 13
Bits on { (2) (4) (7) (8) (10) (11) (17) (18) (19) (20) (21) }

outDefs Set bitvector :bitvector Size = 102 bSize = 13
Bits on { (2) (4) (7) (8) (10) (11) (17) (18) (19) (20) (21) (35) (36) (37) (38) }

usesDefs Set bitvector :bitvector Size = 102 bSize = 13
Bits on { (20) (35) (36) (37) }

----------------------------------------------------------------
check.c(l38:s21:k32:d0:s0)	 _iffalse_0($5) :
check.c(l40:s22:k35:d0:s0)		iTemp19 [k25 lr22:23 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = iTemp10 [k16 lr15:22 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] - 0x30 {char literal}
check.c(l40:s23:k36:d0:s0)		iTemp3 [k8 lr19:49 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_crc_env_1_71}[r0x06 ] = iTemp19 [k25 lr22:23 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] * 0x10 {const-unsigned-char literal}
check.c(l40:s24:k39:d0:s0)	 _ifend_0($6) :
check.c(l42:s25:k40:d0:s0)		iTemp22 [k28 lr25:26 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x05 r0x07 ] = (int fixed)iTemp1 [k4 lr13:47 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_size_1_71}[r0x04 ]
check.c(l42:s26:k41:d0:s0)		iTemp23 [k29 lr26:27 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x05 r0x07 ] = iTemp22 [k28 lr25:26 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x05 r0x07 ] + 0x1 {int literal}
check.c(l42:s27:k42:d0:s0)		iTemp24 [k30 lr27:28 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x05 r0x07 r0x08 ] = iTemp0 [k2 lr3:47 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_crc_comando_1_70}[r0x00 r0x01 r0x02 ] + iTemp23 [k29 lr26:27 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x05 r0x07 ]
check.c(l42:s28:k43:d0:s0)		iTemp25 [k31 lr28:35 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = @[iTemp24 [k30 lr27:28 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x05 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l42:s29:k44:d0:s0)		iTemp26 [k32 lr29:30 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp25 [k31 lr28:35 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] < 0x41 {const-char literal}
check.c(l42:s30:k45:d0:s0)		if iTemp26 [k32 lr29:30 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _iffalse_1($8)
check.c(l43:s31:k52:d0:s0)		iTemp31 [k37 lr31:32 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x07 ] = iTemp25 [k31 lr28:35 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] - 0x37 {char literal}
check.c(l43:s32:k53:d0:s0)		iTemp3 [k8 lr19:49 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_crc_env_1_71}[r0x06 ] = iTemp3 [k8 lr19:49 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_crc_env_1_71}[r0x06 ] + iTemp31 [k37 lr31:32 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x07 ]
check.c(l43:s33:k55:d0:s0)		 goto preHeaderLbl1($23)
check.c(l43:s34:k56:d0:s0)	 _iffalse_1($8) :
check.c(l45:s35:k61:d0:s0)		iTemp37 [k43 lr35:36 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = iTemp25 [k31 lr28:35 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] - 0x30 {char literal}
check.c(l45:s36:k62:d0:s0)		iTemp3 [k8 lr19:49 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_crc_env_1_71}[r0x06 ] = iTemp3 [k8 lr19:49 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_crc_env_1_71}[r0x06 ] + iTemp37 [k43 lr35:36 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ]
check.c(l47:s37:k91:d0:s0)	 preHeaderLbl1($23) :
check.c(l47:s38:k95:d0:s0)		iTemp45 [k52 lr38:47 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_i_1_71}[r0x05 ] := 0x0 {const-char literal}
check.c(l47:s40:k66:d1:s0)	 _forcond_0($14) :
check.c(l47:s41:k67:d1:s0)		iTemp40 [k47 lr41:42 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp45 [k52 lr38:47 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_i_1_71}[r0x05 ] < iTemp1 [k4 lr13:47 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_size_1_71}[r0x04 ]
check.c(l47:s42:k68:d1:s0)		if iTemp40 [k47 lr41:42 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} == 0 goto _forbreak_0($10)
check.c(l48:s43:k71:d1:s0)		iTemp41 [k48 lr43:44 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x07 r0x08 r0x09 ] = iTemp0 [k2 lr3:47 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_crc_comando_1_70}[r0x00 r0x01 r0x02 ] + iTemp45 [k52 lr38:47 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_i_1_71}[r0x05 ]
check.c(l48:s44:k72:d1:s0)		iTemp42 [k49 lr44:45 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x07 ] = @[iTemp41 [k48 lr43:44 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x07 r0x08 r0x09 ] + 0x0 {const-unsigned-char literal}]
check.c(l48:s45:k73:d1:s0)		iTemp2 [k6 lr4:49 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_crc_calc_1_71}[r0x03 ] = iTemp2 [k6 lr4:49 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_crc_calc_1_71}[r0x03 ] ^ iTemp42 [k49 lr44:45 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x07 ]
check.c(l47:s46:k77:d1:s0)		iTemp45 [k52 lr38:47 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_i_1_71}[r0x05 ] = iTemp45 [k52 lr38:47 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_i_1_71}[r0x05 ] + 0x1 {const-unsigned-char literal}
check.c(l47:s47:k79:d1:s0)		 goto _forcond_0($14)
check.c(l47:s48:k80:d0:s0)	 _forbreak_0($10) :
check.c(l64:s49:k81:d0:s0)		iTemp46 [k53 lr49:50 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp2 [k6 lr4:49 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_crc_calc_1_71}[r0x03 ] == iTemp3 [k8 lr19:49 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_crc_env_1_71}[r0x06 ]
check.c(l64:s50:k82:d0:s0)		if iTemp46 [k53 lr49:50 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} == 0 goto _iffalse_2($12)
check.c(l65:s51:k85:d0:s0)		ret 0x1 {const-unsigned-char literal}
check.c(l65:s52:k86:d0:s0)	 _iffalse_2($12) :
check.c(l67:s53:k87:d0:s0)		ret 0x0 {const-char literal}
check.c(l67:s54:k88:d0:s0)	 _return($16) :
check.c(l67:s55:k89:d0:s0)		eproc _check_crc [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char function ( char generic* fixed) fixed}

----------------------------------------------------------------
Basic Block _ifend_0 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 7 : bbnum = 6 1st iCode = 24 , last iCode = 30
visited 0 : hasFcall = 0

defines bitVector :bitvector Size = 102 bSize = 13
Bits on { (40) (41) (42) (43) (44) }

local defines bitVector :bitvector Size = 102 bSize = 13
Bits on { (40) (41) (42) (43) (44) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 102 bSize = 13
Bits on { (2) (4) (7) (8) (10) (11) (17) (18) (19) (20) (21) (27) (28) (29) (30) (35) (36) (37) (38) }

outDefs Set bitvector :bitvector Size = 102 bSize = 13
Bits on { (2) (4) (7) (8) (10) (11) (17) (18) (19) (20) (21) (27) (28) (29) (30) (35) (36) (37) (38) (40) (41) (42) (43) (44) }

usesDefs Set bitvector :bitvector Size = 102 bSize = 13
Bits on { (2) (18) (40) (41) (42) (43) (44) }

----------------------------------------------------------------
check.c(l40:s24:k39:d0:s0)	 _ifend_0($6) :
check.c(l42:s25:k40:d0:s0)		iTemp22 [k28 lr25:26 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x05 r0x07 ] = (int fixed)iTemp1 [k4 lr13:47 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_size_1_71}[r0x04 ]
check.c(l42:s26:k41:d0:s0)		iTemp23 [k29 lr26:27 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x05 r0x07 ] = iTemp22 [k28 lr25:26 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x05 r0x07 ] + 0x1 {int literal}
check.c(l42:s27:k42:d0:s0)		iTemp24 [k30 lr27:28 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x05 r0x07 r0x08 ] = iTemp0 [k2 lr3:47 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_crc_comando_1_70}[r0x00 r0x01 r0x02 ] + iTemp23 [k29 lr26:27 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x05 r0x07 ]
check.c(l42:s28:k43:d0:s0)		iTemp25 [k31 lr28:35 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = @[iTemp24 [k30 lr27:28 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x05 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l42:s29:k44:d0:s0)		iTemp26 [k32 lr29:30 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp25 [k31 lr28:35 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] < 0x41 {const-char literal}
check.c(l42:s30:k45:d0:s0)		if iTemp26 [k32 lr29:30 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _iffalse_1($8)
check.c(l43:s31:k52:d0:s0)		iTemp31 [k37 lr31:32 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x07 ] = iTemp25 [k31 lr28:35 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] - 0x37 {char literal}
check.c(l43:s32:k53:d0:s0)		iTemp3 [k8 lr19:49 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_crc_env_1_71}[r0x06 ] = iTemp3 [k8 lr19:49 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_crc_env_1_71}[r0x06 ] + iTemp31 [k37 lr31:32 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x07 ]
check.c(l43:s33:k55:d0:s0)		 goto preHeaderLbl1($23)
check.c(l43:s34:k56:d0:s0)	 _iffalse_1($8) :
check.c(l45:s35:k61:d0:s0)		iTemp37 [k43 lr35:36 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = iTemp25 [k31 lr28:35 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] - 0x30 {char literal}
check.c(l45:s36:k62:d0:s0)		iTemp3 [k8 lr19:49 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_crc_env_1_71}[r0x06 ] = iTemp3 [k8 lr19:49 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_crc_env_1_71}[r0x06 ] + iTemp37 [k43 lr35:36 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ]
check.c(l47:s37:k91:d0:s0)	 preHeaderLbl1($23) :
check.c(l47:s38:k95:d0:s0)		iTemp45 [k52 lr38:47 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_i_1_71}[r0x05 ] := 0x0 {const-char literal}
check.c(l47:s40:k66:d1:s0)	 _forcond_0($14) :
check.c(l47:s41:k67:d1:s0)		iTemp40 [k47 lr41:42 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp45 [k52 lr38:47 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_i_1_71}[r0x05 ] < iTemp1 [k4 lr13:47 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_size_1_71}[r0x04 ]
check.c(l47:s42:k68:d1:s0)		if iTemp40 [k47 lr41:42 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} == 0 goto _forbreak_0($10)
check.c(l48:s43:k71:d1:s0)		iTemp41 [k48 lr43:44 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x07 r0x08 r0x09 ] = iTemp0 [k2 lr3:47 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_crc_comando_1_70}[r0x00 r0x01 r0x02 ] + iTemp45 [k52 lr38:47 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_i_1_71}[r0x05 ]
check.c(l48:s44:k72:d1:s0)		iTemp42 [k49 lr44:45 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x07 ] = @[iTemp41 [k48 lr43:44 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x07 r0x08 r0x09 ] + 0x0 {const-unsigned-char literal}]
check.c(l48:s45:k73:d1:s0)		iTemp2 [k6 lr4:49 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_crc_calc_1_71}[r0x03 ] = iTemp2 [k6 lr4:49 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_crc_calc_1_71}[r0x03 ] ^ iTemp42 [k49 lr44:45 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x07 ]
check.c(l47:s46:k77:d1:s0)		iTemp45 [k52 lr38:47 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_i_1_71}[r0x05 ] = iTemp45 [k52 lr38:47 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_i_1_71}[r0x05 ] + 0x1 {const-unsigned-char literal}
check.c(l47:s47:k79:d1:s0)		 goto _forcond_0($14)
check.c(l47:s48:k80:d0:s0)	 _forbreak_0($10) :
check.c(l64:s49:k81:d0:s0)		iTemp46 [k53 lr49:50 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp2 [k6 lr4:49 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_crc_calc_1_71}[r0x03 ] == iTemp3 [k8 lr19:49 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_crc_env_1_71}[r0x06 ]
check.c(l64:s50:k82:d0:s0)		if iTemp46 [k53 lr49:50 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} == 0 goto _iffalse_2($12)
check.c(l65:s51:k85:d0:s0)		ret 0x1 {const-unsigned-char literal}
check.c(l65:s52:k86:d0:s0)	 _iffalse_2($12) :
check.c(l67:s53:k87:d0:s0)		ret 0x0 {const-char literal}
check.c(l67:s54:k88:d0:s0)	 _return($16) :
check.c(l67:s55:k89:d0:s0)		eproc _check_crc [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char function ( char generic* fixed) fixed}

----------------------------------------------------------------
Basic Block _eBBlock12 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 8 : bbnum = 7 1st iCode = 31 , last iCode = 33
visited 0 : hasFcall = 0

defines bitVector :bitvector Size = 102 bSize = 13
Bits on { (52) (53) (54) }

local defines bitVector :bitvector Size = 102 bSize = 13
Bits on { (52) (53) (54) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 102 bSize = 13
Bits on { (2) (4) (7) (8) (10) (11) (17) (18) (19) (20) (21) (27) (28) (29) (30) (35) (36) (37) (38) (40) (41) (42) (43) (44) }

outDefs Set bitvector :bitvector Size = 102 bSize = 13
Bits on { (2) (4) (7) (8) (10) (11) (17) (18) (19) (20) (21) (27) (28) (29) (35) (36) (37) (40) (41) (42) (43) (44) (52) (53) (54) }

usesDefs Set bitvector :bitvector Size = 102 bSize = 13
Bits on { (30) (38) (43) (52) (53) }

----------------------------------------------------------------
check.c(l43:s31:k52:d0:s0)		iTemp31 [k37 lr31:32 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x07 ] = iTemp25 [k31 lr28:35 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] - 0x37 {char literal}
check.c(l43:s32:k53:d0:s0)		iTemp3 [k8 lr19:49 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_crc_env_1_71}[r0x06 ] = iTemp3 [k8 lr19:49 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_crc_env_1_71}[r0x06 ] + iTemp31 [k37 lr31:32 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x07 ]
check.c(l43:s33:k55:d0:s0)		 goto preHeaderLbl1($23)
check.c(l43:s34:k56:d0:s0)	 _iffalse_1($8) :
check.c(l45:s35:k61:d0:s0)		iTemp37 [k43 lr35:36 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = iTemp25 [k31 lr28:35 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] - 0x30 {char literal}
check.c(l45:s36:k62:d0:s0)		iTemp3 [k8 lr19:49 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_crc_env_1_71}[r0x06 ] = iTemp3 [k8 lr19:49 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_crc_env_1_71}[r0x06 ] + iTemp37 [k43 lr35:36 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ]
check.c(l47:s37:k91:d0:s0)	 preHeaderLbl1($23) :
check.c(l47:s38:k95:d0:s0)		iTemp45 [k52 lr38:47 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_i_1_71}[r0x05 ] := 0x0 {const-char literal}
check.c(l47:s40:k66:d1:s0)	 _forcond_0($14) :
check.c(l47:s41:k67:d1:s0)		iTemp40 [k47 lr41:42 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp45 [k52 lr38:47 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_i_1_71}[r0x05 ] < iTemp1 [k4 lr13:47 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_size_1_71}[r0x04 ]
check.c(l47:s42:k68:d1:s0)		if iTemp40 [k47 lr41:42 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} == 0 goto _forbreak_0($10)
check.c(l48:s43:k71:d1:s0)		iTemp41 [k48 lr43:44 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x07 r0x08 r0x09 ] = iTemp0 [k2 lr3:47 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_crc_comando_1_70}[r0x00 r0x01 r0x02 ] + iTemp45 [k52 lr38:47 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_i_1_71}[r0x05 ]
check.c(l48:s44:k72:d1:s0)		iTemp42 [k49 lr44:45 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x07 ] = @[iTemp41 [k48 lr43:44 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x07 r0x08 r0x09 ] + 0x0 {const-unsigned-char literal}]
check.c(l48:s45:k73:d1:s0)		iTemp2 [k6 lr4:49 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_crc_calc_1_71}[r0x03 ] = iTemp2 [k6 lr4:49 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_crc_calc_1_71}[r0x03 ] ^ iTemp42 [k49 lr44:45 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x07 ]
check.c(l47:s46:k77:d1:s0)		iTemp45 [k52 lr38:47 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_i_1_71}[r0x05 ] = iTemp45 [k52 lr38:47 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_i_1_71}[r0x05 ] + 0x1 {const-unsigned-char literal}
check.c(l47:s47:k79:d1:s0)		 goto _forcond_0($14)
check.c(l47:s48:k80:d0:s0)	 _forbreak_0($10) :
check.c(l64:s49:k81:d0:s0)		iTemp46 [k53 lr49:50 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp2 [k6 lr4:49 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_crc_calc_1_71}[r0x03 ] == iTemp3 [k8 lr19:49 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_crc_env_1_71}[r0x06 ]
check.c(l64:s50:k82:d0:s0)		if iTemp46 [k53 lr49:50 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} == 0 goto _iffalse_2($12)
check.c(l65:s51:k85:d0:s0)		ret 0x1 {const-unsigned-char literal}
check.c(l65:s52:k86:d0:s0)	 _iffalse_2($12) :
check.c(l67:s53:k87:d0:s0)		ret 0x0 {const-char literal}
check.c(l67:s54:k88:d0:s0)	 _return($16) :
check.c(l67:s55:k89:d0:s0)		eproc _check_crc [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char function ( char generic* fixed) fixed}

----------------------------------------------------------------
Basic Block _iffalse_1 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 9 : bbnum = 8 1st iCode = 34 , last iCode = 36
visited 0 : hasFcall = 0

defines bitVector :bitvector Size = 102 bSize = 13
Bits on { (61) (62) (63) }

local defines bitVector :bitvector Size = 102 bSize = 13
Bits on { (61) (62) (63) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 102 bSize = 13
Bits on { (2) (4) (7) (8) (10) (11) (17) (18) (19) (20) (21) (27) (28) (29) (30) (35) (36) (37) (38) (40) (41) (42) (43) (44) }

outDefs Set bitvector :bitvector Size = 102 bSize = 13
Bits on { (2) (4) (7) (8) (10) (11) (17) (18) (19) (20) (21) (27) (28) (29) (35) (36) (37) (40) (41) (42) (43) (44) (61) (62) (63) }

usesDefs Set bitvector :bitvector Size = 102 bSize = 13
Bits on { (30) (38) (43) (61) (62) }

----------------------------------------------------------------
check.c(l43:s34:k56:d0:s0)	 _iffalse_1($8) :
check.c(l45:s35:k61:d0:s0)		iTemp37 [k43 lr35:36 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = iTemp25 [k31 lr28:35 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] - 0x30 {char literal}
check.c(l45:s36:k62:d0:s0)		iTemp3 [k8 lr19:49 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_crc_env_1_71}[r0x06 ] = iTemp3 [k8 lr19:49 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_crc_env_1_71}[r0x06 ] + iTemp37 [k43 lr35:36 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ]
check.c(l47:s37:k91:d0:s0)	 preHeaderLbl1($23) :
check.c(l47:s38:k95:d0:s0)		iTemp45 [k52 lr38:47 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_i_1_71}[r0x05 ] := 0x0 {const-char literal}
check.c(l47:s40:k66:d1:s0)	 _forcond_0($14) :
check.c(l47:s41:k67:d1:s0)		iTemp40 [k47 lr41:42 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp45 [k52 lr38:47 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_i_1_71}[r0x05 ] < iTemp1 [k4 lr13:47 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_size_1_71}[r0x04 ]
check.c(l47:s42:k68:d1:s0)		if iTemp40 [k47 lr41:42 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} == 0 goto _forbreak_0($10)
check.c(l48:s43:k71:d1:s0)		iTemp41 [k48 lr43:44 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x07 r0x08 r0x09 ] = iTemp0 [k2 lr3:47 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_crc_comando_1_70}[r0x00 r0x01 r0x02 ] + iTemp45 [k52 lr38:47 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_i_1_71}[r0x05 ]
check.c(l48:s44:k72:d1:s0)		iTemp42 [k49 lr44:45 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x07 ] = @[iTemp41 [k48 lr43:44 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x07 r0x08 r0x09 ] + 0x0 {const-unsigned-char literal}]
check.c(l48:s45:k73:d1:s0)		iTemp2 [k6 lr4:49 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_crc_calc_1_71}[r0x03 ] = iTemp2 [k6 lr4:49 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_crc_calc_1_71}[r0x03 ] ^ iTemp42 [k49 lr44:45 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x07 ]
check.c(l47:s46:k77:d1:s0)		iTemp45 [k52 lr38:47 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_i_1_71}[r0x05 ] = iTemp45 [k52 lr38:47 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_i_1_71}[r0x05 ] + 0x1 {const-unsigned-char literal}
check.c(l47:s47:k79:d1:s0)		 goto _forcond_0($14)
check.c(l47:s48:k80:d0:s0)	 _forbreak_0($10) :
check.c(l64:s49:k81:d0:s0)		iTemp46 [k53 lr49:50 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp2 [k6 lr4:49 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_crc_calc_1_71}[r0x03 ] == iTemp3 [k8 lr19:49 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_crc_env_1_71}[r0x06 ]
check.c(l64:s50:k82:d0:s0)		if iTemp46 [k53 lr49:50 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} == 0 goto _iffalse_2($12)
check.c(l65:s51:k85:d0:s0)		ret 0x1 {const-unsigned-char literal}
check.c(l65:s52:k86:d0:s0)	 _iffalse_2($12) :
check.c(l67:s53:k87:d0:s0)		ret 0x0 {const-char literal}
check.c(l67:s54:k88:d0:s0)	 _return($16) :
check.c(l67:s55:k89:d0:s0)		eproc _check_crc [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char function ( char generic* fixed) fixed}

----------------------------------------------------------------
Basic Block preHeaderLbl1 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 10 : bbnum = 9 1st iCode = 37 , last iCode = 38
visited 0 : hasFcall = 0

defines bitVector :bitvector Size = 102 bSize = 13
Bits on { (95) }

local defines bitVector :bitvector Size = 102 bSize = 13
Bits on { (95) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 102 bSize = 13
Bits on { (2) (4) (7) (8) (10) (11) (17) (18) (19) (20) (21) (27) (28) (29) (35) (36) (37) (40) (41) (42) (43) (44) (52) (53) (54) (61) (62) (63) }

outDefs Set bitvector :bitvector Size = 102 bSize = 13
Bits on { (2) (4) (7) (8) (10) (11) (17) (18) (19) (20) (21) (27) (28) (29) (35) (36) (37) (40) (41) (42) (43) (44) (52) (53) (54) (61) (62) (63) (95) }

usesDefs Set bitvector :bitvector Size = 102 bSize = 13
Bits on { }

----------------------------------------------------------------
check.c(l47:s37:k91:d0:s0)	 preHeaderLbl1($23) :
check.c(l47:s38:k95:d0:s0)		iTemp45 [k52 lr38:47 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_i_1_71}[r0x05 ] := 0x0 {const-char literal}
check.c(l47:s40:k66:d1:s0)	 _forcond_0($14) :
check.c(l47:s41:k67:d1:s0)		iTemp40 [k47 lr41:42 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp45 [k52 lr38:47 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_i_1_71}[r0x05 ] < iTemp1 [k4 lr13:47 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_size_1_71}[r0x04 ]
check.c(l47:s42:k68:d1:s0)		if iTemp40 [k47 lr41:42 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} == 0 goto _forbreak_0($10)
check.c(l48:s43:k71:d1:s0)		iTemp41 [k48 lr43:44 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x07 r0x08 r0x09 ] = iTemp0 [k2 lr3:47 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_crc_comando_1_70}[r0x00 r0x01 r0x02 ] + iTemp45 [k52 lr38:47 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_i_1_71}[r0x05 ]
check.c(l48:s44:k72:d1:s0)		iTemp42 [k49 lr44:45 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x07 ] = @[iTemp41 [k48 lr43:44 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x07 r0x08 r0x09 ] + 0x0 {const-unsigned-char literal}]
check.c(l48:s45:k73:d1:s0)		iTemp2 [k6 lr4:49 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_crc_calc_1_71}[r0x03 ] = iTemp2 [k6 lr4:49 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_crc_calc_1_71}[r0x03 ] ^ iTemp42 [k49 lr44:45 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x07 ]
check.c(l47:s46:k77:d1:s0)		iTemp45 [k52 lr38:47 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_i_1_71}[r0x05 ] = iTemp45 [k52 lr38:47 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_i_1_71}[r0x05 ] + 0x1 {const-unsigned-char literal}
check.c(l47:s47:k79:d1:s0)		 goto _forcond_0($14)
check.c(l47:s48:k80:d0:s0)	 _forbreak_0($10) :
check.c(l64:s49:k81:d0:s0)		iTemp46 [k53 lr49:50 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp2 [k6 lr4:49 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_crc_calc_1_71}[r0x03 ] == iTemp3 [k8 lr19:49 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_crc_env_1_71}[r0x06 ]
check.c(l64:s50:k82:d0:s0)		if iTemp46 [k53 lr49:50 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} == 0 goto _iffalse_2($12)
check.c(l65:s51:k85:d0:s0)		ret 0x1 {const-unsigned-char literal}
check.c(l65:s52:k86:d0:s0)	 _iffalse_2($12) :
check.c(l67:s53:k87:d0:s0)		ret 0x0 {const-char literal}
check.c(l67:s54:k88:d0:s0)	 _return($16) :
check.c(l67:s55:k89:d0:s0)		eproc _check_crc [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char function ( char generic* fixed) fixed}

----------------------------------------------------------------
Basic Block preHeaderLbl7 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 11 : bbnum = 10 1st iCode = 39 , last iCode = 39
visited 0 : hasFcall = 0

defines bitVector :bitvector Size = 102 bSize = 13
Bits on { }

local defines bitVector :
pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 102 bSize = 13
Bits on { (2) (4) (7) (8) (10) (11) (17) (18) (19) (20) (21) (27) (28) (29) (35) (36) (37) (40) (41) (42) (43) (44) (52) (53) (54) (61) (62) (63) (95) }

outDefs Set bitvector :bitvector Size = 102 bSize = 13
Bits on { (2) (4) (7) (8) (10) (11) (17) (18) (19) (20) (21) (27) (28) (29) (35) (36) (37) (40) (41) (42) (43) (44) (52) (53) (54) (61) (62) (63) (95) }

usesDefs Set bitvector :bitvector Size = 102 bSize = 13
Bits on { }

----------------------------------------------------------------
check.c(l47:s39:k101:d0:s0)	 preHeaderLbl7($39) :
check.c(l47:s40:k66:d1:s0)	 _forcond_0($14) :
check.c(l47:s41:k67:d1:s0)		iTemp40 [k47 lr41:42 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp45 [k52 lr38:47 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_i_1_71}[r0x05 ] < iTemp1 [k4 lr13:47 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_size_1_71}[r0x04 ]
check.c(l47:s42:k68:d1:s0)		if iTemp40 [k47 lr41:42 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} == 0 goto _forbreak_0($10)
check.c(l48:s43:k71:d1:s0)		iTemp41 [k48 lr43:44 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x07 r0x08 r0x09 ] = iTemp0 [k2 lr3:47 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_crc_comando_1_70}[r0x00 r0x01 r0x02 ] + iTemp45 [k52 lr38:47 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_i_1_71}[r0x05 ]
check.c(l48:s44:k72:d1:s0)		iTemp42 [k49 lr44:45 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x07 ] = @[iTemp41 [k48 lr43:44 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x07 r0x08 r0x09 ] + 0x0 {const-unsigned-char literal}]
check.c(l48:s45:k73:d1:s0)		iTemp2 [k6 lr4:49 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_crc_calc_1_71}[r0x03 ] = iTemp2 [k6 lr4:49 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_crc_calc_1_71}[r0x03 ] ^ iTemp42 [k49 lr44:45 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x07 ]
check.c(l47:s46:k77:d1:s0)		iTemp45 [k52 lr38:47 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_i_1_71}[r0x05 ] = iTemp45 [k52 lr38:47 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_i_1_71}[r0x05 ] + 0x1 {const-unsigned-char literal}
check.c(l47:s47:k79:d1:s0)		 goto _forcond_0($14)
check.c(l47:s48:k80:d0:s0)	 _forbreak_0($10) :
check.c(l64:s49:k81:d0:s0)		iTemp46 [k53 lr49:50 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp2 [k6 lr4:49 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_crc_calc_1_71}[r0x03 ] == iTemp3 [k8 lr19:49 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_crc_env_1_71}[r0x06 ]
check.c(l64:s50:k82:d0:s0)		if iTemp46 [k53 lr49:50 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} == 0 goto _iffalse_2($12)
check.c(l65:s51:k85:d0:s0)		ret 0x1 {const-unsigned-char literal}
check.c(l65:s52:k86:d0:s0)	 _iffalse_2($12) :
check.c(l67:s53:k87:d0:s0)		ret 0x0 {const-char literal}
check.c(l67:s54:k88:d0:s0)	 _return($16) :
check.c(l67:s55:k89:d0:s0)		eproc _check_crc [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char function ( char generic* fixed) fixed}

----------------------------------------------------------------
Basic Block _forcond_0 : loop Depth = 1 noPath = 0 , lastinLoop = 0
depth 1st num 12 : bbnum = 11 1st iCode = 40 , last iCode = 42
visited 0 : hasFcall = 0

defines bitVector :bitvector Size = 102 bSize = 13
Bits on { (67) }

local defines bitVector :bitvector Size = 102 bSize = 13
Bits on { (67) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 102 bSize = 13
Bits on { (2) (4) (7) (8) (10) (11) (17) (18) (19) (20) (21) (27) (28) (29) (35) (36) (37) (40) (41) (42) (43) (44) (52) (53) (54) (61) (62) (63) (67) (71) (72) (73) (74) (77) (95) }

outDefs Set bitvector :bitvector Size = 102 bSize = 13
Bits on { (2) (4) (7) (8) (10) (11) (17) (18) (19) (20) (21) (27) (28) (29) (35) (36) (37) (40) (41) (42) (43) (44) (52) (53) (54) (61) (62) (63) (67) (71) (72) (73) (74) (77) (95) }

usesDefs Set bitvector :bitvector Size = 102 bSize = 13
Bits on { (18) (67) (77) (95) }

----------------------------------------------------------------
check.c(l47:s40:k66:d1:s0)	 _forcond_0($14) :
check.c(l47:s41:k67:d1:s0)		iTemp40 [k47 lr41:42 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp45 [k52 lr38:47 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_i_1_71}[r0x05 ] < iTemp1 [k4 lr13:47 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_size_1_71}[r0x04 ]
check.c(l47:s42:k68:d1:s0)		if iTemp40 [k47 lr41:42 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} == 0 goto _forbreak_0($10)
check.c(l48:s43:k71:d1:s0)		iTemp41 [k48 lr43:44 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x07 r0x08 r0x09 ] = iTemp0 [k2 lr3:47 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_crc_comando_1_70}[r0x00 r0x01 r0x02 ] + iTemp45 [k52 lr38:47 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_i_1_71}[r0x05 ]
check.c(l48:s44:k72:d1:s0)		iTemp42 [k49 lr44:45 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x07 ] = @[iTemp41 [k48 lr43:44 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x07 r0x08 r0x09 ] + 0x0 {const-unsigned-char literal}]
check.c(l48:s45:k73:d1:s0)		iTemp2 [k6 lr4:49 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_crc_calc_1_71}[r0x03 ] = iTemp2 [k6 lr4:49 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_crc_calc_1_71}[r0x03 ] ^ iTemp42 [k49 lr44:45 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x07 ]
check.c(l47:s46:k77:d1:s0)		iTemp45 [k52 lr38:47 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_i_1_71}[r0x05 ] = iTemp45 [k52 lr38:47 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_i_1_71}[r0x05 ] + 0x1 {const-unsigned-char literal}
check.c(l47:s47:k79:d1:s0)		 goto _forcond_0($14)
check.c(l47:s48:k80:d0:s0)	 _forbreak_0($10) :
check.c(l64:s49:k81:d0:s0)		iTemp46 [k53 lr49:50 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp2 [k6 lr4:49 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_crc_calc_1_71}[r0x03 ] == iTemp3 [k8 lr19:49 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_crc_env_1_71}[r0x06 ]
check.c(l64:s50:k82:d0:s0)		if iTemp46 [k53 lr49:50 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} == 0 goto _iffalse_2($12)
check.c(l65:s51:k85:d0:s0)		ret 0x1 {const-unsigned-char literal}
check.c(l65:s52:k86:d0:s0)	 _iffalse_2($12) :
check.c(l67:s53:k87:d0:s0)		ret 0x0 {const-char literal}
check.c(l67:s54:k88:d0:s0)	 _return($16) :
check.c(l67:s55:k89:d0:s0)		eproc _check_crc [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char function ( char generic* fixed) fixed}

----------------------------------------------------------------
Basic Block _eBBlock13 : loop Depth = 1 noPath = 0 , lastinLoop = 0
depth 1st num 13 : bbnum = 12 1st iCode = 43 , last iCode = 47
visited 0 : hasFcall = 0

defines bitVector :bitvector Size = 102 bSize = 13
Bits on { (71) (72) (73) (74) (77) }

local defines bitVector :bitvector Size = 102 bSize = 13
Bits on { (71) (72) (73) (74) (77) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 102 bSize = 13
Bits on { (2) (4) (7) (8) (10) (11) (17) (18) (19) (20) (21) (27) (28) (29) (35) (36) (37) (40) (41) (42) (43) (44) (52) (53) (54) (61) (62) (63) (67) (71) (72) (73) (74) (77) (95) }

outDefs Set bitvector :bitvector Size = 102 bSize = 13
Bits on { (2) (7) (8) (10) (11) (17) (18) (19) (20) (21) (27) (28) (29) (35) (36) (37) (40) (41) (42) (43) (44) (52) (53) (54) (61) (62) (63) (67) (71) (72) (73) (74) (77) }

usesDefs Set bitvector :bitvector Size = 102 bSize = 13
Bits on { (2) (4) (71) (72) (73) (74) (77) (95) }

----------------------------------------------------------------
check.c(l48:s43:k71:d1:s0)		iTemp41 [k48 lr43:44 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x07 r0x08 r0x09 ] = iTemp0 [k2 lr3:47 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_crc_comando_1_70}[r0x00 r0x01 r0x02 ] + iTemp45 [k52 lr38:47 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_i_1_71}[r0x05 ]
check.c(l48:s44:k72:d1:s0)		iTemp42 [k49 lr44:45 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x07 ] = @[iTemp41 [k48 lr43:44 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x07 r0x08 r0x09 ] + 0x0 {const-unsigned-char literal}]
check.c(l48:s45:k73:d1:s0)		iTemp2 [k6 lr4:49 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_crc_calc_1_71}[r0x03 ] = iTemp2 [k6 lr4:49 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_crc_calc_1_71}[r0x03 ] ^ iTemp42 [k49 lr44:45 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x07 ]
check.c(l47:s46:k77:d1:s0)		iTemp45 [k52 lr38:47 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_i_1_71}[r0x05 ] = iTemp45 [k52 lr38:47 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_i_1_71}[r0x05 ] + 0x1 {const-unsigned-char literal}
check.c(l47:s47:k79:d1:s0)		 goto _forcond_0($14)
check.c(l47:s48:k80:d0:s0)	 _forbreak_0($10) :
check.c(l64:s49:k81:d0:s0)		iTemp46 [k53 lr49:50 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp2 [k6 lr4:49 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_crc_calc_1_71}[r0x03 ] == iTemp3 [k8 lr19:49 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_crc_env_1_71}[r0x06 ]
check.c(l64:s50:k82:d0:s0)		if iTemp46 [k53 lr49:50 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} == 0 goto _iffalse_2($12)
check.c(l65:s51:k85:d0:s0)		ret 0x1 {const-unsigned-char literal}
check.c(l65:s52:k86:d0:s0)	 _iffalse_2($12) :
check.c(l67:s53:k87:d0:s0)		ret 0x0 {const-char literal}
check.c(l67:s54:k88:d0:s0)	 _return($16) :
check.c(l67:s55:k89:d0:s0)		eproc _check_crc [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char function ( char generic* fixed) fixed}

----------------------------------------------------------------
Basic Block _forbreak_0 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 14 : bbnum = 13 1st iCode = 48 , last iCode = 50
visited 0 : hasFcall = 0

defines bitVector :bitvector Size = 102 bSize = 13
Bits on { (81) }

local defines bitVector :bitvector Size = 102 bSize = 13
Bits on { (81) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 102 bSize = 13
Bits on { (2) (4) (7) (8) (10) (11) (17) (18) (19) (20) (21) (27) (28) (29) (35) (36) (37) (40) (41) (42) (43) (44) (52) (53) (54) (61) (62) (63) (67) (71) (72) (73) (74) (77) (95) }

outDefs Set bitvector :bitvector Size = 102 bSize = 13
Bits on { (2) (4) (7) (8) (10) (11) (17) (18) (19) (20) (21) (27) (28) (29) (35) (36) (37) (40) (41) (42) (43) (44) (52) (53) (54) (61) (62) (63) (67) (71) (72) (73) (74) (77) (81) (95) }

usesDefs Set bitvector :bitvector Size = 102 bSize = 13
Bits on { (4) (54) (63) (74) (81) }

----------------------------------------------------------------
check.c(l47:s48:k80:d0:s0)	 _forbreak_0($10) :
check.c(l64:s49:k81:d0:s0)		iTemp46 [k53 lr49:50 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp2 [k6 lr4:49 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_crc_calc_1_71}[r0x03 ] == iTemp3 [k8 lr19:49 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_crc_crc_env_1_71}[r0x06 ]
check.c(l64:s50:k82:d0:s0)		if iTemp46 [k53 lr49:50 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} == 0 goto _iffalse_2($12)
check.c(l65:s51:k85:d0:s0)		ret 0x1 {const-unsigned-char literal}
check.c(l65:s52:k86:d0:s0)	 _iffalse_2($12) :
check.c(l67:s53:k87:d0:s0)		ret 0x0 {const-char literal}
check.c(l67:s54:k88:d0:s0)	 _return($16) :
check.c(l67:s55:k89:d0:s0)		eproc _check_crc [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char function ( char generic* fixed) fixed}

----------------------------------------------------------------
Basic Block _eBBlock14 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 15 : bbnum = 14 1st iCode = 51 , last iCode = 51
visited 1 : hasFcall = 0

defines bitVector :bitvector Size = 102 bSize = 13
Bits on { }

local defines bitVector :
pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 102 bSize = 13
Bits on { (2) (4) (7) (8) (10) (11) (17) (18) (19) (20) (21) (27) (28) (29) (35) (36) (37) (40) (41) (42) (43) (44) (52) (53) (54) (61) (62) (63) (67) (71) (72) (73) (74) (77) (81) (95) }

outDefs Set bitvector :bitvector Size = 102 bSize = 13
Bits on { (2) (4) (7) (8) (10) (11) (17) (18) (19) (20) (21) (27) (28) (29) (35) (36) (37) (40) (41) (42) (43) (44) (52) (53) (54) (61) (62) (63) (67) (71) (72) (73) (74) (77) (81) (95) }

usesDefs Set bitvector :bitvector Size = 102 bSize = 13
Bits on { }

----------------------------------------------------------------
check.c(l65:s51:k85:d0:s0)		ret 0x1 {const-unsigned-char literal}
check.c(l65:s52:k86:d0:s0)	 _iffalse_2($12) :
check.c(l67:s53:k87:d0:s0)		ret 0x0 {const-char literal}
check.c(l67:s54:k88:d0:s0)	 _return($16) :
check.c(l67:s55:k89:d0:s0)		eproc _check_crc [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char function ( char generic* fixed) fixed}

----------------------------------------------------------------
Basic Block _iffalse_2 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 16 : bbnum = 15 1st iCode = 52 , last iCode = 53
visited 1 : hasFcall = 0

defines bitVector :bitvector Size = 102 bSize = 13
Bits on { }

local defines bitVector :
pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 102 bSize = 13
Bits on { (2) (4) (7) (8) (10) (11) (17) (18) (19) (20) (21) (27) (28) (29) (35) (36) (37) (40) (41) (42) (43) (44) (52) (53) (54) (61) (62) (63) (67) (71) (72) (73) (74) (77) (81) (95) }

outDefs Set bitvector :bitvector Size = 102 bSize = 13
Bits on { (2) (4) (7) (8) (10) (11) (17) (18) (19) (20) (21) (27) (28) (29) (35) (36) (37) (40) (41) (42) (43) (44) (52) (53) (54) (61) (62) (63) (67) (71) (72) (73) (74) (77) (81) (95) }

usesDefs Set bitvector :bitvector Size = 102 bSize = 13
Bits on { }

----------------------------------------------------------------
check.c(l65:s52:k86:d0:s0)	 _iffalse_2($12) :
check.c(l67:s53:k87:d0:s0)		ret 0x0 {const-char literal}
check.c(l67:s54:k88:d0:s0)	 _return($16) :
check.c(l67:s55:k89:d0:s0)		eproc _check_crc [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char function ( char generic* fixed) fixed}

----------------------------------------------------------------
Basic Block _return : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 17 : bbnum = 16 1st iCode = 54 , last iCode = 55
visited 1 : hasFcall = 0

defines bitVector :bitvector Size = 102 bSize = 13
Bits on { }

local defines bitVector :
pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 102 bSize = 13
Bits on { (2) (4) (7) (8) (10) (11) (17) (18) (19) (20) (21) (27) (28) (29) (35) (36) (37) (40) (41) (42) (43) (44) (52) (53) (54) (61) (62) (63) (67) (71) (72) (73) (74) (77) (81) (95) }

outDefs Set bitvector :bitvector Size = 102 bSize = 13
Bits on { (2) (4) (7) (8) (10) (11) (17) (18) (19) (20) (21) (27) (28) (29) (35) (36) (37) (40) (41) (42) (43) (44) (52) (53) (54) (61) (62) (63) (67) (71) (72) (73) (74) (77) (81) (95) }

usesDefs Set bitvector :bitvector Size = 102 bSize = 13
Bits on { }

----------------------------------------------------------------
check.c(l67:s54:k88:d0:s0)	 _return($16) :
check.c(l67:s55:k89:d0:s0)		eproc _check_crc [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char function ( char generic* fixed) fixed}
pic16_typeRegWithIdx - requesting index = 0x0
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x0
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x1
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x1
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x2
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x2
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x3
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x3
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x8
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x8
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x9
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x9
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x0
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x1
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x2
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x3
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x0
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x1
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x2
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x0
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x1
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x2
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x8
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x8
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x0
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x1
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x2
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x8
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x8
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x0
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x1
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x8
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x2
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x9
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x8
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x9
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x3
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x3
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x9
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x8
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x3
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x2
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x1
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x0
Found a Dynamic Register!
pic16_freeAllRegs
leaving
<><><><><><><><><><><><><><><><><>
<><><><><><><><><><><><><><><><><>
starting	/home/sdcc-builder/build/sdcc-build/orig/sdcc/src/pic16/ralloc.c:pic16_assignRegisters
ebbs before optimizing:

----------------------------------------------------------------
Basic Block _entry : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 1 : bbnum = 0 1st iCode = 1 , last iCode = 7
visited 0 : hasFcall = 0

defines bitVector :bitvector Size = 299 bSize = 38
Bits on { (2) (3) (5) (6) }

local defines bitVector :bitvector Size = 299 bSize = 38
Bits on { (2) (3) (5) (6) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :
outDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (3) (5) (6) }

usesDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (5) (6) }

----------------------------------------------------------------
check.c(l70:s1:k0:d0:s0)	 _entry($33) :
check.c(l70:s2:k1:d0:s0)		proc _check_comando [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char function ( char generic* fixed) fixed}
check.c(l70:s3:k2:d0:s0)	iTemp0 [k2 lr3:254 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73} = recv _check_comando [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char function ( char generic* fixed) fixed}
check.c(l72:s4:k3:d0:s0)		iTemp1 [k4 lr4:264 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _check_comando_ret_1_74} := 0xff {const-unsigned-char literal}
check.c(l79:s5:k5:d0:s0)		iTemp3 [k7 lr5:24 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register} = @[iTemp0 [k2 lr3:254 so:0]{ ia1 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73} + 0x0 {const-unsigned-char literal}]
check.c(l79:s6:k6:d0:s0)		iTemp4 [k8 lr6:7 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp3 [k7 lr5:24 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register} == 0x31 {const-char literal}
check.c(l79:s7:k7:d0:s0)		if iTemp4 [k8 lr6:7 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _case_0_49($1)

----------------------------------------------------------------
Basic Block _eBBlock34 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 2 : bbnum = 1 1st iCode = 8 , last iCode = 9
visited 0 : hasFcall = 0

defines bitVector :bitvector Size = 299 bSize = 38
Bits on { (8) }

local defines bitVector :bitvector Size = 299 bSize = 38
Bits on { (8) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (3) (5) (6) }

outDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (3) (5) (6) (8) }

usesDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (5) (8) }

----------------------------------------------------------------
check.c(l79:s8:k8:d0:s0)		iTemp5 [k9 lr8:9 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp3 [k7 lr5:24 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register} == 0x32 {const-char literal}
check.c(l79:s9:k9:d0:s0)		if iTemp5 [k9 lr8:9 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _case_0_50($5)

----------------------------------------------------------------
Basic Block _eBBlock35 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 3 : bbnum = 2 1st iCode = 10 , last iCode = 11
visited 0 : hasFcall = 0

defines bitVector :bitvector Size = 299 bSize = 38
Bits on { (10) }

local defines bitVector :bitvector Size = 299 bSize = 38
Bits on { (10) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (3) (5) (6) (8) }

outDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (3) (5) (6) (8) (10) }

usesDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (5) (10) }

----------------------------------------------------------------
check.c(l79:s10:k10:d0:s0)		iTemp6 [k10 lr10:11 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp3 [k7 lr5:24 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register} == 0x33 {const-char literal}
check.c(l79:s11:k11:d0:s0)		if iTemp6 [k10 lr10:11 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _case_0_51($8)

----------------------------------------------------------------
Basic Block _eBBlock36 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 4 : bbnum = 3 1st iCode = 12 , last iCode = 13
visited 0 : hasFcall = 0

defines bitVector :bitvector Size = 299 bSize = 38
Bits on { (12) }

local defines bitVector :bitvector Size = 299 bSize = 38
Bits on { (12) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (3) (5) (6) (8) (10) }

outDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (3) (5) (6) (8) (10) (12) }

usesDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (5) (12) }

----------------------------------------------------------------
check.c(l79:s12:k12:d0:s0)		iTemp7 [k11 lr12:13 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp3 [k7 lr5:24 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register} == 0x34 {const-char literal}
check.c(l79:s13:k13:d0:s0)		if iTemp7 [k11 lr12:13 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _case_0_52($14)

----------------------------------------------------------------
Basic Block _eBBlock37 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 5 : bbnum = 4 1st iCode = 14 , last iCode = 15
visited 0 : hasFcall = 0

defines bitVector :bitvector Size = 299 bSize = 38
Bits on { (14) }

local defines bitVector :bitvector Size = 299 bSize = 38
Bits on { (14) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (3) (5) (6) (8) (10) (12) }

outDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (3) (5) (6) (8) (10) (12) (14) }

usesDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (5) (14) }

----------------------------------------------------------------
check.c(l79:s14:k14:d0:s0)		iTemp8 [k12 lr14:15 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp3 [k7 lr5:24 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register} == 0x35 {const-char literal}
check.c(l79:s15:k15:d0:s0)		if iTemp8 [k12 lr14:15 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _case_0_53($20)

----------------------------------------------------------------
Basic Block _eBBlock38 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 6 : bbnum = 5 1st iCode = 16 , last iCode = 17
visited 0 : hasFcall = 0

defines bitVector :bitvector Size = 299 bSize = 38
Bits on { (16) }

local defines bitVector :bitvector Size = 299 bSize = 38
Bits on { (16) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (3) (5) (6) (8) (10) (12) (14) }

outDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (3) (5) (6) (8) (10) (12) (14) (16) }

usesDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (5) (16) }

----------------------------------------------------------------
check.c(l79:s16:k16:d0:s0)		iTemp9 [k13 lr16:17 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp3 [k7 lr5:24 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register} == 0x36 {const-char literal}
check.c(l79:s17:k17:d0:s0)		if iTemp9 [k13 lr16:17 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _case_0_54($21)

----------------------------------------------------------------
Basic Block _eBBlock39 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 7 : bbnum = 6 1st iCode = 18 , last iCode = 19
visited 0 : hasFcall = 0

defines bitVector :bitvector Size = 299 bSize = 38
Bits on { (18) }

local defines bitVector :bitvector Size = 299 bSize = 38
Bits on { (18) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (3) (5) (6) (8) (10) (12) (14) (16) }

outDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (3) (5) (6) (8) (10) (12) (14) (16) (18) }

usesDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (5) (18) }

----------------------------------------------------------------
check.c(l79:s18:k18:d0:s0)		iTemp10 [k14 lr18:19 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp3 [k7 lr5:24 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register} == 0x37 {const-char literal}
check.c(l79:s19:k19:d0:s0)		if iTemp10 [k14 lr18:19 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _case_0_55($22)

----------------------------------------------------------------
Basic Block _eBBlock40 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 8 : bbnum = 7 1st iCode = 20 , last iCode = 21
visited 0 : hasFcall = 0

defines bitVector :bitvector Size = 299 bSize = 38
Bits on { (20) }

local defines bitVector :bitvector Size = 299 bSize = 38
Bits on { (20) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (3) (5) (6) (8) (10) (12) (14) (16) (18) }

outDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (3) (5) (6) (8) (10) (12) (14) (16) (18) (20) }

usesDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (5) (20) }

----------------------------------------------------------------
check.c(l79:s20:k20:d0:s0)		iTemp11 [k15 lr20:21 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp3 [k7 lr5:24 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register} == 0x38 {const-char literal}
check.c(l79:s21:k21:d0:s0)		if iTemp11 [k15 lr20:21 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _case_0_56($23)

----------------------------------------------------------------
Basic Block _eBBlock41 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 9 : bbnum = 8 1st iCode = 22 , last iCode = 23
visited 0 : hasFcall = 0

defines bitVector :bitvector Size = 299 bSize = 38
Bits on { (22) }

local defines bitVector :bitvector Size = 299 bSize = 38
Bits on { (22) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (3) (5) (6) (8) (10) (12) (14) (16) (18) (20) }

outDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (3) (5) (6) (8) (10) (12) (14) (16) (18) (20) (22) }

usesDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (5) (22) }

----------------------------------------------------------------
check.c(l79:s22:k22:d0:s0)		iTemp12 [k16 lr22:23 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp3 [k7 lr5:24 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register} == 0x39 {const-char literal}
check.c(l79:s23:k23:d0:s0)		if iTemp12 [k16 lr22:23 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _case_0_57($24)

----------------------------------------------------------------
Basic Block _eBBlock42 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 10 : bbnum = 9 1st iCode = 24 , last iCode = 25
visited 0 : hasFcall = 0

defines bitVector :bitvector Size = 299 bSize = 38
Bits on { (24) }

local defines bitVector :bitvector Size = 299 bSize = 38
Bits on { (24) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (3) (5) (6) (8) (10) (12) (14) (16) (18) (20) (22) }

outDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (3) (5) (6) (8) (10) (12) (14) (16) (18) (20) (22) (24) }

usesDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (5) (24) }

----------------------------------------------------------------
check.c(l79:s24:k24:d0:s0)		iTemp13 [k17 lr24:25 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp3 [k7 lr5:24 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register} == 0x52 {const-char literal}
check.c(l79:s25:k25:d0:s0)		if iTemp13 [k17 lr24:25 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _case_0_82($25)

----------------------------------------------------------------
Basic Block _eBBlock43 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 11 : bbnum = 10 1st iCode = 26 , last iCode = 26
visited 0 : hasFcall = 0

defines bitVector :bitvector Size = 299 bSize = 38
Bits on { }

local defines bitVector :
pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (3) (5) (6) (8) (10) (12) (14) (16) (18) (20) (22) (24) }

outDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (3) (5) (6) (8) (10) (12) (14) (16) (18) (20) (22) (24) }

usesDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { }

----------------------------------------------------------------
check.c(l79:s26:k26:d0:s0)		 goto _swBrk_0($27)

----------------------------------------------------------------
Basic Block _case_0_49 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 33 : bbnum = 11 1st iCode = 27 , last iCode = 32
visited 0 : hasFcall = 0

defines bitVector :bitvector Size = 299 bSize = 38
Bits on { (28) (29) (30) (31) }

local defines bitVector :bitvector Size = 299 bSize = 38
Bits on { (28) (29) (30) (31) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (3) (5) (6) }

outDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (3) (5) (6) (28) (29) (30) (31) }

usesDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (28) (29) (30) (31) }

----------------------------------------------------------------
check.c(l80:s27:k27:d0:s0)	 _case_0_49($1) :
check.c(l81:s28:k28:d0:s0)		iTemp15 [k20 lr28:29 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed} = iTemp0 [k2 lr3:254 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73} + 0x1 {const-unsigned-char literal}
check.c(l81:s29:k29:d0:s0)		iTemp16 [k21 lr29:30 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register} = @[iTemp15 [k20 lr28:29 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed} + 0x0 {const-unsigned-char literal}]
check.c(l81:s30:k30:d0:s0)		iTemp17 [k22 lr30:31 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}{ sir@ _check_comando_led_num_1_74} = iTemp16 [k21 lr29:30 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register} - 0x30 {char literal}
check.c(l81:s31:k31:d0:s0)		iTemp14 [k18 lr31:55 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_led_num_1_74} := iTemp17 [k22 lr30:31 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}{ sir@ _check_comando_led_num_1_74}
check.c(l82:s32:k32:d0:s0)		if iTemp14 [k18 lr31:55 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_led_num_1_74} != 0 goto _iffalse_3($3)

----------------------------------------------------------------
Basic Block _eBBlock44 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 34 : bbnum = 12 1st iCode = 33 , last iCode = 39
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 299 bSize = 38
Bits on { (35) (36) (37) }

local defines bitVector :bitvector Size = 299 bSize = 38
Bits on { (35) (36) (37) (40) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (3) (5) (6) (28) (29) (30) (31) }

outDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (3) (5) (6) (28) (29) (30) (31) (35) (36) (37) (40) }

usesDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (35) (36) (37) (40) }

----------------------------------------------------------------
check.c(l83:s33:k35:d0:s0)		iTemp18 [k24 lr33:34 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed} = iTemp0 [k2 lr3:254 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73} + 0x2 {const-unsigned-char literal}
check.c(l83:s34:k36:d0:s0)		iTemp19 [k25 lr34:35 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register} = @[iTemp18 [k24 lr33:34 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed} + 0x0 {const-unsigned-char literal}]
check.c(l83:s35:k37:d0:s0)		iTemp20 [k26 lr35:37 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register} = iTemp19 [k25 lr34:35 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register} - 0x30 {char literal}
check.c(l83:s36:k38:d0:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
check.c(l83:s37:k39:d0:s0)		send iTemp20 [k26 lr35:37 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}{argreg = 2}
check.c(l83:s38:k40:d0:s0)		iTemp21 [k29 lr38:38 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _led [k23 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( unsigned-char fixed, unsigned-char fixed) fixed}
check.c(l83:s39:k41:d0:s0)		 goto _swBrk_0($27)

----------------------------------------------------------------
Basic Block _iffalse_3 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 35 : bbnum = 13 1st iCode = 40 , last iCode = 59
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 299 bSize = 38
Bits on { (43) (44) (45) (46) (47) (48) (49) (50) (51) (52) (53) (54) (55) (56) (57) }

local defines bitVector :bitvector Size = 299 bSize = 38
Bits on { (43) (44) (45) (46) (47) (48) (49) (50) (51) (52) (53) (54) (55) (56) (57) (60) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (3) (5) (6) (28) (29) (30) (31) }

outDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (3) (5) (6) (28) (29) (30) (31) (43) (44) (45) (46) (47) (48) (49) (50) (51) (52) (53) (54) (55) (56) (57) (60) }

usesDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (31) (43) (44) (45) (46) (47) (48) (49) (50) (51) (52) (53) (54) (55) (56) (57) (60) }

----------------------------------------------------------------
check.c(l83:s40:k42:d0:s0)	 _iffalse_3($3) :
check.c(l85:s41:k43:d0:s0)		iTemp23 [k32 lr41:42 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed} = iTemp0 [k2 lr3:254 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73} + 0x2 {const-unsigned-char literal}
check.c(l85:s42:k44:d0:s0)		iTemp24 [k33 lr42:43 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register} = @[iTemp23 [k32 lr41:42 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed} + 0x0 {const-unsigned-char literal}]
check.c(l85:s43:k45:d0:s0)		iTemp25 [k34 lr43:44 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register} = iTemp24 [k33 lr42:43 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register} - 0x30 {char literal}
check.c(l85:s44:k46:d0:s0)		iTemp26 [k35 lr44:49 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register} = iTemp25 [k34 lr43:44 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register} * 0x64 {const-unsigned-char literal}
check.c(l85:s45:k47:d0:s0)		iTemp27 [k36 lr45:46 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed} = iTemp0 [k2 lr3:254 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73} + 0x3 {const-unsigned-char literal}
check.c(l85:s46:k48:d0:s0)		iTemp28 [k37 lr46:47 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register} = @[iTemp27 [k36 lr45:46 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed} + 0x0 {const-unsigned-char literal}]
check.c(l85:s47:k49:d0:s0)		iTemp29 [k38 lr47:48 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register} = iTemp28 [k37 lr46:47 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register} - 0x30 {char literal}
check.c(l85:s48:k50:d0:s0)		iTemp30 [k39 lr48:49 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register} = iTemp29 [k38 lr47:48 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register} * 0xa {const-unsigned-char literal}
check.c(l85:s49:k51:d0:s0)		iTemp31 [k40 lr49:52 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register} = iTemp26 [k35 lr44:49 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register} + iTemp30 [k39 lr48:49 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}
check.c(l86:s50:k52:d0:s0)		iTemp32 [k41 lr50:51 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed} = iTemp0 [k2 lr3:254 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73} + 0x4 {const-unsigned-char literal}
check.c(l86:s51:k53:d0:s0)		iTemp33 [k42 lr51:52 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register} = @[iTemp32 [k41 lr50:51 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed} + 0x0 {const-unsigned-char literal}]
check.c(l86:s52:k54:d0:s0)		iTemp34 [k43 lr52:53 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register} = iTemp31 [k40 lr49:52 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register} + iTemp33 [k42 lr51:52 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}
check.c(l86:s53:k55:d0:s0)		iTemp35 [k44 lr53:54 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}{ sir@ _check_comando_pwm_1_74} = iTemp34 [k43 lr52:53 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register} - 0x30 {char literal}
check.c(l86:s54:k56:d0:s0)		iTemp22 [k30 lr54:57 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_pwm_1_74} := iTemp35 [k44 lr53:54 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}{ sir@ _check_comando_pwm_1_74}
check.c(l87:s55:k57:d0:s0)		iTemp36 [k46 lr55:57 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register} = iTemp14 [k18 lr31:55 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_led_num_1_74} - 0x1 {char literal}
check.c(l87:s56:k58:d0:s0)		send iTemp36 [k46 lr55:57 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}{argreg = 1}
check.c(l87:s57:k59:d0:s0)		send iTemp22 [k30 lr54:57 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_pwm_1_74}{argreg = 2}
check.c(l87:s58:k60:d0:s0)		iTemp37 [k49 lr58:58 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _set_pwm [k45 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( unsigned-char fixed, unsigned-char fixed) fixed}
check.c(l89:s59:k62:d0:s0)		 goto _swBrk_0($27)

----------------------------------------------------------------
Basic Block _case_0_50 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 26 : bbnum = 14 1st iCode = 60 , last iCode = 68
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 299 bSize = 38
Bits on { (65) (66) (68) (69) (289) }

local defines bitVector :bitvector Size = 299 bSize = 38
Bits on { (64) (65) (66) (68) (69) (289) }

pointers Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (54) (57) }

in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (3) (5) (6) (8) }

outDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (3) (5) (6) (8) (64) (65) (66) (68) (69) (289) }

usesDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (64) (65) (66) (68) (69) }

----------------------------------------------------------------
check.c(l90:s60:k63:d0:s0)	 _case_0_50($5) :
check.c(l91:s61:k64:d0:s0)		iTemp38 [k51 lr61:61 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _limpa_lcd [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( ) fixed}
check.c(l94:s62:k65:d0:s0)		iTemp39 [k53 lr62:90 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed} = &[_check_comando_linha_1_1_74 [k52 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [17] fixed}]
check.c(l94:s63:k66:d0:s0)		iTemp40 [k54 lr63:64 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed} = iTemp39 [k53 lr62:90 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed} + 0x10 {const-unsigned-char literal}
check.c(l94:s64:k67:d0:s0)		*(iTemp40 [k54 lr63:64 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}) := 0x0 {const-char literal}
check.c(l95:s65:k68:d0:s0)		iTemp41 [k56 lr65:95 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed} = &[_check_comando_linha_2_1_74 [k55 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [17] fixed}]
check.c(l95:s66:k69:d0:s0)		iTemp42 [k57 lr66:67 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed} = iTemp41 [k56 lr65:95 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed} + 0x10 {const-unsigned-char literal}
check.c(l95:s67:k70:d0:s0)		*(iTemp42 [k57 lr66:67 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}) := 0x0 {const-char literal}
check.c(l96:s68:k289:d0:s0)		iTemp50 [k66 lr68:78 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74} := 0x1 {const-char literal}

----------------------------------------------------------------
Basic Block preHeaderLbl6 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 27 : bbnum = 15 1st iCode = 69 , last iCode = 69
visited 0 : hasFcall = 0

defines bitVector :bitvector Size = 299 bSize = 38
Bits on { }

local defines bitVector :
pointers Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (54) (57) }

in pointers Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (54) (57) }

inDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (3) (5) (6) (8) (64) (65) (66) (68) (69) (289) }

outDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (3) (5) (6) (8) (64) (65) (66) (68) (69) (289) }

usesDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { }

----------------------------------------------------------------
check.c(l96:s69:k297:d0:s0)	 preHeaderLbl6($85) :

----------------------------------------------------------------
Basic Block _forbody_1 : loop Depth = 1 noPath = 0 , lastinLoop = 0
depth 1st num 28 : bbnum = 16 1st iCode = 70 , last iCode = 78
visited 0 : hasFcall = 0

defines bitVector :bitvector Size = 299 bSize = 38
Bits on { (74) (75) (76) (77) (81) (83) }

local defines bitVector :bitvector Size = 299 bSize = 38
Bits on { (74) (75) (76) (77) (81) (83) }

pointers Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (54) (57) (62) }

in pointers Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (54) (57) }

inDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (3) (5) (6) (8) (64) (65) (66) (68) (69) (74) (75) (76) (77) (81) (83) (289) }

outDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (3) (5) (6) (8) (64) (65) (66) (68) (69) (74) (75) (76) (77) (81) (83) }

usesDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (65) (74) (75) (76) (77) (81) (83) (289) }

----------------------------------------------------------------
check.c(l96:s70:k72:d1:s0)	 _forbody_1($28) :
check.c(l97:s71:k74:d1:s0)		iTemp45 [k61 lr71:72 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register} = iTemp50 [k66 lr68:78 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74} - 0x1 {char literal}
check.c(l97:s72:k75:d1:s0)		iTemp46 [k62 lr72:75 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed} = iTemp39 [k53 lr62:90 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed} + iTemp45 [k61 lr71:72 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}
check.c(l97:s73:k76:d1:s0)		iTemp47 [k63 lr73:74 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed} = iTemp0 [k2 lr3:254 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73} + iTemp50 [k66 lr68:78 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}
check.c(l97:s74:k77:d1:s0)		iTemp48 [k64 lr74:75 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register} = @[iTemp47 [k63 lr73:74 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed} + 0x0 {const-unsigned-char literal}]
check.c(l97:s75:k78:d1:s0)		*(iTemp46 [k62 lr72:75 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}) := iTemp48 [k64 lr74:75 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}
check.c(l96:s76:k81:d1:s0)		iTemp50 [k66 lr68:78 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74} = iTemp50 [k66 lr68:78 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74} + 0x1 {const-unsigned-char literal}
check.c(l96:s77:k83:d1:s0)		iTemp51 [k67 lr77:78 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp50 [k66 lr68:78 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74} < 0x11 {const-char literal}
check.c(l96:s78:k84:d1:s0)		if iTemp51 [k67 lr77:78 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forbody_1($28)

----------------------------------------------------------------
Basic Block _eBBlock45 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 29 : bbnum = 17 1st iCode = 79 , last iCode = 79
visited 0 : hasFcall = 0

defines bitVector :bitvector Size = 299 bSize = 38
Bits on { (292) }

local defines bitVector :bitvector Size = 299 bSize = 38
Bits on { (292) }

pointers Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (54) (57) (62) }

in pointers Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (54) (57) (62) }

inDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (3) (5) (6) (8) (64) (65) (66) (68) (69) (74) (75) (76) (77) (81) (83) }

outDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (3) (5) (6) (8) (64) (65) (66) (68) (69) (74) (75) (76) (77) (81) (83) (292) }

usesDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { }

----------------------------------------------------------------
check.c(l98:s79:k292:d0:s0)		iTemp58 [k74 lr79:89 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74} := 0x11 {const-char literal}

----------------------------------------------------------------
Basic Block preHeaderLbl7 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 30 : bbnum = 18 1st iCode = 80 , last iCode = 80
visited 0 : hasFcall = 0

defines bitVector :bitvector Size = 299 bSize = 38
Bits on { }

local defines bitVector :
pointers Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (54) (57) (62) }

in pointers Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (54) (57) (62) }

inDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (3) (5) (6) (8) (64) (65) (66) (68) (69) (74) (75) (76) (77) (81) (83) (292) }

outDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (3) (5) (6) (8) (64) (65) (66) (68) (69) (74) (75) (76) (77) (81) (83) (292) }

usesDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { }

----------------------------------------------------------------
check.c(l98:s80:k298:d0:s0)	 preHeaderLbl7($87) :

----------------------------------------------------------------
Basic Block _forbody_2 : loop Depth = 1 noPath = 0 , lastinLoop = 0
depth 1st num 31 : bbnum = 19 1st iCode = 81 , last iCode = 89
visited 0 : hasFcall = 0

defines bitVector :bitvector Size = 299 bSize = 38
Bits on { (90) (91) (92) (93) (97) (99) }

local defines bitVector :bitvector Size = 299 bSize = 38
Bits on { (90) (91) (92) (93) (97) (99) }

pointers Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (54) (57) (62) (70) }

in pointers Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (54) (57) (62) }

inDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (3) (5) (6) (8) (64) (65) (66) (68) (69) (74) (75) (76) (77) (81) (83) (90) (91) (92) (93) (97) (99) (292) }

outDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (3) (5) (6) (8) (64) (65) (66) (68) (69) (74) (75) (76) (77) (81) (83) (90) (91) (92) (93) (97) (99) }

usesDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (68) (90) (91) (92) (93) (97) (99) (292) }

----------------------------------------------------------------
check.c(l98:s81:k88:d1:s0)	 _forbody_2($30) :
check.c(l99:s82:k90:d1:s0)		iTemp53 [k69 lr82:83 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register} = iTemp58 [k74 lr79:89 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74} - 0x11 {char literal}
check.c(l99:s83:k91:d1:s0)		iTemp54 [k70 lr83:86 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed} = iTemp41 [k56 lr65:95 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed} + iTemp53 [k69 lr82:83 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}
check.c(l99:s84:k92:d1:s0)		iTemp55 [k71 lr84:85 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed} = iTemp0 [k2 lr3:254 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73} + iTemp58 [k74 lr79:89 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}
check.c(l99:s85:k93:d1:s0)		iTemp56 [k72 lr85:86 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register} = @[iTemp55 [k71 lr84:85 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed} + 0x0 {const-unsigned-char literal}]
check.c(l99:s86:k94:d1:s0)		*(iTemp54 [k70 lr83:86 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}) := iTemp56 [k72 lr85:86 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}
check.c(l98:s87:k97:d1:s0)		iTemp58 [k74 lr79:89 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74} = iTemp58 [k74 lr79:89 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74} + 0x1 {const-unsigned-char literal}
check.c(l98:s88:k99:d1:s0)		iTemp59 [k75 lr88:89 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp58 [k74 lr79:89 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74} < 0x21 {const-char literal}
check.c(l98:s89:k100:d1:s0)		if iTemp59 [k75 lr88:89 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forbody_2($30)

----------------------------------------------------------------
Basic Block _eBBlock46 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 32 : bbnum = 20 1st iCode = 90 , last iCode = 100
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 299 bSize = 38
Bits on { (103) (104) (108) (109) (112) }

local defines bitVector :bitvector Size = 299 bSize = 38
Bits on { (103) (104) (106) (107) (108) (109) (111) (112) }

pointers Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (54) (57) (62) (70) (78) (84) }

in pointers Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (54) (57) (62) (70) }

inDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (3) (5) (6) (8) (64) (65) (66) (68) (69) (74) (75) (76) (77) (81) (83) (90) (91) (92) (93) (97) (99) }

outDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (5) (6) (8) (64) (65) (66) (68) (69) (74) (75) (76) (77) (81) (83) (90) (91) (92) (93) (97) (99) (103) (104) (106) (107) (108) (109) (111) (112) }

usesDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (65) (68) (103) (104) (106) (107) (108) (109) (111) }

----------------------------------------------------------------
check.c(l100:s90:k103:d0:s0)		iTemp60 [k77 lr90:91 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed} := iTemp39 [k53 lr62:90 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}
check.c(l100:s91:k104:d0:s0)		iTemp61 [k78 lr91:92 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed} = (char generic* fixed)iTemp60 [k77 lr90:91 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}
check.c(l100:s92:k105:d0:s0)		send iTemp61 [k78 lr91:92 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}{argreg = 1}
check.c(l100:s93:k106:d0:s0)		iTemp62 [k80 lr93:93 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _print_lcd_string [k76 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char generic* fixed) fixed}
check.c(l101:s94:k107:d0:s0)		iTemp63 [k82 lr94:94 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _print_lcd_ln [k81 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( ) fixed}
check.c(l102:s95:k108:d0:s0)		iTemp64 [k83 lr95:96 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed} := iTemp41 [k56 lr65:95 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}
check.c(l102:s96:k109:d0:s0)		iTemp65 [k84 lr96:97 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed} = (char generic* fixed)iTemp64 [k83 lr95:96 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}
check.c(l102:s97:k110:d0:s0)		send iTemp65 [k84 lr96:97 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}{argreg = 1}
check.c(l102:s98:k111:d0:s0)		iTemp66 [k85 lr98:98 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _print_lcd_string [k76 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char generic* fixed) fixed}
check.c(l103:s99:k112:d0:s0)		iTemp1 [k4 lr4:264 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _check_comando_ret_1_74} := 0x34 {const-unsigned-char literal}
check.c(l104:s100:k113:d0:s0)		 goto _swBrk_0($27)

----------------------------------------------------------------
Basic Block _case_0_51 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 22 : bbnum = 21 1st iCode = 101 , last iCode = 107
visited 0 : hasFcall = 0

defines bitVector :bitvector Size = 299 bSize = 38
Bits on { (115) (116) (117) (118) (119) }

local defines bitVector :bitvector Size = 299 bSize = 38
Bits on { (115) (116) (117) (118) (119) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (3) (5) (6) (8) (10) }

outDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (3) (5) (6) (8) (10) (115) (116) (117) (118) (119) }

usesDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (115) (116) (117) (118) (119) }

----------------------------------------------------------------
check.c(l105:s101:k114:d0:s0)	 _case_0_51($8) :
check.c(l106:s102:k115:d0:s0)		iTemp67 [k86 lr102:103 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed} = iTemp0 [k2 lr3:254 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73} + 0x1 {const-unsigned-char literal}
check.c(l106:s103:k116:d0:s0)		iTemp68 [k87 lr103:104 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register} = @[iTemp67 [k86 lr102:103 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed} + 0x0 {const-unsigned-char literal}]
check.c(l106:s104:k117:d0:s0)		iTemp69 [k88 lr104:105 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed} = (int fixed)iTemp68 [k87 lr103:104 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}
check.c(l106:s105:k118:d0:s0)		iTemp70 [k89 lr105:111 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register} = iTemp69 [k88 lr104:105 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed} - 0x30 {int literal}
check.c(l106:s106:k119:d0:s0)		iTemp71 [k90 lr106:107 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp70 [k89 lr105:111 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register} == 0x1 {int literal}
check.c(l106:s107:k120:d0:s0)		if iTemp71 [k90 lr106:107 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} == 0 goto _iffalse_5($12)

----------------------------------------------------------------
Basic Block _eBBlock47 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 23 : bbnum = 22 1st iCode = 108 , last iCode = 109
visited 0 : hasFcall = 0

defines bitVector :bitvector Size = 299 bSize = 38
Bits on { (124) }

local defines bitVector :bitvector Size = 299 bSize = 38
Bits on { (124) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (3) (5) (6) (8) (10) (115) (116) (117) (118) (119) }

outDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (3) (5) (6) (8) (10) (115) (116) (117) (118) (119) (124) }

usesDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { }

----------------------------------------------------------------
check.c(l107:s108:k124:d0:s0)		_hab_alarme [k91 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed} := 0x1 {const-unsigned-char literal}
check.c(l107:s109:k125:d0:s0)		 goto _swBrk_0($27)

----------------------------------------------------------------
Basic Block _iffalse_5 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 24 : bbnum = 23 1st iCode = 110 , last iCode = 111
visited 0 : hasFcall = 0

defines bitVector :bitvector Size = 299 bSize = 38
Bits on { }

local defines bitVector :
pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (3) (5) (6) (8) (10) (115) (116) (117) (118) (119) }

outDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (3) (5) (6) (8) (10) (115) (116) (117) (118) (119) }

usesDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (118) }

----------------------------------------------------------------
check.c(l107:s110:k126:d0:s0)	 _iffalse_5($12) :
check.c(l108:s111:k131:d0:s0)		if iTemp70 [k89 lr105:111 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register} != 0 goto _swBrk_0($27)

----------------------------------------------------------------
Basic Block _eBBlock48 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 25 : bbnum = 24 1st iCode = 112 , last iCode = 113
visited 0 : hasFcall = 0

defines bitVector :bitvector Size = 299 bSize = 38
Bits on { (135) }

local defines bitVector :bitvector Size = 299 bSize = 38
Bits on { (135) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (3) (5) (6) (8) (10) (115) (116) (117) (118) (119) }

outDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (3) (5) (6) (8) (10) (115) (116) (117) (118) (119) (135) }

usesDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { }

----------------------------------------------------------------
check.c(l109:s112:k135:d0:s0)		_hab_alarme [k91 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed} := 0x0 {const-unsigned-char literal}
check.c(l110:s113:k138:d0:s0)		 goto _swBrk_0($27)

----------------------------------------------------------------
Basic Block _case_0_52 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 18 : bbnum = 25 1st iCode = 114 , last iCode = 120
visited 0 : hasFcall = 0

defines bitVector :bitvector Size = 299 bSize = 38
Bits on { (140) (141) (142) (143) (144) }

local defines bitVector :bitvector Size = 299 bSize = 38
Bits on { (140) (141) (142) (143) (144) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (3) (5) (6) (8) (10) (12) }

outDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (3) (5) (6) (8) (10) (12) (140) (141) (142) (143) (144) }

usesDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (140) (141) (142) (143) (144) }

----------------------------------------------------------------
check.c(l111:s114:k139:d0:s0)	 _case_0_52($14) :
check.c(l112:s115:k140:d0:s0)		iTemp78 [k98 lr115:116 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed} = iTemp0 [k2 lr3:254 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73} + 0x1 {const-unsigned-char literal}
check.c(l112:s116:k141:d0:s0)		iTemp79 [k99 lr116:117 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register} = @[iTemp78 [k98 lr115:116 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed} + 0x0 {const-unsigned-char literal}]
check.c(l112:s117:k142:d0:s0)		iTemp80 [k100 lr117:118 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed} = (int fixed)iTemp79 [k99 lr116:117 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}
check.c(l112:s118:k143:d0:s0)		iTemp81 [k101 lr118:124 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register} = iTemp80 [k100 lr117:118 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed} - 0x30 {int literal}
check.c(l112:s119:k144:d0:s0)		iTemp82 [k102 lr119:120 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp81 [k101 lr118:124 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register} == 0x1 {int literal}
check.c(l112:s120:k145:d0:s0)		if iTemp82 [k102 lr119:120 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} == 0 goto _iffalse_7($18)

----------------------------------------------------------------
Basic Block _eBBlock49 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 19 : bbnum = 26 1st iCode = 121 , last iCode = 122
visited 0 : hasFcall = 0

defines bitVector :bitvector Size = 299 bSize = 38
Bits on { (149) }

local defines bitVector :bitvector Size = 299 bSize = 38
Bits on { (149) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (3) (5) (6) (8) (10) (12) (140) (141) (142) (143) (144) }

outDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (3) (5) (6) (8) (10) (12) (140) (141) (142) (143) (144) (149) }

usesDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { }

----------------------------------------------------------------
check.c(l113:s121:k149:d0:s0)		_hab_sensor [k103 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed} := 0x0 {const-unsigned-char literal}
check.c(l113:s122:k150:d0:s0)		 goto _swBrk_0($27)

----------------------------------------------------------------
Basic Block _iffalse_7 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 20 : bbnum = 27 1st iCode = 123 , last iCode = 124
visited 0 : hasFcall = 0

defines bitVector :bitvector Size = 299 bSize = 38
Bits on { }

local defines bitVector :
pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (3) (5) (6) (8) (10) (12) (140) (141) (142) (143) (144) }

outDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (3) (5) (6) (8) (10) (12) (140) (141) (142) (143) (144) }

usesDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (143) }

----------------------------------------------------------------
check.c(l113:s123:k151:d0:s0)	 _iffalse_7($18) :
check.c(l114:s124:k156:d0:s0)		if iTemp81 [k101 lr118:124 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register} != 0 goto _swBrk_0($27)

----------------------------------------------------------------
Basic Block _eBBlock50 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 21 : bbnum = 28 1st iCode = 125 , last iCode = 126
visited 0 : hasFcall = 0

defines bitVector :bitvector Size = 299 bSize = 38
Bits on { (160) }

local defines bitVector :bitvector Size = 299 bSize = 38
Bits on { (160) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (3) (5) (6) (8) (10) (12) (140) (141) (142) (143) (144) }

outDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (3) (5) (6) (8) (10) (12) (140) (141) (142) (143) (144) (160) }

usesDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { }

----------------------------------------------------------------
check.c(l115:s125:k160:d0:s0)		_hab_sensor [k103 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed} := 0x2 {const-unsigned-char literal}
check.c(l116:s126:k163:d0:s0)		 goto _swBrk_0($27)

----------------------------------------------------------------
Basic Block _case_0_53 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 17 : bbnum = 29 1st iCode = 127 , last iCode = 168
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 299 bSize = 38
Bits on { (165) (166) (167) (168) (169) (170) (171) (172) (173) (174) (175) (176) (177) (178) (179) (180) (181) (182) (183) (184) (185) (186) (187) (188) (189) (190) (191) (192) (193) (194) (195) }

local defines bitVector :bitvector Size = 299 bSize = 38
Bits on { (165) (166) (167) (168) (169) (170) (171) (172) (173) (174) (175) (176) (177) (178) (179) (180) (181) (182) (183) (184) (185) (186) (187) (188) (189) (190) (191) (192) (193) (194) (195) }

pointers Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (112) }

in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (3) (5) (6) (8) (10) (12) (14) }

outDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (3) (5) (6) (8) (10) (12) (14) (165) (166) (167) (168) (169) (170) (171) (172) (173) (174) (175) (176) (177) (178) (179) (180) (181) (182) (183) (184) (185) (186) (187) (188) (189) (190) (191) (192) (193) (194) (195) }

usesDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (165) (166) (167) (168) (169) (170) (171) (172) (173) (174) (175) (176) (177) (178) (179) (180) (181) (182) (183) (184) (185) (186) (187) (188) (189) (190) (191) (192) (193) (194) (195) }

----------------------------------------------------------------
check.c(l117:s127:k164:d0:s0)	 _case_0_53($20) :
check.c(l118:s128:k165:d0:s0)		iTemp89 [k111 lr128:129 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int near* fixed} = &[_sys_timer_pool [k110 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int [2] fixed}]
check.c(l118:s129:k166:d0:s0)		iTemp90 [k112 lr129:167 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int near* fixed} = iTemp89 [k111 lr128:129 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int near* fixed} + 0x4 {unsigned-char literal}
check.c(l118:s130:k167:d0:s0)		iTemp91 [k113 lr130:131 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed} = iTemp0 [k2 lr3:254 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73} + 0x1 {const-unsigned-char literal}
check.c(l118:s131:k168:d0:s0)		iTemp92 [k114 lr131:132 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register} = @[iTemp91 [k113 lr130:131 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed} + 0x0 {const-unsigned-char literal}]
check.c(l118:s132:k169:d0:s0)		iTemp93 [k115 lr132:133 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed} = (int fixed)iTemp92 [k114 lr131:132 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}
check.c(l118:s133:k170:d0:s0)		iTemp94 [k116 lr133:135 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register} = iTemp93 [k115 lr132:133 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed} - 0x30 {int literal}
check.c(l118:s134:k299:d0:s0)		send 0x2710 {const-int literal}{argreg = 1}
check.c(l118:s135:k300:d0:s0)		send iTemp94 [k116 lr133:135 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}{argreg = 2}
check.c(l118:s136:k301:d0:s0)		iTemp95 [k117 lr136:144 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register} = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l118:s137:k172:d0:s0)		iTemp96 [k118 lr137:138 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed} = iTemp0 [k2 lr3:254 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73} + 0x2 {const-unsigned-char literal}
check.c(l118:s138:k173:d0:s0)		iTemp97 [k119 lr138:139 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register} = @[iTemp96 [k118 lr137:138 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed} + 0x0 {const-unsigned-char literal}]
check.c(l118:s139:k174:d0:s0)		iTemp98 [k120 lr139:140 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed} = (int fixed)iTemp97 [k119 lr138:139 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}
check.c(l118:s140:k175:d0:s0)		iTemp99 [k121 lr140:142 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register} = iTemp98 [k120 lr139:140 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed} - 0x30 {int literal}
check.c(l118:s141:k302:d0:s0)		send 0x3e8 {const-int literal}{argreg = 1}
check.c(l118:s142:k303:d0:s0)		send iTemp99 [k121 lr140:142 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}{argreg = 2}
check.c(l118:s143:k304:d0:s0)		iTemp100 [k122 lr143:144 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register} = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l118:s144:k177:d0:s0)		iTemp101 [k123 lr144:152 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register} = iTemp95 [k117 lr136:144 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register} + iTemp100 [k122 lr143:144 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}
check.c(l119:s145:k178:d0:s0)		iTemp102 [k124 lr145:146 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed} = iTemp0 [k2 lr3:254 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73} + 0x3 {const-unsigned-char literal}
check.c(l119:s146:k179:d0:s0)		iTemp103 [k125 lr146:147 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register} = @[iTemp102 [k124 lr145:146 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed} + 0x0 {const-unsigned-char literal}]
check.c(l119:s147:k180:d0:s0)		iTemp104 [k126 lr147:148 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed} = (int fixed)iTemp103 [k125 lr146:147 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}
check.c(l119:s148:k181:d0:s0)		iTemp105 [k127 lr148:150 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register} = iTemp104 [k126 lr147:148 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed} - 0x30 {int literal}
check.c(l119:s149:k305:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l119:s150:k306:d0:s0)		send iTemp105 [k127 lr148:150 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}{argreg = 2}
check.c(l119:s151:k307:d0:s0)		iTemp106 [k128 lr151:152 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register} = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l119:s152:k183:d0:s0)		iTemp107 [k129 lr152:160 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register} = iTemp101 [k123 lr144:152 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register} + iTemp106 [k128 lr151:152 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}
check.c(l119:s153:k184:d0:s0)		iTemp108 [k130 lr153:154 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed} = iTemp0 [k2 lr3:254 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73} + 0x4 {const-unsigned-char literal}
check.c(l119:s154:k185:d0:s0)		iTemp109 [k131 lr154:155 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register} = @[iTemp108 [k130 lr153:154 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed} + 0x0 {const-unsigned-char literal}]
check.c(l119:s155:k186:d0:s0)		iTemp110 [k132 lr155:156 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed} = (int fixed)iTemp109 [k131 lr154:155 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}
check.c(l119:s156:k187:d0:s0)		iTemp111 [k133 lr156:158 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register} = iTemp110 [k132 lr155:156 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed} - 0x30 {int literal}
check.c(l119:s157:k308:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l119:s158:k309:d0:s0)		send iTemp111 [k133 lr156:158 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}{argreg = 2}
check.c(l119:s159:k310:d0:s0)		iTemp112 [k134 lr159:160 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register} = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l119:s160:k189:d0:s0)		iTemp113 [k135 lr160:164 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register} = iTemp107 [k129 lr152:160 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register} + iTemp112 [k134 lr159:160 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}
check.c(l120:s161:k190:d0:s0)		iTemp114 [k136 lr161:162 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed} = iTemp0 [k2 lr3:254 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73} + 0x5 {const-unsigned-char literal}
check.c(l120:s162:k191:d0:s0)		iTemp115 [k137 lr162:163 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register} = @[iTemp114 [k136 lr161:162 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed} + 0x0 {const-unsigned-char literal}]
check.c(l120:s163:k192:d0:s0)		iTemp116 [k138 lr163:164 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed} = (int fixed)iTemp115 [k137 lr162:163 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}
check.c(l120:s164:k193:d0:s0)		iTemp117 [k139 lr164:165 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed} = iTemp113 [k135 lr160:164 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register} + iTemp116 [k138 lr163:164 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}
check.c(l120:s165:k194:d0:s0)		iTemp118 [k140 lr165:166 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register} = iTemp117 [k139 lr164:165 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed} - 0x30 {int literal}
check.c(l120:s166:k195:d0:s0)		iTemp119 [k141 lr166:167 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed} = (unsigned-long-int fixed)iTemp118 [k140 lr165:166 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}
check.c(l120:s167:k196:d0:s0)		*(iTemp90 [k112 lr129:167 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int near* fixed}) := iTemp119 [k141 lr166:167 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}
check.c(l121:s168:k197:d0:s0)		 goto _swBrk_0($27)

----------------------------------------------------------------
Basic Block _case_0_54 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 16 : bbnum = 30 1st iCode = 169 , last iCode = 191
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 299 bSize = 38
Bits on { (199) (200) (201) (202) (203) (204) (205) (206) (207) (208) (209) (210) (211) (212) (213) (214) (216) }

local defines bitVector :bitvector Size = 299 bSize = 38
Bits on { (199) (200) (201) (202) (203) (204) (205) (206) (207) (208) (209) (210) (211) (212) (213) (214) (216) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (3) (5) (6) (8) (10) (12) (14) (16) }

outDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (3) (5) (6) (8) (10) (12) (14) (16) (199) (200) (201) (202) (203) (204) (205) (206) (207) (208) (209) (210) (211) (212) (213) (214) (216) }

usesDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (199) (200) (201) (202) (203) (204) (205) (206) (207) (208) (209) (210) (211) (212) (213) (214) }

----------------------------------------------------------------
check.c(l122:s169:k198:d0:s0)	 _case_0_54($21) :
check.c(l123:s170:k199:d0:s0)		iTemp120 [k143 lr170:171 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed} = iTemp0 [k2 lr3:254 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73} + 0x1 {const-unsigned-char literal}
check.c(l123:s171:k200:d0:s0)		iTemp121 [k144 lr171:172 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register} = @[iTemp120 [k143 lr170:171 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed} + 0x0 {const-unsigned-char literal}]
check.c(l123:s172:k201:d0:s0)		iTemp122 [k145 lr172:173 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed} = (int fixed)iTemp121 [k144 lr171:172 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}
check.c(l123:s173:k202:d0:s0)		iTemp123 [k146 lr173:175 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register} = iTemp122 [k145 lr172:173 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed} - 0x30 {int literal}
check.c(l123:s174:k311:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l123:s175:k312:d0:s0)		send iTemp123 [k146 lr173:175 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}{argreg = 2}
check.c(l123:s176:k313:d0:s0)		iTemp124 [k147 lr176:184 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register} = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l123:s177:k204:d0:s0)		iTemp125 [k148 lr177:178 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed} = iTemp0 [k2 lr3:254 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73} + 0x2 {const-unsigned-char literal}
check.c(l123:s178:k205:d0:s0)		iTemp126 [k149 lr178:179 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register} = @[iTemp125 [k148 lr177:178 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed} + 0x0 {const-unsigned-char literal}]
check.c(l123:s179:k206:d0:s0)		iTemp127 [k150 lr179:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed} = (int fixed)iTemp126 [k149 lr178:179 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}
check.c(l123:s180:k207:d0:s0)		iTemp128 [k151 lr180:182 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register} = iTemp127 [k150 lr179:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed} - 0x30 {int literal}
check.c(l123:s181:k314:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l123:s182:k315:d0:s0)		send iTemp128 [k151 lr180:182 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}{argreg = 2}
check.c(l123:s183:k316:d0:s0)		iTemp129 [k152 lr183:184 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register} = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l123:s184:k209:d0:s0)		iTemp130 [k153 lr184:189 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register} = iTemp124 [k147 lr176:184 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register} + iTemp129 [k152 lr183:184 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}
check.c(l124:s185:k210:d0:s0)		iTemp131 [k154 lr185:186 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed} = iTemp0 [k2 lr3:254 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73} + 0x3 {const-unsigned-char literal}
check.c(l124:s186:k211:d0:s0)		iTemp132 [k155 lr186:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register} = @[iTemp131 [k154 lr185:186 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed} + 0x0 {const-unsigned-char literal}]
check.c(l124:s187:k212:d0:s0)		iTemp133 [k156 lr187:188 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed} = (int fixed)iTemp132 [k155 lr186:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}
check.c(l124:s188:k213:d0:s0)		iTemp134 [k157 lr188:189 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register} = iTemp133 [k156 lr187:188 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed} - 0x30 {int literal}
check.c(l124:s189:k214:d0:s0)		iTemp135 [k158 lr189:190 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register} = iTemp130 [k153 lr184:189 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register} + iTemp134 [k157 lr188:189 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}
check.c(l124:s190:k216:d0:s0)		_sys_temp_min [k142 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed} := iTemp135 [k158 lr189:190 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}
check.c(l125:s191:k217:d0:s0)		 goto _swBrk_0($27)

----------------------------------------------------------------
Basic Block _case_0_55 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 15 : bbnum = 31 1st iCode = 192 , last iCode = 214
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 299 bSize = 38
Bits on { (219) (220) (221) (222) (223) (224) (225) (226) (227) (228) (229) (230) (231) (232) (233) (234) (236) }

local defines bitVector :bitvector Size = 299 bSize = 38
Bits on { (219) (220) (221) (222) (223) (224) (225) (226) (227) (228) (229) (230) (231) (232) (233) (234) (236) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (3) (5) (6) (8) (10) (12) (14) (16) (18) }

outDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (3) (5) (6) (8) (10) (12) (14) (16) (18) (219) (220) (221) (222) (223) (224) (225) (226) (227) (228) (229) (230) (231) (232) (233) (234) (236) }

usesDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (219) (220) (221) (222) (223) (224) (225) (226) (227) (228) (229) (230) (231) (232) (233) (234) }

----------------------------------------------------------------
check.c(l126:s192:k218:d0:s0)	 _case_0_55($22) :
check.c(l127:s193:k219:d0:s0)		iTemp137 [k161 lr193:194 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed} = iTemp0 [k2 lr3:254 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73} + 0x1 {const-unsigned-char literal}
check.c(l127:s194:k220:d0:s0)		iTemp138 [k162 lr194:195 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register} = @[iTemp137 [k161 lr193:194 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed} + 0x0 {const-unsigned-char literal}]
check.c(l127:s195:k221:d0:s0)		iTemp139 [k163 lr195:196 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed} = (int fixed)iTemp138 [k162 lr194:195 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}
check.c(l127:s196:k222:d0:s0)		iTemp140 [k164 lr196:198 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register} = iTemp139 [k163 lr195:196 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed} - 0x30 {int literal}
check.c(l127:s197:k317:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l127:s198:k318:d0:s0)		send iTemp140 [k164 lr196:198 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}{argreg = 2}
check.c(l127:s199:k319:d0:s0)		iTemp141 [k165 lr199:207 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register} = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l127:s200:k224:d0:s0)		iTemp142 [k166 lr200:201 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed} = iTemp0 [k2 lr3:254 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73} + 0x2 {const-unsigned-char literal}
check.c(l127:s201:k225:d0:s0)		iTemp143 [k167 lr201:202 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register} = @[iTemp142 [k166 lr200:201 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed} + 0x0 {const-unsigned-char literal}]
check.c(l127:s202:k226:d0:s0)		iTemp144 [k168 lr202:203 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed} = (int fixed)iTemp143 [k167 lr201:202 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}
check.c(l127:s203:k227:d0:s0)		iTemp145 [k169 lr203:205 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register} = iTemp144 [k168 lr202:203 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed} - 0x30 {int literal}
check.c(l127:s204:k320:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l127:s205:k321:d0:s0)		send iTemp145 [k169 lr203:205 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}{argreg = 2}
check.c(l127:s206:k322:d0:s0)		iTemp146 [k170 lr206:207 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register} = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l127:s207:k229:d0:s0)		iTemp147 [k171 lr207:212 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register} = iTemp141 [k165 lr199:207 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register} + iTemp146 [k170 lr206:207 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}
check.c(l128:s208:k230:d0:s0)		iTemp148 [k172 lr208:209 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed} = iTemp0 [k2 lr3:254 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73} + 0x3 {const-unsigned-char literal}
check.c(l128:s209:k231:d0:s0)		iTemp149 [k173 lr209:210 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register} = @[iTemp148 [k172 lr208:209 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed} + 0x0 {const-unsigned-char literal}]
check.c(l128:s210:k232:d0:s0)		iTemp150 [k174 lr210:211 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed} = (int fixed)iTemp149 [k173 lr209:210 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}
check.c(l128:s211:k233:d0:s0)		iTemp151 [k175 lr211:212 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register} = iTemp150 [k174 lr210:211 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed} - 0x30 {int literal}
check.c(l128:s212:k234:d0:s0)		iTemp152 [k176 lr212:213 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register} = iTemp147 [k171 lr207:212 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register} + iTemp151 [k175 lr211:212 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}
check.c(l128:s213:k236:d0:s0)		_sys_temp_max [k160 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed} := iTemp152 [k176 lr212:213 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}
check.c(l129:s214:k237:d0:s0)		 goto _swBrk_0($27)

----------------------------------------------------------------
Basic Block _case_0_56 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 14 : bbnum = 32 1st iCode = 215 , last iCode = 237
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 299 bSize = 38
Bits on { (239) (240) (241) (242) (243) (244) (245) (246) (247) (248) (249) (250) (251) (252) (253) (254) (256) }

local defines bitVector :bitvector Size = 299 bSize = 38
Bits on { (239) (240) (241) (242) (243) (244) (245) (246) (247) (248) (249) (250) (251) (252) (253) (254) (256) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (3) (5) (6) (8) (10) (12) (14) (16) (18) (20) }

outDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (3) (5) (6) (8) (10) (12) (14) (16) (18) (20) (239) (240) (241) (242) (243) (244) (245) (246) (247) (248) (249) (250) (251) (252) (253) (254) (256) }

usesDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (239) (240) (241) (242) (243) (244) (245) (246) (247) (248) (249) (250) (251) (252) (253) (254) }

----------------------------------------------------------------
check.c(l130:s215:k238:d0:s0)	 _case_0_56($23) :
check.c(l131:s216:k239:d0:s0)		iTemp154 [k179 lr216:217 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed} = iTemp0 [k2 lr3:254 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73} + 0x1 {const-unsigned-char literal}
check.c(l131:s217:k240:d0:s0)		iTemp155 [k180 lr217:218 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register} = @[iTemp154 [k179 lr216:217 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed} + 0x0 {const-unsigned-char literal}]
check.c(l131:s218:k241:d0:s0)		iTemp156 [k181 lr218:219 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed} = (int fixed)iTemp155 [k180 lr217:218 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}
check.c(l131:s219:k242:d0:s0)		iTemp157 [k182 lr219:221 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register} = iTemp156 [k181 lr218:219 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed} - 0x30 {int literal}
check.c(l131:s220:k323:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l131:s221:k324:d0:s0)		send iTemp157 [k182 lr219:221 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}{argreg = 2}
check.c(l131:s222:k325:d0:s0)		iTemp158 [k183 lr222:230 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register} = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l131:s223:k244:d0:s0)		iTemp159 [k184 lr223:224 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed} = iTemp0 [k2 lr3:254 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73} + 0x2 {const-unsigned-char literal}
check.c(l131:s224:k245:d0:s0)		iTemp160 [k185 lr224:225 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register} = @[iTemp159 [k184 lr223:224 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed} + 0x0 {const-unsigned-char literal}]
check.c(l131:s225:k246:d0:s0)		iTemp161 [k186 lr225:226 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed} = (int fixed)iTemp160 [k185 lr224:225 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}
check.c(l131:s226:k247:d0:s0)		iTemp162 [k187 lr226:228 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register} = iTemp161 [k186 lr225:226 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed} - 0x30 {int literal}
check.c(l131:s227:k326:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l131:s228:k327:d0:s0)		send iTemp162 [k187 lr226:228 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}{argreg = 2}
check.c(l131:s229:k328:d0:s0)		iTemp163 [k188 lr229:230 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register} = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l131:s230:k249:d0:s0)		iTemp164 [k189 lr230:235 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register} = iTemp158 [k183 lr222:230 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register} + iTemp163 [k188 lr229:230 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}
check.c(l132:s231:k250:d0:s0)		iTemp165 [k190 lr231:232 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed} = iTemp0 [k2 lr3:254 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73} + 0x3 {const-unsigned-char literal}
check.c(l132:s232:k251:d0:s0)		iTemp166 [k191 lr232:233 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register} = @[iTemp165 [k190 lr231:232 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed} + 0x0 {const-unsigned-char literal}]
check.c(l132:s233:k252:d0:s0)		iTemp167 [k192 lr233:234 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed} = (int fixed)iTemp166 [k191 lr232:233 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}
check.c(l132:s234:k253:d0:s0)		iTemp168 [k193 lr234:235 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register} = iTemp167 [k192 lr233:234 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed} - 0x30 {int literal}
check.c(l132:s235:k254:d0:s0)		iTemp169 [k194 lr235:236 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register} = iTemp164 [k189 lr230:235 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register} + iTemp168 [k193 lr234:235 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}
check.c(l132:s236:k256:d0:s0)		_sys_lumi_min [k178 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed} := iTemp169 [k194 lr235:236 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}
check.c(l133:s237:k257:d0:s0)		 goto _swBrk_0($27)

----------------------------------------------------------------
Basic Block _case_0_57 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 13 : bbnum = 33 1st iCode = 238 , last iCode = 260
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 299 bSize = 38
Bits on { (259) (260) (261) (262) (263) (264) (265) (266) (267) (268) (269) (270) (271) (272) (273) (274) (276) }

local defines bitVector :bitvector Size = 299 bSize = 38
Bits on { (259) (260) (261) (262) (263) (264) (265) (266) (267) (268) (269) (270) (271) (272) (273) (274) (276) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (3) (5) (6) (8) (10) (12) (14) (16) (18) (20) (22) }

outDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (3) (5) (6) (8) (10) (12) (14) (16) (18) (20) (22) (259) (260) (261) (262) (263) (264) (265) (266) (267) (268) (269) (270) (271) (272) (273) (274) (276) }

usesDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (259) (260) (261) (262) (263) (264) (265) (266) (267) (268) (269) (270) (271) (272) (273) (274) }

----------------------------------------------------------------
check.c(l134:s238:k258:d0:s0)	 _case_0_57($24) :
check.c(l135:s239:k259:d0:s0)		iTemp171 [k196 lr239:240 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed} = iTemp0 [k2 lr3:254 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73} + 0x1 {const-unsigned-char literal}
check.c(l135:s240:k260:d0:s0)		iTemp172 [k197 lr240:241 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register} = @[iTemp171 [k196 lr239:240 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed} + 0x0 {const-unsigned-char literal}]
check.c(l135:s241:k261:d0:s0)		iTemp173 [k198 lr241:242 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed} = (int fixed)iTemp172 [k197 lr240:241 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}
check.c(l135:s242:k262:d0:s0)		iTemp174 [k199 lr242:244 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register} = iTemp173 [k198 lr241:242 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed} - 0x30 {int literal}
check.c(l135:s243:k329:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l135:s244:k330:d0:s0)		send iTemp174 [k199 lr242:244 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}{argreg = 2}
check.c(l135:s245:k331:d0:s0)		iTemp175 [k200 lr245:253 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register} = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l135:s246:k264:d0:s0)		iTemp176 [k201 lr246:247 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed} = iTemp0 [k2 lr3:254 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73} + 0x2 {const-unsigned-char literal}
check.c(l135:s247:k265:d0:s0)		iTemp177 [k202 lr247:248 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register} = @[iTemp176 [k201 lr246:247 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed} + 0x0 {const-unsigned-char literal}]
check.c(l135:s248:k266:d0:s0)		iTemp178 [k203 lr248:249 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed} = (int fixed)iTemp177 [k202 lr247:248 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}
check.c(l135:s249:k267:d0:s0)		iTemp179 [k204 lr249:251 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register} = iTemp178 [k203 lr248:249 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed} - 0x30 {int literal}
check.c(l135:s250:k332:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l135:s251:k333:d0:s0)		send iTemp179 [k204 lr249:251 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}{argreg = 2}
check.c(l135:s252:k334:d0:s0)		iTemp180 [k205 lr252:253 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register} = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l135:s253:k269:d0:s0)		iTemp181 [k206 lr253:258 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register} = iTemp175 [k200 lr245:253 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register} + iTemp180 [k205 lr252:253 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}
check.c(l136:s254:k270:d0:s0)		iTemp182 [k207 lr254:255 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed} = iTemp0 [k2 lr3:254 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73} + 0x3 {const-unsigned-char literal}
check.c(l136:s255:k271:d0:s0)		iTemp183 [k208 lr255:256 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register} = @[iTemp182 [k207 lr254:255 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed} + 0x0 {const-unsigned-char literal}]
check.c(l136:s256:k272:d0:s0)		iTemp184 [k209 lr256:257 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed} = (int fixed)iTemp183 [k208 lr255:256 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}
check.c(l136:s257:k273:d0:s0)		iTemp185 [k210 lr257:258 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register} = iTemp184 [k209 lr256:257 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed} - 0x30 {int literal}
check.c(l136:s258:k274:d0:s0)		iTemp186 [k211 lr258:259 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register} = iTemp181 [k206 lr253:258 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register} + iTemp185 [k210 lr257:258 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}
check.c(l136:s259:k276:d0:s0)		_sys_temp_max [k160 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed} := iTemp186 [k211 lr258:259 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}
check.c(l137:s260:k277:d0:s0)		 goto _swBrk_0($27)

----------------------------------------------------------------
Basic Block _case_0_82 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 12 : bbnum = 34 1st iCode = 261 , last iCode = 262
visited 0 : hasFcall = 0

defines bitVector :bitvector Size = 299 bSize = 38
Bits on { (279) }

local defines bitVector :bitvector Size = 299 bSize = 38
Bits on { (279) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (3) (5) (6) (8) (10) (12) (14) (16) (18) (20) (22) (24) }

outDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (5) (6) (8) (10) (12) (14) (16) (18) (20) (22) (24) (279) }

usesDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { }

----------------------------------------------------------------
check.c(l138:s261:k278:d0:s0)	 _case_0_82($25) :
check.c(l139:s262:k279:d0:s0)		iTemp1 [k4 lr4:264 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _check_comando_ret_1_74} := 0x0 {const-char literal}

----------------------------------------------------------------
Basic Block _swBrk_0 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 36 : bbnum = 35 1st iCode = 263 , last iCode = 264
visited 0 : hasFcall = 0

defines bitVector :bitvector Size = 299 bSize = 38
Bits on { }

local defines bitVector :
pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (3) (5) (6) (8) (10) (12) (14) (16) (18) (20) (22) (24) (28) (29) (30) (31) (35) (36) (37) (40) (43) (44) (45) (46) (47) (48) (49) (50) (51) (52) (53) (54) (55) (56) (57) (60) (64) (65) (66) (68) (69) (74) (75) (76) (77) (81) (83) (90) (91) (92) (93) (97) (99) (103) (104) (106) (107) (108) (109) (111) (112) (115) (116) (117) (118) (119) (124) (135) (140) (141) (142) (143) (144) (149) (160) (165) (166) (167) (168) (169) (170) (171) (172) (173) (174) (175) (176) (177) (178) (179) (180) (181) (182) (183) (184) (185) (186) (187) (188) (189) (190) (191) (192) (193) (194) (195) (199) (200) (201) (202) (203) (204) (205) (206) (207) (208) (209) (210) (211) (212) (213) (214) (216) (219) (220) (221) (222) (223) (224) (225) (226) (227) (228) (229) (230) (231) (232) (233) (234) (236) (239) (240) (241) (242) (243) (244) (245) (246) (247) (248) (249) (250) (251) (252) (253) (254) (256) (259) (260) (261) (262) (263) (264) (265) (266) (267) (268) (269) (270) (271) (272) (273) (274) (276) (279) }

outDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (3) (5) (6) (8) (10) (12) (14) (16) (18) (20) (22) (24) (28) (29) (30) (31) (35) (36) (37) (40) (43) (44) (45) (46) (47) (48) (49) (50) (51) (52) (53) (54) (55) (56) (57) (60) (64) (65) (66) (68) (69) (74) (75) (76) (77) (81) (83) (90) (91) (92) (93) (97) (99) (103) (104) (106) (107) (108) (109) (111) (112) (115) (116) (117) (118) (119) (124) (135) (140) (141) (142) (143) (144) (149) (160) (165) (166) (167) (168) (169) (170) (171) (172) (173) (174) (175) (176) (177) (178) (179) (180) (181) (182) (183) (184) (185) (186) (187) (188) (189) (190) (191) (192) (193) (194) (195) (199) (200) (201) (202) (203) (204) (205) (206) (207) (208) (209) (210) (211) (212) (213) (214) (216) (219) (220) (221) (222) (223) (224) (225) (226) (227) (228) (229) (230) (231) (232) (233) (234) (236) (239) (240) (241) (242) (243) (244) (245) (246) (247) (248) (249) (250) (251) (252) (253) (254) (256) (259) (260) (261) (262) (263) (264) (265) (266) (267) (268) (269) (270) (271) (272) (273) (274) (276) (279) }

usesDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (3) (112) (279) }

----------------------------------------------------------------
check.c(l143:s263:k283:d0:s0)	 _swBrk_0($27) :
check.c(l145:s264:k284:d0:s0)		ret iTemp1 [k4 lr4:264 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _check_comando_ret_1_74}

----------------------------------------------------------------
Basic Block _return : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 37 : bbnum = 36 1st iCode = 265 , last iCode = 266
visited 1 : hasFcall = 0

defines bitVector :bitvector Size = 299 bSize = 38
Bits on { }

local defines bitVector :
pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (3) (5) (6) (8) (10) (12) (14) (16) (18) (20) (22) (24) (28) (29) (30) (31) (35) (36) (37) (40) (43) (44) (45) (46) (47) (48) (49) (50) (51) (52) (53) (54) (55) (56) (57) (60) (64) (65) (66) (68) (69) (74) (75) (76) (77) (81) (83) (90) (91) (92) (93) (97) (99) (103) (104) (106) (107) (108) (109) (111) (112) (115) (116) (117) (118) (119) (124) (135) (140) (141) (142) (143) (144) (149) (160) (165) (166) (167) (168) (169) (170) (171) (172) (173) (174) (175) (176) (177) (178) (179) (180) (181) (182) (183) (184) (185) (186) (187) (188) (189) (190) (191) (192) (193) (194) (195) (199) (200) (201) (202) (203) (204) (205) (206) (207) (208) (209) (210) (211) (212) (213) (214) (216) (219) (220) (221) (222) (223) (224) (225) (226) (227) (228) (229) (230) (231) (232) (233) (234) (236) (239) (240) (241) (242) (243) (244) (245) (246) (247) (248) (249) (250) (251) (252) (253) (254) (256) (259) (260) (261) (262) (263) (264) (265) (266) (267) (268) (269) (270) (271) (272) (273) (274) (276) (279) }

outDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (3) (5) (6) (8) (10) (12) (14) (16) (18) (20) (22) (24) (28) (29) (30) (31) (35) (36) (37) (40) (43) (44) (45) (46) (47) (48) (49) (50) (51) (52) (53) (54) (55) (56) (57) (60) (64) (65) (66) (68) (69) (74) (75) (76) (77) (81) (83) (90) (91) (92) (93) (97) (99) (103) (104) (106) (107) (108) (109) (111) (112) (115) (116) (117) (118) (119) (124) (135) (140) (141) (142) (143) (144) (149) (160) (165) (166) (167) (168) (169) (170) (171) (172) (173) (174) (175) (176) (177) (178) (179) (180) (181) (182) (183) (184) (185) (186) (187) (188) (189) (190) (191) (192) (193) (194) (195) (199) (200) (201) (202) (203) (204) (205) (206) (207) (208) (209) (210) (211) (212) (213) (214) (216) (219) (220) (221) (222) (223) (224) (225) (226) (227) (228) (229) (230) (231) (232) (233) (234) (236) (239) (240) (241) (242) (243) (244) (245) (246) (247) (248) (249) (250) (251) (252) (253) (254) (256) (259) (260) (261) (262) (263) (264) (265) (266) (267) (268) (269) (270) (271) (272) (273) (274) (276) (279) }

usesDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { }

----------------------------------------------------------------
check.c(l145:s265:k285:d0:s0)	 _return($32) :
check.c(l145:s266:k286:d0:s0)		eproc _check_comando [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char function ( char generic* fixed) fixed}
pic16_freeAllRegs
pic16_packRegisters
3007	packRegsForAssign
ic->op = =
  result:iTemp1 [k4 lr4:264 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _check_comando_ret_1_74}
  left:
  right:0xff {const-unsigned-char literal}
 3015 - actuall processing
  3027 - not packing - right is not temp
pic16_allocDirReg BAD, op is NULL
  result:iTemp1 [k4 lr4:264 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _check_comando_ret_1_74}
  left:
  right:0xff {const-unsigned-char literal}
 4213
x  left:_check_comando [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char function ( char generic* fixed) fixed}
    c   Symbol type: unsigned-char function ( char generic* fixed) fixed
 4213
x  left:_check_comando [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char function ( char generic* fixed) fixed}
    c   Symbol type: unsigned-char function ( char generic* fixed) fixed
  result:iTemp0 [k2 lr3:254 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}
          Symbol type: char generic* fixed
  4191 - pointer reg req = 0
 4213
packForReceive
  result:iTemp0 [k2 lr3:254 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}
  left:_check_comando [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char function ( char generic* fixed) fixed}
  right:
    used on left
  result:iTemp1 [k4 lr4:264 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _check_comando_ret_1_74}
          Symbol type: unsigned-char fixed
  4191 - pointer reg req = 0
 4213
x  left:iTemp0 [k2 lr3:254 so:0]{ ia1 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}
    is a ptr
    c   Symbol type: char generic* fixed
  result:iTemp3 [k7 lr5:24 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}
          Symbol type: char register
  marking as a pointer (get) =>  left:iTemp0 [k2 lr3:254 so:0]{ ia1 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}
  4191 - pointer reg req = 0
 4213
x  left:iTemp3 [k7 lr5:24 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}
    c   Symbol type: char register
  result:iTemp4 [k8 lr6:7 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}
          Symbol type: char fixed
  4191 - pointer reg req = 0
  4208
x  left:iTemp4 [k8 lr6:7 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}
    c   Symbol type: char fixed
  4191 - pointer reg req = 0
 4213
pic16_packRegisters
x  left:iTemp3 [k7 lr5:24 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}
    c   Symbol type: char register
  result:iTemp5 [k9 lr8:9 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}
          Symbol type: char fixed
  4191 - pointer reg req = 0
  4208
x  left:iTemp5 [k9 lr8:9 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}
    c   Symbol type: char fixed
  4191 - pointer reg req = 0
 4213
pic16_packRegisters
x  left:iTemp3 [k7 lr5:24 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}
    c   Symbol type: char register
  result:iTemp6 [k10 lr10:11 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}
          Symbol type: char fixed
  4191 - pointer reg req = 0
  4208
x  left:iTemp6 [k10 lr10:11 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}
    c   Symbol type: char fixed
  4191 - pointer reg req = 0
 4213
pic16_packRegisters
x  left:iTemp3 [k7 lr5:24 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}
    c   Symbol type: char register
  result:iTemp7 [k11 lr12:13 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}
          Symbol type: char fixed
  4191 - pointer reg req = 0
  4208
x  left:iTemp7 [k11 lr12:13 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}
    c   Symbol type: char fixed
  4191 - pointer reg req = 0
 4213
pic16_packRegisters
x  left:iTemp3 [k7 lr5:24 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}
    c   Symbol type: char register
  result:iTemp8 [k12 lr14:15 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}
          Symbol type: char fixed
  4191 - pointer reg req = 0
  4208
x  left:iTemp8 [k12 lr14:15 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}
    c   Symbol type: char fixed
  4191 - pointer reg req = 0
 4213
pic16_packRegisters
x  left:iTemp3 [k7 lr5:24 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}
    c   Symbol type: char register
  result:iTemp9 [k13 lr16:17 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}
          Symbol type: char fixed
  4191 - pointer reg req = 0
  4208
x  left:iTemp9 [k13 lr16:17 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}
    c   Symbol type: char fixed
  4191 - pointer reg req = 0
 4213
pic16_packRegisters
x  left:iTemp3 [k7 lr5:24 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}
    c   Symbol type: char register
  result:iTemp10 [k14 lr18:19 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}
          Symbol type: char fixed
  4191 - pointer reg req = 0
  4208
x  left:iTemp10 [k14 lr18:19 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}
    c   Symbol type: char fixed
  4191 - pointer reg req = 0
 4213
pic16_packRegisters
x  left:iTemp3 [k7 lr5:24 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}
    c   Symbol type: char register
  result:iTemp11 [k15 lr20:21 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}
          Symbol type: char fixed
  4191 - pointer reg req = 0
  4208
x  left:iTemp11 [k15 lr20:21 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}
    c   Symbol type: char fixed
  4191 - pointer reg req = 0
 4213
pic16_packRegisters
x  left:iTemp3 [k7 lr5:24 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}
    c   Symbol type: char register
  result:iTemp12 [k16 lr22:23 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}
          Symbol type: char fixed
  4191 - pointer reg req = 0
  4208
x  left:iTemp12 [k16 lr22:23 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}
    c   Symbol type: char fixed
  4191 - pointer reg req = 0
 4213
pic16_packRegisters
x  left:iTemp3 [k7 lr5:24 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}
    c   Symbol type: char register
  result:iTemp13 [k17 lr24:25 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}
          Symbol type: char fixed
  4191 - pointer reg req = 0
  4208
x  left:iTemp13 [k17 lr24:25 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}
    c   Symbol type: char fixed
  4191 - pointer reg req = 0
 4213
pic16_packRegisters
 4213
pic16_packRegisters
3007	packRegsForAssign
ic->op = =
  result:iTemp14 [k18 lr31:55 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_led_num_1_74}
  left:
  right:iTemp17 [k22 lr30:31 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}{ sir@ _check_comando_led_num_1_74}
 3015 - actuall processing
3072	Searching for iTempNN
  3097 - dic result key == ic right key -- pointer set=N
  packing. removing iTemp17
  replacing with iTemp17
  3199
  result:iTemp14 [k18 lr30:55 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_led_num_1_74}
  left:
  right:iTemp17 [k22 lr30:31 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}{ sir@ _check_comando_led_num_1_74}
 4213
x  left:iTemp0 [k2 lr3:254 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}
    is a ptr
    c   Symbol type: char generic* fixed
  result:iTemp15 [k20 lr28:29 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}
          Symbol type: char generic* fixed
  4191 - pointer reg req = 0
 4213
x  left:iTemp15 [k20 lr28:29 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}
    is a ptr
    c   Symbol type: char generic* fixed
  result:iTemp16 [k21 lr29:30 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}
          Symbol type: char register
  marking as a pointer (get) =>  left:iTemp15 [k20 lr28:29 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp16 [k21 lr29:30 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}
    c   Symbol type: char register
  result:iTemp14 [k18 lr30:55 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_led_num_1_74}
          Symbol type: char fixed
  4191 - pointer reg req = 0
 4213
x  left:iTemp14 [k18 lr30:55 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_led_num_1_74}
    c   Symbol type: char fixed
  4191 - pointer reg req = 0
 4213
pic16_packRegisters
x  left:iTemp0 [k2 lr3:254 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}
    is a ptr
    c   Symbol type: char generic* fixed
  result:iTemp18 [k24 lr33:34 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}
          Symbol type: char generic* fixed
  4191 - pointer reg req = 0
 4213
x  left:iTemp18 [k24 lr33:34 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}
    is a ptr
    c   Symbol type: char generic* fixed
  result:iTemp19 [k25 lr34:35 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}
          Symbol type: char register
  marking as a pointer (get) =>  left:iTemp18 [k24 lr33:34 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp19 [k25 lr34:35 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}
    c   Symbol type: char register
  result:iTemp20 [k26 lr35:37 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}
          Symbol type: char register
  4191 - pointer reg req = 0
 4213
  4191 - pointer reg req = 0
 4213
x  left:iTemp20 [k26 lr35:37 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}
    c   Symbol type: char register
  4191 - pointer reg req = 0
 4213
x  left:_led [k23 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( unsigned-char fixed, unsigned-char fixed) fixed}
    c   Symbol type: void function ( unsigned-char fixed, unsigned-char fixed) fixed
  result:iTemp21 [k29 lr38:38 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed}
          Symbol type: void fixed
  4191 - pointer reg req = 0
 4213
 4213
pic16_packRegisters
3007	packRegsForAssign
ic->op = =
  result:iTemp22 [k30 lr54:57 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_pwm_1_74}
  left:
  right:iTemp35 [k44 lr53:54 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}{ sir@ _check_comando_pwm_1_74}
 3015 - actuall processing
3072	Searching for iTempNN
  3097 - dic result key == ic right key -- pointer set=N
  packing. removing iTemp35
  replacing with iTemp35
  3199
  result:iTemp22 [k30 lr53:57 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_pwm_1_74}
  left:
  right:iTemp35 [k44 lr53:54 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}{ sir@ _check_comando_pwm_1_74}
 4213
x  left:iTemp0 [k2 lr3:254 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}
    is a ptr
    c   Symbol type: char generic* fixed
  result:iTemp23 [k32 lr41:42 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}
          Symbol type: char generic* fixed
  4191 - pointer reg req = 0
 4213
x  left:iTemp23 [k32 lr41:42 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}
    is a ptr
    c   Symbol type: char generic* fixed
  result:iTemp24 [k33 lr42:43 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}
          Symbol type: char register
  marking as a pointer (get) =>  left:iTemp23 [k32 lr41:42 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp24 [k33 lr42:43 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}
    c   Symbol type: char register
  result:iTemp25 [k34 lr43:44 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}
          Symbol type: char register
  4191 - pointer reg req = 0
 4213
x  left:iTemp25 [k34 lr43:44 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}
    c   Symbol type: char register
  result:iTemp26 [k35 lr44:49 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}
          Symbol type: char register
  4191 - pointer reg req = 0
 4213
x  left:iTemp0 [k2 lr3:254 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}
    is a ptr
    c   Symbol type: char generic* fixed
  result:iTemp27 [k36 lr45:46 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}
          Symbol type: char generic* fixed
  4191 - pointer reg req = 0
 4213
x  left:iTemp27 [k36 lr45:46 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}
    is a ptr
    c   Symbol type: char generic* fixed
  result:iTemp28 [k37 lr46:47 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}
          Symbol type: char register
  marking as a pointer (get) =>  left:iTemp27 [k36 lr45:46 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp28 [k37 lr46:47 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}
    c   Symbol type: char register
  result:iTemp29 [k38 lr47:48 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}
          Symbol type: char register
  4191 - pointer reg req = 0
 4213
x  left:iTemp29 [k38 lr47:48 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}
    c   Symbol type: char register
  result:iTemp30 [k39 lr48:49 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}
          Symbol type: char register
  4191 - pointer reg req = 0
 4213
x  left:iTemp26 [k35 lr44:49 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}
    c   Symbol type: char register
  right:iTemp30 [k39 lr48:49 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}
         Symbol type: char register
  result:iTemp31 [k40 lr49:52 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}
          Symbol type: char register
  4191 - pointer reg req = 0
 4213
x  left:iTemp0 [k2 lr3:254 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}
    is a ptr
    c   Symbol type: char generic* fixed
  result:iTemp32 [k41 lr50:51 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}
          Symbol type: char generic* fixed
  4191 - pointer reg req = 0
 4213
x  left:iTemp32 [k41 lr50:51 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}
    is a ptr
    c   Symbol type: char generic* fixed
  result:iTemp33 [k42 lr51:52 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}
          Symbol type: char register
  marking as a pointer (get) =>  left:iTemp32 [k41 lr50:51 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp31 [k40 lr49:52 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}
    c   Symbol type: char register
  right:iTemp33 [k42 lr51:52 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}
         Symbol type: char register
  result:iTemp34 [k43 lr52:53 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}
          Symbol type: char register
  4191 - pointer reg req = 0
 4213
x  left:iTemp34 [k43 lr52:53 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}
    c   Symbol type: char register
  result:iTemp22 [k30 lr53:57 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_pwm_1_74}
          Symbol type: char fixed
  4191 - pointer reg req = 0
 4213
x  left:iTemp14 [k18 lr30:55 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_led_num_1_74}
    c   Symbol type: char fixed
  result:iTemp36 [k46 lr55:57 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}
          Symbol type: char register
  4191 - pointer reg req = 0
 4213
x  left:iTemp36 [k46 lr55:57 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}
    c   Symbol type: char register
  4191 - pointer reg req = 0
 4213
x  left:iTemp22 [k30 lr53:57 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_pwm_1_74}
    c   Symbol type: char fixed
  4191 - pointer reg req = 0
 4213
x  left:_set_pwm [k45 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( unsigned-char fixed, unsigned-char fixed) fixed}
    c   Symbol type: void function ( unsigned-char fixed, unsigned-char fixed) fixed
  result:iTemp37 [k49 lr58:58 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed}
          Symbol type: void fixed
  4191 - pointer reg req = 0
 4213
 4213
pic16_packRegisters
pointer is set
  result:iTemp40 [k54 lr63:64 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}
  left:
  right:0x0 {const-char literal}
pointer is set
  result:iTemp42 [k57 lr66:67 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}
  left:
  right:0x0 {const-char literal}
3007	packRegsForAssign
ic->op = =
  result:iTemp50 [k66 lr68:78 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}
  left:
  right:0x1 {const-char literal}
 3015 - actuall processing
  3027 - not packing - right is not temp
pic16_allocDirReg BAD, op is NULL
  result:iTemp50 [k66 lr68:78 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}
  left:
  right:0x1 {const-char literal}
 4213
x  left:_limpa_lcd [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( ) fixed}
    c   Symbol type: void function ( ) fixed
  result:iTemp38 [k51 lr61:61 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed}
          Symbol type: void fixed
  4191 - pointer reg req = 0
 4213
x  left:_check_comando_linha_1_1_74 [k52 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [17] fixed}
    c   Symbol type: char [17] fixed
  result:iTemp39 [k53 lr62:90 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4062 - pic16_packRegisters. result is rematerializable
  4191 - pointer reg req = 0
 4213
x  left:iTemp39 [k53 lr62:90 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}
    is a ptr
    c   Symbol type: char near* fixed
  result:iTemp40 [k54 lr63:64 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp40 [k54 lr63:64 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp40 [k54 lr63:64 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:_check_comando_linha_2_1_74 [k55 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [17] fixed}
    c   Symbol type: char [17] fixed
  result:iTemp41 [k56 lr65:95 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4062 - pic16_packRegisters. result is rematerializable
  4191 - pointer reg req = 0
 4213
x  left:iTemp41 [k56 lr65:95 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}
    is a ptr
    c   Symbol type: char near* fixed
  result:iTemp42 [k57 lr66:67 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp42 [k57 lr66:67 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp42 [k57 lr66:67 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
  result:iTemp50 [k66 lr68:78 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}
          Symbol type: char fixed
  4191 - pointer reg req = 0
 4213
pic16_packRegisters
 4213
pic16_packRegisters
pointer is set
  result:iTemp46 [k62 lr72:75 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}
  left:
  right:iTemp48 [k64 lr74:75 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}
 4213
x  left:iTemp50 [k66 lr68:78 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}
    c   Symbol type: char fixed
  result:iTemp45 [k61 lr71:72 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}
          Symbol type: char register
  4191 - pointer reg req = 0
 4213
x  left:iTemp39 [k53 lr62:90 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}
    is a ptr
    c   Symbol type: char near* fixed
  right:iTemp45 [k61 lr71:72 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}
         Symbol type: char register
  result:iTemp46 [k62 lr72:75 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4191 - pointer reg req = 0
 4213
x  left:iTemp0 [k2 lr3:254 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}
    is a ptr
    c   Symbol type: char generic* fixed
  right:iTemp50 [k66 lr68:78 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}
         Symbol type: char fixed
  result:iTemp47 [k63 lr73:74 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}
          Symbol type: char generic* fixed
  4191 - pointer reg req = 0
 4213
x  left:iTemp47 [k63 lr73:74 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}
    is a ptr
    c   Symbol type: char generic* fixed
  result:iTemp48 [k64 lr74:75 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}
          Symbol type: char register
  marking as a pointer (get) =>  left:iTemp47 [k63 lr73:74 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}
  4191 - pointer reg req = 0
 4213
  right:iTemp48 [k64 lr74:75 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}
         Symbol type: char register
  result:iTemp46 [k62 lr72:75 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp46 [k62 lr72:75 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp50 [k66 lr68:78 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}
    c   Symbol type: char fixed
  result:iTemp50 [k66 lr68:78 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}
          Symbol type: char fixed
  4191 - pointer reg req = 0
 4213
x  left:iTemp50 [k66 lr68:78 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}
    c   Symbol type: char fixed
  result:iTemp51 [k67 lr77:78 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}
          Symbol type: char fixed
  4191 - pointer reg req = 0
  4208
x  left:iTemp51 [k67 lr77:78 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}
    c   Symbol type: char fixed
  4191 - pointer reg req = 0
 4213
pic16_packRegisters
3007	packRegsForAssign
ic->op = =
  result:iTemp58 [k74 lr79:89 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}
  left:
  right:0x11 {const-char literal}
 3015 - actuall processing
  3027 - not packing - right is not temp
pic16_allocDirReg BAD, op is NULL
  result:iTemp58 [k74 lr79:89 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}
  left:
  right:0x11 {const-char literal}
  result:iTemp58 [k74 lr79:89 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}
          Symbol type: char fixed
  4191 - pointer reg req = 0
 4213
pic16_packRegisters
 4213
pic16_packRegisters
pointer is set
  result:iTemp54 [k70 lr83:86 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}
  left:
  right:iTemp56 [k72 lr85:86 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}
 4213
x  left:iTemp58 [k74 lr79:89 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}
    c   Symbol type: char fixed
  result:iTemp53 [k69 lr82:83 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}
          Symbol type: char register
  4191 - pointer reg req = 0
 4213
x  left:iTemp41 [k56 lr65:95 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}
    is a ptr
    c   Symbol type: char near* fixed
  right:iTemp53 [k69 lr82:83 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}
         Symbol type: char register
  result:iTemp54 [k70 lr83:86 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4191 - pointer reg req = 0
 4213
x  left:iTemp0 [k2 lr3:254 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}
    is a ptr
    c   Symbol type: char generic* fixed
  right:iTemp58 [k74 lr79:89 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}
         Symbol type: char fixed
  result:iTemp55 [k71 lr84:85 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}
          Symbol type: char generic* fixed
  4191 - pointer reg req = 0
 4213
x  left:iTemp55 [k71 lr84:85 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}
    is a ptr
    c   Symbol type: char generic* fixed
  result:iTemp56 [k72 lr85:86 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}
          Symbol type: char register
  marking as a pointer (get) =>  left:iTemp55 [k71 lr84:85 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}
  4191 - pointer reg req = 0
 4213
  right:iTemp56 [k72 lr85:86 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}
         Symbol type: char register
  result:iTemp54 [k70 lr83:86 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp54 [k70 lr83:86 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp58 [k74 lr79:89 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}
    c   Symbol type: char fixed
  result:iTemp58 [k74 lr79:89 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}
          Symbol type: char fixed
  4191 - pointer reg req = 0
 4213
x  left:iTemp58 [k74 lr79:89 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}
    c   Symbol type: char fixed
  result:iTemp59 [k75 lr88:89 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}
          Symbol type: char fixed
  4191 - pointer reg req = 0
  4208
x  left:iTemp59 [k75 lr88:89 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}
    c   Symbol type: char fixed
  4191 - pointer reg req = 0
 4213
pic16_packRegisters
3007	packRegsForAssign
ic->op = =
  result:iTemp60 [k77 lr90:91 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}
  left:
  right:iTemp39 [k53 lr62:90 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}
 3015 - actuall processing
  result:iTemp60 [k77 lr90:91 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}
  left:
  right:iTemp39 [k53 lr62:90 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}
3007	packRegsForAssign
ic->op = =
  result:iTemp64 [k83 lr95:96 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}
  left:
  right:iTemp41 [k56 lr65:95 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}
 3015 - actuall processing
3072	Searching for iTempNN
3072	Searching for iTempNN
3072	Searching for iTempNN
3072	Searching for iTempNN
3072	Searching for iTempNN
  result:iTemp64 [k83 lr95:96 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}
  left:
  right:iTemp41 [k56 lr65:95 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}
3007	packRegsForAssign
ic->op = =
  result:iTemp1 [k4 lr4:264 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _check_comando_ret_1_74}
  left:
  right:0x34 {const-unsigned-char literal}
 3015 - actuall processing
  3027 - not packing - right is not temp
pic16_allocDirReg BAD, op is NULL
  result:iTemp1 [k4 lr4:264 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _check_comando_ret_1_74}
  left:
  right:0x34 {const-unsigned-char literal}
  right:iTemp39 [k53 lr62:90 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}
         Symbol type: char near* fixed
  result:iTemp60 [k77 lr90:91 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4078 - pic16_packRegisters. straight rematerializable
  4191 - pointer reg req = 0
 4213
  right:iTemp60 [k77 lr90:91 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}
         Symbol type: char near* fixed
  result:iTemp61 [k78 lr91:92 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}
          Symbol type: char generic* fixed
  4191 - pointer reg req = 0
 4213
x  left:iTemp61 [k78 lr91:92 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}
    is a ptr
    c   Symbol type: char generic* fixed
  4191 - pointer reg req = 0
 4213
x  left:_print_lcd_string [k76 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char generic* fixed) fixed}
    c   Symbol type: void function ( char generic* fixed) fixed
  result:iTemp62 [k80 lr93:93 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed}
          Symbol type: void fixed
  4191 - pointer reg req = 0
 4213
x  left:_print_lcd_ln [k81 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( ) fixed}
    c   Symbol type: void function ( ) fixed
  result:iTemp63 [k82 lr94:94 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed}
          Symbol type: void fixed
  4191 - pointer reg req = 0
 4213
  right:iTemp41 [k56 lr65:95 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}
         Symbol type: char near* fixed
  result:iTemp64 [k83 lr95:96 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4078 - pic16_packRegisters. straight rematerializable
  4191 - pointer reg req = 0
 4213
  right:iTemp64 [k83 lr95:96 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}
         Symbol type: char near* fixed
  result:iTemp65 [k84 lr96:97 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}
          Symbol type: char generic* fixed
  4191 - pointer reg req = 0
 4213
x  left:iTemp65 [k84 lr96:97 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}
    is a ptr
    c   Symbol type: char generic* fixed
  4191 - pointer reg req = 0
 4213
x  left:_print_lcd_string [k76 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char generic* fixed) fixed}
    c   Symbol type: void function ( char generic* fixed) fixed
  result:iTemp66 [k85 lr98:98 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed}
          Symbol type: void fixed
  4191 - pointer reg req = 0
 4213
  result:iTemp1 [k4 lr4:264 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _check_comando_ret_1_74}
          Symbol type: unsigned-char fixed
  4191 - pointer reg req = 0
 4213
 4213
pic16_packRegisters
 4213
x  left:iTemp0 [k2 lr3:254 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}
    is a ptr
    c   Symbol type: char generic* fixed
  result:iTemp67 [k86 lr102:103 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}
          Symbol type: char generic* fixed
  4191 - pointer reg req = 0
 4213
x  left:iTemp67 [k86 lr102:103 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}
    is a ptr
    c   Symbol type: char generic* fixed
  result:iTemp68 [k87 lr103:104 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}
          Symbol type: char register
  marking as a pointer (get) =>  left:iTemp67 [k86 lr102:103 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}
  4191 - pointer reg req = 0
 4213
  right:iTemp68 [k87 lr103:104 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}
         Symbol type: char register
  result:iTemp69 [k88 lr104:105 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}
          Symbol type: int fixed
  4191 - pointer reg req = 0
 4213
x  left:iTemp69 [k88 lr104:105 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}
    c   Symbol type: int fixed
  result:iTemp70 [k89 lr105:111 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}
          Symbol type: int register
  4191 - pointer reg req = 0
 4213
x  left:iTemp70 [k89 lr105:111 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}
    c   Symbol type: int register
  result:iTemp71 [k90 lr106:107 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}
          Symbol type: char fixed
  4191 - pointer reg req = 0
  4208
x  left:iTemp71 [k90 lr106:107 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}
    c   Symbol type: char fixed
  4191 - pointer reg req = 0
 4213
pic16_packRegisters
3007	packRegsForAssign
ic->op = =
  result:_hab_alarme [k91 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}
  left:
  right:0x1 {const-unsigned-char literal}
 3015 - actuall processing
pic16_allocDirReg:815 symbol name _hab_alarme
  827  storage class 0 
 832  integral
 838  specifier
_hab_alarme [k91 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}
894  -- added _hab_alarme to hash, size = 1
  3019 - result is not temp
  3027 - not packing - right is not temp
pic16_allocDirReg BAD, op is NULL
  result:_hab_alarme [k91 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}
  left:
  right:0x1 {const-unsigned-char literal}
  result:_hab_alarme [k91 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}
          Symbol type: unsigned-char fixed
  result:_hab_alarme [k91 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}
          Symbol type: unsigned-char fixed
  4191 - pointer reg req = 0
 4213
 4213
pic16_packRegisters
 4213
x  left:iTemp70 [k89 lr105:111 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}
    c   Symbol type: int register
  4191 - pointer reg req = 0
 4213
pic16_packRegisters
3007	packRegsForAssign
ic->op = =
  result:_hab_alarme [k91 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}
  left:
  right:0x0 {const-unsigned-char literal}
 3015 - actuall processing
pic16_allocDirReg:815 symbol name _hab_alarme
  827  storage class 0 
 832  integral
 838  specifier
_hab_alarme [k91 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}
  3019 - result is not temp
  3027 - not packing - right is not temp
pic16_allocDirReg BAD, op is NULL
  result:_hab_alarme [k91 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}
  left:
  right:0x0 {const-unsigned-char literal}
  result:_hab_alarme [k91 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}
          Symbol type: unsigned-char fixed
  result:_hab_alarme [k91 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}
          Symbol type: unsigned-char fixed
  4191 - pointer reg req = 0
 4213
 4213
pic16_packRegisters
 4213
x  left:iTemp0 [k2 lr3:254 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}
    is a ptr
    c   Symbol type: char generic* fixed
  result:iTemp78 [k98 lr115:116 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}
          Symbol type: char generic* fixed
  4191 - pointer reg req = 0
 4213
x  left:iTemp78 [k98 lr115:116 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}
    is a ptr
    c   Symbol type: char generic* fixed
  result:iTemp79 [k99 lr116:117 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}
          Symbol type: char register
  marking as a pointer (get) =>  left:iTemp78 [k98 lr115:116 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}
  4191 - pointer reg req = 0
 4213
  right:iTemp79 [k99 lr116:117 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}
         Symbol type: char register
  result:iTemp80 [k100 lr117:118 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}
          Symbol type: int fixed
  4191 - pointer reg req = 0
 4213
x  left:iTemp80 [k100 lr117:118 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}
    c   Symbol type: int fixed
  result:iTemp81 [k101 lr118:124 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}
          Symbol type: int register
  4191 - pointer reg req = 0
 4213
x  left:iTemp81 [k101 lr118:124 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}
    c   Symbol type: int register
  result:iTemp82 [k102 lr119:120 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}
          Symbol type: char fixed
  4191 - pointer reg req = 0
  4208
x  left:iTemp82 [k102 lr119:120 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}
    c   Symbol type: char fixed
  4191 - pointer reg req = 0
 4213
pic16_packRegisters
3007	packRegsForAssign
ic->op = =
  result:_hab_sensor [k103 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}
  left:
  right:0x0 {const-unsigned-char literal}
 3015 - actuall processing
pic16_allocDirReg:815 symbol name _hab_sensor
  827  storage class 0 
 832  integral
 838  specifier
_hab_sensor [k103 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}
894  -- added _hab_sensor to hash, size = 1
  3019 - result is not temp
  3027 - not packing - right is not temp
pic16_allocDirReg BAD, op is NULL
  result:_hab_sensor [k103 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}
  left:
  right:0x0 {const-unsigned-char literal}
  result:_hab_sensor [k103 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}
          Symbol type: unsigned-char fixed
  result:_hab_sensor [k103 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}
          Symbol type: unsigned-char fixed
  4191 - pointer reg req = 0
 4213
 4213
pic16_packRegisters
 4213
x  left:iTemp81 [k101 lr118:124 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}
    c   Symbol type: int register
  4191 - pointer reg req = 0
 4213
pic16_packRegisters
3007	packRegsForAssign
ic->op = =
  result:_hab_sensor [k103 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}
  left:
  right:0x2 {const-unsigned-char literal}
 3015 - actuall processing
pic16_allocDirReg:815 symbol name _hab_sensor
  827  storage class 0 
 832  integral
 838  specifier
_hab_sensor [k103 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}
  3019 - result is not temp
  3027 - not packing - right is not temp
pic16_allocDirReg BAD, op is NULL
  result:_hab_sensor [k103 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}
  left:
  right:0x2 {const-unsigned-char literal}
  result:_hab_sensor [k103 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}
          Symbol type: unsigned-char fixed
  result:_hab_sensor [k103 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}
          Symbol type: unsigned-char fixed
  4191 - pointer reg req = 0
 4213
 4213
pic16_packRegisters
pointer is set
  result:iTemp90 [k112 lr129:167 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int near* fixed}
  left:
  right:iTemp119 [k141 lr166:167 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}
 4213
x  left:_sys_timer_pool [k110 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int [2] fixed}
    c   Symbol type: unsigned-long-int [2] fixed
  result:iTemp89 [k111 lr128:129 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int near* fixed}
          Symbol type: unsigned-long-int near* fixed
  4062 - pic16_packRegisters. result is rematerializable
  4191 - pointer reg req = 0
 4213
x  left:iTemp89 [k111 lr128:129 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{unsigned-long-int near* fixed}
    is a ptr
    c   Symbol type: unsigned-long-int near* fixed
  result:iTemp90 [k112 lr129:167 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int near* fixed}
          Symbol type: unsigned-long-int near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
x  left:iTemp0 [k2 lr3:254 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}
    is a ptr
    c   Symbol type: char generic* fixed
  result:iTemp91 [k113 lr130:131 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}
          Symbol type: char generic* fixed
  4191 - pointer reg req = 0
 4213
x  left:iTemp91 [k113 lr130:131 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}
    is a ptr
    c   Symbol type: char generic* fixed
  result:iTemp92 [k114 lr131:132 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}
          Symbol type: char register
  marking as a pointer (get) =>  left:iTemp91 [k113 lr130:131 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}
  4191 - pointer reg req = 0
 4213
  right:iTemp92 [k114 lr131:132 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}
         Symbol type: char register
  result:iTemp93 [k115 lr132:133 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}
          Symbol type: int fixed
  4191 - pointer reg req = 0
 4213
x  left:iTemp93 [k115 lr132:133 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}
    c   Symbol type: int fixed
  result:iTemp94 [k116 lr133:135 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}
          Symbol type: int register
  4191 - pointer reg req = 0
 4213
  4191 - pointer reg req = 0
 4213
x  left:iTemp94 [k116 lr133:135 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}
    c   Symbol type: int register
  4191 - pointer reg req = 0
 4213
x  left:__mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
    c   Symbol type: int function ( int fixed, int fixed) fixed
  result:iTemp95 [k117 lr136:144 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}
          Symbol type: int register
  4191 - pointer reg req = 0
 4213
x  left:iTemp0 [k2 lr3:254 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}
    is a ptr
    c   Symbol type: char generic* fixed
  result:iTemp96 [k118 lr137:138 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}
          Symbol type: char generic* fixed
  4191 - pointer reg req = 0
 4213
x  left:iTemp96 [k118 lr137:138 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}
    is a ptr
    c   Symbol type: char generic* fixed
  result:iTemp97 [k119 lr138:139 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}
          Symbol type: char register
  marking as a pointer (get) =>  left:iTemp96 [k118 lr137:138 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}
  4191 - pointer reg req = 0
 4213
  right:iTemp97 [k119 lr138:139 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}
         Symbol type: char register
  result:iTemp98 [k120 lr139:140 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}
          Symbol type: int fixed
  4191 - pointer reg req = 0
 4213
x  left:iTemp98 [k120 lr139:140 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}
    c   Symbol type: int fixed
  result:iTemp99 [k121 lr140:142 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}
          Symbol type: int register
  4191 - pointer reg req = 0
 4213
  4191 - pointer reg req = 0
 4213
x  left:iTemp99 [k121 lr140:142 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}
    c   Symbol type: int register
  4191 - pointer reg req = 0
 4213
x  left:__mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
    c   Symbol type: int function ( int fixed, int fixed) fixed
  result:iTemp100 [k122 lr143:144 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}
          Symbol type: int register
  4191 - pointer reg req = 0
 4213
x  left:iTemp95 [k117 lr136:144 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}
    c   Symbol type: int register
  right:iTemp100 [k122 lr143:144 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}
         Symbol type: int register
  result:iTemp101 [k123 lr144:152 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}
          Symbol type: int register
  4191 - pointer reg req = 0
 4213
x  left:iTemp0 [k2 lr3:254 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}
    is a ptr
    c   Symbol type: char generic* fixed
  result:iTemp102 [k124 lr145:146 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}
          Symbol type: char generic* fixed
  4191 - pointer reg req = 0
 4213
x  left:iTemp102 [k124 lr145:146 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}
    is a ptr
    c   Symbol type: char generic* fixed
  result:iTemp103 [k125 lr146:147 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}
          Symbol type: char register
  marking as a pointer (get) =>  left:iTemp102 [k124 lr145:146 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}
  4191 - pointer reg req = 0
 4213
  right:iTemp103 [k125 lr146:147 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}
         Symbol type: char register
  result:iTemp104 [k126 lr147:148 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}
          Symbol type: int fixed
  4191 - pointer reg req = 0
 4213
x  left:iTemp104 [k126 lr147:148 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}
    c   Symbol type: int fixed
  result:iTemp105 [k127 lr148:150 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}
          Symbol type: int register
  4191 - pointer reg req = 0
 4213
  4191 - pointer reg req = 0
 4213
x  left:iTemp105 [k127 lr148:150 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}
    c   Symbol type: int register
  4191 - pointer reg req = 0
 4213
x  left:__mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
    c   Symbol type: int function ( int fixed, int fixed) fixed
  result:iTemp106 [k128 lr151:152 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}
          Symbol type: int register
  4191 - pointer reg req = 0
 4213
x  left:iTemp101 [k123 lr144:152 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}
    c   Symbol type: int register
  right:iTemp106 [k128 lr151:152 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}
         Symbol type: int register
  result:iTemp107 [k129 lr152:160 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}
          Symbol type: int register
  4191 - pointer reg req = 0
 4213
x  left:iTemp0 [k2 lr3:254 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}
    is a ptr
    c   Symbol type: char generic* fixed
  result:iTemp108 [k130 lr153:154 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}
          Symbol type: char generic* fixed
  4191 - pointer reg req = 0
 4213
x  left:iTemp108 [k130 lr153:154 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}
    is a ptr
    c   Symbol type: char generic* fixed
  result:iTemp109 [k131 lr154:155 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}
          Symbol type: char register
  marking as a pointer (get) =>  left:iTemp108 [k130 lr153:154 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}
  4191 - pointer reg req = 0
 4213
  right:iTemp109 [k131 lr154:155 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}
         Symbol type: char register
  result:iTemp110 [k132 lr155:156 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}
          Symbol type: int fixed
  4191 - pointer reg req = 0
 4213
x  left:iTemp110 [k132 lr155:156 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}
    c   Symbol type: int fixed
  result:iTemp111 [k133 lr156:158 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}
          Symbol type: int register
  4191 - pointer reg req = 0
 4213
  4191 - pointer reg req = 0
 4213
x  left:iTemp111 [k133 lr156:158 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}
    c   Symbol type: int register
  4191 - pointer reg req = 0
 4213
x  left:__mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
    c   Symbol type: int function ( int fixed, int fixed) fixed
  result:iTemp112 [k134 lr159:160 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}
          Symbol type: int register
  4191 - pointer reg req = 0
 4213
x  left:iTemp107 [k129 lr152:160 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}
    c   Symbol type: int register
  right:iTemp112 [k134 lr159:160 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}
         Symbol type: int register
  result:iTemp113 [k135 lr160:164 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}
          Symbol type: int register
  4191 - pointer reg req = 0
 4213
x  left:iTemp0 [k2 lr3:254 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}
    is a ptr
    c   Symbol type: char generic* fixed
  result:iTemp114 [k136 lr161:162 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}
          Symbol type: char generic* fixed
  4191 - pointer reg req = 0
 4213
x  left:iTemp114 [k136 lr161:162 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}
    is a ptr
    c   Symbol type: char generic* fixed
  result:iTemp115 [k137 lr162:163 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}
          Symbol type: char register
  marking as a pointer (get) =>  left:iTemp114 [k136 lr161:162 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}
  4191 - pointer reg req = 0
 4213
  right:iTemp115 [k137 lr162:163 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}
         Symbol type: char register
  result:iTemp116 [k138 lr163:164 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}
          Symbol type: int fixed
  4191 - pointer reg req = 0
 4213
x  left:iTemp113 [k135 lr160:164 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}
    c   Symbol type: int register
  right:iTemp116 [k138 lr163:164 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}
         Symbol type: int fixed
  result:iTemp117 [k139 lr164:165 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}
          Symbol type: int fixed
  4191 - pointer reg req = 0
 4213
x  left:iTemp117 [k139 lr164:165 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}
    c   Symbol type: int fixed
  result:iTemp118 [k140 lr165:166 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}
          Symbol type: int register
  4191 - pointer reg req = 0
 4213
  right:iTemp118 [k140 lr165:166 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}
         Symbol type: int register
  result:iTemp119 [k141 lr166:167 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}
          Symbol type: unsigned-long-int fixed
  4191 - pointer reg req = 0
 4213
  right:iTemp119 [k141 lr166:167 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}
         Symbol type: unsigned-long-int fixed
  result:iTemp90 [k112 lr129:167 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{unsigned-long-int near* fixed}
          Symbol type: unsigned-long-int near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp90 [k112 lr129:167 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{unsigned-long-int near* fixed}
  4191 - pointer reg req = 0
 4213
 4213
pic16_packRegisters
3007	packRegsForAssign
ic->op = =
  result:_sys_temp_min [k142 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed}
  left:
  right:iTemp135 [k158 lr189:190 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}
 3015 - actuall processing
pic16_allocDirReg:815 symbol name _sys_temp_min
  827  storage class 0 
 832  integral
 838  specifier
_sys_temp_min [k142 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed}
894  -- added _sys_temp_min to hash, size = 2
  3019 - result is not temp
3072	Searching for iTempNN
  3097 - dic result key == ic right key -- pointer set=N
  packing. removing iTemp135
  replacing with iTemp135
  3199
  result:_sys_temp_min [k142 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed}
  left:
  right:iTemp135 [k158 lr189:190 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}
 4213
x  left:iTemp0 [k2 lr3:254 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}
    is a ptr
    c   Symbol type: char generic* fixed
  result:iTemp120 [k143 lr170:171 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}
          Symbol type: char generic* fixed
  4191 - pointer reg req = 0
 4213
x  left:iTemp120 [k143 lr170:171 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}
    is a ptr
    c   Symbol type: char generic* fixed
  result:iTemp121 [k144 lr171:172 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}
          Symbol type: char register
  marking as a pointer (get) =>  left:iTemp120 [k143 lr170:171 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}
  4191 - pointer reg req = 0
 4213
  right:iTemp121 [k144 lr171:172 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}
         Symbol type: char register
  result:iTemp122 [k145 lr172:173 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}
          Symbol type: int fixed
  4191 - pointer reg req = 0
 4213
x  left:iTemp122 [k145 lr172:173 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}
    c   Symbol type: int fixed
  result:iTemp123 [k146 lr173:175 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}
          Symbol type: int register
  4191 - pointer reg req = 0
 4213
  4191 - pointer reg req = 0
 4213
x  left:iTemp123 [k146 lr173:175 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}
    c   Symbol type: int register
  4191 - pointer reg req = 0
 4213
x  left:__mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
    c   Symbol type: int function ( int fixed, int fixed) fixed
  result:iTemp124 [k147 lr176:184 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}
          Symbol type: int register
  4191 - pointer reg req = 0
 4213
x  left:iTemp0 [k2 lr3:254 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}
    is a ptr
    c   Symbol type: char generic* fixed
  result:iTemp125 [k148 lr177:178 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}
          Symbol type: char generic* fixed
  4191 - pointer reg req = 0
 4213
x  left:iTemp125 [k148 lr177:178 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}
    is a ptr
    c   Symbol type: char generic* fixed
  result:iTemp126 [k149 lr178:179 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}
          Symbol type: char register
  marking as a pointer (get) =>  left:iTemp125 [k148 lr177:178 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}
  4191 - pointer reg req = 0
 4213
  right:iTemp126 [k149 lr178:179 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}
         Symbol type: char register
  result:iTemp127 [k150 lr179:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}
          Symbol type: int fixed
  4191 - pointer reg req = 0
 4213
x  left:iTemp127 [k150 lr179:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}
    c   Symbol type: int fixed
  result:iTemp128 [k151 lr180:182 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}
          Symbol type: int register
  4191 - pointer reg req = 0
 4213
  4191 - pointer reg req = 0
 4213
x  left:iTemp128 [k151 lr180:182 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}
    c   Symbol type: int register
  4191 - pointer reg req = 0
 4213
x  left:__mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
    c   Symbol type: int function ( int fixed, int fixed) fixed
  result:iTemp129 [k152 lr183:184 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}
          Symbol type: int register
  4191 - pointer reg req = 0
 4213
x  left:iTemp124 [k147 lr176:184 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}
    c   Symbol type: int register
  right:iTemp129 [k152 lr183:184 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}
         Symbol type: int register
  result:iTemp130 [k153 lr184:189 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}
          Symbol type: int register
  4191 - pointer reg req = 0
 4213
x  left:iTemp0 [k2 lr3:254 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}
    is a ptr
    c   Symbol type: char generic* fixed
  result:iTemp131 [k154 lr185:186 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}
          Symbol type: char generic* fixed
  4191 - pointer reg req = 0
 4213
x  left:iTemp131 [k154 lr185:186 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}
    is a ptr
    c   Symbol type: char generic* fixed
  result:iTemp132 [k155 lr186:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}
          Symbol type: char register
  marking as a pointer (get) =>  left:iTemp131 [k154 lr185:186 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}
  4191 - pointer reg req = 0
 4213
  right:iTemp132 [k155 lr186:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}
         Symbol type: char register
  result:iTemp133 [k156 lr187:188 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}
          Symbol type: int fixed
  4191 - pointer reg req = 0
 4213
x  left:iTemp133 [k156 lr187:188 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}
    c   Symbol type: int fixed
  result:iTemp134 [k157 lr188:189 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}
          Symbol type: int register
  4191 - pointer reg req = 0
 4213
x  left:iTemp130 [k153 lr184:189 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}
    c   Symbol type: int register
  right:iTemp134 [k157 lr188:189 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}
         Symbol type: int register
  result:_sys_temp_min [k142 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed}
          Symbol type: unsigned-int fixed
  result:_sys_temp_min [k142 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed}
          Symbol type: unsigned-int fixed
  4191 - pointer reg req = 0
 4213
 4213
pic16_packRegisters
3007	packRegsForAssign
ic->op = =
  result:_sys_temp_max [k160 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed}
  left:
  right:iTemp152 [k176 lr212:213 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}
 3015 - actuall processing
pic16_allocDirReg:815 symbol name _sys_temp_max
  827  storage class 0 
 832  integral
 838  specifier
_sys_temp_max [k160 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed}
894  -- added _sys_temp_max to hash, size = 2
  3019 - result is not temp
3072	Searching for iTempNN
  3097 - dic result key == ic right key -- pointer set=N
  packing. removing iTemp152
  replacing with iTemp152
  3199
  result:_sys_temp_max [k160 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed}
  left:
  right:iTemp152 [k176 lr212:213 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}
 4213
x  left:iTemp0 [k2 lr3:254 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}
    is a ptr
    c   Symbol type: char generic* fixed
  result:iTemp137 [k161 lr193:194 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}
          Symbol type: char generic* fixed
  4191 - pointer reg req = 0
 4213
x  left:iTemp137 [k161 lr193:194 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}
    is a ptr
    c   Symbol type: char generic* fixed
  result:iTemp138 [k162 lr194:195 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}
          Symbol type: char register
  marking as a pointer (get) =>  left:iTemp137 [k161 lr193:194 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}
  4191 - pointer reg req = 0
 4213
  right:iTemp138 [k162 lr194:195 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}
         Symbol type: char register
  result:iTemp139 [k163 lr195:196 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}
          Symbol type: int fixed
  4191 - pointer reg req = 0
 4213
x  left:iTemp139 [k163 lr195:196 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}
    c   Symbol type: int fixed
  result:iTemp140 [k164 lr196:198 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}
          Symbol type: int register
  4191 - pointer reg req = 0
 4213
  4191 - pointer reg req = 0
 4213
x  left:iTemp140 [k164 lr196:198 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}
    c   Symbol type: int register
  4191 - pointer reg req = 0
 4213
x  left:__mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
    c   Symbol type: int function ( int fixed, int fixed) fixed
  result:iTemp141 [k165 lr199:207 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}
          Symbol type: int register
  4191 - pointer reg req = 0
 4213
x  left:iTemp0 [k2 lr3:254 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}
    is a ptr
    c   Symbol type: char generic* fixed
  result:iTemp142 [k166 lr200:201 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}
          Symbol type: char generic* fixed
  4191 - pointer reg req = 0
 4213
x  left:iTemp142 [k166 lr200:201 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}
    is a ptr
    c   Symbol type: char generic* fixed
  result:iTemp143 [k167 lr201:202 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}
          Symbol type: char register
  marking as a pointer (get) =>  left:iTemp142 [k166 lr200:201 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}
  4191 - pointer reg req = 0
 4213
  right:iTemp143 [k167 lr201:202 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}
         Symbol type: char register
  result:iTemp144 [k168 lr202:203 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}
          Symbol type: int fixed
  4191 - pointer reg req = 0
 4213
x  left:iTemp144 [k168 lr202:203 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}
    c   Symbol type: int fixed
  result:iTemp145 [k169 lr203:205 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}
          Symbol type: int register
  4191 - pointer reg req = 0
 4213
  4191 - pointer reg req = 0
 4213
x  left:iTemp145 [k169 lr203:205 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}
    c   Symbol type: int register
  4191 - pointer reg req = 0
 4213
x  left:__mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
    c   Symbol type: int function ( int fixed, int fixed) fixed
  result:iTemp146 [k170 lr206:207 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}
          Symbol type: int register
  4191 - pointer reg req = 0
 4213
x  left:iTemp141 [k165 lr199:207 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}
    c   Symbol type: int register
  right:iTemp146 [k170 lr206:207 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}
         Symbol type: int register
  result:iTemp147 [k171 lr207:212 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}
          Symbol type: int register
  4191 - pointer reg req = 0
 4213
x  left:iTemp0 [k2 lr3:254 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}
    is a ptr
    c   Symbol type: char generic* fixed
  result:iTemp148 [k172 lr208:209 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}
          Symbol type: char generic* fixed
  4191 - pointer reg req = 0
 4213
x  left:iTemp148 [k172 lr208:209 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}
    is a ptr
    c   Symbol type: char generic* fixed
  result:iTemp149 [k173 lr209:210 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}
          Symbol type: char register
  marking as a pointer (get) =>  left:iTemp148 [k172 lr208:209 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}
  4191 - pointer reg req = 0
 4213
  right:iTemp149 [k173 lr209:210 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}
         Symbol type: char register
  result:iTemp150 [k174 lr210:211 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}
          Symbol type: int fixed
  4191 - pointer reg req = 0
 4213
x  left:iTemp150 [k174 lr210:211 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}
    c   Symbol type: int fixed
  result:iTemp151 [k175 lr211:212 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}
          Symbol type: int register
  4191 - pointer reg req = 0
 4213
x  left:iTemp147 [k171 lr207:212 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}
    c   Symbol type: int register
  right:iTemp151 [k175 lr211:212 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}
         Symbol type: int register
  result:_sys_temp_max [k160 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed}
          Symbol type: unsigned-int fixed
  result:_sys_temp_max [k160 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed}
          Symbol type: unsigned-int fixed
  4191 - pointer reg req = 0
 4213
 4213
pic16_packRegisters
3007	packRegsForAssign
ic->op = =
  result:_sys_lumi_min [k178 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed}
  left:
  right:iTemp169 [k194 lr235:236 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}
 3015 - actuall processing
pic16_allocDirReg:815 symbol name _sys_lumi_min
  827  storage class 0 
 832  integral
 838  specifier
_sys_lumi_min [k178 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed}
894  -- added _sys_lumi_min to hash, size = 2
  3019 - result is not temp
3072	Searching for iTempNN
  3097 - dic result key == ic right key -- pointer set=N
  packing. removing iTemp169
  replacing with iTemp169
  3199
  result:_sys_lumi_min [k178 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed}
  left:
  right:iTemp169 [k194 lr235:236 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}
 4213
x  left:iTemp0 [k2 lr3:254 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}
    is a ptr
    c   Symbol type: char generic* fixed
  result:iTemp154 [k179 lr216:217 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}
          Symbol type: char generic* fixed
  4191 - pointer reg req = 0
 4213
x  left:iTemp154 [k179 lr216:217 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}
    is a ptr
    c   Symbol type: char generic* fixed
  result:iTemp155 [k180 lr217:218 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}
          Symbol type: char register
  marking as a pointer (get) =>  left:iTemp154 [k179 lr216:217 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}
  4191 - pointer reg req = 0
 4213
  right:iTemp155 [k180 lr217:218 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}
         Symbol type: char register
  result:iTemp156 [k181 lr218:219 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}
          Symbol type: int fixed
  4191 - pointer reg req = 0
 4213
x  left:iTemp156 [k181 lr218:219 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}
    c   Symbol type: int fixed
  result:iTemp157 [k182 lr219:221 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}
          Symbol type: int register
  4191 - pointer reg req = 0
 4213
  4191 - pointer reg req = 0
 4213
x  left:iTemp157 [k182 lr219:221 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}
    c   Symbol type: int register
  4191 - pointer reg req = 0
 4213
x  left:__mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
    c   Symbol type: int function ( int fixed, int fixed) fixed
  result:iTemp158 [k183 lr222:230 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}
          Symbol type: int register
  4191 - pointer reg req = 0
 4213
x  left:iTemp0 [k2 lr3:254 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}
    is a ptr
    c   Symbol type: char generic* fixed
  result:iTemp159 [k184 lr223:224 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}
          Symbol type: char generic* fixed
  4191 - pointer reg req = 0
 4213
x  left:iTemp159 [k184 lr223:224 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}
    is a ptr
    c   Symbol type: char generic* fixed
  result:iTemp160 [k185 lr224:225 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}
          Symbol type: char register
  marking as a pointer (get) =>  left:iTemp159 [k184 lr223:224 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}
  4191 - pointer reg req = 0
 4213
  right:iTemp160 [k185 lr224:225 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}
         Symbol type: char register
  result:iTemp161 [k186 lr225:226 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}
          Symbol type: int fixed
  4191 - pointer reg req = 0
 4213
x  left:iTemp161 [k186 lr225:226 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}
    c   Symbol type: int fixed
  result:iTemp162 [k187 lr226:228 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}
          Symbol type: int register
  4191 - pointer reg req = 0
 4213
  4191 - pointer reg req = 0
 4213
x  left:iTemp162 [k187 lr226:228 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}
    c   Symbol type: int register
  4191 - pointer reg req = 0
 4213
x  left:__mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
    c   Symbol type: int function ( int fixed, int fixed) fixed
  result:iTemp163 [k188 lr229:230 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}
          Symbol type: int register
  4191 - pointer reg req = 0
 4213
x  left:iTemp158 [k183 lr222:230 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}
    c   Symbol type: int register
  right:iTemp163 [k188 lr229:230 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}
         Symbol type: int register
  result:iTemp164 [k189 lr230:235 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}
          Symbol type: int register
  4191 - pointer reg req = 0
 4213
x  left:iTemp0 [k2 lr3:254 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}
    is a ptr
    c   Symbol type: char generic* fixed
  result:iTemp165 [k190 lr231:232 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}
          Symbol type: char generic* fixed
  4191 - pointer reg req = 0
 4213
x  left:iTemp165 [k190 lr231:232 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}
    is a ptr
    c   Symbol type: char generic* fixed
  result:iTemp166 [k191 lr232:233 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}
          Symbol type: char register
  marking as a pointer (get) =>  left:iTemp165 [k190 lr231:232 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}
  4191 - pointer reg req = 0
 4213
  right:iTemp166 [k191 lr232:233 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}
         Symbol type: char register
  result:iTemp167 [k192 lr233:234 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}
          Symbol type: int fixed
  4191 - pointer reg req = 0
 4213
x  left:iTemp167 [k192 lr233:234 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}
    c   Symbol type: int fixed
  result:iTemp168 [k193 lr234:235 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}
          Symbol type: int register
  4191 - pointer reg req = 0
 4213
x  left:iTemp164 [k189 lr230:235 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}
    c   Symbol type: int register
  right:iTemp168 [k193 lr234:235 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}
         Symbol type: int register
  result:_sys_lumi_min [k178 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed}
          Symbol type: unsigned-int fixed
  result:_sys_lumi_min [k178 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed}
          Symbol type: unsigned-int fixed
  4191 - pointer reg req = 0
 4213
 4213
pic16_packRegisters
3007	packRegsForAssign
ic->op = =
  result:_sys_temp_max [k160 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed}
  left:
  right:iTemp186 [k211 lr258:259 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}
 3015 - actuall processing
pic16_allocDirReg:815 symbol name _sys_temp_max
  827  storage class 0 
 832  integral
 838  specifier
_sys_temp_max [k160 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed}
  3019 - result is not temp
3072	Searching for iTempNN
  3097 - dic result key == ic right key -- pointer set=N
  packing. removing iTemp186
  replacing with iTemp186
  3199
  result:_sys_temp_max [k160 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed}
  left:
  right:iTemp186 [k211 lr258:259 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}
 4213
x  left:iTemp0 [k2 lr3:254 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}
    is a ptr
    c   Symbol type: char generic* fixed
  result:iTemp171 [k196 lr239:240 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}
          Symbol type: char generic* fixed
  4191 - pointer reg req = 0
 4213
x  left:iTemp171 [k196 lr239:240 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}
    is a ptr
    c   Symbol type: char generic* fixed
  result:iTemp172 [k197 lr240:241 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}
          Symbol type: char register
  marking as a pointer (get) =>  left:iTemp171 [k196 lr239:240 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}
  4191 - pointer reg req = 0
 4213
  right:iTemp172 [k197 lr240:241 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}
         Symbol type: char register
  result:iTemp173 [k198 lr241:242 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}
          Symbol type: int fixed
  4191 - pointer reg req = 0
 4213
x  left:iTemp173 [k198 lr241:242 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}
    c   Symbol type: int fixed
  result:iTemp174 [k199 lr242:244 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}
          Symbol type: int register
  4191 - pointer reg req = 0
 4213
  4191 - pointer reg req = 0
 4213
x  left:iTemp174 [k199 lr242:244 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}
    c   Symbol type: int register
  4191 - pointer reg req = 0
 4213
x  left:__mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
    c   Symbol type: int function ( int fixed, int fixed) fixed
  result:iTemp175 [k200 lr245:253 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}
          Symbol type: int register
  4191 - pointer reg req = 0
 4213
x  left:iTemp0 [k2 lr3:254 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}
    is a ptr
    c   Symbol type: char generic* fixed
  result:iTemp176 [k201 lr246:247 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}
          Symbol type: char generic* fixed
  4191 - pointer reg req = 0
 4213
x  left:iTemp176 [k201 lr246:247 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}
    is a ptr
    c   Symbol type: char generic* fixed
  result:iTemp177 [k202 lr247:248 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}
          Symbol type: char register
  marking as a pointer (get) =>  left:iTemp176 [k201 lr246:247 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}
  4191 - pointer reg req = 0
 4213
  right:iTemp177 [k202 lr247:248 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}
         Symbol type: char register
  result:iTemp178 [k203 lr248:249 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}
          Symbol type: int fixed
  4191 - pointer reg req = 0
 4213
x  left:iTemp178 [k203 lr248:249 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}
    c   Symbol type: int fixed
  result:iTemp179 [k204 lr249:251 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}
          Symbol type: int register
  4191 - pointer reg req = 0
 4213
  4191 - pointer reg req = 0
 4213
x  left:iTemp179 [k204 lr249:251 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}
    c   Symbol type: int register
  4191 - pointer reg req = 0
 4213
x  left:__mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
    c   Symbol type: int function ( int fixed, int fixed) fixed
  result:iTemp180 [k205 lr252:253 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}
          Symbol type: int register
  4191 - pointer reg req = 0
 4213
x  left:iTemp175 [k200 lr245:253 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}
    c   Symbol type: int register
  right:iTemp180 [k205 lr252:253 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}
         Symbol type: int register
  result:iTemp181 [k206 lr253:258 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}
          Symbol type: int register
  4191 - pointer reg req = 0
 4213
x  left:iTemp0 [k2 lr3:254 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}
    is a ptr
    c   Symbol type: char generic* fixed
  result:iTemp182 [k207 lr254:255 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}
          Symbol type: char generic* fixed
  4191 - pointer reg req = 0
 4213
x  left:iTemp182 [k207 lr254:255 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}
    is a ptr
    c   Symbol type: char generic* fixed
  result:iTemp183 [k208 lr255:256 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}
          Symbol type: char register
  marking as a pointer (get) =>  left:iTemp182 [k207 lr254:255 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}
  4191 - pointer reg req = 0
 4213
  right:iTemp183 [k208 lr255:256 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}
         Symbol type: char register
  result:iTemp184 [k209 lr256:257 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}
          Symbol type: int fixed
  4191 - pointer reg req = 0
 4213
x  left:iTemp184 [k209 lr256:257 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}
    c   Symbol type: int fixed
  result:iTemp185 [k210 lr257:258 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}
          Symbol type: int register
  4191 - pointer reg req = 0
 4213
x  left:iTemp181 [k206 lr253:258 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}
    c   Symbol type: int register
  right:iTemp185 [k210 lr257:258 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}
         Symbol type: int register
  result:_sys_temp_max [k160 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed}
          Symbol type: unsigned-int fixed
  result:_sys_temp_max [k160 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed}
          Symbol type: unsigned-int fixed
  4191 - pointer reg req = 0
 4213
 4213
pic16_packRegisters
3007	packRegsForAssign
ic->op = =
  result:iTemp1 [k4 lr4:264 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _check_comando_ret_1_74}
  left:
  right:0x0 {const-char literal}
 3015 - actuall processing
  3027 - not packing - right is not temp
pic16_allocDirReg BAD, op is NULL
  result:iTemp1 [k4 lr4:264 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _check_comando_ret_1_74}
  left:
  right:0x0 {const-char literal}
 4213
  result:iTemp1 [k4 lr4:264 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _check_comando_ret_1_74}
          Symbol type: unsigned-char fixed
  4191 - pointer reg req = 0
 4213
pic16_packRegisters
 4213
x  left:iTemp1 [k4 lr4:264 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _check_comando_ret_1_74}
    c   Symbol type: unsigned-char fixed
  4191 - pointer reg req = 0
 4213
pic16_packRegisters
 4213
x  left:_check_comando [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char function ( char generic* fixed) fixed}
    c   Symbol type: unsigned-char function ( char generic* fixed) fixed
 4213
regTypeNum
  2754 - iTemp0
  2765 - itemp register
  reg name iTemp0,  reg type REG_GPR
  2754 - iTemp1
  2765 - itemp register
  reg name iTemp1,  reg type REG_GPR
  2754 - iTemp3
  2765 - itemp register
  reg name iTemp3,  reg type REG_GPR
  2754 - iTemp4
  2765 - itemp register
  2754 - iTemp5
  2765 - itemp register
  2754 - iTemp6
  2765 - itemp register
  2754 - iTemp7
  2765 - itemp register
  2754 - iTemp8
  2765 - itemp register
  2754 - iTemp9
  2765 - itemp register
  2754 - iTemp10
  2765 - itemp register
  2754 - iTemp11
  2765 - itemp register
  2754 - iTemp12
  2765 - itemp register
  2754 - iTemp13
  2765 - itemp register
  2754 - iTemp14
  2765 - itemp register
  reg name iTemp14,  reg type REG_GPR
  2754 - iTemp15
  2765 - itemp register
  reg name iTemp15,  reg type REG_GPR
  2754 - iTemp16
  2765 - itemp register
  reg name iTemp16,  reg type REG_GPR
  2754 - iTemp18
  2765 - itemp register
  reg name iTemp18,  reg type REG_GPR
  2754 - iTemp19
  2765 - itemp register
  reg name iTemp19,  reg type REG_GPR
  2754 - iTemp20
  2765 - itemp register
  reg name iTemp20,  reg type REG_GPR
  2754 - iTemp21
  2754 - iTemp22
  2765 - itemp register
  reg name iTemp22,  reg type REG_GPR
  2754 - iTemp23
  2765 - itemp register
  reg name iTemp23,  reg type REG_GPR
  2754 - iTemp24
  2765 - itemp register
  reg name iTemp24,  reg type REG_GPR
  2754 - iTemp25
  2765 - itemp register
  reg name iTemp25,  reg type REG_GPR
  2754 - iTemp26
  2765 - itemp register
  reg name iTemp26,  reg type REG_GPR
  2754 - iTemp27
  2765 - itemp register
  reg name iTemp27,  reg type REG_GPR
  2754 - iTemp28
  2765 - itemp register
  reg name iTemp28,  reg type REG_GPR
  2754 - iTemp29
  2765 - itemp register
  reg name iTemp29,  reg type REG_GPR
  2754 - iTemp30
  2765 - itemp register
  reg name iTemp30,  reg type REG_GPR
  2754 - iTemp31
  2765 - itemp register
  reg name iTemp31,  reg type REG_GPR
  2754 - iTemp32
  2765 - itemp register
  reg name iTemp32,  reg type REG_GPR
  2754 - iTemp33
  2765 - itemp register
  reg name iTemp33,  reg type REG_GPR
  2754 - iTemp34
  2765 - itemp register
  reg name iTemp34,  reg type REG_GPR
  2754 - iTemp36
  2765 - itemp register
  reg name iTemp36,  reg type REG_GPR
  2754 - iTemp37
  2754 - iTemp38
  2754 - iTemp39
  2765 - itemp register
  reg name iTemp39,  reg type REG_GPR
  2754 - iTemp40
  2765 - itemp register
  reg name iTemp40,  reg type REG_GPR
  2754 - iTemp41
  2765 - itemp register
  reg name iTemp41,  reg type REG_GPR
  2754 - iTemp42
  2765 - itemp register
  reg name iTemp42,  reg type REG_GPR
  2754 - iTemp45
  2765 - itemp register
  reg name iTemp45,  reg type REG_GPR
  2754 - iTemp46
  2765 - itemp register
  reg name iTemp46,  reg type REG_GPR
  2754 - iTemp47
  2765 - itemp register
  reg name iTemp47,  reg type REG_GPR
  2754 - iTemp48
  2765 - itemp register
  reg name iTemp48,  reg type REG_GPR
  2754 - iTemp50
  2765 - itemp register
  reg name iTemp50,  reg type REG_GPR
  2754 - iTemp51
  2765 - itemp register
  2754 - iTemp53
  2765 - itemp register
  reg name iTemp53,  reg type REG_GPR
  2754 - iTemp54
  2765 - itemp register
  reg name iTemp54,  reg type REG_GPR
  2754 - iTemp55
  2765 - itemp register
  reg name iTemp55,  reg type REG_GPR
  2754 - iTemp56
  2765 - itemp register
  reg name iTemp56,  reg type REG_GPR
  2754 - iTemp58
  2765 - itemp register
  reg name iTemp58,  reg type REG_GPR
  2754 - iTemp59
  2765 - itemp register
  2754 - iTemp60
  2765 - itemp register
  reg name iTemp60,  reg type REG_GPR
  2754 - iTemp61
  2765 - itemp register
  reg name iTemp61,  reg type REG_GPR
  2754 - iTemp62
  2754 - iTemp63
  2754 - iTemp64
  2765 - itemp register
  reg name iTemp64,  reg type REG_GPR
  2754 - iTemp65
  2765 - itemp register
  reg name iTemp65,  reg type REG_GPR
  2754 - iTemp66
  2754 - iTemp67
  2765 - itemp register
  reg name iTemp67,  reg type REG_GPR
  2754 - iTemp68
  2765 - itemp register
  reg name iTemp68,  reg type REG_GPR
  2754 - iTemp69
  2765 - itemp register
  reg name iTemp69,  reg type REG_GPR
  2754 - iTemp70
  2765 - itemp register
  reg name iTemp70,  reg type REG_GPR
  2754 - iTemp71
  2765 - itemp register
  2754 - iTemp78
  2765 - itemp register
  reg name iTemp78,  reg type REG_GPR
  2754 - iTemp79
  2765 - itemp register
  reg name iTemp79,  reg type REG_GPR
  2754 - iTemp80
  2765 - itemp register
  reg name iTemp80,  reg type REG_GPR
  2754 - iTemp81
  2765 - itemp register
  reg name iTemp81,  reg type REG_GPR
  2754 - iTemp82
  2765 - itemp register
  2754 - iTemp89
  2765 - itemp register
  reg name iTemp89,  reg type REG_GPR
  2754 - iTemp90
  2765 - itemp register
  reg name iTemp90,  reg type REG_GPR
  2754 - iTemp91
  2765 - itemp register
  reg name iTemp91,  reg type REG_GPR
  2754 - iTemp92
  2765 - itemp register
  reg name iTemp92,  reg type REG_GPR
  2754 - iTemp93
  2765 - itemp register
  reg name iTemp93,  reg type REG_GPR
  2754 - iTemp94
  2765 - itemp register
  reg name iTemp94,  reg type REG_GPR
  2754 - iTemp95
  2765 - itemp register
  reg name iTemp95,  reg type REG_GPR
  2754 - iTemp96
  2765 - itemp register
  reg name iTemp96,  reg type REG_GPR
  2754 - iTemp97
  2765 - itemp register
  reg name iTemp97,  reg type REG_GPR
  2754 - iTemp98
  2765 - itemp register
  reg name iTemp98,  reg type REG_GPR
  2754 - iTemp99
  2765 - itemp register
  reg name iTemp99,  reg type REG_GPR
  2754 - iTemp100
  2765 - itemp register
  reg name iTemp100,  reg type REG_GPR
  2754 - iTemp101
  2765 - itemp register
  reg name iTemp101,  reg type REG_GPR
  2754 - iTemp102
  2765 - itemp register
  reg name iTemp102,  reg type REG_GPR
  2754 - iTemp103
  2765 - itemp register
  reg name iTemp103,  reg type REG_GPR
  2754 - iTemp104
  2765 - itemp register
  reg name iTemp104,  reg type REG_GPR
  2754 - iTemp105
  2765 - itemp register
  reg name iTemp105,  reg type REG_GPR
  2754 - iTemp106
  2765 - itemp register
  reg name iTemp106,  reg type REG_GPR
  2754 - iTemp107
  2765 - itemp register
  reg name iTemp107,  reg type REG_GPR
  2754 - iTemp108
  2765 - itemp register
  reg name iTemp108,  reg type REG_GPR
  2754 - iTemp109
  2765 - itemp register
  reg name iTemp109,  reg type REG_GPR
  2754 - iTemp110
  2765 - itemp register
  reg name iTemp110,  reg type REG_GPR
  2754 - iTemp111
  2765 - itemp register
  reg name iTemp111,  reg type REG_GPR
  2754 - iTemp112
  2765 - itemp register
  reg name iTemp112,  reg type REG_GPR
  2754 - iTemp113
  2765 - itemp register
  reg name iTemp113,  reg type REG_GPR
  2754 - iTemp114
  2765 - itemp register
  reg name iTemp114,  reg type REG_GPR
  2754 - iTemp115
  2765 - itemp register
  reg name iTemp115,  reg type REG_GPR
  2754 - iTemp116
  2765 - itemp register
  reg name iTemp116,  reg type REG_GPR
  2754 - iTemp117
  2765 - itemp register
  reg name iTemp117,  reg type REG_GPR
  2754 - iTemp118
  2765 - itemp register
  reg name iTemp118,  reg type REG_GPR
  2754 - iTemp119
  2765 - itemp register
  reg name iTemp119,  reg type REG_GPR
  2754 - iTemp120
  2765 - itemp register
  reg name iTemp120,  reg type REG_GPR
  2754 - iTemp121
  2765 - itemp register
  reg name iTemp121,  reg type REG_GPR
  2754 - iTemp122
  2765 - itemp register
  reg name iTemp122,  reg type REG_GPR
  2754 - iTemp123
  2765 - itemp register
  reg name iTemp123,  reg type REG_GPR
  2754 - iTemp124
  2765 - itemp register
  reg name iTemp124,  reg type REG_GPR
  2754 - iTemp125
  2765 - itemp register
  reg name iTemp125,  reg type REG_GPR
  2754 - iTemp126
  2765 - itemp register
  reg name iTemp126,  reg type REG_GPR
  2754 - iTemp127
  2765 - itemp register
  reg name iTemp127,  reg type REG_GPR
  2754 - iTemp128
  2765 - itemp register
  reg name iTemp128,  reg type REG_GPR
  2754 - iTemp129
  2765 - itemp register
  reg name iTemp129,  reg type REG_GPR
  2754 - iTemp130
  2765 - itemp register
  reg name iTemp130,  reg type REG_GPR
  2754 - iTemp131
  2765 - itemp register
  reg name iTemp131,  reg type REG_GPR
  2754 - iTemp132
  2765 - itemp register
  reg name iTemp132,  reg type REG_GPR
  2754 - iTemp133
  2765 - itemp register
  reg name iTemp133,  reg type REG_GPR
  2754 - iTemp134
  2765 - itemp register
  reg name iTemp134,  reg type REG_GPR
  2754 - iTemp137
  2765 - itemp register
  reg name iTemp137,  reg type REG_GPR
  2754 - iTemp138
  2765 - itemp register
  reg name iTemp138,  reg type REG_GPR
  2754 - iTemp139
  2765 - itemp register
  reg name iTemp139,  reg type REG_GPR
  2754 - iTemp140
  2765 - itemp register
  reg name iTemp140,  reg type REG_GPR
  2754 - iTemp141
  2765 - itemp register
  reg name iTemp141,  reg type REG_GPR
  2754 - iTemp142
  2765 - itemp register
  reg name iTemp142,  reg type REG_GPR
  2754 - iTemp143
  2765 - itemp register
  reg name iTemp143,  reg type REG_GPR
  2754 - iTemp144
  2765 - itemp register
  reg name iTemp144,  reg type REG_GPR
  2754 - iTemp145
  2765 - itemp register
  reg name iTemp145,  reg type REG_GPR
  2754 - iTemp146
  2765 - itemp register
  reg name iTemp146,  reg type REG_GPR
  2754 - iTemp147
  2765 - itemp register
  reg name iTemp147,  reg type REG_GPR
  2754 - iTemp148
  2765 - itemp register
  reg name iTemp148,  reg type REG_GPR
  2754 - iTemp149
  2765 - itemp register
  reg name iTemp149,  reg type REG_GPR
  2754 - iTemp150
  2765 - itemp register
  reg name iTemp150,  reg type REG_GPR
  2754 - iTemp151
  2765 - itemp register
  reg name iTemp151,  reg type REG_GPR
  2754 - iTemp154
  2765 - itemp register
  reg name iTemp154,  reg type REG_GPR
  2754 - iTemp155
  2765 - itemp register
  reg name iTemp155,  reg type REG_GPR
  2754 - iTemp156
  2765 - itemp register
  reg name iTemp156,  reg type REG_GPR
  2754 - iTemp157
  2765 - itemp register
  reg name iTemp157,  reg type REG_GPR
  2754 - iTemp158
  2765 - itemp register
  reg name iTemp158,  reg type REG_GPR
  2754 - iTemp159
  2765 - itemp register
  reg name iTemp159,  reg type REG_GPR
  2754 - iTemp160
  2765 - itemp register
  reg name iTemp160,  reg type REG_GPR
  2754 - iTemp161
  2765 - itemp register
  reg name iTemp161,  reg type REG_GPR
  2754 - iTemp162
  2765 - itemp register
  reg name iTemp162,  reg type REG_GPR
  2754 - iTemp163
  2765 - itemp register
  reg name iTemp163,  reg type REG_GPR
  2754 - iTemp164
  2765 - itemp register
  reg name iTemp164,  reg type REG_GPR
  2754 - iTemp165
  2765 - itemp register
  reg name iTemp165,  reg type REG_GPR
  2754 - iTemp166
  2765 - itemp register
  reg name iTemp166,  reg type REG_GPR
  2754 - iTemp167
  2765 - itemp register
  reg name iTemp167,  reg type REG_GPR
  2754 - iTemp168
  2765 - itemp register
  reg name iTemp168,  reg type REG_GPR
  2754 - iTemp171
  2765 - itemp register
  reg name iTemp171,  reg type REG_GPR
  2754 - iTemp172
  2765 - itemp register
  reg name iTemp172,  reg type REG_GPR
  2754 - iTemp173
  2765 - itemp register
  reg name iTemp173,  reg type REG_GPR
  2754 - iTemp174
  2765 - itemp register
  reg name iTemp174,  reg type REG_GPR
  2754 - iTemp175
  2765 - itemp register
  reg name iTemp175,  reg type REG_GPR
  2754 - iTemp176
  2765 - itemp register
  reg name iTemp176,  reg type REG_GPR
  2754 - iTemp177
  2765 - itemp register
  reg name iTemp177,  reg type REG_GPR
  2754 - iTemp178
  2765 - itemp register
  reg name iTemp178,  reg type REG_GPR
  2754 - iTemp179
  2765 - itemp register
  reg name iTemp179,  reg type REG_GPR
  2754 - iTemp180
  2765 - itemp register
  reg name iTemp180,  reg type REG_GPR
  2754 - iTemp181
  2765 - itemp register
  reg name iTemp181,  reg type REG_GPR
  2754 - iTemp182
  2765 - itemp register
  reg name iTemp182,  reg type REG_GPR
  2754 - iTemp183
  2765 - itemp register
  reg name iTemp183,  reg type REG_GPR
  2754 - iTemp184
  2765 - itemp register
  reg name iTemp184,  reg type REG_GPR
  2754 - iTemp185
  2765 - itemp register
  reg name iTemp185,  reg type REG_GPR
serialRegAssign
  op: LABEL
deassignLRs
  op: FUNCTION
deassignLRs
  op: RECEIVE
deassignLRs
willCauseSpill
computeSpillable
When I get clever, I'll optimize the receive logic
bitvector Size = 213 bSize = 27
Bits on { (2) }
getRegGpr
allocReg of type REG_GPR for register rIdx: 9 (0x9)
getRegGpr
allocReg of type REG_GPR for register rIdx: 9 (0x9)
getRegGpr
allocReg of type REG_GPR for register rIdx: 9 (0x9)
  2457 - 
  2471 - 
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
bitvector Size = 299 bSize = 38
Bits on { (2) (4) }
getRegGpr
allocReg of type REG_GPR for register rIdx: 9 (0x9)
  2457 - 
  2471 - 
  op: GET_VALUE_AT_ADDRESS
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
bitvector Size = 299 bSize = 38
Bits on { (2) (4) (7) }
getRegGpr
allocReg of type REG_GPR for register rIdx: 9 (0x9)
  2457 - 
positionRegs
  2471 - 
  op: EQ_OP
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: IFX
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: EQ_OP
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: IFX
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: EQ_OP
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: IFX
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: EQ_OP
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: IFX
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: EQ_OP
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: IFX
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: EQ_OP
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: IFX
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: EQ_OP
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: IFX
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: EQ_OP
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: IFX
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: EQ_OP
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: IFX
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: EQ_OP
pic16_allocDirReg BAD, op is NULL
deassignLRs
freeReg
  op: IFX
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: GOTO
deassignLRs
  op: LABEL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
bitvector Size = 299 bSize = 38
Bits on { (2) (4) (20) }
getRegGpr
allocReg of type REG_GPR for register rIdx: 9 (0x9)
getRegGpr
allocReg of type REG_GPR for register rIdx: 9 (0x9)
getRegGpr
allocReg of type REG_GPR for register rIdx: 9 (0x9)
  2457 - 
positionRegs
  2471 - 
  op: GET_VALUE_AT_ADDRESS
pic16_allocDirReg BAD, op is NULL
deassignLRs
nfreeRegsType
freeReg
freeReg
  op: -
pic16_allocDirReg BAD, op is NULL
deassignLRs
freeReg
willCauseSpill
computeSpillable
bitvector Size = 299 bSize = 38
Bits on { (2) (4) (18) }
getRegGpr
allocReg of type REG_GPR for register rIdx: 9 (0x9)
  2457 - 
positionRegs
  2471 - 
  op: IFX
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
bitvector Size = 299 bSize = 38
Bits on { (2) (4) (18) (24) }
getRegGpr
allocReg of type REG_GPR for register rIdx: 9 (0x9)
getRegGpr
allocReg of type REG_GPR for register rIdx: 9 (0x9)
getRegGpr
allocReg of type REG_GPR for register rIdx: 9 (0x9)
  2457 - 
positionRegs
  2471 - 
  op: GET_VALUE_AT_ADDRESS
pic16_allocDirReg BAD, op is NULL
deassignLRs
nfreeRegsType
freeReg
freeReg
  op: -
pic16_allocDirReg BAD, op is NULL
deassignLRs
nfreeRegsType
  op: SEND
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: SEND
deassignLRs
freeReg
  op: CALL
pic16_allocDirReg:815 symbol name _led
  827  storage class 0 
 838  specifier
_led [k23 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( unsigned-char fixed, unsigned-char fixed) fixed}
pic16_allocDirReg:861 sym: led in codespace
deassignLRs
  op: GOTO
deassignLRs
  op: LABEL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
bitvector Size = 299 bSize = 38
Bits on { (2) (4) (18) (32) }
getRegGpr
allocReg of type REG_GPR for register rIdx: 9 (0x9)
getRegGpr
allocReg of type REG_GPR for register rIdx: 9 (0x9)
getRegGpr
allocReg of type REG_GPR for register rIdx: 9 (0x9)
  2457 - 
positionRegs
  2471 - 
  op: GET_VALUE_AT_ADDRESS
pic16_allocDirReg BAD, op is NULL
deassignLRs
nfreeRegsType
freeReg
freeReg
  op: -
pic16_allocDirReg BAD, op is NULL
deassignLRs
nfreeRegsType
  op: *
pic16_allocDirReg BAD, op is NULL
deassignLRs
nfreeRegsType
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
bitvector Size = 299 bSize = 38
Bits on { (2) (4) (18) (35) (36) }
getRegGpr
allocReg of type REG_GPR for register rIdx: 9 (0x9)
getRegGpr
allocReg of type REG_GPR for register rIdx: 9 (0x9)
getRegGpr
allocReg of type REG_GPR for register rIdx: 9 (0x9)
  2457 - 
positionRegs
  2471 - 
  op: GET_VALUE_AT_ADDRESS
pic16_allocDirReg BAD, op is NULL
deassignLRs
nfreeRegsType
freeReg
freeReg
  op: -
pic16_allocDirReg BAD, op is NULL
deassignLRs
nfreeRegsType
  op: *
pic16_allocDirReg BAD, op is NULL
deassignLRs
nfreeRegsType
  op: +
deassignLRs
nfreeRegsType
freeReg
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
bitvector Size = 299 bSize = 38
Bits on { (2) (4) (18) (40) (41) }
getRegGpr
allocReg of type REG_GPR for register rIdx: 9 (0x9)
getRegGpr
allocReg of type REG_GPR for register rIdx: 9 (0x9)
getRegGpr
allocReg of type REG_GPR for register rIdx: 9 (0x9)
  2457 - 
positionRegs
  2471 - 
  op: GET_VALUE_AT_ADDRESS
pic16_allocDirReg BAD, op is NULL
deassignLRs
nfreeRegsType
freeReg
freeReg
  op: +
deassignLRs
nfreeRegsType
freeReg
  op: -
pic16_allocDirReg BAD, op is NULL
deassignLRs
nfreeRegsType
  op: -
pic16_allocDirReg BAD, op is NULL
deassignLRs
nfreeRegsType
  op: SEND
deassignLRs
  op: SEND
deassignLRs
freeReg
freeReg
  op: CALL
pic16_allocDirReg:815 symbol name _set_pwm
  827  storage class 0 
 838  specifier
_set_pwm [k45 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( unsigned-char fixed, unsigned-char fixed) fixed}
pic16_allocDirReg:861 sym: set_pwm in codespace
deassignLRs
  op: GOTO
deassignLRs
  op: LABEL
deassignLRs
  op: CALL
pic16_allocDirReg:815 symbol name _limpa_lcd
  827  storage class 0 
 838  specifier
_limpa_lcd [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( ) fixed}
pic16_allocDirReg:861 sym: limpa_lcd in codespace
deassignLRs
  op: ADDRESS_OF
pic16_allocDirReg:815 symbol name _check_comando_linha_1_1_74
  827  storage class 0 
 832  integral
 838  specifier
_check_comando_linha_1_1_74 [k52 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [17] fixed}
894  -- added _check_comando_linha_1_1_74 to hash, size = 17
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp39
isSpiltOnStack
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp40
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: ADDRESS_OF
pic16_allocDirReg:815 symbol name _check_comando_linha_2_1_74
  827  storage class 0 
 832  integral
 838  specifier
_check_comando_linha_2_1_74 [k55 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [17] fixed}
894  -- added _check_comando_linha_2_1_74 to hash, size = 17
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp41
isSpiltOnStack
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp42
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
bitvector Size = 299 bSize = 38
Bits on { (2) (4) (66) }
getRegGpr
allocReg of type REG_GPR for register rIdx: 9 (0x9)
  2457 - 
  2471 - 
  op: LABEL
deassignLRs
  op: LABEL
deassignLRs
  op: -
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
bitvector Size = 299 bSize = 38
Bits on { (2) (4) (61) (66) }
getRegGpr
allocReg of type REG_GPR for register rIdx: 9 (0x9)
  2457 - 
positionRegs
  2471 - 
  op: +
deassignLRs
nfreeRegsType
getRegGpr
allocReg of type REG_GPR for register rIdx: 9 (0x9)
  op: +
deassignLRs
willCauseSpill
computeSpillable
bitvector Size = 299 bSize = 38
Bits on { (2) (4) (62) (63) (66) }
getRegGpr
allocReg of type REG_GPR for register rIdx: 9 (0x9)
getRegGpr
allocReg of type REG_GPR for register rIdx: 9 (0x9)
getRegGpr
allocReg of type REG_GPR for register rIdx: 9 (0x9)
  2457 - 
positionRegs
positionRegs
  2471 - 
  op: GET_VALUE_AT_ADDRESS
pic16_allocDirReg BAD, op is NULL
deassignLRs
nfreeRegsType
freeReg
freeReg
  op: =
deassignLRs
freeReg
freeReg
freeReg
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: <
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: IFX
pic16_allocDirReg BAD, op is NULL
deassignLRs
freeReg
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
bitvector Size = 299 bSize = 38
Bits on { (2) (4) (74) }
getRegGpr
allocReg of type REG_GPR for register rIdx: 9 (0x9)
  2457 - 
  2471 - 
  op: LABEL
deassignLRs
  op: LABEL
deassignLRs
  op: -
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
bitvector Size = 299 bSize = 38
Bits on { (2) (4) (69) (74) }
getRegGpr
allocReg of type REG_GPR for register rIdx: 9 (0x9)
  2457 - 
positionRegs
  2471 - 
  op: +
deassignLRs
nfreeRegsType
getRegGpr
allocReg of type REG_GPR for register rIdx: 9 (0x9)
  op: +
deassignLRs
willCauseSpill
computeSpillable
bitvector Size = 299 bSize = 38
Bits on { (2) (4) (70) (71) (74) }
getRegGpr
allocReg of type REG_GPR for register rIdx: 9 (0x9)
getRegGpr
allocReg of type REG_GPR for register rIdx: 9 (0x9)
getRegGpr
allocReg of type REG_GPR for register rIdx: 9 (0x9)
  2457 - 
positionRegs
positionRegs
  2471 - 
  op: GET_VALUE_AT_ADDRESS
pic16_allocDirReg BAD, op is NULL
deassignLRs
nfreeRegsType
freeReg
freeReg
  op: =
deassignLRs
freeReg
freeReg
freeReg
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: <
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: IFX
pic16_allocDirReg BAD, op is NULL
deassignLRs
freeReg
  op: =
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp60
isSpiltOnStack
  op: CAST
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
bitvector Size = 299 bSize = 38
Bits on { (2) (4) (78) }
getRegGpr
allocReg of type REG_GPR for register rIdx: 9 (0x9)
getRegGpr
allocReg of type REG_GPR for register rIdx: 9 (0x9)
getRegGpr
allocReg of type REG_GPR for register rIdx: 9 (0x9)
  2457 - 
positionRegs
  2471 - 
  op: SEND
deassignLRs
freeReg
freeReg
freeReg
  op: CALL
pic16_allocDirReg:815 symbol name _print_lcd_string
  827  storage class 0 
 838  specifier
_print_lcd_string [k76 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char generic* fixed) fixed}
pic16_allocDirReg:861 sym: print_lcd_string in codespace
deassignLRs
  op: CALL
pic16_allocDirReg:815 symbol name _print_lcd_ln
  827  storage class 0 
 838  specifier
_print_lcd_ln [k81 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( ) fixed}
pic16_allocDirReg:861 sym: print_lcd_ln in codespace
deassignLRs
  op: =
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp64
isSpiltOnStack
  op: CAST
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
bitvector Size = 299 bSize = 38
Bits on { (2) (4) (84) }
getRegGpr
allocReg of type REG_GPR for register rIdx: 9 (0x9)
getRegGpr
allocReg of type REG_GPR for register rIdx: 9 (0x9)
getRegGpr
allocReg of type REG_GPR for register rIdx: 9 (0x9)
  2457 - 
positionRegs
  2471 - 
  op: SEND
deassignLRs
freeReg
freeReg
freeReg
  op: CALL
pic16_allocDirReg:815 symbol name _print_lcd_string
  827  storage class 0 
 838  specifier
_print_lcd_string [k76 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char generic* fixed) fixed}
pic16_allocDirReg:861 sym: print_lcd_string in codespace
deassignLRs
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: GOTO
deassignLRs
  op: LABEL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
bitvector Size = 299 bSize = 38
Bits on { (2) (4) (86) }
getRegGpr
allocReg of type REG_GPR for register rIdx: 9 (0x9)
getRegGpr
allocReg of type REG_GPR for register rIdx: 9 (0x9)
getRegGpr
allocReg of type REG_GPR for register rIdx: 9 (0x9)
  2457 - 
positionRegs
  2471 - 
  op: GET_VALUE_AT_ADDRESS
pic16_allocDirReg BAD, op is NULL
deassignLRs
nfreeRegsType
freeReg
freeReg
  op: CAST
pic16_allocDirReg BAD, op is NULL
deassignLRs
nfreeRegsType
getRegGpr
allocReg of type REG_GPR for register rIdx: 9 (0x9)
  op: -
pic16_allocDirReg BAD, op is NULL
deassignLRs
freeReg
freeReg
willCauseSpill
computeSpillable
bitvector Size = 299 bSize = 38
Bits on { (2) (4) (89) }
getRegGpr
allocReg of type REG_GPR for register rIdx: 9 (0x9)
getRegGpr
allocReg of type REG_GPR for register rIdx: 9 (0x9)
  2457 - 
positionRegs
  2471 - 
  op: EQ_OP
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: IFX
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: =
pic16_allocDirReg:815 symbol name _hab_alarme
  827  storage class 0 
 832  integral
 838  specifier
_hab_alarme [k91 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: GOTO
deassignLRs
  op: LABEL
deassignLRs
  op: IFX
pic16_allocDirReg BAD, op is NULL
deassignLRs
freeReg
freeReg
  op: =
pic16_allocDirReg:815 symbol name _hab_alarme
  827  storage class 0 
 832  integral
 838  specifier
_hab_alarme [k91 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: GOTO
deassignLRs
  op: LABEL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
bitvector Size = 299 bSize = 38
Bits on { (2) (4) (98) }
getRegGpr
allocReg of type REG_GPR for register rIdx: 9 (0x9)
getRegGpr
allocReg of type REG_GPR for register rIdx: 9 (0x9)
getRegGpr
allocReg of type REG_GPR for register rIdx: 9 (0x9)
  2457 - 
positionRegs
  2471 - 
  op: GET_VALUE_AT_ADDRESS
pic16_allocDirReg BAD, op is NULL
deassignLRs
nfreeRegsType
freeReg
freeReg
  op: CAST
pic16_allocDirReg BAD, op is NULL
deassignLRs
nfreeRegsType
getRegGpr
allocReg of type REG_GPR for register rIdx: 9 (0x9)
  op: -
pic16_allocDirReg BAD, op is NULL
deassignLRs
freeReg
freeReg
willCauseSpill
computeSpillable
bitvector Size = 299 bSize = 38
Bits on { (2) (4) (101) }
getRegGpr
allocReg of type REG_GPR for register rIdx: 9 (0x9)
getRegGpr
allocReg of type REG_GPR for register rIdx: 9 (0x9)
  2457 - 
positionRegs
  2471 - 
  op: EQ_OP
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: IFX
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: =
pic16_allocDirReg:815 symbol name _hab_sensor
  827  storage class 0 
 832  integral
 838  specifier
_hab_sensor [k103 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: GOTO
deassignLRs
  op: LABEL
deassignLRs
  op: IFX
pic16_allocDirReg BAD, op is NULL
deassignLRs
freeReg
freeReg
  op: =
pic16_allocDirReg:815 symbol name _hab_sensor
  827  storage class 0 
 832  integral
 838  specifier
_hab_sensor [k103 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: GOTO
deassignLRs
  op: LABEL
deassignLRs
  op: ADDRESS_OF
pic16_allocDirReg:815 symbol name _sys_timer_pool
  827  storage class 0 
 832  integral
 838  specifier
_sys_timer_pool [k110 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int [2] fixed}
894  -- added _sys_timer_pool to hash, size = 8
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp89
isSpiltOnStack
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp90
isSpiltOnStack
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
bitvector Size = 299 bSize = 38
Bits on { (2) (4) (113) }
getRegGpr
allocReg of type REG_GPR for register rIdx: 9 (0x9)
getRegGpr
allocReg of type REG_GPR for register rIdx: 9 (0x9)
getRegGpr
allocReg of type REG_GPR for register rIdx: 9 (0x9)
  2457 - 
positionRegs
  2471 - 
  op: GET_VALUE_AT_ADDRESS
pic16_allocDirReg BAD, op is NULL
deassignLRs
nfreeRegsType
freeReg
freeReg
  op: CAST
pic16_allocDirReg BAD, op is NULL
deassignLRs
nfreeRegsType
getRegGpr
allocReg of type REG_GPR for register rIdx: 9 (0x9)
  op: -
pic16_allocDirReg BAD, op is NULL
deassignLRs
nfreeRegsType
  op: SEND
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: SEND
deassignLRs
freeReg
freeReg
  op: CALL
pic16_allocDirReg:815 symbol name __mulint
  827  storage class 0 
 832  integral
 838  specifier
__mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
pic16_allocDirReg:861 sym: _mulint in codespace
deassignLRs
willCauseSpill
computeSpillable
bitvector Size = 299 bSize = 38
Bits on { (2) (4) (117) }
getRegGpr
allocReg of type REG_GPR for register rIdx: 9 (0x9)
getRegGpr
allocReg of type REG_GPR for register rIdx: 9 (0x9)
  2457 - 
  2471 - 
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
bitvector Size = 299 bSize = 38
Bits on { (2) (4) (117) (118) }
getRegGpr
allocReg of type REG_GPR for register rIdx: 9 (0x9)
getRegGpr
allocReg of type REG_GPR for register rIdx: 9 (0x9)
getRegGpr
allocReg of type REG_GPR for register rIdx: 9 (0x9)
  2457 - 
positionRegs
  2471 - 
  op: GET_VALUE_AT_ADDRESS
pic16_allocDirReg BAD, op is NULL
deassignLRs
nfreeRegsType
freeReg
freeReg
  op: CAST
pic16_allocDirReg BAD, op is NULL
deassignLRs
nfreeRegsType
getRegGpr
allocReg of type REG_GPR for register rIdx: 9 (0x9)
  op: -
pic16_allocDirReg BAD, op is NULL
deassignLRs
nfreeRegsType
  op: SEND
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: SEND
deassignLRs
freeReg
freeReg
  op: CALL
pic16_allocDirReg:815 symbol name __mulint
  827  storage class 0 
 832  integral
 838  specifier
__mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
pic16_allocDirReg:861 sym: _mulint in codespace
deassignLRs
willCauseSpill
computeSpillable
bitvector Size = 299 bSize = 38
Bits on { (2) (4) (117) (122) }
getRegGpr
allocReg of type REG_GPR for register rIdx: 9 (0x9)
getRegGpr
allocReg of type REG_GPR for register rIdx: 9 (0x9)
  2457 - 
  2471 - 
  op: +
deassignLRs
nfreeRegsType
freeReg
freeReg
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
bitvector Size = 299 bSize = 38
Bits on { (2) (4) (123) (124) }
getRegGpr
allocReg of type REG_GPR for register rIdx: 9 (0x9)
getRegGpr
allocReg of type REG_GPR for register rIdx: 9 (0x9)
getRegGpr
allocReg of type REG_GPR for register rIdx: 9 (0x9)
  2457 - 
positionRegs
  2471 - 
  op: GET_VALUE_AT_ADDRESS
pic16_allocDirReg BAD, op is NULL
deassignLRs
nfreeRegsType
freeReg
freeReg
  op: CAST
pic16_allocDirReg BAD, op is NULL
deassignLRs
nfreeRegsType
getRegGpr
allocReg of type REG_GPR for register rIdx: 9 (0x9)
  op: -
pic16_allocDirReg BAD, op is NULL
deassignLRs
nfreeRegsType
  op: SEND
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: SEND
deassignLRs
freeReg
freeReg
  op: CALL
pic16_allocDirReg:815 symbol name __mulint
  827  storage class 0 
 832  integral
 838  specifier
__mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
pic16_allocDirReg:861 sym: _mulint in codespace
deassignLRs
willCauseSpill
computeSpillable
bitvector Size = 299 bSize = 38
Bits on { (2) (4) (123) (128) }
getRegGpr
allocReg of type REG_GPR for register rIdx: 9 (0x9)
getRegGpr
allocReg of type REG_GPR for register rIdx: 9 (0x9)
  2457 - 
  2471 - 
  op: +
deassignLRs
nfreeRegsType
freeReg
freeReg
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
bitvector Size = 299 bSize = 38
Bits on { (2) (4) (129) (130) }
getRegGpr
allocReg of type REG_GPR for register rIdx: 9 (0x9)
getRegGpr
allocReg of type REG_GPR for register rIdx: 9 (0x9)
getRegGpr
allocReg of type REG_GPR for register rIdx: 9 (0x9)
  2457 - 
positionRegs
  2471 - 
  op: GET_VALUE_AT_ADDRESS
pic16_allocDirReg BAD, op is NULL
deassignLRs
nfreeRegsType
freeReg
freeReg
  op: CAST
pic16_allocDirReg BAD, op is NULL
deassignLRs
nfreeRegsType
getRegGpr
allocReg of type REG_GPR for register rIdx: 9 (0x9)
  op: -
pic16_allocDirReg BAD, op is NULL
deassignLRs
nfreeRegsType
  op: SEND
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: SEND
deassignLRs
freeReg
freeReg
  op: CALL
pic16_allocDirReg:815 symbol name __mulint
  827  storage class 0 
 832  integral
 838  specifier
__mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
pic16_allocDirReg:861 sym: _mulint in codespace
deassignLRs
willCauseSpill
computeSpillable
bitvector Size = 299 bSize = 38
Bits on { (2) (4) (129) (134) }
getRegGpr
allocReg of type REG_GPR for register rIdx: 9 (0x9)
getRegGpr
allocReg of type REG_GPR for register rIdx: 9 (0x9)
  2457 - 
  2471 - 
  op: +
deassignLRs
nfreeRegsType
freeReg
freeReg
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
bitvector Size = 299 bSize = 38
Bits on { (2) (4) (135) (136) }
getRegGpr
allocReg of type REG_GPR for register rIdx: 9 (0x9)
getRegGpr
allocReg of type REG_GPR for register rIdx: 9 (0x9)
getRegGpr
allocReg of type REG_GPR for register rIdx: 9 (0x9)
  2457 - 
positionRegs
  2471 - 
  op: GET_VALUE_AT_ADDRESS
pic16_allocDirReg BAD, op is NULL
deassignLRs
nfreeRegsType
freeReg
freeReg
  op: CAST
pic16_allocDirReg BAD, op is NULL
deassignLRs
nfreeRegsType
getRegGpr
allocReg of type REG_GPR for register rIdx: 9 (0x9)
  op: +
deassignLRs
nfreeRegsType
freeReg
freeReg
  op: -
pic16_allocDirReg BAD, op is NULL
deassignLRs
nfreeRegsType
  op: CAST
pic16_allocDirReg BAD, op is NULL
deassignLRs
nfreeRegsType
getRegGpr
allocReg of type REG_GPR for register rIdx: 9 (0x9)
getRegGpr
allocReg of type REG_GPR for register rIdx: 9 (0x9)
  op: =
deassignLRs
freeReg
freeReg
freeReg
freeReg
  op: GOTO
deassignLRs
  op: LABEL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
bitvector Size = 299 bSize = 38
Bits on { (2) (4) (143) }
getRegGpr
allocReg of type REG_GPR for register rIdx: 9 (0x9)
getRegGpr
allocReg of type REG_GPR for register rIdx: 9 (0x9)
getRegGpr
allocReg of type REG_GPR for register rIdx: 9 (0x9)
  2457 - 
positionRegs
  2471 - 
  op: GET_VALUE_AT_ADDRESS
pic16_allocDirReg BAD, op is NULL
deassignLRs
nfreeRegsType
freeReg
freeReg
  op: CAST
pic16_allocDirReg BAD, op is NULL
deassignLRs
nfreeRegsType
getRegGpr
allocReg of type REG_GPR for register rIdx: 9 (0x9)
  op: -
pic16_allocDirReg BAD, op is NULL
deassignLRs
nfreeRegsType
  op: SEND
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: SEND
deassignLRs
freeReg
freeReg
  op: CALL
pic16_allocDirReg:815 symbol name __mulint
  827  storage class 0 
 832  integral
 838  specifier
__mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
pic16_allocDirReg:861 sym: _mulint in codespace
deassignLRs
willCauseSpill
computeSpillable
bitvector Size = 299 bSize = 38
Bits on { (2) (4) (147) }
getRegGpr
allocReg of type REG_GPR for register rIdx: 9 (0x9)
getRegGpr
allocReg of type REG_GPR for register rIdx: 9 (0x9)
  2457 - 
  2471 - 
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
bitvector Size = 299 bSize = 38
Bits on { (2) (4) (147) (148) }
getRegGpr
allocReg of type REG_GPR for register rIdx: 9 (0x9)
getRegGpr
allocReg of type REG_GPR for register rIdx: 9 (0x9)
getRegGpr
allocReg of type REG_GPR for register rIdx: 9 (0x9)
  2457 - 
positionRegs
  2471 - 
  op: GET_VALUE_AT_ADDRESS
pic16_allocDirReg BAD, op is NULL
deassignLRs
nfreeRegsType
freeReg
freeReg
  op: CAST
pic16_allocDirReg BAD, op is NULL
deassignLRs
nfreeRegsType
getRegGpr
allocReg of type REG_GPR for register rIdx: 9 (0x9)
  op: -
pic16_allocDirReg BAD, op is NULL
deassignLRs
nfreeRegsType
  op: SEND
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: SEND
deassignLRs
freeReg
freeReg
  op: CALL
pic16_allocDirReg:815 symbol name __mulint
  827  storage class 0 
 832  integral
 838  specifier
__mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
pic16_allocDirReg:861 sym: _mulint in codespace
deassignLRs
willCauseSpill
computeSpillable
bitvector Size = 299 bSize = 38
Bits on { (2) (4) (147) (152) }
getRegGpr
allocReg of type REG_GPR for register rIdx: 9 (0x9)
getRegGpr
allocReg of type REG_GPR for register rIdx: 9 (0x9)
  2457 - 
  2471 - 
  op: +
deassignLRs
nfreeRegsType
freeReg
freeReg
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
bitvector Size = 299 bSize = 38
Bits on { (2) (4) (153) (154) }
getRegGpr
allocReg of type REG_GPR for register rIdx: 9 (0x9)
getRegGpr
allocReg of type REG_GPR for register rIdx: 9 (0x9)
getRegGpr
allocReg of type REG_GPR for register rIdx: 9 (0x9)
  2457 - 
positionRegs
  2471 - 
  op: GET_VALUE_AT_ADDRESS
pic16_allocDirReg BAD, op is NULL
deassignLRs
nfreeRegsType
freeReg
freeReg
  op: CAST
pic16_allocDirReg BAD, op is NULL
deassignLRs
nfreeRegsType
getRegGpr
allocReg of type REG_GPR for register rIdx: 9 (0x9)
  op: -
pic16_allocDirReg BAD, op is NULL
deassignLRs
nfreeRegsType
  op: +
pic16_allocDirReg:815 symbol name _sys_temp_min
  827  storage class 0 
 832  integral
 838  specifier
_sys_temp_min [k142 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed}
deassignLRs
freeReg
freeReg
freeReg
freeReg
  op: GOTO
deassignLRs
  op: LABEL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
bitvector Size = 299 bSize = 38
Bits on { (2) (4) (161) }
getRegGpr
allocReg of type REG_GPR for register rIdx: 9 (0x9)
getRegGpr
allocReg of type REG_GPR for register rIdx: 9 (0x9)
getRegGpr
allocReg of type REG_GPR for register rIdx: 9 (0x9)
  2457 - 
positionRegs
  2471 - 
  op: GET_VALUE_AT_ADDRESS
pic16_allocDirReg BAD, op is NULL
deassignLRs
nfreeRegsType
freeReg
freeReg
  op: CAST
pic16_allocDirReg BAD, op is NULL
deassignLRs
nfreeRegsType
getRegGpr
allocReg of type REG_GPR for register rIdx: 9 (0x9)
  op: -
pic16_allocDirReg BAD, op is NULL
deassignLRs
nfreeRegsType
  op: SEND
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: SEND
deassignLRs
freeReg
freeReg
  op: CALL
pic16_allocDirReg:815 symbol name __mulint
  827  storage class 0 
 832  integral
 838  specifier
__mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
pic16_allocDirReg:861 sym: _mulint in codespace
deassignLRs
willCauseSpill
computeSpillable
bitvector Size = 299 bSize = 38
Bits on { (2) (4) (165) }
getRegGpr
allocReg of type REG_GPR for register rIdx: 9 (0x9)
getRegGpr
allocReg of type REG_GPR for register rIdx: 9 (0x9)
  2457 - 
  2471 - 
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
bitvector Size = 299 bSize = 38
Bits on { (2) (4) (165) (166) }
getRegGpr
allocReg of type REG_GPR for register rIdx: 9 (0x9)
getRegGpr
allocReg of type REG_GPR for register rIdx: 9 (0x9)
getRegGpr
allocReg of type REG_GPR for register rIdx: 9 (0x9)
  2457 - 
positionRegs
  2471 - 
  op: GET_VALUE_AT_ADDRESS
pic16_allocDirReg BAD, op is NULL
deassignLRs
nfreeRegsType
freeReg
freeReg
  op: CAST
pic16_allocDirReg BAD, op is NULL
deassignLRs
nfreeRegsType
getRegGpr
allocReg of type REG_GPR for register rIdx: 9 (0x9)
  op: -
pic16_allocDirReg BAD, op is NULL
deassignLRs
nfreeRegsType
  op: SEND
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: SEND
deassignLRs
freeReg
freeReg
  op: CALL
pic16_allocDirReg:815 symbol name __mulint
  827  storage class 0 
 832  integral
 838  specifier
__mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
pic16_allocDirReg:861 sym: _mulint in codespace
deassignLRs
willCauseSpill
computeSpillable
bitvector Size = 299 bSize = 38
Bits on { (2) (4) (165) (170) }
getRegGpr
allocReg of type REG_GPR for register rIdx: 9 (0x9)
getRegGpr
allocReg of type REG_GPR for register rIdx: 9 (0x9)
  2457 - 
  2471 - 
  op: +
deassignLRs
nfreeRegsType
freeReg
freeReg
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
bitvector Size = 299 bSize = 38
Bits on { (2) (4) (171) (172) }
getRegGpr
allocReg of type REG_GPR for register rIdx: 9 (0x9)
getRegGpr
allocReg of type REG_GPR for register rIdx: 9 (0x9)
getRegGpr
allocReg of type REG_GPR for register rIdx: 9 (0x9)
  2457 - 
positionRegs
  2471 - 
  op: GET_VALUE_AT_ADDRESS
pic16_allocDirReg BAD, op is NULL
deassignLRs
nfreeRegsType
freeReg
freeReg
  op: CAST
pic16_allocDirReg BAD, op is NULL
deassignLRs
nfreeRegsType
getRegGpr
allocReg of type REG_GPR for register rIdx: 9 (0x9)
  op: -
pic16_allocDirReg BAD, op is NULL
deassignLRs
nfreeRegsType
  op: +
pic16_allocDirReg:815 symbol name _sys_temp_max
  827  storage class 0 
 832  integral
 838  specifier
_sys_temp_max [k160 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed}
deassignLRs
freeReg
freeReg
freeReg
freeReg
  op: GOTO
deassignLRs
  op: LABEL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
bitvector Size = 299 bSize = 38
Bits on { (2) (4) (179) }
getRegGpr
allocReg of type REG_GPR for register rIdx: 9 (0x9)
getRegGpr
allocReg of type REG_GPR for register rIdx: 9 (0x9)
getRegGpr
allocReg of type REG_GPR for register rIdx: 9 (0x9)
  2457 - 
positionRegs
  2471 - 
  op: GET_VALUE_AT_ADDRESS
pic16_allocDirReg BAD, op is NULL
deassignLRs
nfreeRegsType
freeReg
freeReg
  op: CAST
pic16_allocDirReg BAD, op is NULL
deassignLRs
nfreeRegsType
getRegGpr
allocReg of type REG_GPR for register rIdx: 9 (0x9)
  op: -
pic16_allocDirReg BAD, op is NULL
deassignLRs
nfreeRegsType
  op: SEND
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: SEND
deassignLRs
freeReg
freeReg
  op: CALL
pic16_allocDirReg:815 symbol name __mulint
  827  storage class 0 
 832  integral
 838  specifier
__mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
pic16_allocDirReg:861 sym: _mulint in codespace
deassignLRs
willCauseSpill
computeSpillable
bitvector Size = 299 bSize = 38
Bits on { (2) (4) (183) }
getRegGpr
allocReg of type REG_GPR for register rIdx: 9 (0x9)
getRegGpr
allocReg of type REG_GPR for register rIdx: 9 (0x9)
  2457 - 
  2471 - 
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
bitvector Size = 299 bSize = 38
Bits on { (2) (4) (183) (184) }
getRegGpr
allocReg of type REG_GPR for register rIdx: 9 (0x9)
getRegGpr
allocReg of type REG_GPR for register rIdx: 9 (0x9)
getRegGpr
allocReg of type REG_GPR for register rIdx: 9 (0x9)
  2457 - 
positionRegs
  2471 - 
  op: GET_VALUE_AT_ADDRESS
pic16_allocDirReg BAD, op is NULL
deassignLRs
nfreeRegsType
freeReg
freeReg
  op: CAST
pic16_allocDirReg BAD, op is NULL
deassignLRs
nfreeRegsType
getRegGpr
allocReg of type REG_GPR for register rIdx: 9 (0x9)
  op: -
pic16_allocDirReg BAD, op is NULL
deassignLRs
nfreeRegsType
  op: SEND
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: SEND
deassignLRs
freeReg
freeReg
  op: CALL
pic16_allocDirReg:815 symbol name __mulint
  827  storage class 0 
 832  integral
 838  specifier
__mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
pic16_allocDirReg:861 sym: _mulint in codespace
deassignLRs
willCauseSpill
computeSpillable
bitvector Size = 299 bSize = 38
Bits on { (2) (4) (183) (188) }
getRegGpr
allocReg of type REG_GPR for register rIdx: 9 (0x9)
getRegGpr
allocReg of type REG_GPR for register rIdx: 9 (0x9)
  2457 - 
  2471 - 
  op: +
deassignLRs
nfreeRegsType
freeReg
freeReg
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
bitvector Size = 299 bSize = 38
Bits on { (2) (4) (189) (190) }
getRegGpr
allocReg of type REG_GPR for register rIdx: 9 (0x9)
getRegGpr
allocReg of type REG_GPR for register rIdx: 9 (0x9)
getRegGpr
allocReg of type REG_GPR for register rIdx: 9 (0x9)
  2457 - 
positionRegs
  2471 - 
  op: GET_VALUE_AT_ADDRESS
pic16_allocDirReg BAD, op is NULL
deassignLRs
nfreeRegsType
freeReg
freeReg
  op: CAST
pic16_allocDirReg BAD, op is NULL
deassignLRs
nfreeRegsType
getRegGpr
allocReg of type REG_GPR for register rIdx: 9 (0x9)
  op: -
pic16_allocDirReg BAD, op is NULL
deassignLRs
nfreeRegsType
  op: +
pic16_allocDirReg:815 symbol name _sys_lumi_min
  827  storage class 0 
 832  integral
 838  specifier
_sys_lumi_min [k178 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed}
deassignLRs
freeReg
freeReg
freeReg
freeReg
  op: GOTO
deassignLRs
  op: LABEL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
bitvector Size = 299 bSize = 38
Bits on { (2) (4) (196) }
getRegGpr
allocReg of type REG_GPR for register rIdx: 9 (0x9)
getRegGpr
allocReg of type REG_GPR for register rIdx: 9 (0x9)
getRegGpr
allocReg of type REG_GPR for register rIdx: 9 (0x9)
  2457 - 
positionRegs
  2471 - 
  op: GET_VALUE_AT_ADDRESS
pic16_allocDirReg BAD, op is NULL
deassignLRs
nfreeRegsType
freeReg
freeReg
  op: CAST
pic16_allocDirReg BAD, op is NULL
deassignLRs
nfreeRegsType
getRegGpr
allocReg of type REG_GPR for register rIdx: 9 (0x9)
  op: -
pic16_allocDirReg BAD, op is NULL
deassignLRs
nfreeRegsType
  op: SEND
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: SEND
deassignLRs
freeReg
freeReg
  op: CALL
pic16_allocDirReg:815 symbol name __mulint
  827  storage class 0 
 832  integral
 838  specifier
__mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
pic16_allocDirReg:861 sym: _mulint in codespace
deassignLRs
willCauseSpill
computeSpillable
bitvector Size = 299 bSize = 38
Bits on { (2) (4) (200) }
getRegGpr
allocReg of type REG_GPR for register rIdx: 9 (0x9)
getRegGpr
allocReg of type REG_GPR for register rIdx: 9 (0x9)
  2457 - 
  2471 - 
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
bitvector Size = 299 bSize = 38
Bits on { (2) (4) (200) (201) }
getRegGpr
allocReg of type REG_GPR for register rIdx: 9 (0x9)
getRegGpr
allocReg of type REG_GPR for register rIdx: 9 (0x9)
getRegGpr
allocReg of type REG_GPR for register rIdx: 9 (0x9)
  2457 - 
positionRegs
  2471 - 
  op: GET_VALUE_AT_ADDRESS
pic16_allocDirReg BAD, op is NULL
deassignLRs
nfreeRegsType
freeReg
freeReg
  op: CAST
pic16_allocDirReg BAD, op is NULL
deassignLRs
nfreeRegsType
getRegGpr
allocReg of type REG_GPR for register rIdx: 9 (0x9)
  op: -
pic16_allocDirReg BAD, op is NULL
deassignLRs
nfreeRegsType
  op: SEND
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: SEND
deassignLRs
freeReg
freeReg
  op: CALL
pic16_allocDirReg:815 symbol name __mulint
  827  storage class 0 
 832  integral
 838  specifier
__mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
pic16_allocDirReg:861 sym: _mulint in codespace
deassignLRs
willCauseSpill
computeSpillable
bitvector Size = 299 bSize = 38
Bits on { (2) (4) (200) (205) }
getRegGpr
allocReg of type REG_GPR for register rIdx: 9 (0x9)
getRegGpr
allocReg of type REG_GPR for register rIdx: 9 (0x9)
  2457 - 
  2471 - 
  op: +
deassignLRs
nfreeRegsType
freeReg
freeReg
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
nfreeRegsType
  op: GET_VALUE_AT_ADDRESS
pic16_allocDirReg BAD, op is NULL
deassignLRs
nfreeRegsType
freeReg
freeReg
  op: CAST
pic16_allocDirReg BAD, op is NULL
deassignLRs
nfreeRegsType
getRegGpr
allocReg of type REG_GPR for register rIdx: 9 (0x9)
  op: -
pic16_allocDirReg BAD, op is NULL
deassignLRs
nfreeRegsType
  op: +
pic16_allocDirReg:815 symbol name _sys_temp_max
  827  storage class 0 
 832  integral
 838  specifier
_sys_temp_max [k160 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed}
deassignLRs
freeReg
freeReg
freeReg
freeReg
  op: GOTO
deassignLRs
  op: LABEL
deassignLRs
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: LABEL
deassignLRs
  op: RETURN
deassignLRs
freeReg
  op: LABEL
deassignLRs
  op: ENDFUNCTION
deassignLRs
createRegMask
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
ebbs after optimizing:

----------------------------------------------------------------
Basic Block _entry : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 1 : bbnum = 0 1st iCode = 1 , last iCode = 7
visited 0 : hasFcall = 0

defines bitVector :bitvector Size = 299 bSize = 38
Bits on { (2) (3) (5) (6) }

local defines bitVector :bitvector Size = 299 bSize = 38
Bits on { (2) (3) (5) (6) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :
outDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (3) (5) (6) }

usesDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (5) (6) }

----------------------------------------------------------------
check.c(l70:s1:k0:d0:s0)	 _entry($33) :
check.c(l70:s2:k1:d0:s0)		proc _check_comando [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char function ( char generic* fixed) fixed}
check.c(l70:s3:k2:d0:s0)	iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] = recv _check_comando [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char function ( char generic* fixed) fixed}
check.c(l72:s4:k3:d0:s0)		iTemp1 [k4 lr4:258 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _check_comando_ret_1_74}[r0x03 ] := 0xff {const-unsigned-char literal}
check.c(l79:s5:k5:d0:s0)		iTemp3 [k7 lr5:24 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp0 [k2 lr3:249 so:0]{ ia1 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x0 {const-unsigned-char literal}]
check.c(l79:s6:k6:d0:s0)		iTemp4 [k8 lr6:7 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp3 [k7 lr5:24 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] == 0x31 {const-char literal}
check.c(l79:s7:k7:d0:s0)		if iTemp4 [k8 lr6:7 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _case_0_49($1)
check.c(l79:s8:k8:d0:s0)		iTemp5 [k9 lr8:9 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp3 [k7 lr5:24 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] == 0x32 {const-char literal}
check.c(l79:s9:k9:d0:s0)		if iTemp5 [k9 lr8:9 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _case_0_50($5)
check.c(l79:s10:k10:d0:s0)		iTemp6 [k10 lr10:11 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp3 [k7 lr5:24 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] == 0x33 {const-char literal}
check.c(l79:s11:k11:d0:s0)		if iTemp6 [k10 lr10:11 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _case_0_51($8)
check.c(l79:s12:k12:d0:s0)		iTemp7 [k11 lr12:13 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp3 [k7 lr5:24 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] == 0x34 {const-char literal}
check.c(l79:s13:k13:d0:s0)		if iTemp7 [k11 lr12:13 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _case_0_52($14)
check.c(l79:s14:k14:d0:s0)		iTemp8 [k12 lr14:15 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp3 [k7 lr5:24 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] == 0x35 {const-char literal}
check.c(l79:s15:k15:d0:s0)		if iTemp8 [k12 lr14:15 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _case_0_53($20)
check.c(l79:s16:k16:d0:s0)		iTemp9 [k13 lr16:17 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp3 [k7 lr5:24 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] == 0x36 {const-char literal}
check.c(l79:s17:k17:d0:s0)		if iTemp9 [k13 lr16:17 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _case_0_54($21)
check.c(l79:s18:k18:d0:s0)		iTemp10 [k14 lr18:19 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp3 [k7 lr5:24 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] == 0x37 {const-char literal}
check.c(l79:s19:k19:d0:s0)		if iTemp10 [k14 lr18:19 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _case_0_55($22)
check.c(l79:s20:k20:d0:s0)		iTemp11 [k15 lr20:21 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp3 [k7 lr5:24 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] == 0x38 {const-char literal}
check.c(l79:s21:k21:d0:s0)		if iTemp11 [k15 lr20:21 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _case_0_56($23)
check.c(l79:s22:k22:d0:s0)		iTemp12 [k16 lr22:23 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp3 [k7 lr5:24 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] == 0x39 {const-char literal}
check.c(l79:s23:k23:d0:s0)		if iTemp12 [k16 lr22:23 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _case_0_57($24)
check.c(l79:s24:k24:d0:s0)		iTemp13 [k17 lr24:25 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp3 [k7 lr5:24 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] == 0x52 {const-char literal}
check.c(l79:s25:k25:d0:s0)		if iTemp13 [k17 lr24:25 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _case_0_82($25)
check.c(l79:s26:k26:d0:s0)		 goto _swBrk_0($27)
check.c(l80:s27:k27:d0:s0)	 _case_0_49($1) :
check.c(l81:s28:k28:d0:s0)		iTemp15 [k20 lr28:29 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l81:s29:k29:d0:s0)		iTemp16 [k21 lr29:30 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp15 [k20 lr28:29 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l81:s30:k30:d0:s0)		iTemp14 [k18 lr30:53 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_led_num_1_74}[r0x04 ] = iTemp16 [k21 lr29:30 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] - 0x30 {char literal}
check.c(l82:s31:k32:d0:s0)		if iTemp14 [k18 lr30:53 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_led_num_1_74}[r0x04 ] != 0 goto _iffalse_3($3)
check.c(l83:s32:k35:d0:s0)		iTemp18 [k24 lr32:33 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x05 r0x06 r0x07 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l83:s33:k36:d0:s0)		iTemp19 [k25 lr33:34 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = @[iTemp18 [k24 lr32:33 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x05 r0x06 r0x07 ] + 0x0 {const-unsigned-char literal}]
check.c(l83:s34:k37:d0:s0)		iTemp20 [k26 lr34:36 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = iTemp19 [k25 lr33:34 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] - 0x30 {char literal}
check.c(l83:s35:k38:d0:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
check.c(l83:s36:k39:d0:s0)		send iTemp20 [k26 lr34:36 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ]{argreg = 2}
check.c(l83:s37:k40:d0:s0)		iTemp21 [k29 lr37:37 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _led [k23 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( unsigned-char fixed, unsigned-char fixed) fixed}
check.c(l83:s38:k41:d0:s0)		 goto _swBrk_0($27)
check.c(l83:s39:k42:d0:s0)	 _iffalse_3($3) :
check.c(l85:s40:k43:d0:s0)		iTemp23 [k32 lr40:41 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x05 r0x06 r0x07 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l85:s41:k44:d0:s0)		iTemp24 [k33 lr41:42 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = @[iTemp23 [k32 lr40:41 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x05 r0x06 r0x07 ] + 0x0 {const-unsigned-char literal}]
check.c(l85:s42:k45:d0:s0)		iTemp25 [k34 lr42:43 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = iTemp24 [k33 lr41:42 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] - 0x30 {char literal}
check.c(l85:s43:k46:d0:s0)		iTemp26 [k35 lr43:48 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = iTemp25 [k34 lr42:43 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] * 0x64 {const-unsigned-char literal}
check.c(l85:s44:k47:d0:s0)		iTemp27 [k36 lr44:45 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l85:s45:k48:d0:s0)		iTemp28 [k37 lr45:46 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp27 [k36 lr44:45 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l85:s46:k49:d0:s0)		iTemp29 [k38 lr46:47 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = iTemp28 [k37 lr45:46 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] - 0x30 {char literal}
check.c(l85:s47:k50:d0:s0)		iTemp30 [k39 lr47:48 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = iTemp29 [k38 lr46:47 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] * 0xa {const-unsigned-char literal}
check.c(l85:s48:k51:d0:s0)		iTemp31 [k40 lr48:51 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = iTemp26 [k35 lr43:48 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] + iTemp30 [k39 lr47:48 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l86:s49:k52:d0:s0)		iTemp32 [k41 lr49:50 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x4 {const-unsigned-char literal}
check.c(l86:s50:k53:d0:s0)		iTemp33 [k42 lr50:51 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp32 [k41 lr49:50 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l86:s51:k54:d0:s0)		iTemp34 [k43 lr51:52 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = iTemp31 [k40 lr48:51 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] + iTemp33 [k42 lr50:51 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l86:s52:k55:d0:s0)		iTemp22 [k30 lr52:55 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_pwm_1_74}[r0x05 ] = iTemp34 [k43 lr51:52 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] - 0x30 {char literal}
check.c(l87:s53:k57:d0:s0)		iTemp36 [k46 lr53:55 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = iTemp14 [k18 lr30:53 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_led_num_1_74}[r0x04 ] - 0x1 {char literal}
check.c(l87:s54:k58:d0:s0)		send iTemp36 [k46 lr53:55 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]{argreg = 1}
check.c(l87:s55:k59:d0:s0)		send iTemp22 [k30 lr52:55 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_pwm_1_74}[r0x05 ]{argreg = 2}
check.c(l87:s56:k60:d0:s0)		iTemp37 [k49 lr56:56 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _set_pwm [k45 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( unsigned-char fixed, unsigned-char fixed) fixed}
check.c(l89:s57:k62:d0:s0)		 goto _swBrk_0($27)
check.c(l90:s58:k63:d0:s0)	 _case_0_50($5) :
check.c(l91:s59:k64:d0:s0)		iTemp38 [k51 lr59:59 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _limpa_lcd [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( ) fixed}
check.c(l94:s60:k65:d0:s0)		iTemp39 [k53 lr60:88 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] = &[_check_comando_linha_1_1_74 [k52 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [17] fixed}]
check.c(l94:s61:k66:d0:s0)		iTemp40 [k54 lr61:62 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] = iTemp39 [k53 lr60:88 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] + 0x10 {const-unsigned-char literal}
check.c(l94:s62:k67:d0:s0)		*(iTemp40 [k54 lr61:62 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat]) := 0x0 {const-char literal}
check.c(l95:s63:k68:d0:s0)		iTemp41 [k56 lr63:93 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] = &[_check_comando_linha_2_1_74 [k55 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [17] fixed}]
check.c(l95:s64:k69:d0:s0)		iTemp42 [k57 lr64:65 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] = iTemp41 [k56 lr63:93 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] + 0x10 {const-unsigned-char literal}
check.c(l95:s65:k70:d0:s0)		*(iTemp42 [k57 lr64:65 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat]) := 0x0 {const-char literal}
check.c(l96:s66:k289:d0:s0)		iTemp50 [k66 lr66:76 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] := 0x1 {const-char literal}
check.c(l96:s68:k72:d1:s0)	 _forbody_1($28) :
check.c(l97:s69:k74:d1:s0)		iTemp45 [k61 lr69:70 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = iTemp50 [k66 lr66:76 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] - 0x1 {char literal}
check.c(l97:s70:k75:d1:s0)		iTemp46 [k62 lr70:73 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x05 r0x06 ] = iTemp39 [k53 lr60:88 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] + iTemp45 [k61 lr69:70 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ]
check.c(l97:s71:k76:d1:s0)		iTemp47 [k63 lr71:72 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x07 r0x08 r0x09 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + iTemp50 [k66 lr66:76 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ]
check.c(l97:s72:k77:d1:s0)		iTemp48 [k64 lr72:73 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x07 ] = @[iTemp47 [k63 lr71:72 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x07 r0x08 r0x09 ] + 0x0 {const-unsigned-char literal}]
check.c(l97:s73:k78:d1:s0)		*(iTemp46 [k62 lr70:73 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x05 r0x06 ]) := iTemp48 [k64 lr72:73 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x07 ]
check.c(l96:s74:k81:d1:s0)		iTemp50 [k66 lr66:76 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] = iTemp50 [k66 lr66:76 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] + 0x1 {const-unsigned-char literal}
check.c(l96:s75:k83:d1:s0)		iTemp51 [k67 lr75:76 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp50 [k66 lr66:76 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] < 0x11 {const-char literal}
check.c(l96:s76:k84:d1:s0)		if iTemp51 [k67 lr75:76 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forbody_1($28)
check.c(l98:s77:k292:d0:s0)		iTemp58 [k74 lr77:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] := 0x11 {const-char literal}
check.c(l98:s79:k88:d1:s0)	 _forbody_2($30) :
check.c(l99:s80:k90:d1:s0)		iTemp53 [k69 lr80:81 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = iTemp58 [k74 lr77:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] - 0x11 {char literal}
check.c(l99:s81:k91:d1:s0)		iTemp54 [k70 lr81:84 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x05 r0x06 ] = iTemp41 [k56 lr63:93 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] + iTemp53 [k69 lr80:81 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ]
check.c(l99:s82:k92:d1:s0)		iTemp55 [k71 lr82:83 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x07 r0x08 r0x09 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + iTemp58 [k74 lr77:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ]
check.c(l99:s83:k93:d1:s0)		iTemp56 [k72 lr83:84 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x07 ] = @[iTemp55 [k71 lr82:83 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x07 r0x08 r0x09 ] + 0x0 {const-unsigned-char literal}]
check.c(l99:s84:k94:d1:s0)		*(iTemp54 [k70 lr81:84 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x05 r0x06 ]) := iTemp56 [k72 lr83:84 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x07 ]
check.c(l98:s85:k97:d1:s0)		iTemp58 [k74 lr77:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] = iTemp58 [k74 lr77:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] + 0x1 {const-unsigned-char literal}
check.c(l98:s86:k99:d1:s0)		iTemp59 [k75 lr86:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp58 [k74 lr77:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] < 0x21 {const-char literal}
check.c(l98:s87:k100:d1:s0)		if iTemp59 [k75 lr86:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forbody_2($30)
check.c(l100:s88:k103:d0:s0)		iTemp60 [k77 lr88:89 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] := iTemp39 [k53 lr60:88 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat]
check.c(l100:s89:k104:d0:s0)		iTemp61 [k78 lr89:90 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = (char generic* fixed)iTemp60 [k77 lr88:89 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat]
check.c(l100:s90:k105:d0:s0)		send iTemp61 [k78 lr89:90 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ]{argreg = 1}
check.c(l100:s91:k106:d0:s0)		iTemp62 [k80 lr91:91 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _print_lcd_string [k76 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char generic* fixed) fixed}
check.c(l101:s92:k107:d0:s0)		iTemp63 [k82 lr92:92 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _print_lcd_ln [k81 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( ) fixed}
check.c(l102:s93:k108:d0:s0)		iTemp64 [k83 lr93:94 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] := iTemp41 [k56 lr63:93 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat]
check.c(l102:s94:k109:d0:s0)		iTemp65 [k84 lr94:95 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = (char generic* fixed)iTemp64 [k83 lr93:94 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat]
check.c(l102:s95:k110:d0:s0)		send iTemp65 [k84 lr94:95 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ]{argreg = 1}
check.c(l102:s96:k111:d0:s0)		iTemp66 [k85 lr96:96 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _print_lcd_string [k76 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char generic* fixed) fixed}
check.c(l103:s97:k112:d0:s0)		iTemp1 [k4 lr4:258 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _check_comando_ret_1_74}[r0x03 ] := 0x34 {const-unsigned-char literal}
check.c(l104:s98:k113:d0:s0)		 goto _swBrk_0($27)
check.c(l105:s99:k114:d0:s0)	 _case_0_51($8) :
check.c(l106:s100:k115:d0:s0)		iTemp67 [k86 lr100:101 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l106:s101:k116:d0:s0)		iTemp68 [k87 lr101:102 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp67 [k86 lr100:101 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l106:s102:k117:d0:s0)		iTemp69 [k88 lr102:103 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp68 [k87 lr101:102 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l106:s103:k118:d0:s0)		iTemp70 [k89 lr103:109 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp69 [k88 lr102:103 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l106:s104:k119:d0:s0)		iTemp71 [k90 lr104:105 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp70 [k89 lr103:109 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] == 0x1 {int literal}
check.c(l106:s105:k120:d0:s0)		if iTemp71 [k90 lr104:105 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} == 0 goto _iffalse_5($12)
check.c(l107:s106:k124:d0:s0)		_hab_alarme [k91 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed} := 0x1 {const-unsigned-char literal}
check.c(l107:s107:k125:d0:s0)		 goto _swBrk_0($27)
check.c(l107:s108:k126:d0:s0)	 _iffalse_5($12) :
check.c(l108:s109:k131:d0:s0)		if iTemp70 [k89 lr103:109 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] != 0 goto _swBrk_0($27)
check.c(l109:s110:k135:d0:s0)		_hab_alarme [k91 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed} := 0x0 {const-unsigned-char literal}
check.c(l110:s111:k138:d0:s0)		 goto _swBrk_0($27)
check.c(l111:s112:k139:d0:s0)	 _case_0_52($14) :
check.c(l112:s113:k140:d0:s0)		iTemp78 [k98 lr113:114 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l112:s114:k141:d0:s0)		iTemp79 [k99 lr114:115 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp78 [k98 lr113:114 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l112:s115:k142:d0:s0)		iTemp80 [k100 lr115:116 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp79 [k99 lr114:115 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l112:s116:k143:d0:s0)		iTemp81 [k101 lr116:122 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp80 [k100 lr115:116 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l112:s117:k144:d0:s0)		iTemp82 [k102 lr117:118 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp81 [k101 lr116:122 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] == 0x1 {int literal}
check.c(l112:s118:k145:d0:s0)		if iTemp82 [k102 lr117:118 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} == 0 goto _iffalse_7($18)
check.c(l113:s119:k149:d0:s0)		_hab_sensor [k103 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed} := 0x0 {const-unsigned-char literal}
check.c(l113:s120:k150:d0:s0)		 goto _swBrk_0($27)
check.c(l113:s121:k151:d0:s0)	 _iffalse_7($18) :
check.c(l114:s122:k156:d0:s0)		if iTemp81 [k101 lr116:122 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] != 0 goto _swBrk_0($27)
check.c(l115:s123:k160:d0:s0)		_hab_sensor [k103 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed} := 0x2 {const-unsigned-char literal}
check.c(l116:s124:k163:d0:s0)		 goto _swBrk_0($27)
check.c(l117:s125:k164:d0:s0)	 _case_0_53($20) :
check.c(l118:s126:k165:d0:s0)		iTemp89 [k111 lr126:127 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{unsigned-long-int near* fixed}[remat] = &[_sys_timer_pool [k110 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int [2] fixed}]
check.c(l118:s127:k166:d0:s0)		iTemp90 [k112 lr127:165 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{unsigned-long-int near* fixed}[remat] = iTemp89 [k111 lr126:127 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{unsigned-long-int near* fixed}[remat] + 0x4 {unsigned-char literal}
check.c(l118:s128:k167:d0:s0)		iTemp91 [k113 lr128:129 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l118:s129:k168:d0:s0)		iTemp92 [k114 lr129:130 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp91 [k113 lr128:129 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l118:s130:k169:d0:s0)		iTemp93 [k115 lr130:131 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp92 [k114 lr129:130 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l118:s131:k170:d0:s0)		iTemp94 [k116 lr131:133 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp93 [k115 lr130:131 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l118:s132:k299:d0:s0)		send 0x2710 {const-int literal}{argreg = 1}
check.c(l118:s133:k300:d0:s0)		send iTemp94 [k116 lr131:133 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l118:s134:k301:d0:s0)		iTemp95 [k117 lr134:142 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l118:s135:k172:d0:s0)		iTemp96 [k118 lr135:136 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l118:s136:k173:d0:s0)		iTemp97 [k119 lr136:137 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp96 [k118 lr135:136 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l118:s137:k174:d0:s0)		iTemp98 [k120 lr137:138 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp97 [k119 lr136:137 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l118:s138:k175:d0:s0)		iTemp99 [k121 lr138:140 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp98 [k120 lr137:138 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l118:s139:k302:d0:s0)		send 0x3e8 {const-int literal}{argreg = 1}
check.c(l118:s140:k303:d0:s0)		send iTemp99 [k121 lr138:140 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l118:s141:k304:d0:s0)		iTemp100 [k122 lr141:142 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l118:s142:k177:d0:s0)		iTemp101 [k123 lr142:150 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp95 [k117 lr134:142 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp100 [k122 lr141:142 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l119:s143:k178:d0:s0)		iTemp102 [k124 lr143:144 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l119:s144:k179:d0:s0)		iTemp103 [k125 lr144:145 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp102 [k124 lr143:144 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l119:s145:k180:d0:s0)		iTemp104 [k126 lr145:146 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp103 [k125 lr144:145 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l119:s146:k181:d0:s0)		iTemp105 [k127 lr146:148 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp104 [k126 lr145:146 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l119:s147:k305:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l119:s148:k306:d0:s0)		send iTemp105 [k127 lr146:148 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l119:s149:k307:d0:s0)		iTemp106 [k128 lr149:150 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l119:s150:k183:d0:s0)		iTemp107 [k129 lr150:158 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp101 [k123 lr142:150 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp106 [k128 lr149:150 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l119:s151:k184:d0:s0)		iTemp108 [k130 lr151:152 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x4 {const-unsigned-char literal}
check.c(l119:s152:k185:d0:s0)		iTemp109 [k131 lr152:153 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp108 [k130 lr151:152 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l119:s153:k186:d0:s0)		iTemp110 [k132 lr153:154 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp109 [k131 lr152:153 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l119:s154:k187:d0:s0)		iTemp111 [k133 lr154:156 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp110 [k132 lr153:154 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l119:s155:k308:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l119:s156:k309:d0:s0)		send iTemp111 [k133 lr154:156 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l119:s157:k310:d0:s0)		iTemp112 [k134 lr157:158 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l119:s158:k189:d0:s0)		iTemp113 [k135 lr158:162 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp107 [k129 lr150:158 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp112 [k134 lr157:158 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l120:s159:k190:d0:s0)		iTemp114 [k136 lr159:160 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x5 {const-unsigned-char literal}
check.c(l120:s160:k191:d0:s0)		iTemp115 [k137 lr160:161 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp114 [k136 lr159:160 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l120:s161:k192:d0:s0)		iTemp116 [k138 lr161:162 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp115 [k137 lr160:161 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l120:s162:k193:d0:s0)		iTemp117 [k139 lr162:163 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = iTemp113 [k135 lr158:162 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp116 [k138 lr161:162 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ]
check.c(l120:s163:k194:d0:s0)		iTemp118 [k140 lr163:164 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp117 [k139 lr162:163 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l120:s164:k195:d0:s0)		iTemp119 [k141 lr164:165 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x04 r0x05 r0x06 r0x07 ] = (unsigned-long-int fixed)iTemp118 [k140 lr163:164 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]
check.c(l120:s165:k196:d0:s0)		*(iTemp90 [k112 lr127:165 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{unsigned-long-int near* fixed}[remat]) := iTemp119 [k141 lr164:165 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x04 r0x05 r0x06 r0x07 ]
check.c(l121:s166:k197:d0:s0)		 goto _swBrk_0($27)
check.c(l122:s167:k198:d0:s0)	 _case_0_54($21) :
check.c(l123:s168:k199:d0:s0)		iTemp120 [k143 lr168:169 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l123:s169:k200:d0:s0)		iTemp121 [k144 lr169:170 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp120 [k143 lr168:169 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l123:s170:k201:d0:s0)		iTemp122 [k145 lr170:171 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp121 [k144 lr169:170 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l123:s171:k202:d0:s0)		iTemp123 [k146 lr171:173 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp122 [k145 lr170:171 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l123:s172:k311:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l123:s173:k312:d0:s0)		send iTemp123 [k146 lr171:173 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l123:s174:k313:d0:s0)		iTemp124 [k147 lr174:182 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l123:s175:k204:d0:s0)		iTemp125 [k148 lr175:176 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l123:s176:k205:d0:s0)		iTemp126 [k149 lr176:177 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp125 [k148 lr175:176 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l123:s177:k206:d0:s0)		iTemp127 [k150 lr177:178 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp126 [k149 lr176:177 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l123:s178:k207:d0:s0)		iTemp128 [k151 lr178:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp127 [k150 lr177:178 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l123:s179:k314:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l123:s180:k315:d0:s0)		send iTemp128 [k151 lr178:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l123:s181:k316:d0:s0)		iTemp129 [k152 lr181:182 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l123:s182:k209:d0:s0)		iTemp130 [k153 lr182:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp124 [k147 lr174:182 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp129 [k152 lr181:182 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l124:s183:k210:d0:s0)		iTemp131 [k154 lr183:184 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l124:s184:k211:d0:s0)		iTemp132 [k155 lr184:185 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp131 [k154 lr183:184 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l124:s185:k212:d0:s0)		iTemp133 [k156 lr185:186 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp132 [k155 lr184:185 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l124:s186:k213:d0:s0)		iTemp134 [k157 lr186:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp133 [k156 lr185:186 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l124:s187:k214:d0:s0)		_sys_temp_min [k142 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed} = iTemp130 [k153 lr182:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp134 [k157 lr186:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l125:s188:k217:d0:s0)		 goto _swBrk_0($27)
check.c(l126:s189:k218:d0:s0)	 _case_0_55($22) :
check.c(l127:s190:k219:d0:s0)		iTemp137 [k161 lr190:191 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l127:s191:k220:d0:s0)		iTemp138 [k162 lr191:192 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp137 [k161 lr190:191 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l127:s192:k221:d0:s0)		iTemp139 [k163 lr192:193 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp138 [k162 lr191:192 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l127:s193:k222:d0:s0)		iTemp140 [k164 lr193:195 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp139 [k163 lr192:193 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l127:s194:k317:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l127:s195:k318:d0:s0)		send iTemp140 [k164 lr193:195 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l127:s196:k319:d0:s0)		iTemp141 [k165 lr196:204 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l127:s197:k224:d0:s0)		iTemp142 [k166 lr197:198 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l127:s198:k225:d0:s0)		iTemp143 [k167 lr198:199 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp142 [k166 lr197:198 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l127:s199:k226:d0:s0)		iTemp144 [k168 lr199:200 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp143 [k167 lr198:199 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l127:s200:k227:d0:s0)		iTemp145 [k169 lr200:202 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp144 [k168 lr199:200 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l127:s201:k320:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l127:s202:k321:d0:s0)		send iTemp145 [k169 lr200:202 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l127:s203:k322:d0:s0)		iTemp146 [k170 lr203:204 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l127:s204:k229:d0:s0)		iTemp147 [k171 lr204:209 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp141 [k165 lr196:204 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp146 [k170 lr203:204 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l128:s205:k230:d0:s0)		iTemp148 [k172 lr205:206 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l128:s206:k231:d0:s0)		iTemp149 [k173 lr206:207 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp148 [k172 lr205:206 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l128:s207:k232:d0:s0)		iTemp150 [k174 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp149 [k173 lr206:207 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l128:s208:k233:d0:s0)		iTemp151 [k175 lr208:209 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp150 [k174 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l128:s209:k234:d0:s0)		_sys_temp_max [k160 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed} = iTemp147 [k171 lr204:209 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp151 [k175 lr208:209 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l129:s210:k237:d0:s0)		 goto _swBrk_0($27)
check.c(l130:s211:k238:d0:s0)	 _case_0_56($23) :
check.c(l131:s212:k239:d0:s0)		iTemp154 [k179 lr212:213 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l131:s213:k240:d0:s0)		iTemp155 [k180 lr213:214 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp154 [k179 lr212:213 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l131:s214:k241:d0:s0)		iTemp156 [k181 lr214:215 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp155 [k180 lr213:214 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l131:s215:k242:d0:s0)		iTemp157 [k182 lr215:217 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp156 [k181 lr214:215 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l131:s216:k323:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l131:s217:k324:d0:s0)		send iTemp157 [k182 lr215:217 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l131:s218:k325:d0:s0)		iTemp158 [k183 lr218:226 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l131:s219:k244:d0:s0)		iTemp159 [k184 lr219:220 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l131:s220:k245:d0:s0)		iTemp160 [k185 lr220:221 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp159 [k184 lr219:220 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l131:s221:k246:d0:s0)		iTemp161 [k186 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp160 [k185 lr220:221 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l131:s222:k247:d0:s0)		iTemp162 [k187 lr222:224 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp161 [k186 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l131:s223:k326:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l131:s224:k327:d0:s0)		send iTemp162 [k187 lr222:224 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l131:s225:k328:d0:s0)		iTemp163 [k188 lr225:226 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l131:s226:k249:d0:s0)		iTemp164 [k189 lr226:231 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp158 [k183 lr218:226 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp163 [k188 lr225:226 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l132:s227:k250:d0:s0)		iTemp165 [k190 lr227:228 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l132:s228:k251:d0:s0)		iTemp166 [k191 lr228:229 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp165 [k190 lr227:228 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l132:s229:k252:d0:s0)		iTemp167 [k192 lr229:230 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp166 [k191 lr228:229 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l132:s230:k253:d0:s0)		iTemp168 [k193 lr230:231 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp167 [k192 lr229:230 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l132:s231:k254:d0:s0)		_sys_lumi_min [k178 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed} = iTemp164 [k189 lr226:231 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp168 [k193 lr230:231 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l133:s232:k257:d0:s0)		 goto _swBrk_0($27)
check.c(l134:s233:k258:d0:s0)	 _case_0_57($24) :
check.c(l135:s234:k259:d0:s0)		iTemp171 [k196 lr234:235 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l135:s235:k260:d0:s0)		iTemp172 [k197 lr235:236 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp171 [k196 lr234:235 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l135:s236:k261:d0:s0)		iTemp173 [k198 lr236:237 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp172 [k197 lr235:236 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l135:s237:k262:d0:s0)		iTemp174 [k199 lr237:239 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp173 [k198 lr236:237 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l135:s238:k329:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l135:s239:k330:d0:s0)		send iTemp174 [k199 lr237:239 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l135:s240:k331:d0:s0)		iTemp175 [k200 lr240:248 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l135:s241:k264:d0:s0)		iTemp176 [k201 lr241:242 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l135:s242:k265:d0:s0)		iTemp177 [k202 lr242:243 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp176 [k201 lr241:242 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l135:s243:k266:d0:s0)		iTemp178 [k203 lr243:244 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp177 [k202 lr242:243 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l135:s244:k267:d0:s0)		iTemp179 [k204 lr244:246 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp178 [k203 lr243:244 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l135:s245:k332:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l135:s246:k333:d0:s0)		send iTemp179 [k204 lr244:246 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l135:s247:k334:d0:s0)		iTemp180 [k205 lr247:248 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l135:s248:k269:d0:s0)		iTemp181 [k206 lr248:253 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp175 [k200 lr240:248 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp180 [k205 lr247:248 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l136:s249:k270:d0:s0)		iTemp182 [k207 lr249:250 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x00 r0x01 r0x02 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l136:s250:k271:d0:s0)		iTemp183 [k208 lr250:251 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x00 ] = @[iTemp182 [k207 lr249:250 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x00 r0x01 r0x02 ] + 0x0 {const-unsigned-char literal}]
check.c(l136:s251:k272:d0:s0)		iTemp184 [k209 lr251:252 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x00 r0x01 ] = (int fixed)iTemp183 [k208 lr250:251 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x00 ]
check.c(l136:s252:k273:d0:s0)		iTemp185 [k210 lr252:253 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x00 r0x01 ] = iTemp184 [k209 lr251:252 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x00 r0x01 ] - 0x30 {int literal}
check.c(l136:s253:k274:d0:s0)		_sys_temp_max [k160 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed} = iTemp181 [k206 lr248:253 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp185 [k210 lr252:253 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x00 r0x01 ]
check.c(l137:s254:k277:d0:s0)		 goto _swBrk_0($27)
check.c(l138:s255:k278:d0:s0)	 _case_0_82($25) :
check.c(l139:s256:k279:d0:s0)		iTemp1 [k4 lr4:258 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _check_comando_ret_1_74}[r0x03 ] := 0x0 {const-char literal}
check.c(l143:s257:k283:d0:s0)	 _swBrk_0($27) :
check.c(l145:s258:k284:d0:s0)		ret iTemp1 [k4 lr4:258 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _check_comando_ret_1_74}[r0x03 ]
check.c(l145:s259:k285:d0:s0)	 _return($32) :
check.c(l145:s260:k286:d0:s0)		eproc _check_comando [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char function ( char generic* fixed) fixed}

----------------------------------------------------------------
Basic Block _eBBlock34 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 2 : bbnum = 1 1st iCode = 8 , last iCode = 9
visited 0 : hasFcall = 0

defines bitVector :bitvector Size = 299 bSize = 38
Bits on { (8) }

local defines bitVector :bitvector Size = 299 bSize = 38
Bits on { (8) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (3) (5) (6) }

outDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (3) (5) (6) (8) }

usesDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (5) (8) }

----------------------------------------------------------------
check.c(l79:s8:k8:d0:s0)		iTemp5 [k9 lr8:9 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp3 [k7 lr5:24 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] == 0x32 {const-char literal}
check.c(l79:s9:k9:d0:s0)		if iTemp5 [k9 lr8:9 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _case_0_50($5)
check.c(l79:s10:k10:d0:s0)		iTemp6 [k10 lr10:11 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp3 [k7 lr5:24 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] == 0x33 {const-char literal}
check.c(l79:s11:k11:d0:s0)		if iTemp6 [k10 lr10:11 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _case_0_51($8)
check.c(l79:s12:k12:d0:s0)		iTemp7 [k11 lr12:13 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp3 [k7 lr5:24 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] == 0x34 {const-char literal}
check.c(l79:s13:k13:d0:s0)		if iTemp7 [k11 lr12:13 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _case_0_52($14)
check.c(l79:s14:k14:d0:s0)		iTemp8 [k12 lr14:15 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp3 [k7 lr5:24 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] == 0x35 {const-char literal}
check.c(l79:s15:k15:d0:s0)		if iTemp8 [k12 lr14:15 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _case_0_53($20)
check.c(l79:s16:k16:d0:s0)		iTemp9 [k13 lr16:17 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp3 [k7 lr5:24 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] == 0x36 {const-char literal}
check.c(l79:s17:k17:d0:s0)		if iTemp9 [k13 lr16:17 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _case_0_54($21)
check.c(l79:s18:k18:d0:s0)		iTemp10 [k14 lr18:19 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp3 [k7 lr5:24 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] == 0x37 {const-char literal}
check.c(l79:s19:k19:d0:s0)		if iTemp10 [k14 lr18:19 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _case_0_55($22)
check.c(l79:s20:k20:d0:s0)		iTemp11 [k15 lr20:21 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp3 [k7 lr5:24 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] == 0x38 {const-char literal}
check.c(l79:s21:k21:d0:s0)		if iTemp11 [k15 lr20:21 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _case_0_56($23)
check.c(l79:s22:k22:d0:s0)		iTemp12 [k16 lr22:23 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp3 [k7 lr5:24 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] == 0x39 {const-char literal}
check.c(l79:s23:k23:d0:s0)		if iTemp12 [k16 lr22:23 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _case_0_57($24)
check.c(l79:s24:k24:d0:s0)		iTemp13 [k17 lr24:25 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp3 [k7 lr5:24 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] == 0x52 {const-char literal}
check.c(l79:s25:k25:d0:s0)		if iTemp13 [k17 lr24:25 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _case_0_82($25)
check.c(l79:s26:k26:d0:s0)		 goto _swBrk_0($27)
check.c(l80:s27:k27:d0:s0)	 _case_0_49($1) :
check.c(l81:s28:k28:d0:s0)		iTemp15 [k20 lr28:29 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l81:s29:k29:d0:s0)		iTemp16 [k21 lr29:30 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp15 [k20 lr28:29 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l81:s30:k30:d0:s0)		iTemp14 [k18 lr30:53 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_led_num_1_74}[r0x04 ] = iTemp16 [k21 lr29:30 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] - 0x30 {char literal}
check.c(l82:s31:k32:d0:s0)		if iTemp14 [k18 lr30:53 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_led_num_1_74}[r0x04 ] != 0 goto _iffalse_3($3)
check.c(l83:s32:k35:d0:s0)		iTemp18 [k24 lr32:33 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x05 r0x06 r0x07 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l83:s33:k36:d0:s0)		iTemp19 [k25 lr33:34 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = @[iTemp18 [k24 lr32:33 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x05 r0x06 r0x07 ] + 0x0 {const-unsigned-char literal}]
check.c(l83:s34:k37:d0:s0)		iTemp20 [k26 lr34:36 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = iTemp19 [k25 lr33:34 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] - 0x30 {char literal}
check.c(l83:s35:k38:d0:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
check.c(l83:s36:k39:d0:s0)		send iTemp20 [k26 lr34:36 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ]{argreg = 2}
check.c(l83:s37:k40:d0:s0)		iTemp21 [k29 lr37:37 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _led [k23 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( unsigned-char fixed, unsigned-char fixed) fixed}
check.c(l83:s38:k41:d0:s0)		 goto _swBrk_0($27)
check.c(l83:s39:k42:d0:s0)	 _iffalse_3($3) :
check.c(l85:s40:k43:d0:s0)		iTemp23 [k32 lr40:41 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x05 r0x06 r0x07 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l85:s41:k44:d0:s0)		iTemp24 [k33 lr41:42 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = @[iTemp23 [k32 lr40:41 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x05 r0x06 r0x07 ] + 0x0 {const-unsigned-char literal}]
check.c(l85:s42:k45:d0:s0)		iTemp25 [k34 lr42:43 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = iTemp24 [k33 lr41:42 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] - 0x30 {char literal}
check.c(l85:s43:k46:d0:s0)		iTemp26 [k35 lr43:48 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = iTemp25 [k34 lr42:43 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] * 0x64 {const-unsigned-char literal}
check.c(l85:s44:k47:d0:s0)		iTemp27 [k36 lr44:45 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l85:s45:k48:d0:s0)		iTemp28 [k37 lr45:46 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp27 [k36 lr44:45 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l85:s46:k49:d0:s0)		iTemp29 [k38 lr46:47 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = iTemp28 [k37 lr45:46 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] - 0x30 {char literal}
check.c(l85:s47:k50:d0:s0)		iTemp30 [k39 lr47:48 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = iTemp29 [k38 lr46:47 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] * 0xa {const-unsigned-char literal}
check.c(l85:s48:k51:d0:s0)		iTemp31 [k40 lr48:51 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = iTemp26 [k35 lr43:48 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] + iTemp30 [k39 lr47:48 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l86:s49:k52:d0:s0)		iTemp32 [k41 lr49:50 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x4 {const-unsigned-char literal}
check.c(l86:s50:k53:d0:s0)		iTemp33 [k42 lr50:51 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp32 [k41 lr49:50 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l86:s51:k54:d0:s0)		iTemp34 [k43 lr51:52 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = iTemp31 [k40 lr48:51 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] + iTemp33 [k42 lr50:51 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l86:s52:k55:d0:s0)		iTemp22 [k30 lr52:55 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_pwm_1_74}[r0x05 ] = iTemp34 [k43 lr51:52 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] - 0x30 {char literal}
check.c(l87:s53:k57:d0:s0)		iTemp36 [k46 lr53:55 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = iTemp14 [k18 lr30:53 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_led_num_1_74}[r0x04 ] - 0x1 {char literal}
check.c(l87:s54:k58:d0:s0)		send iTemp36 [k46 lr53:55 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]{argreg = 1}
check.c(l87:s55:k59:d0:s0)		send iTemp22 [k30 lr52:55 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_pwm_1_74}[r0x05 ]{argreg = 2}
check.c(l87:s56:k60:d0:s0)		iTemp37 [k49 lr56:56 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _set_pwm [k45 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( unsigned-char fixed, unsigned-char fixed) fixed}
check.c(l89:s57:k62:d0:s0)		 goto _swBrk_0($27)
check.c(l90:s58:k63:d0:s0)	 _case_0_50($5) :
check.c(l91:s59:k64:d0:s0)		iTemp38 [k51 lr59:59 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _limpa_lcd [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( ) fixed}
check.c(l94:s60:k65:d0:s0)		iTemp39 [k53 lr60:88 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] = &[_check_comando_linha_1_1_74 [k52 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [17] fixed}]
check.c(l94:s61:k66:d0:s0)		iTemp40 [k54 lr61:62 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] = iTemp39 [k53 lr60:88 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] + 0x10 {const-unsigned-char literal}
check.c(l94:s62:k67:d0:s0)		*(iTemp40 [k54 lr61:62 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat]) := 0x0 {const-char literal}
check.c(l95:s63:k68:d0:s0)		iTemp41 [k56 lr63:93 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] = &[_check_comando_linha_2_1_74 [k55 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [17] fixed}]
check.c(l95:s64:k69:d0:s0)		iTemp42 [k57 lr64:65 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] = iTemp41 [k56 lr63:93 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] + 0x10 {const-unsigned-char literal}
check.c(l95:s65:k70:d0:s0)		*(iTemp42 [k57 lr64:65 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat]) := 0x0 {const-char literal}
check.c(l96:s66:k289:d0:s0)		iTemp50 [k66 lr66:76 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] := 0x1 {const-char literal}
check.c(l96:s68:k72:d1:s0)	 _forbody_1($28) :
check.c(l97:s69:k74:d1:s0)		iTemp45 [k61 lr69:70 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = iTemp50 [k66 lr66:76 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] - 0x1 {char literal}
check.c(l97:s70:k75:d1:s0)		iTemp46 [k62 lr70:73 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x05 r0x06 ] = iTemp39 [k53 lr60:88 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] + iTemp45 [k61 lr69:70 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ]
check.c(l97:s71:k76:d1:s0)		iTemp47 [k63 lr71:72 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x07 r0x08 r0x09 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + iTemp50 [k66 lr66:76 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ]
check.c(l97:s72:k77:d1:s0)		iTemp48 [k64 lr72:73 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x07 ] = @[iTemp47 [k63 lr71:72 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x07 r0x08 r0x09 ] + 0x0 {const-unsigned-char literal}]
check.c(l97:s73:k78:d1:s0)		*(iTemp46 [k62 lr70:73 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x05 r0x06 ]) := iTemp48 [k64 lr72:73 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x07 ]
check.c(l96:s74:k81:d1:s0)		iTemp50 [k66 lr66:76 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] = iTemp50 [k66 lr66:76 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] + 0x1 {const-unsigned-char literal}
check.c(l96:s75:k83:d1:s0)		iTemp51 [k67 lr75:76 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp50 [k66 lr66:76 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] < 0x11 {const-char literal}
check.c(l96:s76:k84:d1:s0)		if iTemp51 [k67 lr75:76 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forbody_1($28)
check.c(l98:s77:k292:d0:s0)		iTemp58 [k74 lr77:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] := 0x11 {const-char literal}
check.c(l98:s79:k88:d1:s0)	 _forbody_2($30) :
check.c(l99:s80:k90:d1:s0)		iTemp53 [k69 lr80:81 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = iTemp58 [k74 lr77:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] - 0x11 {char literal}
check.c(l99:s81:k91:d1:s0)		iTemp54 [k70 lr81:84 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x05 r0x06 ] = iTemp41 [k56 lr63:93 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] + iTemp53 [k69 lr80:81 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ]
check.c(l99:s82:k92:d1:s0)		iTemp55 [k71 lr82:83 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x07 r0x08 r0x09 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + iTemp58 [k74 lr77:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ]
check.c(l99:s83:k93:d1:s0)		iTemp56 [k72 lr83:84 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x07 ] = @[iTemp55 [k71 lr82:83 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x07 r0x08 r0x09 ] + 0x0 {const-unsigned-char literal}]
check.c(l99:s84:k94:d1:s0)		*(iTemp54 [k70 lr81:84 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x05 r0x06 ]) := iTemp56 [k72 lr83:84 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x07 ]
check.c(l98:s85:k97:d1:s0)		iTemp58 [k74 lr77:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] = iTemp58 [k74 lr77:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] + 0x1 {const-unsigned-char literal}
check.c(l98:s86:k99:d1:s0)		iTemp59 [k75 lr86:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp58 [k74 lr77:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] < 0x21 {const-char literal}
check.c(l98:s87:k100:d1:s0)		if iTemp59 [k75 lr86:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forbody_2($30)
check.c(l100:s88:k103:d0:s0)		iTemp60 [k77 lr88:89 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] := iTemp39 [k53 lr60:88 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat]
check.c(l100:s89:k104:d0:s0)		iTemp61 [k78 lr89:90 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = (char generic* fixed)iTemp60 [k77 lr88:89 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat]
check.c(l100:s90:k105:d0:s0)		send iTemp61 [k78 lr89:90 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ]{argreg = 1}
check.c(l100:s91:k106:d0:s0)		iTemp62 [k80 lr91:91 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _print_lcd_string [k76 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char generic* fixed) fixed}
check.c(l101:s92:k107:d0:s0)		iTemp63 [k82 lr92:92 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _print_lcd_ln [k81 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( ) fixed}
check.c(l102:s93:k108:d0:s0)		iTemp64 [k83 lr93:94 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] := iTemp41 [k56 lr63:93 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat]
check.c(l102:s94:k109:d0:s0)		iTemp65 [k84 lr94:95 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = (char generic* fixed)iTemp64 [k83 lr93:94 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat]
check.c(l102:s95:k110:d0:s0)		send iTemp65 [k84 lr94:95 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ]{argreg = 1}
check.c(l102:s96:k111:d0:s0)		iTemp66 [k85 lr96:96 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _print_lcd_string [k76 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char generic* fixed) fixed}
check.c(l103:s97:k112:d0:s0)		iTemp1 [k4 lr4:258 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _check_comando_ret_1_74}[r0x03 ] := 0x34 {const-unsigned-char literal}
check.c(l104:s98:k113:d0:s0)		 goto _swBrk_0($27)
check.c(l105:s99:k114:d0:s0)	 _case_0_51($8) :
check.c(l106:s100:k115:d0:s0)		iTemp67 [k86 lr100:101 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l106:s101:k116:d0:s0)		iTemp68 [k87 lr101:102 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp67 [k86 lr100:101 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l106:s102:k117:d0:s0)		iTemp69 [k88 lr102:103 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp68 [k87 lr101:102 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l106:s103:k118:d0:s0)		iTemp70 [k89 lr103:109 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp69 [k88 lr102:103 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l106:s104:k119:d0:s0)		iTemp71 [k90 lr104:105 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp70 [k89 lr103:109 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] == 0x1 {int literal}
check.c(l106:s105:k120:d0:s0)		if iTemp71 [k90 lr104:105 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} == 0 goto _iffalse_5($12)
check.c(l107:s106:k124:d0:s0)		_hab_alarme [k91 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed} := 0x1 {const-unsigned-char literal}
check.c(l107:s107:k125:d0:s0)		 goto _swBrk_0($27)
check.c(l107:s108:k126:d0:s0)	 _iffalse_5($12) :
check.c(l108:s109:k131:d0:s0)		if iTemp70 [k89 lr103:109 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] != 0 goto _swBrk_0($27)
check.c(l109:s110:k135:d0:s0)		_hab_alarme [k91 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed} := 0x0 {const-unsigned-char literal}
check.c(l110:s111:k138:d0:s0)		 goto _swBrk_0($27)
check.c(l111:s112:k139:d0:s0)	 _case_0_52($14) :
check.c(l112:s113:k140:d0:s0)		iTemp78 [k98 lr113:114 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l112:s114:k141:d0:s0)		iTemp79 [k99 lr114:115 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp78 [k98 lr113:114 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l112:s115:k142:d0:s0)		iTemp80 [k100 lr115:116 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp79 [k99 lr114:115 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l112:s116:k143:d0:s0)		iTemp81 [k101 lr116:122 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp80 [k100 lr115:116 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l112:s117:k144:d0:s0)		iTemp82 [k102 lr117:118 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp81 [k101 lr116:122 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] == 0x1 {int literal}
check.c(l112:s118:k145:d0:s0)		if iTemp82 [k102 lr117:118 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} == 0 goto _iffalse_7($18)
check.c(l113:s119:k149:d0:s0)		_hab_sensor [k103 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed} := 0x0 {const-unsigned-char literal}
check.c(l113:s120:k150:d0:s0)		 goto _swBrk_0($27)
check.c(l113:s121:k151:d0:s0)	 _iffalse_7($18) :
check.c(l114:s122:k156:d0:s0)		if iTemp81 [k101 lr116:122 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] != 0 goto _swBrk_0($27)
check.c(l115:s123:k160:d0:s0)		_hab_sensor [k103 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed} := 0x2 {const-unsigned-char literal}
check.c(l116:s124:k163:d0:s0)		 goto _swBrk_0($27)
check.c(l117:s125:k164:d0:s0)	 _case_0_53($20) :
check.c(l118:s126:k165:d0:s0)		iTemp89 [k111 lr126:127 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{unsigned-long-int near* fixed}[remat] = &[_sys_timer_pool [k110 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int [2] fixed}]
check.c(l118:s127:k166:d0:s0)		iTemp90 [k112 lr127:165 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{unsigned-long-int near* fixed}[remat] = iTemp89 [k111 lr126:127 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{unsigned-long-int near* fixed}[remat] + 0x4 {unsigned-char literal}
check.c(l118:s128:k167:d0:s0)		iTemp91 [k113 lr128:129 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l118:s129:k168:d0:s0)		iTemp92 [k114 lr129:130 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp91 [k113 lr128:129 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l118:s130:k169:d0:s0)		iTemp93 [k115 lr130:131 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp92 [k114 lr129:130 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l118:s131:k170:d0:s0)		iTemp94 [k116 lr131:133 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp93 [k115 lr130:131 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l118:s132:k299:d0:s0)		send 0x2710 {const-int literal}{argreg = 1}
check.c(l118:s133:k300:d0:s0)		send iTemp94 [k116 lr131:133 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l118:s134:k301:d0:s0)		iTemp95 [k117 lr134:142 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l118:s135:k172:d0:s0)		iTemp96 [k118 lr135:136 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l118:s136:k173:d0:s0)		iTemp97 [k119 lr136:137 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp96 [k118 lr135:136 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l118:s137:k174:d0:s0)		iTemp98 [k120 lr137:138 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp97 [k119 lr136:137 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l118:s138:k175:d0:s0)		iTemp99 [k121 lr138:140 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp98 [k120 lr137:138 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l118:s139:k302:d0:s0)		send 0x3e8 {const-int literal}{argreg = 1}
check.c(l118:s140:k303:d0:s0)		send iTemp99 [k121 lr138:140 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l118:s141:k304:d0:s0)		iTemp100 [k122 lr141:142 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l118:s142:k177:d0:s0)		iTemp101 [k123 lr142:150 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp95 [k117 lr134:142 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp100 [k122 lr141:142 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l119:s143:k178:d0:s0)		iTemp102 [k124 lr143:144 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l119:s144:k179:d0:s0)		iTemp103 [k125 lr144:145 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp102 [k124 lr143:144 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l119:s145:k180:d0:s0)		iTemp104 [k126 lr145:146 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp103 [k125 lr144:145 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l119:s146:k181:d0:s0)		iTemp105 [k127 lr146:148 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp104 [k126 lr145:146 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l119:s147:k305:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l119:s148:k306:d0:s0)		send iTemp105 [k127 lr146:148 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l119:s149:k307:d0:s0)		iTemp106 [k128 lr149:150 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l119:s150:k183:d0:s0)		iTemp107 [k129 lr150:158 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp101 [k123 lr142:150 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp106 [k128 lr149:150 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l119:s151:k184:d0:s0)		iTemp108 [k130 lr151:152 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x4 {const-unsigned-char literal}
check.c(l119:s152:k185:d0:s0)		iTemp109 [k131 lr152:153 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp108 [k130 lr151:152 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l119:s153:k186:d0:s0)		iTemp110 [k132 lr153:154 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp109 [k131 lr152:153 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l119:s154:k187:d0:s0)		iTemp111 [k133 lr154:156 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp110 [k132 lr153:154 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l119:s155:k308:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l119:s156:k309:d0:s0)		send iTemp111 [k133 lr154:156 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l119:s157:k310:d0:s0)		iTemp112 [k134 lr157:158 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l119:s158:k189:d0:s0)		iTemp113 [k135 lr158:162 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp107 [k129 lr150:158 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp112 [k134 lr157:158 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l120:s159:k190:d0:s0)		iTemp114 [k136 lr159:160 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x5 {const-unsigned-char literal}
check.c(l120:s160:k191:d0:s0)		iTemp115 [k137 lr160:161 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp114 [k136 lr159:160 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l120:s161:k192:d0:s0)		iTemp116 [k138 lr161:162 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp115 [k137 lr160:161 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l120:s162:k193:d0:s0)		iTemp117 [k139 lr162:163 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = iTemp113 [k135 lr158:162 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp116 [k138 lr161:162 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ]
check.c(l120:s163:k194:d0:s0)		iTemp118 [k140 lr163:164 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp117 [k139 lr162:163 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l120:s164:k195:d0:s0)		iTemp119 [k141 lr164:165 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x04 r0x05 r0x06 r0x07 ] = (unsigned-long-int fixed)iTemp118 [k140 lr163:164 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]
check.c(l120:s165:k196:d0:s0)		*(iTemp90 [k112 lr127:165 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{unsigned-long-int near* fixed}[remat]) := iTemp119 [k141 lr164:165 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x04 r0x05 r0x06 r0x07 ]
check.c(l121:s166:k197:d0:s0)		 goto _swBrk_0($27)
check.c(l122:s167:k198:d0:s0)	 _case_0_54($21) :
check.c(l123:s168:k199:d0:s0)		iTemp120 [k143 lr168:169 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l123:s169:k200:d0:s0)		iTemp121 [k144 lr169:170 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp120 [k143 lr168:169 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l123:s170:k201:d0:s0)		iTemp122 [k145 lr170:171 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp121 [k144 lr169:170 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l123:s171:k202:d0:s0)		iTemp123 [k146 lr171:173 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp122 [k145 lr170:171 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l123:s172:k311:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l123:s173:k312:d0:s0)		send iTemp123 [k146 lr171:173 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l123:s174:k313:d0:s0)		iTemp124 [k147 lr174:182 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l123:s175:k204:d0:s0)		iTemp125 [k148 lr175:176 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l123:s176:k205:d0:s0)		iTemp126 [k149 lr176:177 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp125 [k148 lr175:176 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l123:s177:k206:d0:s0)		iTemp127 [k150 lr177:178 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp126 [k149 lr176:177 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l123:s178:k207:d0:s0)		iTemp128 [k151 lr178:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp127 [k150 lr177:178 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l123:s179:k314:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l123:s180:k315:d0:s0)		send iTemp128 [k151 lr178:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l123:s181:k316:d0:s0)		iTemp129 [k152 lr181:182 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l123:s182:k209:d0:s0)		iTemp130 [k153 lr182:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp124 [k147 lr174:182 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp129 [k152 lr181:182 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l124:s183:k210:d0:s0)		iTemp131 [k154 lr183:184 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l124:s184:k211:d0:s0)		iTemp132 [k155 lr184:185 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp131 [k154 lr183:184 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l124:s185:k212:d0:s0)		iTemp133 [k156 lr185:186 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp132 [k155 lr184:185 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l124:s186:k213:d0:s0)		iTemp134 [k157 lr186:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp133 [k156 lr185:186 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l124:s187:k214:d0:s0)		_sys_temp_min [k142 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed} = iTemp130 [k153 lr182:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp134 [k157 lr186:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l125:s188:k217:d0:s0)		 goto _swBrk_0($27)
check.c(l126:s189:k218:d0:s0)	 _case_0_55($22) :
check.c(l127:s190:k219:d0:s0)		iTemp137 [k161 lr190:191 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l127:s191:k220:d0:s0)		iTemp138 [k162 lr191:192 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp137 [k161 lr190:191 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l127:s192:k221:d0:s0)		iTemp139 [k163 lr192:193 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp138 [k162 lr191:192 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l127:s193:k222:d0:s0)		iTemp140 [k164 lr193:195 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp139 [k163 lr192:193 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l127:s194:k317:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l127:s195:k318:d0:s0)		send iTemp140 [k164 lr193:195 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l127:s196:k319:d0:s0)		iTemp141 [k165 lr196:204 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l127:s197:k224:d0:s0)		iTemp142 [k166 lr197:198 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l127:s198:k225:d0:s0)		iTemp143 [k167 lr198:199 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp142 [k166 lr197:198 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l127:s199:k226:d0:s0)		iTemp144 [k168 lr199:200 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp143 [k167 lr198:199 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l127:s200:k227:d0:s0)		iTemp145 [k169 lr200:202 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp144 [k168 lr199:200 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l127:s201:k320:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l127:s202:k321:d0:s0)		send iTemp145 [k169 lr200:202 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l127:s203:k322:d0:s0)		iTemp146 [k170 lr203:204 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l127:s204:k229:d0:s0)		iTemp147 [k171 lr204:209 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp141 [k165 lr196:204 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp146 [k170 lr203:204 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l128:s205:k230:d0:s0)		iTemp148 [k172 lr205:206 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l128:s206:k231:d0:s0)		iTemp149 [k173 lr206:207 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp148 [k172 lr205:206 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l128:s207:k232:d0:s0)		iTemp150 [k174 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp149 [k173 lr206:207 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l128:s208:k233:d0:s0)		iTemp151 [k175 lr208:209 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp150 [k174 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l128:s209:k234:d0:s0)		_sys_temp_max [k160 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed} = iTemp147 [k171 lr204:209 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp151 [k175 lr208:209 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l129:s210:k237:d0:s0)		 goto _swBrk_0($27)
check.c(l130:s211:k238:d0:s0)	 _case_0_56($23) :
check.c(l131:s212:k239:d0:s0)		iTemp154 [k179 lr212:213 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l131:s213:k240:d0:s0)		iTemp155 [k180 lr213:214 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp154 [k179 lr212:213 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l131:s214:k241:d0:s0)		iTemp156 [k181 lr214:215 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp155 [k180 lr213:214 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l131:s215:k242:d0:s0)		iTemp157 [k182 lr215:217 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp156 [k181 lr214:215 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l131:s216:k323:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l131:s217:k324:d0:s0)		send iTemp157 [k182 lr215:217 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l131:s218:k325:d0:s0)		iTemp158 [k183 lr218:226 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l131:s219:k244:d0:s0)		iTemp159 [k184 lr219:220 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l131:s220:k245:d0:s0)		iTemp160 [k185 lr220:221 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp159 [k184 lr219:220 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l131:s221:k246:d0:s0)		iTemp161 [k186 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp160 [k185 lr220:221 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l131:s222:k247:d0:s0)		iTemp162 [k187 lr222:224 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp161 [k186 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l131:s223:k326:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l131:s224:k327:d0:s0)		send iTemp162 [k187 lr222:224 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l131:s225:k328:d0:s0)		iTemp163 [k188 lr225:226 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l131:s226:k249:d0:s0)		iTemp164 [k189 lr226:231 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp158 [k183 lr218:226 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp163 [k188 lr225:226 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l132:s227:k250:d0:s0)		iTemp165 [k190 lr227:228 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l132:s228:k251:d0:s0)		iTemp166 [k191 lr228:229 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp165 [k190 lr227:228 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l132:s229:k252:d0:s0)		iTemp167 [k192 lr229:230 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp166 [k191 lr228:229 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l132:s230:k253:d0:s0)		iTemp168 [k193 lr230:231 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp167 [k192 lr229:230 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l132:s231:k254:d0:s0)		_sys_lumi_min [k178 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed} = iTemp164 [k189 lr226:231 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp168 [k193 lr230:231 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l133:s232:k257:d0:s0)		 goto _swBrk_0($27)
check.c(l134:s233:k258:d0:s0)	 _case_0_57($24) :
check.c(l135:s234:k259:d0:s0)		iTemp171 [k196 lr234:235 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l135:s235:k260:d0:s0)		iTemp172 [k197 lr235:236 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp171 [k196 lr234:235 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l135:s236:k261:d0:s0)		iTemp173 [k198 lr236:237 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp172 [k197 lr235:236 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l135:s237:k262:d0:s0)		iTemp174 [k199 lr237:239 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp173 [k198 lr236:237 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l135:s238:k329:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l135:s239:k330:d0:s0)		send iTemp174 [k199 lr237:239 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l135:s240:k331:d0:s0)		iTemp175 [k200 lr240:248 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l135:s241:k264:d0:s0)		iTemp176 [k201 lr241:242 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l135:s242:k265:d0:s0)		iTemp177 [k202 lr242:243 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp176 [k201 lr241:242 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l135:s243:k266:d0:s0)		iTemp178 [k203 lr243:244 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp177 [k202 lr242:243 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l135:s244:k267:d0:s0)		iTemp179 [k204 lr244:246 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp178 [k203 lr243:244 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l135:s245:k332:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l135:s246:k333:d0:s0)		send iTemp179 [k204 lr244:246 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l135:s247:k334:d0:s0)		iTemp180 [k205 lr247:248 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l135:s248:k269:d0:s0)		iTemp181 [k206 lr248:253 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp175 [k200 lr240:248 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp180 [k205 lr247:248 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l136:s249:k270:d0:s0)		iTemp182 [k207 lr249:250 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x00 r0x01 r0x02 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l136:s250:k271:d0:s0)		iTemp183 [k208 lr250:251 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x00 ] = @[iTemp182 [k207 lr249:250 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x00 r0x01 r0x02 ] + 0x0 {const-unsigned-char literal}]
check.c(l136:s251:k272:d0:s0)		iTemp184 [k209 lr251:252 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x00 r0x01 ] = (int fixed)iTemp183 [k208 lr250:251 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x00 ]
check.c(l136:s252:k273:d0:s0)		iTemp185 [k210 lr252:253 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x00 r0x01 ] = iTemp184 [k209 lr251:252 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x00 r0x01 ] - 0x30 {int literal}
check.c(l136:s253:k274:d0:s0)		_sys_temp_max [k160 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed} = iTemp181 [k206 lr248:253 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp185 [k210 lr252:253 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x00 r0x01 ]
check.c(l137:s254:k277:d0:s0)		 goto _swBrk_0($27)
check.c(l138:s255:k278:d0:s0)	 _case_0_82($25) :
check.c(l139:s256:k279:d0:s0)		iTemp1 [k4 lr4:258 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _check_comando_ret_1_74}[r0x03 ] := 0x0 {const-char literal}
check.c(l143:s257:k283:d0:s0)	 _swBrk_0($27) :
check.c(l145:s258:k284:d0:s0)		ret iTemp1 [k4 lr4:258 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _check_comando_ret_1_74}[r0x03 ]
check.c(l145:s259:k285:d0:s0)	 _return($32) :
check.c(l145:s260:k286:d0:s0)		eproc _check_comando [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char function ( char generic* fixed) fixed}

----------------------------------------------------------------
Basic Block _eBBlock35 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 3 : bbnum = 2 1st iCode = 10 , last iCode = 11
visited 0 : hasFcall = 0

defines bitVector :bitvector Size = 299 bSize = 38
Bits on { (10) }

local defines bitVector :bitvector Size = 299 bSize = 38
Bits on { (10) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (3) (5) (6) (8) }

outDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (3) (5) (6) (8) (10) }

usesDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (5) (10) }

----------------------------------------------------------------
check.c(l79:s10:k10:d0:s0)		iTemp6 [k10 lr10:11 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp3 [k7 lr5:24 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] == 0x33 {const-char literal}
check.c(l79:s11:k11:d0:s0)		if iTemp6 [k10 lr10:11 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _case_0_51($8)
check.c(l79:s12:k12:d0:s0)		iTemp7 [k11 lr12:13 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp3 [k7 lr5:24 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] == 0x34 {const-char literal}
check.c(l79:s13:k13:d0:s0)		if iTemp7 [k11 lr12:13 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _case_0_52($14)
check.c(l79:s14:k14:d0:s0)		iTemp8 [k12 lr14:15 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp3 [k7 lr5:24 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] == 0x35 {const-char literal}
check.c(l79:s15:k15:d0:s0)		if iTemp8 [k12 lr14:15 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _case_0_53($20)
check.c(l79:s16:k16:d0:s0)		iTemp9 [k13 lr16:17 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp3 [k7 lr5:24 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] == 0x36 {const-char literal}
check.c(l79:s17:k17:d0:s0)		if iTemp9 [k13 lr16:17 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _case_0_54($21)
check.c(l79:s18:k18:d0:s0)		iTemp10 [k14 lr18:19 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp3 [k7 lr5:24 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] == 0x37 {const-char literal}
check.c(l79:s19:k19:d0:s0)		if iTemp10 [k14 lr18:19 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _case_0_55($22)
check.c(l79:s20:k20:d0:s0)		iTemp11 [k15 lr20:21 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp3 [k7 lr5:24 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] == 0x38 {const-char literal}
check.c(l79:s21:k21:d0:s0)		if iTemp11 [k15 lr20:21 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _case_0_56($23)
check.c(l79:s22:k22:d0:s0)		iTemp12 [k16 lr22:23 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp3 [k7 lr5:24 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] == 0x39 {const-char literal}
check.c(l79:s23:k23:d0:s0)		if iTemp12 [k16 lr22:23 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _case_0_57($24)
check.c(l79:s24:k24:d0:s0)		iTemp13 [k17 lr24:25 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp3 [k7 lr5:24 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] == 0x52 {const-char literal}
check.c(l79:s25:k25:d0:s0)		if iTemp13 [k17 lr24:25 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _case_0_82($25)
check.c(l79:s26:k26:d0:s0)		 goto _swBrk_0($27)
check.c(l80:s27:k27:d0:s0)	 _case_0_49($1) :
check.c(l81:s28:k28:d0:s0)		iTemp15 [k20 lr28:29 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l81:s29:k29:d0:s0)		iTemp16 [k21 lr29:30 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp15 [k20 lr28:29 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l81:s30:k30:d0:s0)		iTemp14 [k18 lr30:53 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_led_num_1_74}[r0x04 ] = iTemp16 [k21 lr29:30 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] - 0x30 {char literal}
check.c(l82:s31:k32:d0:s0)		if iTemp14 [k18 lr30:53 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_led_num_1_74}[r0x04 ] != 0 goto _iffalse_3($3)
check.c(l83:s32:k35:d0:s0)		iTemp18 [k24 lr32:33 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x05 r0x06 r0x07 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l83:s33:k36:d0:s0)		iTemp19 [k25 lr33:34 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = @[iTemp18 [k24 lr32:33 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x05 r0x06 r0x07 ] + 0x0 {const-unsigned-char literal}]
check.c(l83:s34:k37:d0:s0)		iTemp20 [k26 lr34:36 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = iTemp19 [k25 lr33:34 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] - 0x30 {char literal}
check.c(l83:s35:k38:d0:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
check.c(l83:s36:k39:d0:s0)		send iTemp20 [k26 lr34:36 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ]{argreg = 2}
check.c(l83:s37:k40:d0:s0)		iTemp21 [k29 lr37:37 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _led [k23 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( unsigned-char fixed, unsigned-char fixed) fixed}
check.c(l83:s38:k41:d0:s0)		 goto _swBrk_0($27)
check.c(l83:s39:k42:d0:s0)	 _iffalse_3($3) :
check.c(l85:s40:k43:d0:s0)		iTemp23 [k32 lr40:41 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x05 r0x06 r0x07 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l85:s41:k44:d0:s0)		iTemp24 [k33 lr41:42 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = @[iTemp23 [k32 lr40:41 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x05 r0x06 r0x07 ] + 0x0 {const-unsigned-char literal}]
check.c(l85:s42:k45:d0:s0)		iTemp25 [k34 lr42:43 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = iTemp24 [k33 lr41:42 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] - 0x30 {char literal}
check.c(l85:s43:k46:d0:s0)		iTemp26 [k35 lr43:48 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = iTemp25 [k34 lr42:43 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] * 0x64 {const-unsigned-char literal}
check.c(l85:s44:k47:d0:s0)		iTemp27 [k36 lr44:45 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l85:s45:k48:d0:s0)		iTemp28 [k37 lr45:46 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp27 [k36 lr44:45 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l85:s46:k49:d0:s0)		iTemp29 [k38 lr46:47 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = iTemp28 [k37 lr45:46 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] - 0x30 {char literal}
check.c(l85:s47:k50:d0:s0)		iTemp30 [k39 lr47:48 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = iTemp29 [k38 lr46:47 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] * 0xa {const-unsigned-char literal}
check.c(l85:s48:k51:d0:s0)		iTemp31 [k40 lr48:51 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = iTemp26 [k35 lr43:48 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] + iTemp30 [k39 lr47:48 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l86:s49:k52:d0:s0)		iTemp32 [k41 lr49:50 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x4 {const-unsigned-char literal}
check.c(l86:s50:k53:d0:s0)		iTemp33 [k42 lr50:51 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp32 [k41 lr49:50 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l86:s51:k54:d0:s0)		iTemp34 [k43 lr51:52 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = iTemp31 [k40 lr48:51 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] + iTemp33 [k42 lr50:51 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l86:s52:k55:d0:s0)		iTemp22 [k30 lr52:55 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_pwm_1_74}[r0x05 ] = iTemp34 [k43 lr51:52 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] - 0x30 {char literal}
check.c(l87:s53:k57:d0:s0)		iTemp36 [k46 lr53:55 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = iTemp14 [k18 lr30:53 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_led_num_1_74}[r0x04 ] - 0x1 {char literal}
check.c(l87:s54:k58:d0:s0)		send iTemp36 [k46 lr53:55 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]{argreg = 1}
check.c(l87:s55:k59:d0:s0)		send iTemp22 [k30 lr52:55 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_pwm_1_74}[r0x05 ]{argreg = 2}
check.c(l87:s56:k60:d0:s0)		iTemp37 [k49 lr56:56 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _set_pwm [k45 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( unsigned-char fixed, unsigned-char fixed) fixed}
check.c(l89:s57:k62:d0:s0)		 goto _swBrk_0($27)
check.c(l90:s58:k63:d0:s0)	 _case_0_50($5) :
check.c(l91:s59:k64:d0:s0)		iTemp38 [k51 lr59:59 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _limpa_lcd [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( ) fixed}
check.c(l94:s60:k65:d0:s0)		iTemp39 [k53 lr60:88 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] = &[_check_comando_linha_1_1_74 [k52 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [17] fixed}]
check.c(l94:s61:k66:d0:s0)		iTemp40 [k54 lr61:62 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] = iTemp39 [k53 lr60:88 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] + 0x10 {const-unsigned-char literal}
check.c(l94:s62:k67:d0:s0)		*(iTemp40 [k54 lr61:62 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat]) := 0x0 {const-char literal}
check.c(l95:s63:k68:d0:s0)		iTemp41 [k56 lr63:93 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] = &[_check_comando_linha_2_1_74 [k55 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [17] fixed}]
check.c(l95:s64:k69:d0:s0)		iTemp42 [k57 lr64:65 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] = iTemp41 [k56 lr63:93 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] + 0x10 {const-unsigned-char literal}
check.c(l95:s65:k70:d0:s0)		*(iTemp42 [k57 lr64:65 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat]) := 0x0 {const-char literal}
check.c(l96:s66:k289:d0:s0)		iTemp50 [k66 lr66:76 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] := 0x1 {const-char literal}
check.c(l96:s68:k72:d1:s0)	 _forbody_1($28) :
check.c(l97:s69:k74:d1:s0)		iTemp45 [k61 lr69:70 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = iTemp50 [k66 lr66:76 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] - 0x1 {char literal}
check.c(l97:s70:k75:d1:s0)		iTemp46 [k62 lr70:73 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x05 r0x06 ] = iTemp39 [k53 lr60:88 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] + iTemp45 [k61 lr69:70 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ]
check.c(l97:s71:k76:d1:s0)		iTemp47 [k63 lr71:72 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x07 r0x08 r0x09 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + iTemp50 [k66 lr66:76 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ]
check.c(l97:s72:k77:d1:s0)		iTemp48 [k64 lr72:73 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x07 ] = @[iTemp47 [k63 lr71:72 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x07 r0x08 r0x09 ] + 0x0 {const-unsigned-char literal}]
check.c(l97:s73:k78:d1:s0)		*(iTemp46 [k62 lr70:73 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x05 r0x06 ]) := iTemp48 [k64 lr72:73 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x07 ]
check.c(l96:s74:k81:d1:s0)		iTemp50 [k66 lr66:76 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] = iTemp50 [k66 lr66:76 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] + 0x1 {const-unsigned-char literal}
check.c(l96:s75:k83:d1:s0)		iTemp51 [k67 lr75:76 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp50 [k66 lr66:76 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] < 0x11 {const-char literal}
check.c(l96:s76:k84:d1:s0)		if iTemp51 [k67 lr75:76 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forbody_1($28)
check.c(l98:s77:k292:d0:s0)		iTemp58 [k74 lr77:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] := 0x11 {const-char literal}
check.c(l98:s79:k88:d1:s0)	 _forbody_2($30) :
check.c(l99:s80:k90:d1:s0)		iTemp53 [k69 lr80:81 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = iTemp58 [k74 lr77:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] - 0x11 {char literal}
check.c(l99:s81:k91:d1:s0)		iTemp54 [k70 lr81:84 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x05 r0x06 ] = iTemp41 [k56 lr63:93 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] + iTemp53 [k69 lr80:81 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ]
check.c(l99:s82:k92:d1:s0)		iTemp55 [k71 lr82:83 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x07 r0x08 r0x09 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + iTemp58 [k74 lr77:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ]
check.c(l99:s83:k93:d1:s0)		iTemp56 [k72 lr83:84 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x07 ] = @[iTemp55 [k71 lr82:83 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x07 r0x08 r0x09 ] + 0x0 {const-unsigned-char literal}]
check.c(l99:s84:k94:d1:s0)		*(iTemp54 [k70 lr81:84 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x05 r0x06 ]) := iTemp56 [k72 lr83:84 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x07 ]
check.c(l98:s85:k97:d1:s0)		iTemp58 [k74 lr77:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] = iTemp58 [k74 lr77:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] + 0x1 {const-unsigned-char literal}
check.c(l98:s86:k99:d1:s0)		iTemp59 [k75 lr86:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp58 [k74 lr77:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] < 0x21 {const-char literal}
check.c(l98:s87:k100:d1:s0)		if iTemp59 [k75 lr86:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forbody_2($30)
check.c(l100:s88:k103:d0:s0)		iTemp60 [k77 lr88:89 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] := iTemp39 [k53 lr60:88 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat]
check.c(l100:s89:k104:d0:s0)		iTemp61 [k78 lr89:90 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = (char generic* fixed)iTemp60 [k77 lr88:89 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat]
check.c(l100:s90:k105:d0:s0)		send iTemp61 [k78 lr89:90 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ]{argreg = 1}
check.c(l100:s91:k106:d0:s0)		iTemp62 [k80 lr91:91 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _print_lcd_string [k76 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char generic* fixed) fixed}
check.c(l101:s92:k107:d0:s0)		iTemp63 [k82 lr92:92 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _print_lcd_ln [k81 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( ) fixed}
check.c(l102:s93:k108:d0:s0)		iTemp64 [k83 lr93:94 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] := iTemp41 [k56 lr63:93 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat]
check.c(l102:s94:k109:d0:s0)		iTemp65 [k84 lr94:95 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = (char generic* fixed)iTemp64 [k83 lr93:94 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat]
check.c(l102:s95:k110:d0:s0)		send iTemp65 [k84 lr94:95 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ]{argreg = 1}
check.c(l102:s96:k111:d0:s0)		iTemp66 [k85 lr96:96 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _print_lcd_string [k76 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char generic* fixed) fixed}
check.c(l103:s97:k112:d0:s0)		iTemp1 [k4 lr4:258 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _check_comando_ret_1_74}[r0x03 ] := 0x34 {const-unsigned-char literal}
check.c(l104:s98:k113:d0:s0)		 goto _swBrk_0($27)
check.c(l105:s99:k114:d0:s0)	 _case_0_51($8) :
check.c(l106:s100:k115:d0:s0)		iTemp67 [k86 lr100:101 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l106:s101:k116:d0:s0)		iTemp68 [k87 lr101:102 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp67 [k86 lr100:101 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l106:s102:k117:d0:s0)		iTemp69 [k88 lr102:103 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp68 [k87 lr101:102 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l106:s103:k118:d0:s0)		iTemp70 [k89 lr103:109 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp69 [k88 lr102:103 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l106:s104:k119:d0:s0)		iTemp71 [k90 lr104:105 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp70 [k89 lr103:109 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] == 0x1 {int literal}
check.c(l106:s105:k120:d0:s0)		if iTemp71 [k90 lr104:105 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} == 0 goto _iffalse_5($12)
check.c(l107:s106:k124:d0:s0)		_hab_alarme [k91 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed} := 0x1 {const-unsigned-char literal}
check.c(l107:s107:k125:d0:s0)		 goto _swBrk_0($27)
check.c(l107:s108:k126:d0:s0)	 _iffalse_5($12) :
check.c(l108:s109:k131:d0:s0)		if iTemp70 [k89 lr103:109 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] != 0 goto _swBrk_0($27)
check.c(l109:s110:k135:d0:s0)		_hab_alarme [k91 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed} := 0x0 {const-unsigned-char literal}
check.c(l110:s111:k138:d0:s0)		 goto _swBrk_0($27)
check.c(l111:s112:k139:d0:s0)	 _case_0_52($14) :
check.c(l112:s113:k140:d0:s0)		iTemp78 [k98 lr113:114 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l112:s114:k141:d0:s0)		iTemp79 [k99 lr114:115 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp78 [k98 lr113:114 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l112:s115:k142:d0:s0)		iTemp80 [k100 lr115:116 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp79 [k99 lr114:115 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l112:s116:k143:d0:s0)		iTemp81 [k101 lr116:122 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp80 [k100 lr115:116 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l112:s117:k144:d0:s0)		iTemp82 [k102 lr117:118 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp81 [k101 lr116:122 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] == 0x1 {int literal}
check.c(l112:s118:k145:d0:s0)		if iTemp82 [k102 lr117:118 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} == 0 goto _iffalse_7($18)
check.c(l113:s119:k149:d0:s0)		_hab_sensor [k103 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed} := 0x0 {const-unsigned-char literal}
check.c(l113:s120:k150:d0:s0)		 goto _swBrk_0($27)
check.c(l113:s121:k151:d0:s0)	 _iffalse_7($18) :
check.c(l114:s122:k156:d0:s0)		if iTemp81 [k101 lr116:122 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] != 0 goto _swBrk_0($27)
check.c(l115:s123:k160:d0:s0)		_hab_sensor [k103 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed} := 0x2 {const-unsigned-char literal}
check.c(l116:s124:k163:d0:s0)		 goto _swBrk_0($27)
check.c(l117:s125:k164:d0:s0)	 _case_0_53($20) :
check.c(l118:s126:k165:d0:s0)		iTemp89 [k111 lr126:127 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{unsigned-long-int near* fixed}[remat] = &[_sys_timer_pool [k110 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int [2] fixed}]
check.c(l118:s127:k166:d0:s0)		iTemp90 [k112 lr127:165 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{unsigned-long-int near* fixed}[remat] = iTemp89 [k111 lr126:127 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{unsigned-long-int near* fixed}[remat] + 0x4 {unsigned-char literal}
check.c(l118:s128:k167:d0:s0)		iTemp91 [k113 lr128:129 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l118:s129:k168:d0:s0)		iTemp92 [k114 lr129:130 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp91 [k113 lr128:129 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l118:s130:k169:d0:s0)		iTemp93 [k115 lr130:131 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp92 [k114 lr129:130 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l118:s131:k170:d0:s0)		iTemp94 [k116 lr131:133 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp93 [k115 lr130:131 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l118:s132:k299:d0:s0)		send 0x2710 {const-int literal}{argreg = 1}
check.c(l118:s133:k300:d0:s0)		send iTemp94 [k116 lr131:133 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l118:s134:k301:d0:s0)		iTemp95 [k117 lr134:142 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l118:s135:k172:d0:s0)		iTemp96 [k118 lr135:136 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l118:s136:k173:d0:s0)		iTemp97 [k119 lr136:137 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp96 [k118 lr135:136 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l118:s137:k174:d0:s0)		iTemp98 [k120 lr137:138 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp97 [k119 lr136:137 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l118:s138:k175:d0:s0)		iTemp99 [k121 lr138:140 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp98 [k120 lr137:138 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l118:s139:k302:d0:s0)		send 0x3e8 {const-int literal}{argreg = 1}
check.c(l118:s140:k303:d0:s0)		send iTemp99 [k121 lr138:140 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l118:s141:k304:d0:s0)		iTemp100 [k122 lr141:142 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l118:s142:k177:d0:s0)		iTemp101 [k123 lr142:150 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp95 [k117 lr134:142 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp100 [k122 lr141:142 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l119:s143:k178:d0:s0)		iTemp102 [k124 lr143:144 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l119:s144:k179:d0:s0)		iTemp103 [k125 lr144:145 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp102 [k124 lr143:144 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l119:s145:k180:d0:s0)		iTemp104 [k126 lr145:146 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp103 [k125 lr144:145 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l119:s146:k181:d0:s0)		iTemp105 [k127 lr146:148 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp104 [k126 lr145:146 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l119:s147:k305:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l119:s148:k306:d0:s0)		send iTemp105 [k127 lr146:148 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l119:s149:k307:d0:s0)		iTemp106 [k128 lr149:150 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l119:s150:k183:d0:s0)		iTemp107 [k129 lr150:158 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp101 [k123 lr142:150 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp106 [k128 lr149:150 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l119:s151:k184:d0:s0)		iTemp108 [k130 lr151:152 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x4 {const-unsigned-char literal}
check.c(l119:s152:k185:d0:s0)		iTemp109 [k131 lr152:153 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp108 [k130 lr151:152 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l119:s153:k186:d0:s0)		iTemp110 [k132 lr153:154 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp109 [k131 lr152:153 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l119:s154:k187:d0:s0)		iTemp111 [k133 lr154:156 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp110 [k132 lr153:154 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l119:s155:k308:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l119:s156:k309:d0:s0)		send iTemp111 [k133 lr154:156 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l119:s157:k310:d0:s0)		iTemp112 [k134 lr157:158 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l119:s158:k189:d0:s0)		iTemp113 [k135 lr158:162 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp107 [k129 lr150:158 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp112 [k134 lr157:158 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l120:s159:k190:d0:s0)		iTemp114 [k136 lr159:160 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x5 {const-unsigned-char literal}
check.c(l120:s160:k191:d0:s0)		iTemp115 [k137 lr160:161 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp114 [k136 lr159:160 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l120:s161:k192:d0:s0)		iTemp116 [k138 lr161:162 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp115 [k137 lr160:161 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l120:s162:k193:d0:s0)		iTemp117 [k139 lr162:163 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = iTemp113 [k135 lr158:162 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp116 [k138 lr161:162 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ]
check.c(l120:s163:k194:d0:s0)		iTemp118 [k140 lr163:164 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp117 [k139 lr162:163 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l120:s164:k195:d0:s0)		iTemp119 [k141 lr164:165 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x04 r0x05 r0x06 r0x07 ] = (unsigned-long-int fixed)iTemp118 [k140 lr163:164 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]
check.c(l120:s165:k196:d0:s0)		*(iTemp90 [k112 lr127:165 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{unsigned-long-int near* fixed}[remat]) := iTemp119 [k141 lr164:165 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x04 r0x05 r0x06 r0x07 ]
check.c(l121:s166:k197:d0:s0)		 goto _swBrk_0($27)
check.c(l122:s167:k198:d0:s0)	 _case_0_54($21) :
check.c(l123:s168:k199:d0:s0)		iTemp120 [k143 lr168:169 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l123:s169:k200:d0:s0)		iTemp121 [k144 lr169:170 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp120 [k143 lr168:169 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l123:s170:k201:d0:s0)		iTemp122 [k145 lr170:171 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp121 [k144 lr169:170 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l123:s171:k202:d0:s0)		iTemp123 [k146 lr171:173 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp122 [k145 lr170:171 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l123:s172:k311:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l123:s173:k312:d0:s0)		send iTemp123 [k146 lr171:173 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l123:s174:k313:d0:s0)		iTemp124 [k147 lr174:182 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l123:s175:k204:d0:s0)		iTemp125 [k148 lr175:176 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l123:s176:k205:d0:s0)		iTemp126 [k149 lr176:177 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp125 [k148 lr175:176 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l123:s177:k206:d0:s0)		iTemp127 [k150 lr177:178 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp126 [k149 lr176:177 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l123:s178:k207:d0:s0)		iTemp128 [k151 lr178:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp127 [k150 lr177:178 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l123:s179:k314:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l123:s180:k315:d0:s0)		send iTemp128 [k151 lr178:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l123:s181:k316:d0:s0)		iTemp129 [k152 lr181:182 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l123:s182:k209:d0:s0)		iTemp130 [k153 lr182:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp124 [k147 lr174:182 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp129 [k152 lr181:182 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l124:s183:k210:d0:s0)		iTemp131 [k154 lr183:184 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l124:s184:k211:d0:s0)		iTemp132 [k155 lr184:185 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp131 [k154 lr183:184 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l124:s185:k212:d0:s0)		iTemp133 [k156 lr185:186 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp132 [k155 lr184:185 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l124:s186:k213:d0:s0)		iTemp134 [k157 lr186:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp133 [k156 lr185:186 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l124:s187:k214:d0:s0)		_sys_temp_min [k142 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed} = iTemp130 [k153 lr182:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp134 [k157 lr186:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l125:s188:k217:d0:s0)		 goto _swBrk_0($27)
check.c(l126:s189:k218:d0:s0)	 _case_0_55($22) :
check.c(l127:s190:k219:d0:s0)		iTemp137 [k161 lr190:191 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l127:s191:k220:d0:s0)		iTemp138 [k162 lr191:192 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp137 [k161 lr190:191 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l127:s192:k221:d0:s0)		iTemp139 [k163 lr192:193 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp138 [k162 lr191:192 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l127:s193:k222:d0:s0)		iTemp140 [k164 lr193:195 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp139 [k163 lr192:193 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l127:s194:k317:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l127:s195:k318:d0:s0)		send iTemp140 [k164 lr193:195 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l127:s196:k319:d0:s0)		iTemp141 [k165 lr196:204 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l127:s197:k224:d0:s0)		iTemp142 [k166 lr197:198 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l127:s198:k225:d0:s0)		iTemp143 [k167 lr198:199 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp142 [k166 lr197:198 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l127:s199:k226:d0:s0)		iTemp144 [k168 lr199:200 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp143 [k167 lr198:199 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l127:s200:k227:d0:s0)		iTemp145 [k169 lr200:202 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp144 [k168 lr199:200 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l127:s201:k320:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l127:s202:k321:d0:s0)		send iTemp145 [k169 lr200:202 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l127:s203:k322:d0:s0)		iTemp146 [k170 lr203:204 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l127:s204:k229:d0:s0)		iTemp147 [k171 lr204:209 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp141 [k165 lr196:204 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp146 [k170 lr203:204 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l128:s205:k230:d0:s0)		iTemp148 [k172 lr205:206 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l128:s206:k231:d0:s0)		iTemp149 [k173 lr206:207 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp148 [k172 lr205:206 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l128:s207:k232:d0:s0)		iTemp150 [k174 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp149 [k173 lr206:207 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l128:s208:k233:d0:s0)		iTemp151 [k175 lr208:209 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp150 [k174 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l128:s209:k234:d0:s0)		_sys_temp_max [k160 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed} = iTemp147 [k171 lr204:209 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp151 [k175 lr208:209 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l129:s210:k237:d0:s0)		 goto _swBrk_0($27)
check.c(l130:s211:k238:d0:s0)	 _case_0_56($23) :
check.c(l131:s212:k239:d0:s0)		iTemp154 [k179 lr212:213 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l131:s213:k240:d0:s0)		iTemp155 [k180 lr213:214 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp154 [k179 lr212:213 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l131:s214:k241:d0:s0)		iTemp156 [k181 lr214:215 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp155 [k180 lr213:214 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l131:s215:k242:d0:s0)		iTemp157 [k182 lr215:217 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp156 [k181 lr214:215 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l131:s216:k323:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l131:s217:k324:d0:s0)		send iTemp157 [k182 lr215:217 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l131:s218:k325:d0:s0)		iTemp158 [k183 lr218:226 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l131:s219:k244:d0:s0)		iTemp159 [k184 lr219:220 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l131:s220:k245:d0:s0)		iTemp160 [k185 lr220:221 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp159 [k184 lr219:220 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l131:s221:k246:d0:s0)		iTemp161 [k186 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp160 [k185 lr220:221 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l131:s222:k247:d0:s0)		iTemp162 [k187 lr222:224 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp161 [k186 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l131:s223:k326:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l131:s224:k327:d0:s0)		send iTemp162 [k187 lr222:224 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l131:s225:k328:d0:s0)		iTemp163 [k188 lr225:226 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l131:s226:k249:d0:s0)		iTemp164 [k189 lr226:231 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp158 [k183 lr218:226 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp163 [k188 lr225:226 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l132:s227:k250:d0:s0)		iTemp165 [k190 lr227:228 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l132:s228:k251:d0:s0)		iTemp166 [k191 lr228:229 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp165 [k190 lr227:228 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l132:s229:k252:d0:s0)		iTemp167 [k192 lr229:230 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp166 [k191 lr228:229 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l132:s230:k253:d0:s0)		iTemp168 [k193 lr230:231 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp167 [k192 lr229:230 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l132:s231:k254:d0:s0)		_sys_lumi_min [k178 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed} = iTemp164 [k189 lr226:231 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp168 [k193 lr230:231 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l133:s232:k257:d0:s0)		 goto _swBrk_0($27)
check.c(l134:s233:k258:d0:s0)	 _case_0_57($24) :
check.c(l135:s234:k259:d0:s0)		iTemp171 [k196 lr234:235 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l135:s235:k260:d0:s0)		iTemp172 [k197 lr235:236 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp171 [k196 lr234:235 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l135:s236:k261:d0:s0)		iTemp173 [k198 lr236:237 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp172 [k197 lr235:236 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l135:s237:k262:d0:s0)		iTemp174 [k199 lr237:239 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp173 [k198 lr236:237 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l135:s238:k329:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l135:s239:k330:d0:s0)		send iTemp174 [k199 lr237:239 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l135:s240:k331:d0:s0)		iTemp175 [k200 lr240:248 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l135:s241:k264:d0:s0)		iTemp176 [k201 lr241:242 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l135:s242:k265:d0:s0)		iTemp177 [k202 lr242:243 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp176 [k201 lr241:242 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l135:s243:k266:d0:s0)		iTemp178 [k203 lr243:244 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp177 [k202 lr242:243 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l135:s244:k267:d0:s0)		iTemp179 [k204 lr244:246 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp178 [k203 lr243:244 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l135:s245:k332:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l135:s246:k333:d0:s0)		send iTemp179 [k204 lr244:246 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l135:s247:k334:d0:s0)		iTemp180 [k205 lr247:248 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l135:s248:k269:d0:s0)		iTemp181 [k206 lr248:253 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp175 [k200 lr240:248 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp180 [k205 lr247:248 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l136:s249:k270:d0:s0)		iTemp182 [k207 lr249:250 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x00 r0x01 r0x02 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l136:s250:k271:d0:s0)		iTemp183 [k208 lr250:251 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x00 ] = @[iTemp182 [k207 lr249:250 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x00 r0x01 r0x02 ] + 0x0 {const-unsigned-char literal}]
check.c(l136:s251:k272:d0:s0)		iTemp184 [k209 lr251:252 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x00 r0x01 ] = (int fixed)iTemp183 [k208 lr250:251 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x00 ]
check.c(l136:s252:k273:d0:s0)		iTemp185 [k210 lr252:253 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x00 r0x01 ] = iTemp184 [k209 lr251:252 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x00 r0x01 ] - 0x30 {int literal}
check.c(l136:s253:k274:d0:s0)		_sys_temp_max [k160 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed} = iTemp181 [k206 lr248:253 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp185 [k210 lr252:253 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x00 r0x01 ]
check.c(l137:s254:k277:d0:s0)		 goto _swBrk_0($27)
check.c(l138:s255:k278:d0:s0)	 _case_0_82($25) :
check.c(l139:s256:k279:d0:s0)		iTemp1 [k4 lr4:258 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _check_comando_ret_1_74}[r0x03 ] := 0x0 {const-char literal}
check.c(l143:s257:k283:d0:s0)	 _swBrk_0($27) :
check.c(l145:s258:k284:d0:s0)		ret iTemp1 [k4 lr4:258 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _check_comando_ret_1_74}[r0x03 ]
check.c(l145:s259:k285:d0:s0)	 _return($32) :
check.c(l145:s260:k286:d0:s0)		eproc _check_comando [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char function ( char generic* fixed) fixed}

----------------------------------------------------------------
Basic Block _eBBlock36 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 4 : bbnum = 3 1st iCode = 12 , last iCode = 13
visited 0 : hasFcall = 0

defines bitVector :bitvector Size = 299 bSize = 38
Bits on { (12) }

local defines bitVector :bitvector Size = 299 bSize = 38
Bits on { (12) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (3) (5) (6) (8) (10) }

outDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (3) (5) (6) (8) (10) (12) }

usesDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (5) (12) }

----------------------------------------------------------------
check.c(l79:s12:k12:d0:s0)		iTemp7 [k11 lr12:13 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp3 [k7 lr5:24 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] == 0x34 {const-char literal}
check.c(l79:s13:k13:d0:s0)		if iTemp7 [k11 lr12:13 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _case_0_52($14)
check.c(l79:s14:k14:d0:s0)		iTemp8 [k12 lr14:15 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp3 [k7 lr5:24 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] == 0x35 {const-char literal}
check.c(l79:s15:k15:d0:s0)		if iTemp8 [k12 lr14:15 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _case_0_53($20)
check.c(l79:s16:k16:d0:s0)		iTemp9 [k13 lr16:17 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp3 [k7 lr5:24 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] == 0x36 {const-char literal}
check.c(l79:s17:k17:d0:s0)		if iTemp9 [k13 lr16:17 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _case_0_54($21)
check.c(l79:s18:k18:d0:s0)		iTemp10 [k14 lr18:19 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp3 [k7 lr5:24 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] == 0x37 {const-char literal}
check.c(l79:s19:k19:d0:s0)		if iTemp10 [k14 lr18:19 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _case_0_55($22)
check.c(l79:s20:k20:d0:s0)		iTemp11 [k15 lr20:21 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp3 [k7 lr5:24 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] == 0x38 {const-char literal}
check.c(l79:s21:k21:d0:s0)		if iTemp11 [k15 lr20:21 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _case_0_56($23)
check.c(l79:s22:k22:d0:s0)		iTemp12 [k16 lr22:23 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp3 [k7 lr5:24 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] == 0x39 {const-char literal}
check.c(l79:s23:k23:d0:s0)		if iTemp12 [k16 lr22:23 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _case_0_57($24)
check.c(l79:s24:k24:d0:s0)		iTemp13 [k17 lr24:25 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp3 [k7 lr5:24 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] == 0x52 {const-char literal}
check.c(l79:s25:k25:d0:s0)		if iTemp13 [k17 lr24:25 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _case_0_82($25)
check.c(l79:s26:k26:d0:s0)		 goto _swBrk_0($27)
check.c(l80:s27:k27:d0:s0)	 _case_0_49($1) :
check.c(l81:s28:k28:d0:s0)		iTemp15 [k20 lr28:29 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l81:s29:k29:d0:s0)		iTemp16 [k21 lr29:30 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp15 [k20 lr28:29 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l81:s30:k30:d0:s0)		iTemp14 [k18 lr30:53 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_led_num_1_74}[r0x04 ] = iTemp16 [k21 lr29:30 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] - 0x30 {char literal}
check.c(l82:s31:k32:d0:s0)		if iTemp14 [k18 lr30:53 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_led_num_1_74}[r0x04 ] != 0 goto _iffalse_3($3)
check.c(l83:s32:k35:d0:s0)		iTemp18 [k24 lr32:33 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x05 r0x06 r0x07 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l83:s33:k36:d0:s0)		iTemp19 [k25 lr33:34 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = @[iTemp18 [k24 lr32:33 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x05 r0x06 r0x07 ] + 0x0 {const-unsigned-char literal}]
check.c(l83:s34:k37:d0:s0)		iTemp20 [k26 lr34:36 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = iTemp19 [k25 lr33:34 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] - 0x30 {char literal}
check.c(l83:s35:k38:d0:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
check.c(l83:s36:k39:d0:s0)		send iTemp20 [k26 lr34:36 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ]{argreg = 2}
check.c(l83:s37:k40:d0:s0)		iTemp21 [k29 lr37:37 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _led [k23 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( unsigned-char fixed, unsigned-char fixed) fixed}
check.c(l83:s38:k41:d0:s0)		 goto _swBrk_0($27)
check.c(l83:s39:k42:d0:s0)	 _iffalse_3($3) :
check.c(l85:s40:k43:d0:s0)		iTemp23 [k32 lr40:41 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x05 r0x06 r0x07 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l85:s41:k44:d0:s0)		iTemp24 [k33 lr41:42 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = @[iTemp23 [k32 lr40:41 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x05 r0x06 r0x07 ] + 0x0 {const-unsigned-char literal}]
check.c(l85:s42:k45:d0:s0)		iTemp25 [k34 lr42:43 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = iTemp24 [k33 lr41:42 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] - 0x30 {char literal}
check.c(l85:s43:k46:d0:s0)		iTemp26 [k35 lr43:48 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = iTemp25 [k34 lr42:43 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] * 0x64 {const-unsigned-char literal}
check.c(l85:s44:k47:d0:s0)		iTemp27 [k36 lr44:45 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l85:s45:k48:d0:s0)		iTemp28 [k37 lr45:46 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp27 [k36 lr44:45 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l85:s46:k49:d0:s0)		iTemp29 [k38 lr46:47 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = iTemp28 [k37 lr45:46 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] - 0x30 {char literal}
check.c(l85:s47:k50:d0:s0)		iTemp30 [k39 lr47:48 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = iTemp29 [k38 lr46:47 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] * 0xa {const-unsigned-char literal}
check.c(l85:s48:k51:d0:s0)		iTemp31 [k40 lr48:51 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = iTemp26 [k35 lr43:48 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] + iTemp30 [k39 lr47:48 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l86:s49:k52:d0:s0)		iTemp32 [k41 lr49:50 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x4 {const-unsigned-char literal}
check.c(l86:s50:k53:d0:s0)		iTemp33 [k42 lr50:51 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp32 [k41 lr49:50 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l86:s51:k54:d0:s0)		iTemp34 [k43 lr51:52 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = iTemp31 [k40 lr48:51 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] + iTemp33 [k42 lr50:51 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l86:s52:k55:d0:s0)		iTemp22 [k30 lr52:55 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_pwm_1_74}[r0x05 ] = iTemp34 [k43 lr51:52 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] - 0x30 {char literal}
check.c(l87:s53:k57:d0:s0)		iTemp36 [k46 lr53:55 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = iTemp14 [k18 lr30:53 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_led_num_1_74}[r0x04 ] - 0x1 {char literal}
check.c(l87:s54:k58:d0:s0)		send iTemp36 [k46 lr53:55 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]{argreg = 1}
check.c(l87:s55:k59:d0:s0)		send iTemp22 [k30 lr52:55 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_pwm_1_74}[r0x05 ]{argreg = 2}
check.c(l87:s56:k60:d0:s0)		iTemp37 [k49 lr56:56 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _set_pwm [k45 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( unsigned-char fixed, unsigned-char fixed) fixed}
check.c(l89:s57:k62:d0:s0)		 goto _swBrk_0($27)
check.c(l90:s58:k63:d0:s0)	 _case_0_50($5) :
check.c(l91:s59:k64:d0:s0)		iTemp38 [k51 lr59:59 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _limpa_lcd [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( ) fixed}
check.c(l94:s60:k65:d0:s0)		iTemp39 [k53 lr60:88 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] = &[_check_comando_linha_1_1_74 [k52 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [17] fixed}]
check.c(l94:s61:k66:d0:s0)		iTemp40 [k54 lr61:62 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] = iTemp39 [k53 lr60:88 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] + 0x10 {const-unsigned-char literal}
check.c(l94:s62:k67:d0:s0)		*(iTemp40 [k54 lr61:62 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat]) := 0x0 {const-char literal}
check.c(l95:s63:k68:d0:s0)		iTemp41 [k56 lr63:93 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] = &[_check_comando_linha_2_1_74 [k55 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [17] fixed}]
check.c(l95:s64:k69:d0:s0)		iTemp42 [k57 lr64:65 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] = iTemp41 [k56 lr63:93 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] + 0x10 {const-unsigned-char literal}
check.c(l95:s65:k70:d0:s0)		*(iTemp42 [k57 lr64:65 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat]) := 0x0 {const-char literal}
check.c(l96:s66:k289:d0:s0)		iTemp50 [k66 lr66:76 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] := 0x1 {const-char literal}
check.c(l96:s68:k72:d1:s0)	 _forbody_1($28) :
check.c(l97:s69:k74:d1:s0)		iTemp45 [k61 lr69:70 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = iTemp50 [k66 lr66:76 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] - 0x1 {char literal}
check.c(l97:s70:k75:d1:s0)		iTemp46 [k62 lr70:73 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x05 r0x06 ] = iTemp39 [k53 lr60:88 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] + iTemp45 [k61 lr69:70 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ]
check.c(l97:s71:k76:d1:s0)		iTemp47 [k63 lr71:72 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x07 r0x08 r0x09 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + iTemp50 [k66 lr66:76 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ]
check.c(l97:s72:k77:d1:s0)		iTemp48 [k64 lr72:73 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x07 ] = @[iTemp47 [k63 lr71:72 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x07 r0x08 r0x09 ] + 0x0 {const-unsigned-char literal}]
check.c(l97:s73:k78:d1:s0)		*(iTemp46 [k62 lr70:73 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x05 r0x06 ]) := iTemp48 [k64 lr72:73 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x07 ]
check.c(l96:s74:k81:d1:s0)		iTemp50 [k66 lr66:76 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] = iTemp50 [k66 lr66:76 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] + 0x1 {const-unsigned-char literal}
check.c(l96:s75:k83:d1:s0)		iTemp51 [k67 lr75:76 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp50 [k66 lr66:76 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] < 0x11 {const-char literal}
check.c(l96:s76:k84:d1:s0)		if iTemp51 [k67 lr75:76 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forbody_1($28)
check.c(l98:s77:k292:d0:s0)		iTemp58 [k74 lr77:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] := 0x11 {const-char literal}
check.c(l98:s79:k88:d1:s0)	 _forbody_2($30) :
check.c(l99:s80:k90:d1:s0)		iTemp53 [k69 lr80:81 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = iTemp58 [k74 lr77:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] - 0x11 {char literal}
check.c(l99:s81:k91:d1:s0)		iTemp54 [k70 lr81:84 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x05 r0x06 ] = iTemp41 [k56 lr63:93 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] + iTemp53 [k69 lr80:81 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ]
check.c(l99:s82:k92:d1:s0)		iTemp55 [k71 lr82:83 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x07 r0x08 r0x09 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + iTemp58 [k74 lr77:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ]
check.c(l99:s83:k93:d1:s0)		iTemp56 [k72 lr83:84 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x07 ] = @[iTemp55 [k71 lr82:83 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x07 r0x08 r0x09 ] + 0x0 {const-unsigned-char literal}]
check.c(l99:s84:k94:d1:s0)		*(iTemp54 [k70 lr81:84 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x05 r0x06 ]) := iTemp56 [k72 lr83:84 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x07 ]
check.c(l98:s85:k97:d1:s0)		iTemp58 [k74 lr77:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] = iTemp58 [k74 lr77:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] + 0x1 {const-unsigned-char literal}
check.c(l98:s86:k99:d1:s0)		iTemp59 [k75 lr86:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp58 [k74 lr77:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] < 0x21 {const-char literal}
check.c(l98:s87:k100:d1:s0)		if iTemp59 [k75 lr86:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forbody_2($30)
check.c(l100:s88:k103:d0:s0)		iTemp60 [k77 lr88:89 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] := iTemp39 [k53 lr60:88 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat]
check.c(l100:s89:k104:d0:s0)		iTemp61 [k78 lr89:90 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = (char generic* fixed)iTemp60 [k77 lr88:89 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat]
check.c(l100:s90:k105:d0:s0)		send iTemp61 [k78 lr89:90 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ]{argreg = 1}
check.c(l100:s91:k106:d0:s0)		iTemp62 [k80 lr91:91 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _print_lcd_string [k76 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char generic* fixed) fixed}
check.c(l101:s92:k107:d0:s0)		iTemp63 [k82 lr92:92 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _print_lcd_ln [k81 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( ) fixed}
check.c(l102:s93:k108:d0:s0)		iTemp64 [k83 lr93:94 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] := iTemp41 [k56 lr63:93 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat]
check.c(l102:s94:k109:d0:s0)		iTemp65 [k84 lr94:95 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = (char generic* fixed)iTemp64 [k83 lr93:94 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat]
check.c(l102:s95:k110:d0:s0)		send iTemp65 [k84 lr94:95 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ]{argreg = 1}
check.c(l102:s96:k111:d0:s0)		iTemp66 [k85 lr96:96 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _print_lcd_string [k76 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char generic* fixed) fixed}
check.c(l103:s97:k112:d0:s0)		iTemp1 [k4 lr4:258 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _check_comando_ret_1_74}[r0x03 ] := 0x34 {const-unsigned-char literal}
check.c(l104:s98:k113:d0:s0)		 goto _swBrk_0($27)
check.c(l105:s99:k114:d0:s0)	 _case_0_51($8) :
check.c(l106:s100:k115:d0:s0)		iTemp67 [k86 lr100:101 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l106:s101:k116:d0:s0)		iTemp68 [k87 lr101:102 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp67 [k86 lr100:101 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l106:s102:k117:d0:s0)		iTemp69 [k88 lr102:103 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp68 [k87 lr101:102 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l106:s103:k118:d0:s0)		iTemp70 [k89 lr103:109 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp69 [k88 lr102:103 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l106:s104:k119:d0:s0)		iTemp71 [k90 lr104:105 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp70 [k89 lr103:109 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] == 0x1 {int literal}
check.c(l106:s105:k120:d0:s0)		if iTemp71 [k90 lr104:105 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} == 0 goto _iffalse_5($12)
check.c(l107:s106:k124:d0:s0)		_hab_alarme [k91 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed} := 0x1 {const-unsigned-char literal}
check.c(l107:s107:k125:d0:s0)		 goto _swBrk_0($27)
check.c(l107:s108:k126:d0:s0)	 _iffalse_5($12) :
check.c(l108:s109:k131:d0:s0)		if iTemp70 [k89 lr103:109 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] != 0 goto _swBrk_0($27)
check.c(l109:s110:k135:d0:s0)		_hab_alarme [k91 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed} := 0x0 {const-unsigned-char literal}
check.c(l110:s111:k138:d0:s0)		 goto _swBrk_0($27)
check.c(l111:s112:k139:d0:s0)	 _case_0_52($14) :
check.c(l112:s113:k140:d0:s0)		iTemp78 [k98 lr113:114 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l112:s114:k141:d0:s0)		iTemp79 [k99 lr114:115 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp78 [k98 lr113:114 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l112:s115:k142:d0:s0)		iTemp80 [k100 lr115:116 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp79 [k99 lr114:115 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l112:s116:k143:d0:s0)		iTemp81 [k101 lr116:122 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp80 [k100 lr115:116 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l112:s117:k144:d0:s0)		iTemp82 [k102 lr117:118 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp81 [k101 lr116:122 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] == 0x1 {int literal}
check.c(l112:s118:k145:d0:s0)		if iTemp82 [k102 lr117:118 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} == 0 goto _iffalse_7($18)
check.c(l113:s119:k149:d0:s0)		_hab_sensor [k103 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed} := 0x0 {const-unsigned-char literal}
check.c(l113:s120:k150:d0:s0)		 goto _swBrk_0($27)
check.c(l113:s121:k151:d0:s0)	 _iffalse_7($18) :
check.c(l114:s122:k156:d0:s0)		if iTemp81 [k101 lr116:122 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] != 0 goto _swBrk_0($27)
check.c(l115:s123:k160:d0:s0)		_hab_sensor [k103 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed} := 0x2 {const-unsigned-char literal}
check.c(l116:s124:k163:d0:s0)		 goto _swBrk_0($27)
check.c(l117:s125:k164:d0:s0)	 _case_0_53($20) :
check.c(l118:s126:k165:d0:s0)		iTemp89 [k111 lr126:127 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{unsigned-long-int near* fixed}[remat] = &[_sys_timer_pool [k110 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int [2] fixed}]
check.c(l118:s127:k166:d0:s0)		iTemp90 [k112 lr127:165 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{unsigned-long-int near* fixed}[remat] = iTemp89 [k111 lr126:127 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{unsigned-long-int near* fixed}[remat] + 0x4 {unsigned-char literal}
check.c(l118:s128:k167:d0:s0)		iTemp91 [k113 lr128:129 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l118:s129:k168:d0:s0)		iTemp92 [k114 lr129:130 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp91 [k113 lr128:129 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l118:s130:k169:d0:s0)		iTemp93 [k115 lr130:131 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp92 [k114 lr129:130 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l118:s131:k170:d0:s0)		iTemp94 [k116 lr131:133 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp93 [k115 lr130:131 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l118:s132:k299:d0:s0)		send 0x2710 {const-int literal}{argreg = 1}
check.c(l118:s133:k300:d0:s0)		send iTemp94 [k116 lr131:133 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l118:s134:k301:d0:s0)		iTemp95 [k117 lr134:142 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l118:s135:k172:d0:s0)		iTemp96 [k118 lr135:136 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l118:s136:k173:d0:s0)		iTemp97 [k119 lr136:137 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp96 [k118 lr135:136 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l118:s137:k174:d0:s0)		iTemp98 [k120 lr137:138 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp97 [k119 lr136:137 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l118:s138:k175:d0:s0)		iTemp99 [k121 lr138:140 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp98 [k120 lr137:138 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l118:s139:k302:d0:s0)		send 0x3e8 {const-int literal}{argreg = 1}
check.c(l118:s140:k303:d0:s0)		send iTemp99 [k121 lr138:140 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l118:s141:k304:d0:s0)		iTemp100 [k122 lr141:142 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l118:s142:k177:d0:s0)		iTemp101 [k123 lr142:150 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp95 [k117 lr134:142 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp100 [k122 lr141:142 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l119:s143:k178:d0:s0)		iTemp102 [k124 lr143:144 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l119:s144:k179:d0:s0)		iTemp103 [k125 lr144:145 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp102 [k124 lr143:144 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l119:s145:k180:d0:s0)		iTemp104 [k126 lr145:146 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp103 [k125 lr144:145 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l119:s146:k181:d0:s0)		iTemp105 [k127 lr146:148 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp104 [k126 lr145:146 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l119:s147:k305:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l119:s148:k306:d0:s0)		send iTemp105 [k127 lr146:148 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l119:s149:k307:d0:s0)		iTemp106 [k128 lr149:150 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l119:s150:k183:d0:s0)		iTemp107 [k129 lr150:158 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp101 [k123 lr142:150 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp106 [k128 lr149:150 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l119:s151:k184:d0:s0)		iTemp108 [k130 lr151:152 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x4 {const-unsigned-char literal}
check.c(l119:s152:k185:d0:s0)		iTemp109 [k131 lr152:153 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp108 [k130 lr151:152 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l119:s153:k186:d0:s0)		iTemp110 [k132 lr153:154 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp109 [k131 lr152:153 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l119:s154:k187:d0:s0)		iTemp111 [k133 lr154:156 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp110 [k132 lr153:154 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l119:s155:k308:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l119:s156:k309:d0:s0)		send iTemp111 [k133 lr154:156 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l119:s157:k310:d0:s0)		iTemp112 [k134 lr157:158 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l119:s158:k189:d0:s0)		iTemp113 [k135 lr158:162 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp107 [k129 lr150:158 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp112 [k134 lr157:158 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l120:s159:k190:d0:s0)		iTemp114 [k136 lr159:160 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x5 {const-unsigned-char literal}
check.c(l120:s160:k191:d0:s0)		iTemp115 [k137 lr160:161 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp114 [k136 lr159:160 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l120:s161:k192:d0:s0)		iTemp116 [k138 lr161:162 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp115 [k137 lr160:161 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l120:s162:k193:d0:s0)		iTemp117 [k139 lr162:163 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = iTemp113 [k135 lr158:162 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp116 [k138 lr161:162 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ]
check.c(l120:s163:k194:d0:s0)		iTemp118 [k140 lr163:164 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp117 [k139 lr162:163 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l120:s164:k195:d0:s0)		iTemp119 [k141 lr164:165 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x04 r0x05 r0x06 r0x07 ] = (unsigned-long-int fixed)iTemp118 [k140 lr163:164 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]
check.c(l120:s165:k196:d0:s0)		*(iTemp90 [k112 lr127:165 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{unsigned-long-int near* fixed}[remat]) := iTemp119 [k141 lr164:165 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x04 r0x05 r0x06 r0x07 ]
check.c(l121:s166:k197:d0:s0)		 goto _swBrk_0($27)
check.c(l122:s167:k198:d0:s0)	 _case_0_54($21) :
check.c(l123:s168:k199:d0:s0)		iTemp120 [k143 lr168:169 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l123:s169:k200:d0:s0)		iTemp121 [k144 lr169:170 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp120 [k143 lr168:169 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l123:s170:k201:d0:s0)		iTemp122 [k145 lr170:171 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp121 [k144 lr169:170 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l123:s171:k202:d0:s0)		iTemp123 [k146 lr171:173 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp122 [k145 lr170:171 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l123:s172:k311:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l123:s173:k312:d0:s0)		send iTemp123 [k146 lr171:173 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l123:s174:k313:d0:s0)		iTemp124 [k147 lr174:182 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l123:s175:k204:d0:s0)		iTemp125 [k148 lr175:176 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l123:s176:k205:d0:s0)		iTemp126 [k149 lr176:177 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp125 [k148 lr175:176 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l123:s177:k206:d0:s0)		iTemp127 [k150 lr177:178 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp126 [k149 lr176:177 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l123:s178:k207:d0:s0)		iTemp128 [k151 lr178:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp127 [k150 lr177:178 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l123:s179:k314:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l123:s180:k315:d0:s0)		send iTemp128 [k151 lr178:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l123:s181:k316:d0:s0)		iTemp129 [k152 lr181:182 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l123:s182:k209:d0:s0)		iTemp130 [k153 lr182:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp124 [k147 lr174:182 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp129 [k152 lr181:182 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l124:s183:k210:d0:s0)		iTemp131 [k154 lr183:184 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l124:s184:k211:d0:s0)		iTemp132 [k155 lr184:185 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp131 [k154 lr183:184 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l124:s185:k212:d0:s0)		iTemp133 [k156 lr185:186 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp132 [k155 lr184:185 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l124:s186:k213:d0:s0)		iTemp134 [k157 lr186:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp133 [k156 lr185:186 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l124:s187:k214:d0:s0)		_sys_temp_min [k142 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed} = iTemp130 [k153 lr182:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp134 [k157 lr186:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l125:s188:k217:d0:s0)		 goto _swBrk_0($27)
check.c(l126:s189:k218:d0:s0)	 _case_0_55($22) :
check.c(l127:s190:k219:d0:s0)		iTemp137 [k161 lr190:191 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l127:s191:k220:d0:s0)		iTemp138 [k162 lr191:192 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp137 [k161 lr190:191 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l127:s192:k221:d0:s0)		iTemp139 [k163 lr192:193 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp138 [k162 lr191:192 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l127:s193:k222:d0:s0)		iTemp140 [k164 lr193:195 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp139 [k163 lr192:193 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l127:s194:k317:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l127:s195:k318:d0:s0)		send iTemp140 [k164 lr193:195 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l127:s196:k319:d0:s0)		iTemp141 [k165 lr196:204 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l127:s197:k224:d0:s0)		iTemp142 [k166 lr197:198 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l127:s198:k225:d0:s0)		iTemp143 [k167 lr198:199 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp142 [k166 lr197:198 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l127:s199:k226:d0:s0)		iTemp144 [k168 lr199:200 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp143 [k167 lr198:199 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l127:s200:k227:d0:s0)		iTemp145 [k169 lr200:202 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp144 [k168 lr199:200 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l127:s201:k320:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l127:s202:k321:d0:s0)		send iTemp145 [k169 lr200:202 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l127:s203:k322:d0:s0)		iTemp146 [k170 lr203:204 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l127:s204:k229:d0:s0)		iTemp147 [k171 lr204:209 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp141 [k165 lr196:204 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp146 [k170 lr203:204 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l128:s205:k230:d0:s0)		iTemp148 [k172 lr205:206 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l128:s206:k231:d0:s0)		iTemp149 [k173 lr206:207 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp148 [k172 lr205:206 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l128:s207:k232:d0:s0)		iTemp150 [k174 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp149 [k173 lr206:207 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l128:s208:k233:d0:s0)		iTemp151 [k175 lr208:209 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp150 [k174 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l128:s209:k234:d0:s0)		_sys_temp_max [k160 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed} = iTemp147 [k171 lr204:209 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp151 [k175 lr208:209 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l129:s210:k237:d0:s0)		 goto _swBrk_0($27)
check.c(l130:s211:k238:d0:s0)	 _case_0_56($23) :
check.c(l131:s212:k239:d0:s0)		iTemp154 [k179 lr212:213 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l131:s213:k240:d0:s0)		iTemp155 [k180 lr213:214 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp154 [k179 lr212:213 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l131:s214:k241:d0:s0)		iTemp156 [k181 lr214:215 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp155 [k180 lr213:214 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l131:s215:k242:d0:s0)		iTemp157 [k182 lr215:217 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp156 [k181 lr214:215 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l131:s216:k323:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l131:s217:k324:d0:s0)		send iTemp157 [k182 lr215:217 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l131:s218:k325:d0:s0)		iTemp158 [k183 lr218:226 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l131:s219:k244:d0:s0)		iTemp159 [k184 lr219:220 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l131:s220:k245:d0:s0)		iTemp160 [k185 lr220:221 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp159 [k184 lr219:220 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l131:s221:k246:d0:s0)		iTemp161 [k186 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp160 [k185 lr220:221 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l131:s222:k247:d0:s0)		iTemp162 [k187 lr222:224 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp161 [k186 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l131:s223:k326:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l131:s224:k327:d0:s0)		send iTemp162 [k187 lr222:224 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l131:s225:k328:d0:s0)		iTemp163 [k188 lr225:226 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l131:s226:k249:d0:s0)		iTemp164 [k189 lr226:231 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp158 [k183 lr218:226 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp163 [k188 lr225:226 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l132:s227:k250:d0:s0)		iTemp165 [k190 lr227:228 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l132:s228:k251:d0:s0)		iTemp166 [k191 lr228:229 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp165 [k190 lr227:228 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l132:s229:k252:d0:s0)		iTemp167 [k192 lr229:230 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp166 [k191 lr228:229 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l132:s230:k253:d0:s0)		iTemp168 [k193 lr230:231 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp167 [k192 lr229:230 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l132:s231:k254:d0:s0)		_sys_lumi_min [k178 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed} = iTemp164 [k189 lr226:231 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp168 [k193 lr230:231 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l133:s232:k257:d0:s0)		 goto _swBrk_0($27)
check.c(l134:s233:k258:d0:s0)	 _case_0_57($24) :
check.c(l135:s234:k259:d0:s0)		iTemp171 [k196 lr234:235 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l135:s235:k260:d0:s0)		iTemp172 [k197 lr235:236 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp171 [k196 lr234:235 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l135:s236:k261:d0:s0)		iTemp173 [k198 lr236:237 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp172 [k197 lr235:236 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l135:s237:k262:d0:s0)		iTemp174 [k199 lr237:239 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp173 [k198 lr236:237 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l135:s238:k329:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l135:s239:k330:d0:s0)		send iTemp174 [k199 lr237:239 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l135:s240:k331:d0:s0)		iTemp175 [k200 lr240:248 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l135:s241:k264:d0:s0)		iTemp176 [k201 lr241:242 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l135:s242:k265:d0:s0)		iTemp177 [k202 lr242:243 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp176 [k201 lr241:242 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l135:s243:k266:d0:s0)		iTemp178 [k203 lr243:244 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp177 [k202 lr242:243 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l135:s244:k267:d0:s0)		iTemp179 [k204 lr244:246 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp178 [k203 lr243:244 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l135:s245:k332:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l135:s246:k333:d0:s0)		send iTemp179 [k204 lr244:246 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l135:s247:k334:d0:s0)		iTemp180 [k205 lr247:248 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l135:s248:k269:d0:s0)		iTemp181 [k206 lr248:253 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp175 [k200 lr240:248 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp180 [k205 lr247:248 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l136:s249:k270:d0:s0)		iTemp182 [k207 lr249:250 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x00 r0x01 r0x02 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l136:s250:k271:d0:s0)		iTemp183 [k208 lr250:251 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x00 ] = @[iTemp182 [k207 lr249:250 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x00 r0x01 r0x02 ] + 0x0 {const-unsigned-char literal}]
check.c(l136:s251:k272:d0:s0)		iTemp184 [k209 lr251:252 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x00 r0x01 ] = (int fixed)iTemp183 [k208 lr250:251 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x00 ]
check.c(l136:s252:k273:d0:s0)		iTemp185 [k210 lr252:253 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x00 r0x01 ] = iTemp184 [k209 lr251:252 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x00 r0x01 ] - 0x30 {int literal}
check.c(l136:s253:k274:d0:s0)		_sys_temp_max [k160 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed} = iTemp181 [k206 lr248:253 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp185 [k210 lr252:253 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x00 r0x01 ]
check.c(l137:s254:k277:d0:s0)		 goto _swBrk_0($27)
check.c(l138:s255:k278:d0:s0)	 _case_0_82($25) :
check.c(l139:s256:k279:d0:s0)		iTemp1 [k4 lr4:258 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _check_comando_ret_1_74}[r0x03 ] := 0x0 {const-char literal}
check.c(l143:s257:k283:d0:s0)	 _swBrk_0($27) :
check.c(l145:s258:k284:d0:s0)		ret iTemp1 [k4 lr4:258 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _check_comando_ret_1_74}[r0x03 ]
check.c(l145:s259:k285:d0:s0)	 _return($32) :
check.c(l145:s260:k286:d0:s0)		eproc _check_comando [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char function ( char generic* fixed) fixed}

----------------------------------------------------------------
Basic Block _eBBlock37 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 5 : bbnum = 4 1st iCode = 14 , last iCode = 15
visited 0 : hasFcall = 0

defines bitVector :bitvector Size = 299 bSize = 38
Bits on { (14) }

local defines bitVector :bitvector Size = 299 bSize = 38
Bits on { (14) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (3) (5) (6) (8) (10) (12) }

outDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (3) (5) (6) (8) (10) (12) (14) }

usesDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (5) (14) }

----------------------------------------------------------------
check.c(l79:s14:k14:d0:s0)		iTemp8 [k12 lr14:15 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp3 [k7 lr5:24 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] == 0x35 {const-char literal}
check.c(l79:s15:k15:d0:s0)		if iTemp8 [k12 lr14:15 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _case_0_53($20)
check.c(l79:s16:k16:d0:s0)		iTemp9 [k13 lr16:17 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp3 [k7 lr5:24 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] == 0x36 {const-char literal}
check.c(l79:s17:k17:d0:s0)		if iTemp9 [k13 lr16:17 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _case_0_54($21)
check.c(l79:s18:k18:d0:s0)		iTemp10 [k14 lr18:19 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp3 [k7 lr5:24 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] == 0x37 {const-char literal}
check.c(l79:s19:k19:d0:s0)		if iTemp10 [k14 lr18:19 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _case_0_55($22)
check.c(l79:s20:k20:d0:s0)		iTemp11 [k15 lr20:21 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp3 [k7 lr5:24 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] == 0x38 {const-char literal}
check.c(l79:s21:k21:d0:s0)		if iTemp11 [k15 lr20:21 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _case_0_56($23)
check.c(l79:s22:k22:d0:s0)		iTemp12 [k16 lr22:23 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp3 [k7 lr5:24 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] == 0x39 {const-char literal}
check.c(l79:s23:k23:d0:s0)		if iTemp12 [k16 lr22:23 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _case_0_57($24)
check.c(l79:s24:k24:d0:s0)		iTemp13 [k17 lr24:25 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp3 [k7 lr5:24 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] == 0x52 {const-char literal}
check.c(l79:s25:k25:d0:s0)		if iTemp13 [k17 lr24:25 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _case_0_82($25)
check.c(l79:s26:k26:d0:s0)		 goto _swBrk_0($27)
check.c(l80:s27:k27:d0:s0)	 _case_0_49($1) :
check.c(l81:s28:k28:d0:s0)		iTemp15 [k20 lr28:29 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l81:s29:k29:d0:s0)		iTemp16 [k21 lr29:30 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp15 [k20 lr28:29 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l81:s30:k30:d0:s0)		iTemp14 [k18 lr30:53 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_led_num_1_74}[r0x04 ] = iTemp16 [k21 lr29:30 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] - 0x30 {char literal}
check.c(l82:s31:k32:d0:s0)		if iTemp14 [k18 lr30:53 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_led_num_1_74}[r0x04 ] != 0 goto _iffalse_3($3)
check.c(l83:s32:k35:d0:s0)		iTemp18 [k24 lr32:33 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x05 r0x06 r0x07 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l83:s33:k36:d0:s0)		iTemp19 [k25 lr33:34 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = @[iTemp18 [k24 lr32:33 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x05 r0x06 r0x07 ] + 0x0 {const-unsigned-char literal}]
check.c(l83:s34:k37:d0:s0)		iTemp20 [k26 lr34:36 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = iTemp19 [k25 lr33:34 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] - 0x30 {char literal}
check.c(l83:s35:k38:d0:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
check.c(l83:s36:k39:d0:s0)		send iTemp20 [k26 lr34:36 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ]{argreg = 2}
check.c(l83:s37:k40:d0:s0)		iTemp21 [k29 lr37:37 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _led [k23 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( unsigned-char fixed, unsigned-char fixed) fixed}
check.c(l83:s38:k41:d0:s0)		 goto _swBrk_0($27)
check.c(l83:s39:k42:d0:s0)	 _iffalse_3($3) :
check.c(l85:s40:k43:d0:s0)		iTemp23 [k32 lr40:41 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x05 r0x06 r0x07 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l85:s41:k44:d0:s0)		iTemp24 [k33 lr41:42 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = @[iTemp23 [k32 lr40:41 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x05 r0x06 r0x07 ] + 0x0 {const-unsigned-char literal}]
check.c(l85:s42:k45:d0:s0)		iTemp25 [k34 lr42:43 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = iTemp24 [k33 lr41:42 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] - 0x30 {char literal}
check.c(l85:s43:k46:d0:s0)		iTemp26 [k35 lr43:48 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = iTemp25 [k34 lr42:43 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] * 0x64 {const-unsigned-char literal}
check.c(l85:s44:k47:d0:s0)		iTemp27 [k36 lr44:45 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l85:s45:k48:d0:s0)		iTemp28 [k37 lr45:46 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp27 [k36 lr44:45 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l85:s46:k49:d0:s0)		iTemp29 [k38 lr46:47 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = iTemp28 [k37 lr45:46 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] - 0x30 {char literal}
check.c(l85:s47:k50:d0:s0)		iTemp30 [k39 lr47:48 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = iTemp29 [k38 lr46:47 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] * 0xa {const-unsigned-char literal}
check.c(l85:s48:k51:d0:s0)		iTemp31 [k40 lr48:51 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = iTemp26 [k35 lr43:48 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] + iTemp30 [k39 lr47:48 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l86:s49:k52:d0:s0)		iTemp32 [k41 lr49:50 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x4 {const-unsigned-char literal}
check.c(l86:s50:k53:d0:s0)		iTemp33 [k42 lr50:51 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp32 [k41 lr49:50 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l86:s51:k54:d0:s0)		iTemp34 [k43 lr51:52 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = iTemp31 [k40 lr48:51 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] + iTemp33 [k42 lr50:51 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l86:s52:k55:d0:s0)		iTemp22 [k30 lr52:55 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_pwm_1_74}[r0x05 ] = iTemp34 [k43 lr51:52 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] - 0x30 {char literal}
check.c(l87:s53:k57:d0:s0)		iTemp36 [k46 lr53:55 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = iTemp14 [k18 lr30:53 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_led_num_1_74}[r0x04 ] - 0x1 {char literal}
check.c(l87:s54:k58:d0:s0)		send iTemp36 [k46 lr53:55 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]{argreg = 1}
check.c(l87:s55:k59:d0:s0)		send iTemp22 [k30 lr52:55 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_pwm_1_74}[r0x05 ]{argreg = 2}
check.c(l87:s56:k60:d0:s0)		iTemp37 [k49 lr56:56 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _set_pwm [k45 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( unsigned-char fixed, unsigned-char fixed) fixed}
check.c(l89:s57:k62:d0:s0)		 goto _swBrk_0($27)
check.c(l90:s58:k63:d0:s0)	 _case_0_50($5) :
check.c(l91:s59:k64:d0:s0)		iTemp38 [k51 lr59:59 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _limpa_lcd [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( ) fixed}
check.c(l94:s60:k65:d0:s0)		iTemp39 [k53 lr60:88 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] = &[_check_comando_linha_1_1_74 [k52 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [17] fixed}]
check.c(l94:s61:k66:d0:s0)		iTemp40 [k54 lr61:62 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] = iTemp39 [k53 lr60:88 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] + 0x10 {const-unsigned-char literal}
check.c(l94:s62:k67:d0:s0)		*(iTemp40 [k54 lr61:62 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat]) := 0x0 {const-char literal}
check.c(l95:s63:k68:d0:s0)		iTemp41 [k56 lr63:93 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] = &[_check_comando_linha_2_1_74 [k55 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [17] fixed}]
check.c(l95:s64:k69:d0:s0)		iTemp42 [k57 lr64:65 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] = iTemp41 [k56 lr63:93 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] + 0x10 {const-unsigned-char literal}
check.c(l95:s65:k70:d0:s0)		*(iTemp42 [k57 lr64:65 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat]) := 0x0 {const-char literal}
check.c(l96:s66:k289:d0:s0)		iTemp50 [k66 lr66:76 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] := 0x1 {const-char literal}
check.c(l96:s68:k72:d1:s0)	 _forbody_1($28) :
check.c(l97:s69:k74:d1:s0)		iTemp45 [k61 lr69:70 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = iTemp50 [k66 lr66:76 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] - 0x1 {char literal}
check.c(l97:s70:k75:d1:s0)		iTemp46 [k62 lr70:73 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x05 r0x06 ] = iTemp39 [k53 lr60:88 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] + iTemp45 [k61 lr69:70 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ]
check.c(l97:s71:k76:d1:s0)		iTemp47 [k63 lr71:72 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x07 r0x08 r0x09 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + iTemp50 [k66 lr66:76 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ]
check.c(l97:s72:k77:d1:s0)		iTemp48 [k64 lr72:73 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x07 ] = @[iTemp47 [k63 lr71:72 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x07 r0x08 r0x09 ] + 0x0 {const-unsigned-char literal}]
check.c(l97:s73:k78:d1:s0)		*(iTemp46 [k62 lr70:73 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x05 r0x06 ]) := iTemp48 [k64 lr72:73 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x07 ]
check.c(l96:s74:k81:d1:s0)		iTemp50 [k66 lr66:76 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] = iTemp50 [k66 lr66:76 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] + 0x1 {const-unsigned-char literal}
check.c(l96:s75:k83:d1:s0)		iTemp51 [k67 lr75:76 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp50 [k66 lr66:76 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] < 0x11 {const-char literal}
check.c(l96:s76:k84:d1:s0)		if iTemp51 [k67 lr75:76 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forbody_1($28)
check.c(l98:s77:k292:d0:s0)		iTemp58 [k74 lr77:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] := 0x11 {const-char literal}
check.c(l98:s79:k88:d1:s0)	 _forbody_2($30) :
check.c(l99:s80:k90:d1:s0)		iTemp53 [k69 lr80:81 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = iTemp58 [k74 lr77:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] - 0x11 {char literal}
check.c(l99:s81:k91:d1:s0)		iTemp54 [k70 lr81:84 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x05 r0x06 ] = iTemp41 [k56 lr63:93 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] + iTemp53 [k69 lr80:81 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ]
check.c(l99:s82:k92:d1:s0)		iTemp55 [k71 lr82:83 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x07 r0x08 r0x09 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + iTemp58 [k74 lr77:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ]
check.c(l99:s83:k93:d1:s0)		iTemp56 [k72 lr83:84 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x07 ] = @[iTemp55 [k71 lr82:83 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x07 r0x08 r0x09 ] + 0x0 {const-unsigned-char literal}]
check.c(l99:s84:k94:d1:s0)		*(iTemp54 [k70 lr81:84 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x05 r0x06 ]) := iTemp56 [k72 lr83:84 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x07 ]
check.c(l98:s85:k97:d1:s0)		iTemp58 [k74 lr77:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] = iTemp58 [k74 lr77:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] + 0x1 {const-unsigned-char literal}
check.c(l98:s86:k99:d1:s0)		iTemp59 [k75 lr86:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp58 [k74 lr77:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] < 0x21 {const-char literal}
check.c(l98:s87:k100:d1:s0)		if iTemp59 [k75 lr86:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forbody_2($30)
check.c(l100:s88:k103:d0:s0)		iTemp60 [k77 lr88:89 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] := iTemp39 [k53 lr60:88 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat]
check.c(l100:s89:k104:d0:s0)		iTemp61 [k78 lr89:90 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = (char generic* fixed)iTemp60 [k77 lr88:89 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat]
check.c(l100:s90:k105:d0:s0)		send iTemp61 [k78 lr89:90 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ]{argreg = 1}
check.c(l100:s91:k106:d0:s0)		iTemp62 [k80 lr91:91 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _print_lcd_string [k76 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char generic* fixed) fixed}
check.c(l101:s92:k107:d0:s0)		iTemp63 [k82 lr92:92 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _print_lcd_ln [k81 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( ) fixed}
check.c(l102:s93:k108:d0:s0)		iTemp64 [k83 lr93:94 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] := iTemp41 [k56 lr63:93 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat]
check.c(l102:s94:k109:d0:s0)		iTemp65 [k84 lr94:95 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = (char generic* fixed)iTemp64 [k83 lr93:94 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat]
check.c(l102:s95:k110:d0:s0)		send iTemp65 [k84 lr94:95 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ]{argreg = 1}
check.c(l102:s96:k111:d0:s0)		iTemp66 [k85 lr96:96 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _print_lcd_string [k76 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char generic* fixed) fixed}
check.c(l103:s97:k112:d0:s0)		iTemp1 [k4 lr4:258 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _check_comando_ret_1_74}[r0x03 ] := 0x34 {const-unsigned-char literal}
check.c(l104:s98:k113:d0:s0)		 goto _swBrk_0($27)
check.c(l105:s99:k114:d0:s0)	 _case_0_51($8) :
check.c(l106:s100:k115:d0:s0)		iTemp67 [k86 lr100:101 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l106:s101:k116:d0:s0)		iTemp68 [k87 lr101:102 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp67 [k86 lr100:101 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l106:s102:k117:d0:s0)		iTemp69 [k88 lr102:103 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp68 [k87 lr101:102 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l106:s103:k118:d0:s0)		iTemp70 [k89 lr103:109 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp69 [k88 lr102:103 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l106:s104:k119:d0:s0)		iTemp71 [k90 lr104:105 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp70 [k89 lr103:109 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] == 0x1 {int literal}
check.c(l106:s105:k120:d0:s0)		if iTemp71 [k90 lr104:105 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} == 0 goto _iffalse_5($12)
check.c(l107:s106:k124:d0:s0)		_hab_alarme [k91 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed} := 0x1 {const-unsigned-char literal}
check.c(l107:s107:k125:d0:s0)		 goto _swBrk_0($27)
check.c(l107:s108:k126:d0:s0)	 _iffalse_5($12) :
check.c(l108:s109:k131:d0:s0)		if iTemp70 [k89 lr103:109 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] != 0 goto _swBrk_0($27)
check.c(l109:s110:k135:d0:s0)		_hab_alarme [k91 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed} := 0x0 {const-unsigned-char literal}
check.c(l110:s111:k138:d0:s0)		 goto _swBrk_0($27)
check.c(l111:s112:k139:d0:s0)	 _case_0_52($14) :
check.c(l112:s113:k140:d0:s0)		iTemp78 [k98 lr113:114 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l112:s114:k141:d0:s0)		iTemp79 [k99 lr114:115 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp78 [k98 lr113:114 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l112:s115:k142:d0:s0)		iTemp80 [k100 lr115:116 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp79 [k99 lr114:115 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l112:s116:k143:d0:s0)		iTemp81 [k101 lr116:122 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp80 [k100 lr115:116 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l112:s117:k144:d0:s0)		iTemp82 [k102 lr117:118 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp81 [k101 lr116:122 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] == 0x1 {int literal}
check.c(l112:s118:k145:d0:s0)		if iTemp82 [k102 lr117:118 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} == 0 goto _iffalse_7($18)
check.c(l113:s119:k149:d0:s0)		_hab_sensor [k103 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed} := 0x0 {const-unsigned-char literal}
check.c(l113:s120:k150:d0:s0)		 goto _swBrk_0($27)
check.c(l113:s121:k151:d0:s0)	 _iffalse_7($18) :
check.c(l114:s122:k156:d0:s0)		if iTemp81 [k101 lr116:122 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] != 0 goto _swBrk_0($27)
check.c(l115:s123:k160:d0:s0)		_hab_sensor [k103 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed} := 0x2 {const-unsigned-char literal}
check.c(l116:s124:k163:d0:s0)		 goto _swBrk_0($27)
check.c(l117:s125:k164:d0:s0)	 _case_0_53($20) :
check.c(l118:s126:k165:d0:s0)		iTemp89 [k111 lr126:127 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{unsigned-long-int near* fixed}[remat] = &[_sys_timer_pool [k110 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int [2] fixed}]
check.c(l118:s127:k166:d0:s0)		iTemp90 [k112 lr127:165 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{unsigned-long-int near* fixed}[remat] = iTemp89 [k111 lr126:127 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{unsigned-long-int near* fixed}[remat] + 0x4 {unsigned-char literal}
check.c(l118:s128:k167:d0:s0)		iTemp91 [k113 lr128:129 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l118:s129:k168:d0:s0)		iTemp92 [k114 lr129:130 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp91 [k113 lr128:129 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l118:s130:k169:d0:s0)		iTemp93 [k115 lr130:131 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp92 [k114 lr129:130 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l118:s131:k170:d0:s0)		iTemp94 [k116 lr131:133 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp93 [k115 lr130:131 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l118:s132:k299:d0:s0)		send 0x2710 {const-int literal}{argreg = 1}
check.c(l118:s133:k300:d0:s0)		send iTemp94 [k116 lr131:133 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l118:s134:k301:d0:s0)		iTemp95 [k117 lr134:142 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l118:s135:k172:d0:s0)		iTemp96 [k118 lr135:136 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l118:s136:k173:d0:s0)		iTemp97 [k119 lr136:137 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp96 [k118 lr135:136 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l118:s137:k174:d0:s0)		iTemp98 [k120 lr137:138 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp97 [k119 lr136:137 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l118:s138:k175:d0:s0)		iTemp99 [k121 lr138:140 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp98 [k120 lr137:138 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l118:s139:k302:d0:s0)		send 0x3e8 {const-int literal}{argreg = 1}
check.c(l118:s140:k303:d0:s0)		send iTemp99 [k121 lr138:140 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l118:s141:k304:d0:s0)		iTemp100 [k122 lr141:142 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l118:s142:k177:d0:s0)		iTemp101 [k123 lr142:150 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp95 [k117 lr134:142 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp100 [k122 lr141:142 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l119:s143:k178:d0:s0)		iTemp102 [k124 lr143:144 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l119:s144:k179:d0:s0)		iTemp103 [k125 lr144:145 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp102 [k124 lr143:144 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l119:s145:k180:d0:s0)		iTemp104 [k126 lr145:146 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp103 [k125 lr144:145 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l119:s146:k181:d0:s0)		iTemp105 [k127 lr146:148 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp104 [k126 lr145:146 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l119:s147:k305:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l119:s148:k306:d0:s0)		send iTemp105 [k127 lr146:148 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l119:s149:k307:d0:s0)		iTemp106 [k128 lr149:150 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l119:s150:k183:d0:s0)		iTemp107 [k129 lr150:158 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp101 [k123 lr142:150 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp106 [k128 lr149:150 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l119:s151:k184:d0:s0)		iTemp108 [k130 lr151:152 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x4 {const-unsigned-char literal}
check.c(l119:s152:k185:d0:s0)		iTemp109 [k131 lr152:153 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp108 [k130 lr151:152 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l119:s153:k186:d0:s0)		iTemp110 [k132 lr153:154 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp109 [k131 lr152:153 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l119:s154:k187:d0:s0)		iTemp111 [k133 lr154:156 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp110 [k132 lr153:154 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l119:s155:k308:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l119:s156:k309:d0:s0)		send iTemp111 [k133 lr154:156 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l119:s157:k310:d0:s0)		iTemp112 [k134 lr157:158 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l119:s158:k189:d0:s0)		iTemp113 [k135 lr158:162 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp107 [k129 lr150:158 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp112 [k134 lr157:158 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l120:s159:k190:d0:s0)		iTemp114 [k136 lr159:160 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x5 {const-unsigned-char literal}
check.c(l120:s160:k191:d0:s0)		iTemp115 [k137 lr160:161 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp114 [k136 lr159:160 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l120:s161:k192:d0:s0)		iTemp116 [k138 lr161:162 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp115 [k137 lr160:161 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l120:s162:k193:d0:s0)		iTemp117 [k139 lr162:163 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = iTemp113 [k135 lr158:162 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp116 [k138 lr161:162 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ]
check.c(l120:s163:k194:d0:s0)		iTemp118 [k140 lr163:164 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp117 [k139 lr162:163 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l120:s164:k195:d0:s0)		iTemp119 [k141 lr164:165 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x04 r0x05 r0x06 r0x07 ] = (unsigned-long-int fixed)iTemp118 [k140 lr163:164 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]
check.c(l120:s165:k196:d0:s0)		*(iTemp90 [k112 lr127:165 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{unsigned-long-int near* fixed}[remat]) := iTemp119 [k141 lr164:165 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x04 r0x05 r0x06 r0x07 ]
check.c(l121:s166:k197:d0:s0)		 goto _swBrk_0($27)
check.c(l122:s167:k198:d0:s0)	 _case_0_54($21) :
check.c(l123:s168:k199:d0:s0)		iTemp120 [k143 lr168:169 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l123:s169:k200:d0:s0)		iTemp121 [k144 lr169:170 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp120 [k143 lr168:169 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l123:s170:k201:d0:s0)		iTemp122 [k145 lr170:171 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp121 [k144 lr169:170 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l123:s171:k202:d0:s0)		iTemp123 [k146 lr171:173 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp122 [k145 lr170:171 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l123:s172:k311:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l123:s173:k312:d0:s0)		send iTemp123 [k146 lr171:173 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l123:s174:k313:d0:s0)		iTemp124 [k147 lr174:182 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l123:s175:k204:d0:s0)		iTemp125 [k148 lr175:176 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l123:s176:k205:d0:s0)		iTemp126 [k149 lr176:177 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp125 [k148 lr175:176 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l123:s177:k206:d0:s0)		iTemp127 [k150 lr177:178 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp126 [k149 lr176:177 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l123:s178:k207:d0:s0)		iTemp128 [k151 lr178:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp127 [k150 lr177:178 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l123:s179:k314:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l123:s180:k315:d0:s0)		send iTemp128 [k151 lr178:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l123:s181:k316:d0:s0)		iTemp129 [k152 lr181:182 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l123:s182:k209:d0:s0)		iTemp130 [k153 lr182:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp124 [k147 lr174:182 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp129 [k152 lr181:182 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l124:s183:k210:d0:s0)		iTemp131 [k154 lr183:184 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l124:s184:k211:d0:s0)		iTemp132 [k155 lr184:185 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp131 [k154 lr183:184 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l124:s185:k212:d0:s0)		iTemp133 [k156 lr185:186 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp132 [k155 lr184:185 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l124:s186:k213:d0:s0)		iTemp134 [k157 lr186:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp133 [k156 lr185:186 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l124:s187:k214:d0:s0)		_sys_temp_min [k142 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed} = iTemp130 [k153 lr182:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp134 [k157 lr186:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l125:s188:k217:d0:s0)		 goto _swBrk_0($27)
check.c(l126:s189:k218:d0:s0)	 _case_0_55($22) :
check.c(l127:s190:k219:d0:s0)		iTemp137 [k161 lr190:191 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l127:s191:k220:d0:s0)		iTemp138 [k162 lr191:192 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp137 [k161 lr190:191 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l127:s192:k221:d0:s0)		iTemp139 [k163 lr192:193 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp138 [k162 lr191:192 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l127:s193:k222:d0:s0)		iTemp140 [k164 lr193:195 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp139 [k163 lr192:193 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l127:s194:k317:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l127:s195:k318:d0:s0)		send iTemp140 [k164 lr193:195 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l127:s196:k319:d0:s0)		iTemp141 [k165 lr196:204 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l127:s197:k224:d0:s0)		iTemp142 [k166 lr197:198 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l127:s198:k225:d0:s0)		iTemp143 [k167 lr198:199 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp142 [k166 lr197:198 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l127:s199:k226:d0:s0)		iTemp144 [k168 lr199:200 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp143 [k167 lr198:199 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l127:s200:k227:d0:s0)		iTemp145 [k169 lr200:202 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp144 [k168 lr199:200 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l127:s201:k320:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l127:s202:k321:d0:s0)		send iTemp145 [k169 lr200:202 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l127:s203:k322:d0:s0)		iTemp146 [k170 lr203:204 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l127:s204:k229:d0:s0)		iTemp147 [k171 lr204:209 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp141 [k165 lr196:204 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp146 [k170 lr203:204 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l128:s205:k230:d0:s0)		iTemp148 [k172 lr205:206 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l128:s206:k231:d0:s0)		iTemp149 [k173 lr206:207 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp148 [k172 lr205:206 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l128:s207:k232:d0:s0)		iTemp150 [k174 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp149 [k173 lr206:207 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l128:s208:k233:d0:s0)		iTemp151 [k175 lr208:209 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp150 [k174 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l128:s209:k234:d0:s0)		_sys_temp_max [k160 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed} = iTemp147 [k171 lr204:209 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp151 [k175 lr208:209 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l129:s210:k237:d0:s0)		 goto _swBrk_0($27)
check.c(l130:s211:k238:d0:s0)	 _case_0_56($23) :
check.c(l131:s212:k239:d0:s0)		iTemp154 [k179 lr212:213 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l131:s213:k240:d0:s0)		iTemp155 [k180 lr213:214 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp154 [k179 lr212:213 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l131:s214:k241:d0:s0)		iTemp156 [k181 lr214:215 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp155 [k180 lr213:214 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l131:s215:k242:d0:s0)		iTemp157 [k182 lr215:217 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp156 [k181 lr214:215 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l131:s216:k323:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l131:s217:k324:d0:s0)		send iTemp157 [k182 lr215:217 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l131:s218:k325:d0:s0)		iTemp158 [k183 lr218:226 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l131:s219:k244:d0:s0)		iTemp159 [k184 lr219:220 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l131:s220:k245:d0:s0)		iTemp160 [k185 lr220:221 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp159 [k184 lr219:220 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l131:s221:k246:d0:s0)		iTemp161 [k186 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp160 [k185 lr220:221 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l131:s222:k247:d0:s0)		iTemp162 [k187 lr222:224 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp161 [k186 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l131:s223:k326:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l131:s224:k327:d0:s0)		send iTemp162 [k187 lr222:224 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l131:s225:k328:d0:s0)		iTemp163 [k188 lr225:226 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l131:s226:k249:d0:s0)		iTemp164 [k189 lr226:231 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp158 [k183 lr218:226 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp163 [k188 lr225:226 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l132:s227:k250:d0:s0)		iTemp165 [k190 lr227:228 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l132:s228:k251:d0:s0)		iTemp166 [k191 lr228:229 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp165 [k190 lr227:228 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l132:s229:k252:d0:s0)		iTemp167 [k192 lr229:230 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp166 [k191 lr228:229 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l132:s230:k253:d0:s0)		iTemp168 [k193 lr230:231 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp167 [k192 lr229:230 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l132:s231:k254:d0:s0)		_sys_lumi_min [k178 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed} = iTemp164 [k189 lr226:231 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp168 [k193 lr230:231 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l133:s232:k257:d0:s0)		 goto _swBrk_0($27)
check.c(l134:s233:k258:d0:s0)	 _case_0_57($24) :
check.c(l135:s234:k259:d0:s0)		iTemp171 [k196 lr234:235 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l135:s235:k260:d0:s0)		iTemp172 [k197 lr235:236 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp171 [k196 lr234:235 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l135:s236:k261:d0:s0)		iTemp173 [k198 lr236:237 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp172 [k197 lr235:236 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l135:s237:k262:d0:s0)		iTemp174 [k199 lr237:239 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp173 [k198 lr236:237 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l135:s238:k329:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l135:s239:k330:d0:s0)		send iTemp174 [k199 lr237:239 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l135:s240:k331:d0:s0)		iTemp175 [k200 lr240:248 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l135:s241:k264:d0:s0)		iTemp176 [k201 lr241:242 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l135:s242:k265:d0:s0)		iTemp177 [k202 lr242:243 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp176 [k201 lr241:242 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l135:s243:k266:d0:s0)		iTemp178 [k203 lr243:244 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp177 [k202 lr242:243 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l135:s244:k267:d0:s0)		iTemp179 [k204 lr244:246 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp178 [k203 lr243:244 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l135:s245:k332:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l135:s246:k333:d0:s0)		send iTemp179 [k204 lr244:246 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l135:s247:k334:d0:s0)		iTemp180 [k205 lr247:248 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l135:s248:k269:d0:s0)		iTemp181 [k206 lr248:253 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp175 [k200 lr240:248 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp180 [k205 lr247:248 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l136:s249:k270:d0:s0)		iTemp182 [k207 lr249:250 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x00 r0x01 r0x02 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l136:s250:k271:d0:s0)		iTemp183 [k208 lr250:251 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x00 ] = @[iTemp182 [k207 lr249:250 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x00 r0x01 r0x02 ] + 0x0 {const-unsigned-char literal}]
check.c(l136:s251:k272:d0:s0)		iTemp184 [k209 lr251:252 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x00 r0x01 ] = (int fixed)iTemp183 [k208 lr250:251 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x00 ]
check.c(l136:s252:k273:d0:s0)		iTemp185 [k210 lr252:253 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x00 r0x01 ] = iTemp184 [k209 lr251:252 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x00 r0x01 ] - 0x30 {int literal}
check.c(l136:s253:k274:d0:s0)		_sys_temp_max [k160 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed} = iTemp181 [k206 lr248:253 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp185 [k210 lr252:253 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x00 r0x01 ]
check.c(l137:s254:k277:d0:s0)		 goto _swBrk_0($27)
check.c(l138:s255:k278:d0:s0)	 _case_0_82($25) :
check.c(l139:s256:k279:d0:s0)		iTemp1 [k4 lr4:258 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _check_comando_ret_1_74}[r0x03 ] := 0x0 {const-char literal}
check.c(l143:s257:k283:d0:s0)	 _swBrk_0($27) :
check.c(l145:s258:k284:d0:s0)		ret iTemp1 [k4 lr4:258 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _check_comando_ret_1_74}[r0x03 ]
check.c(l145:s259:k285:d0:s0)	 _return($32) :
check.c(l145:s260:k286:d0:s0)		eproc _check_comando [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char function ( char generic* fixed) fixed}

----------------------------------------------------------------
Basic Block _eBBlock38 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 6 : bbnum = 5 1st iCode = 16 , last iCode = 17
visited 0 : hasFcall = 0

defines bitVector :bitvector Size = 299 bSize = 38
Bits on { (16) }

local defines bitVector :bitvector Size = 299 bSize = 38
Bits on { (16) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (3) (5) (6) (8) (10) (12) (14) }

outDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (3) (5) (6) (8) (10) (12) (14) (16) }

usesDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (5) (16) }

----------------------------------------------------------------
check.c(l79:s16:k16:d0:s0)		iTemp9 [k13 lr16:17 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp3 [k7 lr5:24 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] == 0x36 {const-char literal}
check.c(l79:s17:k17:d0:s0)		if iTemp9 [k13 lr16:17 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _case_0_54($21)
check.c(l79:s18:k18:d0:s0)		iTemp10 [k14 lr18:19 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp3 [k7 lr5:24 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] == 0x37 {const-char literal}
check.c(l79:s19:k19:d0:s0)		if iTemp10 [k14 lr18:19 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _case_0_55($22)
check.c(l79:s20:k20:d0:s0)		iTemp11 [k15 lr20:21 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp3 [k7 lr5:24 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] == 0x38 {const-char literal}
check.c(l79:s21:k21:d0:s0)		if iTemp11 [k15 lr20:21 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _case_0_56($23)
check.c(l79:s22:k22:d0:s0)		iTemp12 [k16 lr22:23 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp3 [k7 lr5:24 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] == 0x39 {const-char literal}
check.c(l79:s23:k23:d0:s0)		if iTemp12 [k16 lr22:23 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _case_0_57($24)
check.c(l79:s24:k24:d0:s0)		iTemp13 [k17 lr24:25 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp3 [k7 lr5:24 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] == 0x52 {const-char literal}
check.c(l79:s25:k25:d0:s0)		if iTemp13 [k17 lr24:25 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _case_0_82($25)
check.c(l79:s26:k26:d0:s0)		 goto _swBrk_0($27)
check.c(l80:s27:k27:d0:s0)	 _case_0_49($1) :
check.c(l81:s28:k28:d0:s0)		iTemp15 [k20 lr28:29 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l81:s29:k29:d0:s0)		iTemp16 [k21 lr29:30 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp15 [k20 lr28:29 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l81:s30:k30:d0:s0)		iTemp14 [k18 lr30:53 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_led_num_1_74}[r0x04 ] = iTemp16 [k21 lr29:30 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] - 0x30 {char literal}
check.c(l82:s31:k32:d0:s0)		if iTemp14 [k18 lr30:53 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_led_num_1_74}[r0x04 ] != 0 goto _iffalse_3($3)
check.c(l83:s32:k35:d0:s0)		iTemp18 [k24 lr32:33 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x05 r0x06 r0x07 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l83:s33:k36:d0:s0)		iTemp19 [k25 lr33:34 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = @[iTemp18 [k24 lr32:33 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x05 r0x06 r0x07 ] + 0x0 {const-unsigned-char literal}]
check.c(l83:s34:k37:d0:s0)		iTemp20 [k26 lr34:36 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = iTemp19 [k25 lr33:34 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] - 0x30 {char literal}
check.c(l83:s35:k38:d0:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
check.c(l83:s36:k39:d0:s0)		send iTemp20 [k26 lr34:36 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ]{argreg = 2}
check.c(l83:s37:k40:d0:s0)		iTemp21 [k29 lr37:37 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _led [k23 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( unsigned-char fixed, unsigned-char fixed) fixed}
check.c(l83:s38:k41:d0:s0)		 goto _swBrk_0($27)
check.c(l83:s39:k42:d0:s0)	 _iffalse_3($3) :
check.c(l85:s40:k43:d0:s0)		iTemp23 [k32 lr40:41 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x05 r0x06 r0x07 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l85:s41:k44:d0:s0)		iTemp24 [k33 lr41:42 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = @[iTemp23 [k32 lr40:41 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x05 r0x06 r0x07 ] + 0x0 {const-unsigned-char literal}]
check.c(l85:s42:k45:d0:s0)		iTemp25 [k34 lr42:43 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = iTemp24 [k33 lr41:42 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] - 0x30 {char literal}
check.c(l85:s43:k46:d0:s0)		iTemp26 [k35 lr43:48 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = iTemp25 [k34 lr42:43 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] * 0x64 {const-unsigned-char literal}
check.c(l85:s44:k47:d0:s0)		iTemp27 [k36 lr44:45 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l85:s45:k48:d0:s0)		iTemp28 [k37 lr45:46 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp27 [k36 lr44:45 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l85:s46:k49:d0:s0)		iTemp29 [k38 lr46:47 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = iTemp28 [k37 lr45:46 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] - 0x30 {char literal}
check.c(l85:s47:k50:d0:s0)		iTemp30 [k39 lr47:48 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = iTemp29 [k38 lr46:47 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] * 0xa {const-unsigned-char literal}
check.c(l85:s48:k51:d0:s0)		iTemp31 [k40 lr48:51 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = iTemp26 [k35 lr43:48 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] + iTemp30 [k39 lr47:48 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l86:s49:k52:d0:s0)		iTemp32 [k41 lr49:50 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x4 {const-unsigned-char literal}
check.c(l86:s50:k53:d0:s0)		iTemp33 [k42 lr50:51 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp32 [k41 lr49:50 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l86:s51:k54:d0:s0)		iTemp34 [k43 lr51:52 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = iTemp31 [k40 lr48:51 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] + iTemp33 [k42 lr50:51 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l86:s52:k55:d0:s0)		iTemp22 [k30 lr52:55 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_pwm_1_74}[r0x05 ] = iTemp34 [k43 lr51:52 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] - 0x30 {char literal}
check.c(l87:s53:k57:d0:s0)		iTemp36 [k46 lr53:55 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = iTemp14 [k18 lr30:53 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_led_num_1_74}[r0x04 ] - 0x1 {char literal}
check.c(l87:s54:k58:d0:s0)		send iTemp36 [k46 lr53:55 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]{argreg = 1}
check.c(l87:s55:k59:d0:s0)		send iTemp22 [k30 lr52:55 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_pwm_1_74}[r0x05 ]{argreg = 2}
check.c(l87:s56:k60:d0:s0)		iTemp37 [k49 lr56:56 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _set_pwm [k45 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( unsigned-char fixed, unsigned-char fixed) fixed}
check.c(l89:s57:k62:d0:s0)		 goto _swBrk_0($27)
check.c(l90:s58:k63:d0:s0)	 _case_0_50($5) :
check.c(l91:s59:k64:d0:s0)		iTemp38 [k51 lr59:59 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _limpa_lcd [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( ) fixed}
check.c(l94:s60:k65:d0:s0)		iTemp39 [k53 lr60:88 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] = &[_check_comando_linha_1_1_74 [k52 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [17] fixed}]
check.c(l94:s61:k66:d0:s0)		iTemp40 [k54 lr61:62 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] = iTemp39 [k53 lr60:88 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] + 0x10 {const-unsigned-char literal}
check.c(l94:s62:k67:d0:s0)		*(iTemp40 [k54 lr61:62 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat]) := 0x0 {const-char literal}
check.c(l95:s63:k68:d0:s0)		iTemp41 [k56 lr63:93 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] = &[_check_comando_linha_2_1_74 [k55 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [17] fixed}]
check.c(l95:s64:k69:d0:s0)		iTemp42 [k57 lr64:65 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] = iTemp41 [k56 lr63:93 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] + 0x10 {const-unsigned-char literal}
check.c(l95:s65:k70:d0:s0)		*(iTemp42 [k57 lr64:65 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat]) := 0x0 {const-char literal}
check.c(l96:s66:k289:d0:s0)		iTemp50 [k66 lr66:76 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] := 0x1 {const-char literal}
check.c(l96:s68:k72:d1:s0)	 _forbody_1($28) :
check.c(l97:s69:k74:d1:s0)		iTemp45 [k61 lr69:70 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = iTemp50 [k66 lr66:76 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] - 0x1 {char literal}
check.c(l97:s70:k75:d1:s0)		iTemp46 [k62 lr70:73 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x05 r0x06 ] = iTemp39 [k53 lr60:88 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] + iTemp45 [k61 lr69:70 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ]
check.c(l97:s71:k76:d1:s0)		iTemp47 [k63 lr71:72 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x07 r0x08 r0x09 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + iTemp50 [k66 lr66:76 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ]
check.c(l97:s72:k77:d1:s0)		iTemp48 [k64 lr72:73 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x07 ] = @[iTemp47 [k63 lr71:72 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x07 r0x08 r0x09 ] + 0x0 {const-unsigned-char literal}]
check.c(l97:s73:k78:d1:s0)		*(iTemp46 [k62 lr70:73 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x05 r0x06 ]) := iTemp48 [k64 lr72:73 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x07 ]
check.c(l96:s74:k81:d1:s0)		iTemp50 [k66 lr66:76 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] = iTemp50 [k66 lr66:76 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] + 0x1 {const-unsigned-char literal}
check.c(l96:s75:k83:d1:s0)		iTemp51 [k67 lr75:76 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp50 [k66 lr66:76 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] < 0x11 {const-char literal}
check.c(l96:s76:k84:d1:s0)		if iTemp51 [k67 lr75:76 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forbody_1($28)
check.c(l98:s77:k292:d0:s0)		iTemp58 [k74 lr77:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] := 0x11 {const-char literal}
check.c(l98:s79:k88:d1:s0)	 _forbody_2($30) :
check.c(l99:s80:k90:d1:s0)		iTemp53 [k69 lr80:81 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = iTemp58 [k74 lr77:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] - 0x11 {char literal}
check.c(l99:s81:k91:d1:s0)		iTemp54 [k70 lr81:84 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x05 r0x06 ] = iTemp41 [k56 lr63:93 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] + iTemp53 [k69 lr80:81 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ]
check.c(l99:s82:k92:d1:s0)		iTemp55 [k71 lr82:83 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x07 r0x08 r0x09 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + iTemp58 [k74 lr77:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ]
check.c(l99:s83:k93:d1:s0)		iTemp56 [k72 lr83:84 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x07 ] = @[iTemp55 [k71 lr82:83 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x07 r0x08 r0x09 ] + 0x0 {const-unsigned-char literal}]
check.c(l99:s84:k94:d1:s0)		*(iTemp54 [k70 lr81:84 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x05 r0x06 ]) := iTemp56 [k72 lr83:84 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x07 ]
check.c(l98:s85:k97:d1:s0)		iTemp58 [k74 lr77:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] = iTemp58 [k74 lr77:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] + 0x1 {const-unsigned-char literal}
check.c(l98:s86:k99:d1:s0)		iTemp59 [k75 lr86:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp58 [k74 lr77:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] < 0x21 {const-char literal}
check.c(l98:s87:k100:d1:s0)		if iTemp59 [k75 lr86:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forbody_2($30)
check.c(l100:s88:k103:d0:s0)		iTemp60 [k77 lr88:89 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] := iTemp39 [k53 lr60:88 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat]
check.c(l100:s89:k104:d0:s0)		iTemp61 [k78 lr89:90 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = (char generic* fixed)iTemp60 [k77 lr88:89 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat]
check.c(l100:s90:k105:d0:s0)		send iTemp61 [k78 lr89:90 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ]{argreg = 1}
check.c(l100:s91:k106:d0:s0)		iTemp62 [k80 lr91:91 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _print_lcd_string [k76 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char generic* fixed) fixed}
check.c(l101:s92:k107:d0:s0)		iTemp63 [k82 lr92:92 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _print_lcd_ln [k81 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( ) fixed}
check.c(l102:s93:k108:d0:s0)		iTemp64 [k83 lr93:94 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] := iTemp41 [k56 lr63:93 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat]
check.c(l102:s94:k109:d0:s0)		iTemp65 [k84 lr94:95 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = (char generic* fixed)iTemp64 [k83 lr93:94 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat]
check.c(l102:s95:k110:d0:s0)		send iTemp65 [k84 lr94:95 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ]{argreg = 1}
check.c(l102:s96:k111:d0:s0)		iTemp66 [k85 lr96:96 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _print_lcd_string [k76 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char generic* fixed) fixed}
check.c(l103:s97:k112:d0:s0)		iTemp1 [k4 lr4:258 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _check_comando_ret_1_74}[r0x03 ] := 0x34 {const-unsigned-char literal}
check.c(l104:s98:k113:d0:s0)		 goto _swBrk_0($27)
check.c(l105:s99:k114:d0:s0)	 _case_0_51($8) :
check.c(l106:s100:k115:d0:s0)		iTemp67 [k86 lr100:101 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l106:s101:k116:d0:s0)		iTemp68 [k87 lr101:102 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp67 [k86 lr100:101 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l106:s102:k117:d0:s0)		iTemp69 [k88 lr102:103 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp68 [k87 lr101:102 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l106:s103:k118:d0:s0)		iTemp70 [k89 lr103:109 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp69 [k88 lr102:103 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l106:s104:k119:d0:s0)		iTemp71 [k90 lr104:105 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp70 [k89 lr103:109 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] == 0x1 {int literal}
check.c(l106:s105:k120:d0:s0)		if iTemp71 [k90 lr104:105 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} == 0 goto _iffalse_5($12)
check.c(l107:s106:k124:d0:s0)		_hab_alarme [k91 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed} := 0x1 {const-unsigned-char literal}
check.c(l107:s107:k125:d0:s0)		 goto _swBrk_0($27)
check.c(l107:s108:k126:d0:s0)	 _iffalse_5($12) :
check.c(l108:s109:k131:d0:s0)		if iTemp70 [k89 lr103:109 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] != 0 goto _swBrk_0($27)
check.c(l109:s110:k135:d0:s0)		_hab_alarme [k91 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed} := 0x0 {const-unsigned-char literal}
check.c(l110:s111:k138:d0:s0)		 goto _swBrk_0($27)
check.c(l111:s112:k139:d0:s0)	 _case_0_52($14) :
check.c(l112:s113:k140:d0:s0)		iTemp78 [k98 lr113:114 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l112:s114:k141:d0:s0)		iTemp79 [k99 lr114:115 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp78 [k98 lr113:114 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l112:s115:k142:d0:s0)		iTemp80 [k100 lr115:116 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp79 [k99 lr114:115 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l112:s116:k143:d0:s0)		iTemp81 [k101 lr116:122 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp80 [k100 lr115:116 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l112:s117:k144:d0:s0)		iTemp82 [k102 lr117:118 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp81 [k101 lr116:122 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] == 0x1 {int literal}
check.c(l112:s118:k145:d0:s0)		if iTemp82 [k102 lr117:118 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} == 0 goto _iffalse_7($18)
check.c(l113:s119:k149:d0:s0)		_hab_sensor [k103 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed} := 0x0 {const-unsigned-char literal}
check.c(l113:s120:k150:d0:s0)		 goto _swBrk_0($27)
check.c(l113:s121:k151:d0:s0)	 _iffalse_7($18) :
check.c(l114:s122:k156:d0:s0)		if iTemp81 [k101 lr116:122 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] != 0 goto _swBrk_0($27)
check.c(l115:s123:k160:d0:s0)		_hab_sensor [k103 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed} := 0x2 {const-unsigned-char literal}
check.c(l116:s124:k163:d0:s0)		 goto _swBrk_0($27)
check.c(l117:s125:k164:d0:s0)	 _case_0_53($20) :
check.c(l118:s126:k165:d0:s0)		iTemp89 [k111 lr126:127 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{unsigned-long-int near* fixed}[remat] = &[_sys_timer_pool [k110 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int [2] fixed}]
check.c(l118:s127:k166:d0:s0)		iTemp90 [k112 lr127:165 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{unsigned-long-int near* fixed}[remat] = iTemp89 [k111 lr126:127 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{unsigned-long-int near* fixed}[remat] + 0x4 {unsigned-char literal}
check.c(l118:s128:k167:d0:s0)		iTemp91 [k113 lr128:129 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l118:s129:k168:d0:s0)		iTemp92 [k114 lr129:130 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp91 [k113 lr128:129 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l118:s130:k169:d0:s0)		iTemp93 [k115 lr130:131 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp92 [k114 lr129:130 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l118:s131:k170:d0:s0)		iTemp94 [k116 lr131:133 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp93 [k115 lr130:131 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l118:s132:k299:d0:s0)		send 0x2710 {const-int literal}{argreg = 1}
check.c(l118:s133:k300:d0:s0)		send iTemp94 [k116 lr131:133 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l118:s134:k301:d0:s0)		iTemp95 [k117 lr134:142 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l118:s135:k172:d0:s0)		iTemp96 [k118 lr135:136 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l118:s136:k173:d0:s0)		iTemp97 [k119 lr136:137 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp96 [k118 lr135:136 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l118:s137:k174:d0:s0)		iTemp98 [k120 lr137:138 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp97 [k119 lr136:137 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l118:s138:k175:d0:s0)		iTemp99 [k121 lr138:140 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp98 [k120 lr137:138 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l118:s139:k302:d0:s0)		send 0x3e8 {const-int literal}{argreg = 1}
check.c(l118:s140:k303:d0:s0)		send iTemp99 [k121 lr138:140 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l118:s141:k304:d0:s0)		iTemp100 [k122 lr141:142 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l118:s142:k177:d0:s0)		iTemp101 [k123 lr142:150 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp95 [k117 lr134:142 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp100 [k122 lr141:142 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l119:s143:k178:d0:s0)		iTemp102 [k124 lr143:144 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l119:s144:k179:d0:s0)		iTemp103 [k125 lr144:145 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp102 [k124 lr143:144 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l119:s145:k180:d0:s0)		iTemp104 [k126 lr145:146 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp103 [k125 lr144:145 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l119:s146:k181:d0:s0)		iTemp105 [k127 lr146:148 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp104 [k126 lr145:146 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l119:s147:k305:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l119:s148:k306:d0:s0)		send iTemp105 [k127 lr146:148 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l119:s149:k307:d0:s0)		iTemp106 [k128 lr149:150 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l119:s150:k183:d0:s0)		iTemp107 [k129 lr150:158 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp101 [k123 lr142:150 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp106 [k128 lr149:150 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l119:s151:k184:d0:s0)		iTemp108 [k130 lr151:152 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x4 {const-unsigned-char literal}
check.c(l119:s152:k185:d0:s0)		iTemp109 [k131 lr152:153 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp108 [k130 lr151:152 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l119:s153:k186:d0:s0)		iTemp110 [k132 lr153:154 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp109 [k131 lr152:153 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l119:s154:k187:d0:s0)		iTemp111 [k133 lr154:156 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp110 [k132 lr153:154 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l119:s155:k308:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l119:s156:k309:d0:s0)		send iTemp111 [k133 lr154:156 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l119:s157:k310:d0:s0)		iTemp112 [k134 lr157:158 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l119:s158:k189:d0:s0)		iTemp113 [k135 lr158:162 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp107 [k129 lr150:158 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp112 [k134 lr157:158 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l120:s159:k190:d0:s0)		iTemp114 [k136 lr159:160 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x5 {const-unsigned-char literal}
check.c(l120:s160:k191:d0:s0)		iTemp115 [k137 lr160:161 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp114 [k136 lr159:160 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l120:s161:k192:d0:s0)		iTemp116 [k138 lr161:162 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp115 [k137 lr160:161 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l120:s162:k193:d0:s0)		iTemp117 [k139 lr162:163 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = iTemp113 [k135 lr158:162 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp116 [k138 lr161:162 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ]
check.c(l120:s163:k194:d0:s0)		iTemp118 [k140 lr163:164 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp117 [k139 lr162:163 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l120:s164:k195:d0:s0)		iTemp119 [k141 lr164:165 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x04 r0x05 r0x06 r0x07 ] = (unsigned-long-int fixed)iTemp118 [k140 lr163:164 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]
check.c(l120:s165:k196:d0:s0)		*(iTemp90 [k112 lr127:165 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{unsigned-long-int near* fixed}[remat]) := iTemp119 [k141 lr164:165 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x04 r0x05 r0x06 r0x07 ]
check.c(l121:s166:k197:d0:s0)		 goto _swBrk_0($27)
check.c(l122:s167:k198:d0:s0)	 _case_0_54($21) :
check.c(l123:s168:k199:d0:s0)		iTemp120 [k143 lr168:169 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l123:s169:k200:d0:s0)		iTemp121 [k144 lr169:170 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp120 [k143 lr168:169 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l123:s170:k201:d0:s0)		iTemp122 [k145 lr170:171 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp121 [k144 lr169:170 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l123:s171:k202:d0:s0)		iTemp123 [k146 lr171:173 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp122 [k145 lr170:171 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l123:s172:k311:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l123:s173:k312:d0:s0)		send iTemp123 [k146 lr171:173 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l123:s174:k313:d0:s0)		iTemp124 [k147 lr174:182 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l123:s175:k204:d0:s0)		iTemp125 [k148 lr175:176 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l123:s176:k205:d0:s0)		iTemp126 [k149 lr176:177 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp125 [k148 lr175:176 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l123:s177:k206:d0:s0)		iTemp127 [k150 lr177:178 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp126 [k149 lr176:177 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l123:s178:k207:d0:s0)		iTemp128 [k151 lr178:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp127 [k150 lr177:178 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l123:s179:k314:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l123:s180:k315:d0:s0)		send iTemp128 [k151 lr178:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l123:s181:k316:d0:s0)		iTemp129 [k152 lr181:182 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l123:s182:k209:d0:s0)		iTemp130 [k153 lr182:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp124 [k147 lr174:182 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp129 [k152 lr181:182 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l124:s183:k210:d0:s0)		iTemp131 [k154 lr183:184 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l124:s184:k211:d0:s0)		iTemp132 [k155 lr184:185 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp131 [k154 lr183:184 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l124:s185:k212:d0:s0)		iTemp133 [k156 lr185:186 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp132 [k155 lr184:185 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l124:s186:k213:d0:s0)		iTemp134 [k157 lr186:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp133 [k156 lr185:186 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l124:s187:k214:d0:s0)		_sys_temp_min [k142 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed} = iTemp130 [k153 lr182:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp134 [k157 lr186:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l125:s188:k217:d0:s0)		 goto _swBrk_0($27)
check.c(l126:s189:k218:d0:s0)	 _case_0_55($22) :
check.c(l127:s190:k219:d0:s0)		iTemp137 [k161 lr190:191 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l127:s191:k220:d0:s0)		iTemp138 [k162 lr191:192 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp137 [k161 lr190:191 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l127:s192:k221:d0:s0)		iTemp139 [k163 lr192:193 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp138 [k162 lr191:192 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l127:s193:k222:d0:s0)		iTemp140 [k164 lr193:195 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp139 [k163 lr192:193 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l127:s194:k317:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l127:s195:k318:d0:s0)		send iTemp140 [k164 lr193:195 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l127:s196:k319:d0:s0)		iTemp141 [k165 lr196:204 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l127:s197:k224:d0:s0)		iTemp142 [k166 lr197:198 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l127:s198:k225:d0:s0)		iTemp143 [k167 lr198:199 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp142 [k166 lr197:198 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l127:s199:k226:d0:s0)		iTemp144 [k168 lr199:200 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp143 [k167 lr198:199 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l127:s200:k227:d0:s0)		iTemp145 [k169 lr200:202 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp144 [k168 lr199:200 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l127:s201:k320:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l127:s202:k321:d0:s0)		send iTemp145 [k169 lr200:202 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l127:s203:k322:d0:s0)		iTemp146 [k170 lr203:204 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l127:s204:k229:d0:s0)		iTemp147 [k171 lr204:209 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp141 [k165 lr196:204 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp146 [k170 lr203:204 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l128:s205:k230:d0:s0)		iTemp148 [k172 lr205:206 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l128:s206:k231:d0:s0)		iTemp149 [k173 lr206:207 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp148 [k172 lr205:206 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l128:s207:k232:d0:s0)		iTemp150 [k174 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp149 [k173 lr206:207 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l128:s208:k233:d0:s0)		iTemp151 [k175 lr208:209 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp150 [k174 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l128:s209:k234:d0:s0)		_sys_temp_max [k160 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed} = iTemp147 [k171 lr204:209 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp151 [k175 lr208:209 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l129:s210:k237:d0:s0)		 goto _swBrk_0($27)
check.c(l130:s211:k238:d0:s0)	 _case_0_56($23) :
check.c(l131:s212:k239:d0:s0)		iTemp154 [k179 lr212:213 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l131:s213:k240:d0:s0)		iTemp155 [k180 lr213:214 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp154 [k179 lr212:213 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l131:s214:k241:d0:s0)		iTemp156 [k181 lr214:215 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp155 [k180 lr213:214 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l131:s215:k242:d0:s0)		iTemp157 [k182 lr215:217 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp156 [k181 lr214:215 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l131:s216:k323:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l131:s217:k324:d0:s0)		send iTemp157 [k182 lr215:217 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l131:s218:k325:d0:s0)		iTemp158 [k183 lr218:226 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l131:s219:k244:d0:s0)		iTemp159 [k184 lr219:220 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l131:s220:k245:d0:s0)		iTemp160 [k185 lr220:221 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp159 [k184 lr219:220 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l131:s221:k246:d0:s0)		iTemp161 [k186 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp160 [k185 lr220:221 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l131:s222:k247:d0:s0)		iTemp162 [k187 lr222:224 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp161 [k186 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l131:s223:k326:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l131:s224:k327:d0:s0)		send iTemp162 [k187 lr222:224 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l131:s225:k328:d0:s0)		iTemp163 [k188 lr225:226 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l131:s226:k249:d0:s0)		iTemp164 [k189 lr226:231 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp158 [k183 lr218:226 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp163 [k188 lr225:226 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l132:s227:k250:d0:s0)		iTemp165 [k190 lr227:228 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l132:s228:k251:d0:s0)		iTemp166 [k191 lr228:229 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp165 [k190 lr227:228 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l132:s229:k252:d0:s0)		iTemp167 [k192 lr229:230 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp166 [k191 lr228:229 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l132:s230:k253:d0:s0)		iTemp168 [k193 lr230:231 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp167 [k192 lr229:230 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l132:s231:k254:d0:s0)		_sys_lumi_min [k178 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed} = iTemp164 [k189 lr226:231 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp168 [k193 lr230:231 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l133:s232:k257:d0:s0)		 goto _swBrk_0($27)
check.c(l134:s233:k258:d0:s0)	 _case_0_57($24) :
check.c(l135:s234:k259:d0:s0)		iTemp171 [k196 lr234:235 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l135:s235:k260:d0:s0)		iTemp172 [k197 lr235:236 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp171 [k196 lr234:235 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l135:s236:k261:d0:s0)		iTemp173 [k198 lr236:237 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp172 [k197 lr235:236 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l135:s237:k262:d0:s0)		iTemp174 [k199 lr237:239 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp173 [k198 lr236:237 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l135:s238:k329:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l135:s239:k330:d0:s0)		send iTemp174 [k199 lr237:239 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l135:s240:k331:d0:s0)		iTemp175 [k200 lr240:248 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l135:s241:k264:d0:s0)		iTemp176 [k201 lr241:242 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l135:s242:k265:d0:s0)		iTemp177 [k202 lr242:243 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp176 [k201 lr241:242 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l135:s243:k266:d0:s0)		iTemp178 [k203 lr243:244 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp177 [k202 lr242:243 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l135:s244:k267:d0:s0)		iTemp179 [k204 lr244:246 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp178 [k203 lr243:244 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l135:s245:k332:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l135:s246:k333:d0:s0)		send iTemp179 [k204 lr244:246 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l135:s247:k334:d0:s0)		iTemp180 [k205 lr247:248 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l135:s248:k269:d0:s0)		iTemp181 [k206 lr248:253 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp175 [k200 lr240:248 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp180 [k205 lr247:248 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l136:s249:k270:d0:s0)		iTemp182 [k207 lr249:250 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x00 r0x01 r0x02 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l136:s250:k271:d0:s0)		iTemp183 [k208 lr250:251 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x00 ] = @[iTemp182 [k207 lr249:250 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x00 r0x01 r0x02 ] + 0x0 {const-unsigned-char literal}]
check.c(l136:s251:k272:d0:s0)		iTemp184 [k209 lr251:252 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x00 r0x01 ] = (int fixed)iTemp183 [k208 lr250:251 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x00 ]
check.c(l136:s252:k273:d0:s0)		iTemp185 [k210 lr252:253 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x00 r0x01 ] = iTemp184 [k209 lr251:252 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x00 r0x01 ] - 0x30 {int literal}
check.c(l136:s253:k274:d0:s0)		_sys_temp_max [k160 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed} = iTemp181 [k206 lr248:253 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp185 [k210 lr252:253 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x00 r0x01 ]
check.c(l137:s254:k277:d0:s0)		 goto _swBrk_0($27)
check.c(l138:s255:k278:d0:s0)	 _case_0_82($25) :
check.c(l139:s256:k279:d0:s0)		iTemp1 [k4 lr4:258 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _check_comando_ret_1_74}[r0x03 ] := 0x0 {const-char literal}
check.c(l143:s257:k283:d0:s0)	 _swBrk_0($27) :
check.c(l145:s258:k284:d0:s0)		ret iTemp1 [k4 lr4:258 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _check_comando_ret_1_74}[r0x03 ]
check.c(l145:s259:k285:d0:s0)	 _return($32) :
check.c(l145:s260:k286:d0:s0)		eproc _check_comando [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char function ( char generic* fixed) fixed}

----------------------------------------------------------------
Basic Block _eBBlock39 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 7 : bbnum = 6 1st iCode = 18 , last iCode = 19
visited 0 : hasFcall = 0

defines bitVector :bitvector Size = 299 bSize = 38
Bits on { (18) }

local defines bitVector :bitvector Size = 299 bSize = 38
Bits on { (18) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (3) (5) (6) (8) (10) (12) (14) (16) }

outDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (3) (5) (6) (8) (10) (12) (14) (16) (18) }

usesDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (5) (18) }

----------------------------------------------------------------
check.c(l79:s18:k18:d0:s0)		iTemp10 [k14 lr18:19 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp3 [k7 lr5:24 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] == 0x37 {const-char literal}
check.c(l79:s19:k19:d0:s0)		if iTemp10 [k14 lr18:19 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _case_0_55($22)
check.c(l79:s20:k20:d0:s0)		iTemp11 [k15 lr20:21 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp3 [k7 lr5:24 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] == 0x38 {const-char literal}
check.c(l79:s21:k21:d0:s0)		if iTemp11 [k15 lr20:21 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _case_0_56($23)
check.c(l79:s22:k22:d0:s0)		iTemp12 [k16 lr22:23 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp3 [k7 lr5:24 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] == 0x39 {const-char literal}
check.c(l79:s23:k23:d0:s0)		if iTemp12 [k16 lr22:23 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _case_0_57($24)
check.c(l79:s24:k24:d0:s0)		iTemp13 [k17 lr24:25 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp3 [k7 lr5:24 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] == 0x52 {const-char literal}
check.c(l79:s25:k25:d0:s0)		if iTemp13 [k17 lr24:25 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _case_0_82($25)
check.c(l79:s26:k26:d0:s0)		 goto _swBrk_0($27)
check.c(l80:s27:k27:d0:s0)	 _case_0_49($1) :
check.c(l81:s28:k28:d0:s0)		iTemp15 [k20 lr28:29 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l81:s29:k29:d0:s0)		iTemp16 [k21 lr29:30 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp15 [k20 lr28:29 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l81:s30:k30:d0:s0)		iTemp14 [k18 lr30:53 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_led_num_1_74}[r0x04 ] = iTemp16 [k21 lr29:30 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] - 0x30 {char literal}
check.c(l82:s31:k32:d0:s0)		if iTemp14 [k18 lr30:53 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_led_num_1_74}[r0x04 ] != 0 goto _iffalse_3($3)
check.c(l83:s32:k35:d0:s0)		iTemp18 [k24 lr32:33 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x05 r0x06 r0x07 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l83:s33:k36:d0:s0)		iTemp19 [k25 lr33:34 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = @[iTemp18 [k24 lr32:33 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x05 r0x06 r0x07 ] + 0x0 {const-unsigned-char literal}]
check.c(l83:s34:k37:d0:s0)		iTemp20 [k26 lr34:36 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = iTemp19 [k25 lr33:34 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] - 0x30 {char literal}
check.c(l83:s35:k38:d0:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
check.c(l83:s36:k39:d0:s0)		send iTemp20 [k26 lr34:36 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ]{argreg = 2}
check.c(l83:s37:k40:d0:s0)		iTemp21 [k29 lr37:37 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _led [k23 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( unsigned-char fixed, unsigned-char fixed) fixed}
check.c(l83:s38:k41:d0:s0)		 goto _swBrk_0($27)
check.c(l83:s39:k42:d0:s0)	 _iffalse_3($3) :
check.c(l85:s40:k43:d0:s0)		iTemp23 [k32 lr40:41 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x05 r0x06 r0x07 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l85:s41:k44:d0:s0)		iTemp24 [k33 lr41:42 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = @[iTemp23 [k32 lr40:41 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x05 r0x06 r0x07 ] + 0x0 {const-unsigned-char literal}]
check.c(l85:s42:k45:d0:s0)		iTemp25 [k34 lr42:43 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = iTemp24 [k33 lr41:42 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] - 0x30 {char literal}
check.c(l85:s43:k46:d0:s0)		iTemp26 [k35 lr43:48 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = iTemp25 [k34 lr42:43 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] * 0x64 {const-unsigned-char literal}
check.c(l85:s44:k47:d0:s0)		iTemp27 [k36 lr44:45 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l85:s45:k48:d0:s0)		iTemp28 [k37 lr45:46 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp27 [k36 lr44:45 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l85:s46:k49:d0:s0)		iTemp29 [k38 lr46:47 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = iTemp28 [k37 lr45:46 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] - 0x30 {char literal}
check.c(l85:s47:k50:d0:s0)		iTemp30 [k39 lr47:48 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = iTemp29 [k38 lr46:47 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] * 0xa {const-unsigned-char literal}
check.c(l85:s48:k51:d0:s0)		iTemp31 [k40 lr48:51 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = iTemp26 [k35 lr43:48 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] + iTemp30 [k39 lr47:48 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l86:s49:k52:d0:s0)		iTemp32 [k41 lr49:50 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x4 {const-unsigned-char literal}
check.c(l86:s50:k53:d0:s0)		iTemp33 [k42 lr50:51 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp32 [k41 lr49:50 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l86:s51:k54:d0:s0)		iTemp34 [k43 lr51:52 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = iTemp31 [k40 lr48:51 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] + iTemp33 [k42 lr50:51 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l86:s52:k55:d0:s0)		iTemp22 [k30 lr52:55 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_pwm_1_74}[r0x05 ] = iTemp34 [k43 lr51:52 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] - 0x30 {char literal}
check.c(l87:s53:k57:d0:s0)		iTemp36 [k46 lr53:55 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = iTemp14 [k18 lr30:53 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_led_num_1_74}[r0x04 ] - 0x1 {char literal}
check.c(l87:s54:k58:d0:s0)		send iTemp36 [k46 lr53:55 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]{argreg = 1}
check.c(l87:s55:k59:d0:s0)		send iTemp22 [k30 lr52:55 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_pwm_1_74}[r0x05 ]{argreg = 2}
check.c(l87:s56:k60:d0:s0)		iTemp37 [k49 lr56:56 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _set_pwm [k45 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( unsigned-char fixed, unsigned-char fixed) fixed}
check.c(l89:s57:k62:d0:s0)		 goto _swBrk_0($27)
check.c(l90:s58:k63:d0:s0)	 _case_0_50($5) :
check.c(l91:s59:k64:d0:s0)		iTemp38 [k51 lr59:59 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _limpa_lcd [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( ) fixed}
check.c(l94:s60:k65:d0:s0)		iTemp39 [k53 lr60:88 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] = &[_check_comando_linha_1_1_74 [k52 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [17] fixed}]
check.c(l94:s61:k66:d0:s0)		iTemp40 [k54 lr61:62 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] = iTemp39 [k53 lr60:88 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] + 0x10 {const-unsigned-char literal}
check.c(l94:s62:k67:d0:s0)		*(iTemp40 [k54 lr61:62 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat]) := 0x0 {const-char literal}
check.c(l95:s63:k68:d0:s0)		iTemp41 [k56 lr63:93 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] = &[_check_comando_linha_2_1_74 [k55 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [17] fixed}]
check.c(l95:s64:k69:d0:s0)		iTemp42 [k57 lr64:65 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] = iTemp41 [k56 lr63:93 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] + 0x10 {const-unsigned-char literal}
check.c(l95:s65:k70:d0:s0)		*(iTemp42 [k57 lr64:65 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat]) := 0x0 {const-char literal}
check.c(l96:s66:k289:d0:s0)		iTemp50 [k66 lr66:76 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] := 0x1 {const-char literal}
check.c(l96:s68:k72:d1:s0)	 _forbody_1($28) :
check.c(l97:s69:k74:d1:s0)		iTemp45 [k61 lr69:70 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = iTemp50 [k66 lr66:76 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] - 0x1 {char literal}
check.c(l97:s70:k75:d1:s0)		iTemp46 [k62 lr70:73 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x05 r0x06 ] = iTemp39 [k53 lr60:88 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] + iTemp45 [k61 lr69:70 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ]
check.c(l97:s71:k76:d1:s0)		iTemp47 [k63 lr71:72 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x07 r0x08 r0x09 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + iTemp50 [k66 lr66:76 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ]
check.c(l97:s72:k77:d1:s0)		iTemp48 [k64 lr72:73 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x07 ] = @[iTemp47 [k63 lr71:72 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x07 r0x08 r0x09 ] + 0x0 {const-unsigned-char literal}]
check.c(l97:s73:k78:d1:s0)		*(iTemp46 [k62 lr70:73 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x05 r0x06 ]) := iTemp48 [k64 lr72:73 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x07 ]
check.c(l96:s74:k81:d1:s0)		iTemp50 [k66 lr66:76 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] = iTemp50 [k66 lr66:76 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] + 0x1 {const-unsigned-char literal}
check.c(l96:s75:k83:d1:s0)		iTemp51 [k67 lr75:76 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp50 [k66 lr66:76 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] < 0x11 {const-char literal}
check.c(l96:s76:k84:d1:s0)		if iTemp51 [k67 lr75:76 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forbody_1($28)
check.c(l98:s77:k292:d0:s0)		iTemp58 [k74 lr77:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] := 0x11 {const-char literal}
check.c(l98:s79:k88:d1:s0)	 _forbody_2($30) :
check.c(l99:s80:k90:d1:s0)		iTemp53 [k69 lr80:81 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = iTemp58 [k74 lr77:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] - 0x11 {char literal}
check.c(l99:s81:k91:d1:s0)		iTemp54 [k70 lr81:84 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x05 r0x06 ] = iTemp41 [k56 lr63:93 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] + iTemp53 [k69 lr80:81 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ]
check.c(l99:s82:k92:d1:s0)		iTemp55 [k71 lr82:83 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x07 r0x08 r0x09 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + iTemp58 [k74 lr77:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ]
check.c(l99:s83:k93:d1:s0)		iTemp56 [k72 lr83:84 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x07 ] = @[iTemp55 [k71 lr82:83 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x07 r0x08 r0x09 ] + 0x0 {const-unsigned-char literal}]
check.c(l99:s84:k94:d1:s0)		*(iTemp54 [k70 lr81:84 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x05 r0x06 ]) := iTemp56 [k72 lr83:84 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x07 ]
check.c(l98:s85:k97:d1:s0)		iTemp58 [k74 lr77:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] = iTemp58 [k74 lr77:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] + 0x1 {const-unsigned-char literal}
check.c(l98:s86:k99:d1:s0)		iTemp59 [k75 lr86:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp58 [k74 lr77:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] < 0x21 {const-char literal}
check.c(l98:s87:k100:d1:s0)		if iTemp59 [k75 lr86:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forbody_2($30)
check.c(l100:s88:k103:d0:s0)		iTemp60 [k77 lr88:89 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] := iTemp39 [k53 lr60:88 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat]
check.c(l100:s89:k104:d0:s0)		iTemp61 [k78 lr89:90 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = (char generic* fixed)iTemp60 [k77 lr88:89 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat]
check.c(l100:s90:k105:d0:s0)		send iTemp61 [k78 lr89:90 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ]{argreg = 1}
check.c(l100:s91:k106:d0:s0)		iTemp62 [k80 lr91:91 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _print_lcd_string [k76 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char generic* fixed) fixed}
check.c(l101:s92:k107:d0:s0)		iTemp63 [k82 lr92:92 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _print_lcd_ln [k81 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( ) fixed}
check.c(l102:s93:k108:d0:s0)		iTemp64 [k83 lr93:94 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] := iTemp41 [k56 lr63:93 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat]
check.c(l102:s94:k109:d0:s0)		iTemp65 [k84 lr94:95 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = (char generic* fixed)iTemp64 [k83 lr93:94 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat]
check.c(l102:s95:k110:d0:s0)		send iTemp65 [k84 lr94:95 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ]{argreg = 1}
check.c(l102:s96:k111:d0:s0)		iTemp66 [k85 lr96:96 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _print_lcd_string [k76 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char generic* fixed) fixed}
check.c(l103:s97:k112:d0:s0)		iTemp1 [k4 lr4:258 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _check_comando_ret_1_74}[r0x03 ] := 0x34 {const-unsigned-char literal}
check.c(l104:s98:k113:d0:s0)		 goto _swBrk_0($27)
check.c(l105:s99:k114:d0:s0)	 _case_0_51($8) :
check.c(l106:s100:k115:d0:s0)		iTemp67 [k86 lr100:101 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l106:s101:k116:d0:s0)		iTemp68 [k87 lr101:102 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp67 [k86 lr100:101 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l106:s102:k117:d0:s0)		iTemp69 [k88 lr102:103 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp68 [k87 lr101:102 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l106:s103:k118:d0:s0)		iTemp70 [k89 lr103:109 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp69 [k88 lr102:103 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l106:s104:k119:d0:s0)		iTemp71 [k90 lr104:105 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp70 [k89 lr103:109 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] == 0x1 {int literal}
check.c(l106:s105:k120:d0:s0)		if iTemp71 [k90 lr104:105 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} == 0 goto _iffalse_5($12)
check.c(l107:s106:k124:d0:s0)		_hab_alarme [k91 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed} := 0x1 {const-unsigned-char literal}
check.c(l107:s107:k125:d0:s0)		 goto _swBrk_0($27)
check.c(l107:s108:k126:d0:s0)	 _iffalse_5($12) :
check.c(l108:s109:k131:d0:s0)		if iTemp70 [k89 lr103:109 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] != 0 goto _swBrk_0($27)
check.c(l109:s110:k135:d0:s0)		_hab_alarme [k91 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed} := 0x0 {const-unsigned-char literal}
check.c(l110:s111:k138:d0:s0)		 goto _swBrk_0($27)
check.c(l111:s112:k139:d0:s0)	 _case_0_52($14) :
check.c(l112:s113:k140:d0:s0)		iTemp78 [k98 lr113:114 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l112:s114:k141:d0:s0)		iTemp79 [k99 lr114:115 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp78 [k98 lr113:114 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l112:s115:k142:d0:s0)		iTemp80 [k100 lr115:116 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp79 [k99 lr114:115 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l112:s116:k143:d0:s0)		iTemp81 [k101 lr116:122 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp80 [k100 lr115:116 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l112:s117:k144:d0:s0)		iTemp82 [k102 lr117:118 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp81 [k101 lr116:122 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] == 0x1 {int literal}
check.c(l112:s118:k145:d0:s0)		if iTemp82 [k102 lr117:118 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} == 0 goto _iffalse_7($18)
check.c(l113:s119:k149:d0:s0)		_hab_sensor [k103 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed} := 0x0 {const-unsigned-char literal}
check.c(l113:s120:k150:d0:s0)		 goto _swBrk_0($27)
check.c(l113:s121:k151:d0:s0)	 _iffalse_7($18) :
check.c(l114:s122:k156:d0:s0)		if iTemp81 [k101 lr116:122 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] != 0 goto _swBrk_0($27)
check.c(l115:s123:k160:d0:s0)		_hab_sensor [k103 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed} := 0x2 {const-unsigned-char literal}
check.c(l116:s124:k163:d0:s0)		 goto _swBrk_0($27)
check.c(l117:s125:k164:d0:s0)	 _case_0_53($20) :
check.c(l118:s126:k165:d0:s0)		iTemp89 [k111 lr126:127 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{unsigned-long-int near* fixed}[remat] = &[_sys_timer_pool [k110 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int [2] fixed}]
check.c(l118:s127:k166:d0:s0)		iTemp90 [k112 lr127:165 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{unsigned-long-int near* fixed}[remat] = iTemp89 [k111 lr126:127 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{unsigned-long-int near* fixed}[remat] + 0x4 {unsigned-char literal}
check.c(l118:s128:k167:d0:s0)		iTemp91 [k113 lr128:129 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l118:s129:k168:d0:s0)		iTemp92 [k114 lr129:130 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp91 [k113 lr128:129 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l118:s130:k169:d0:s0)		iTemp93 [k115 lr130:131 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp92 [k114 lr129:130 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l118:s131:k170:d0:s0)		iTemp94 [k116 lr131:133 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp93 [k115 lr130:131 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l118:s132:k299:d0:s0)		send 0x2710 {const-int literal}{argreg = 1}
check.c(l118:s133:k300:d0:s0)		send iTemp94 [k116 lr131:133 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l118:s134:k301:d0:s0)		iTemp95 [k117 lr134:142 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l118:s135:k172:d0:s0)		iTemp96 [k118 lr135:136 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l118:s136:k173:d0:s0)		iTemp97 [k119 lr136:137 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp96 [k118 lr135:136 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l118:s137:k174:d0:s0)		iTemp98 [k120 lr137:138 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp97 [k119 lr136:137 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l118:s138:k175:d0:s0)		iTemp99 [k121 lr138:140 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp98 [k120 lr137:138 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l118:s139:k302:d0:s0)		send 0x3e8 {const-int literal}{argreg = 1}
check.c(l118:s140:k303:d0:s0)		send iTemp99 [k121 lr138:140 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l118:s141:k304:d0:s0)		iTemp100 [k122 lr141:142 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l118:s142:k177:d0:s0)		iTemp101 [k123 lr142:150 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp95 [k117 lr134:142 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp100 [k122 lr141:142 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l119:s143:k178:d0:s0)		iTemp102 [k124 lr143:144 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l119:s144:k179:d0:s0)		iTemp103 [k125 lr144:145 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp102 [k124 lr143:144 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l119:s145:k180:d0:s0)		iTemp104 [k126 lr145:146 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp103 [k125 lr144:145 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l119:s146:k181:d0:s0)		iTemp105 [k127 lr146:148 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp104 [k126 lr145:146 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l119:s147:k305:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l119:s148:k306:d0:s0)		send iTemp105 [k127 lr146:148 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l119:s149:k307:d0:s0)		iTemp106 [k128 lr149:150 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l119:s150:k183:d0:s0)		iTemp107 [k129 lr150:158 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp101 [k123 lr142:150 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp106 [k128 lr149:150 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l119:s151:k184:d0:s0)		iTemp108 [k130 lr151:152 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x4 {const-unsigned-char literal}
check.c(l119:s152:k185:d0:s0)		iTemp109 [k131 lr152:153 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp108 [k130 lr151:152 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l119:s153:k186:d0:s0)		iTemp110 [k132 lr153:154 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp109 [k131 lr152:153 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l119:s154:k187:d0:s0)		iTemp111 [k133 lr154:156 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp110 [k132 lr153:154 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l119:s155:k308:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l119:s156:k309:d0:s0)		send iTemp111 [k133 lr154:156 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l119:s157:k310:d0:s0)		iTemp112 [k134 lr157:158 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l119:s158:k189:d0:s0)		iTemp113 [k135 lr158:162 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp107 [k129 lr150:158 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp112 [k134 lr157:158 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l120:s159:k190:d0:s0)		iTemp114 [k136 lr159:160 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x5 {const-unsigned-char literal}
check.c(l120:s160:k191:d0:s0)		iTemp115 [k137 lr160:161 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp114 [k136 lr159:160 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l120:s161:k192:d0:s0)		iTemp116 [k138 lr161:162 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp115 [k137 lr160:161 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l120:s162:k193:d0:s0)		iTemp117 [k139 lr162:163 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = iTemp113 [k135 lr158:162 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp116 [k138 lr161:162 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ]
check.c(l120:s163:k194:d0:s0)		iTemp118 [k140 lr163:164 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp117 [k139 lr162:163 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l120:s164:k195:d0:s0)		iTemp119 [k141 lr164:165 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x04 r0x05 r0x06 r0x07 ] = (unsigned-long-int fixed)iTemp118 [k140 lr163:164 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]
check.c(l120:s165:k196:d0:s0)		*(iTemp90 [k112 lr127:165 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{unsigned-long-int near* fixed}[remat]) := iTemp119 [k141 lr164:165 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x04 r0x05 r0x06 r0x07 ]
check.c(l121:s166:k197:d0:s0)		 goto _swBrk_0($27)
check.c(l122:s167:k198:d0:s0)	 _case_0_54($21) :
check.c(l123:s168:k199:d0:s0)		iTemp120 [k143 lr168:169 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l123:s169:k200:d0:s0)		iTemp121 [k144 lr169:170 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp120 [k143 lr168:169 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l123:s170:k201:d0:s0)		iTemp122 [k145 lr170:171 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp121 [k144 lr169:170 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l123:s171:k202:d0:s0)		iTemp123 [k146 lr171:173 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp122 [k145 lr170:171 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l123:s172:k311:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l123:s173:k312:d0:s0)		send iTemp123 [k146 lr171:173 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l123:s174:k313:d0:s0)		iTemp124 [k147 lr174:182 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l123:s175:k204:d0:s0)		iTemp125 [k148 lr175:176 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l123:s176:k205:d0:s0)		iTemp126 [k149 lr176:177 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp125 [k148 lr175:176 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l123:s177:k206:d0:s0)		iTemp127 [k150 lr177:178 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp126 [k149 lr176:177 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l123:s178:k207:d0:s0)		iTemp128 [k151 lr178:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp127 [k150 lr177:178 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l123:s179:k314:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l123:s180:k315:d0:s0)		send iTemp128 [k151 lr178:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l123:s181:k316:d0:s0)		iTemp129 [k152 lr181:182 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l123:s182:k209:d0:s0)		iTemp130 [k153 lr182:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp124 [k147 lr174:182 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp129 [k152 lr181:182 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l124:s183:k210:d0:s0)		iTemp131 [k154 lr183:184 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l124:s184:k211:d0:s0)		iTemp132 [k155 lr184:185 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp131 [k154 lr183:184 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l124:s185:k212:d0:s0)		iTemp133 [k156 lr185:186 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp132 [k155 lr184:185 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l124:s186:k213:d0:s0)		iTemp134 [k157 lr186:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp133 [k156 lr185:186 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l124:s187:k214:d0:s0)		_sys_temp_min [k142 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed} = iTemp130 [k153 lr182:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp134 [k157 lr186:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l125:s188:k217:d0:s0)		 goto _swBrk_0($27)
check.c(l126:s189:k218:d0:s0)	 _case_0_55($22) :
check.c(l127:s190:k219:d0:s0)		iTemp137 [k161 lr190:191 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l127:s191:k220:d0:s0)		iTemp138 [k162 lr191:192 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp137 [k161 lr190:191 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l127:s192:k221:d0:s0)		iTemp139 [k163 lr192:193 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp138 [k162 lr191:192 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l127:s193:k222:d0:s0)		iTemp140 [k164 lr193:195 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp139 [k163 lr192:193 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l127:s194:k317:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l127:s195:k318:d0:s0)		send iTemp140 [k164 lr193:195 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l127:s196:k319:d0:s0)		iTemp141 [k165 lr196:204 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l127:s197:k224:d0:s0)		iTemp142 [k166 lr197:198 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l127:s198:k225:d0:s0)		iTemp143 [k167 lr198:199 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp142 [k166 lr197:198 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l127:s199:k226:d0:s0)		iTemp144 [k168 lr199:200 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp143 [k167 lr198:199 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l127:s200:k227:d0:s0)		iTemp145 [k169 lr200:202 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp144 [k168 lr199:200 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l127:s201:k320:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l127:s202:k321:d0:s0)		send iTemp145 [k169 lr200:202 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l127:s203:k322:d0:s0)		iTemp146 [k170 lr203:204 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l127:s204:k229:d0:s0)		iTemp147 [k171 lr204:209 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp141 [k165 lr196:204 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp146 [k170 lr203:204 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l128:s205:k230:d0:s0)		iTemp148 [k172 lr205:206 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l128:s206:k231:d0:s0)		iTemp149 [k173 lr206:207 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp148 [k172 lr205:206 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l128:s207:k232:d0:s0)		iTemp150 [k174 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp149 [k173 lr206:207 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l128:s208:k233:d0:s0)		iTemp151 [k175 lr208:209 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp150 [k174 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l128:s209:k234:d0:s0)		_sys_temp_max [k160 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed} = iTemp147 [k171 lr204:209 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp151 [k175 lr208:209 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l129:s210:k237:d0:s0)		 goto _swBrk_0($27)
check.c(l130:s211:k238:d0:s0)	 _case_0_56($23) :
check.c(l131:s212:k239:d0:s0)		iTemp154 [k179 lr212:213 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l131:s213:k240:d0:s0)		iTemp155 [k180 lr213:214 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp154 [k179 lr212:213 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l131:s214:k241:d0:s0)		iTemp156 [k181 lr214:215 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp155 [k180 lr213:214 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l131:s215:k242:d0:s0)		iTemp157 [k182 lr215:217 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp156 [k181 lr214:215 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l131:s216:k323:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l131:s217:k324:d0:s0)		send iTemp157 [k182 lr215:217 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l131:s218:k325:d0:s0)		iTemp158 [k183 lr218:226 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l131:s219:k244:d0:s0)		iTemp159 [k184 lr219:220 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l131:s220:k245:d0:s0)		iTemp160 [k185 lr220:221 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp159 [k184 lr219:220 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l131:s221:k246:d0:s0)		iTemp161 [k186 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp160 [k185 lr220:221 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l131:s222:k247:d0:s0)		iTemp162 [k187 lr222:224 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp161 [k186 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l131:s223:k326:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l131:s224:k327:d0:s0)		send iTemp162 [k187 lr222:224 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l131:s225:k328:d0:s0)		iTemp163 [k188 lr225:226 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l131:s226:k249:d0:s0)		iTemp164 [k189 lr226:231 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp158 [k183 lr218:226 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp163 [k188 lr225:226 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l132:s227:k250:d0:s0)		iTemp165 [k190 lr227:228 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l132:s228:k251:d0:s0)		iTemp166 [k191 lr228:229 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp165 [k190 lr227:228 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l132:s229:k252:d0:s0)		iTemp167 [k192 lr229:230 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp166 [k191 lr228:229 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l132:s230:k253:d0:s0)		iTemp168 [k193 lr230:231 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp167 [k192 lr229:230 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l132:s231:k254:d0:s0)		_sys_lumi_min [k178 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed} = iTemp164 [k189 lr226:231 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp168 [k193 lr230:231 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l133:s232:k257:d0:s0)		 goto _swBrk_0($27)
check.c(l134:s233:k258:d0:s0)	 _case_0_57($24) :
check.c(l135:s234:k259:d0:s0)		iTemp171 [k196 lr234:235 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l135:s235:k260:d0:s0)		iTemp172 [k197 lr235:236 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp171 [k196 lr234:235 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l135:s236:k261:d0:s0)		iTemp173 [k198 lr236:237 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp172 [k197 lr235:236 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l135:s237:k262:d0:s0)		iTemp174 [k199 lr237:239 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp173 [k198 lr236:237 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l135:s238:k329:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l135:s239:k330:d0:s0)		send iTemp174 [k199 lr237:239 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l135:s240:k331:d0:s0)		iTemp175 [k200 lr240:248 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l135:s241:k264:d0:s0)		iTemp176 [k201 lr241:242 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l135:s242:k265:d0:s0)		iTemp177 [k202 lr242:243 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp176 [k201 lr241:242 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l135:s243:k266:d0:s0)		iTemp178 [k203 lr243:244 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp177 [k202 lr242:243 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l135:s244:k267:d0:s0)		iTemp179 [k204 lr244:246 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp178 [k203 lr243:244 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l135:s245:k332:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l135:s246:k333:d0:s0)		send iTemp179 [k204 lr244:246 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l135:s247:k334:d0:s0)		iTemp180 [k205 lr247:248 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l135:s248:k269:d0:s0)		iTemp181 [k206 lr248:253 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp175 [k200 lr240:248 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp180 [k205 lr247:248 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l136:s249:k270:d0:s0)		iTemp182 [k207 lr249:250 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x00 r0x01 r0x02 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l136:s250:k271:d0:s0)		iTemp183 [k208 lr250:251 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x00 ] = @[iTemp182 [k207 lr249:250 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x00 r0x01 r0x02 ] + 0x0 {const-unsigned-char literal}]
check.c(l136:s251:k272:d0:s0)		iTemp184 [k209 lr251:252 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x00 r0x01 ] = (int fixed)iTemp183 [k208 lr250:251 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x00 ]
check.c(l136:s252:k273:d0:s0)		iTemp185 [k210 lr252:253 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x00 r0x01 ] = iTemp184 [k209 lr251:252 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x00 r0x01 ] - 0x30 {int literal}
check.c(l136:s253:k274:d0:s0)		_sys_temp_max [k160 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed} = iTemp181 [k206 lr248:253 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp185 [k210 lr252:253 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x00 r0x01 ]
check.c(l137:s254:k277:d0:s0)		 goto _swBrk_0($27)
check.c(l138:s255:k278:d0:s0)	 _case_0_82($25) :
check.c(l139:s256:k279:d0:s0)		iTemp1 [k4 lr4:258 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _check_comando_ret_1_74}[r0x03 ] := 0x0 {const-char literal}
check.c(l143:s257:k283:d0:s0)	 _swBrk_0($27) :
check.c(l145:s258:k284:d0:s0)		ret iTemp1 [k4 lr4:258 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _check_comando_ret_1_74}[r0x03 ]
check.c(l145:s259:k285:d0:s0)	 _return($32) :
check.c(l145:s260:k286:d0:s0)		eproc _check_comando [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char function ( char generic* fixed) fixed}

----------------------------------------------------------------
Basic Block _eBBlock40 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 8 : bbnum = 7 1st iCode = 20 , last iCode = 21
visited 0 : hasFcall = 0

defines bitVector :bitvector Size = 299 bSize = 38
Bits on { (20) }

local defines bitVector :bitvector Size = 299 bSize = 38
Bits on { (20) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (3) (5) (6) (8) (10) (12) (14) (16) (18) }

outDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (3) (5) (6) (8) (10) (12) (14) (16) (18) (20) }

usesDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (5) (20) }

----------------------------------------------------------------
check.c(l79:s20:k20:d0:s0)		iTemp11 [k15 lr20:21 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp3 [k7 lr5:24 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] == 0x38 {const-char literal}
check.c(l79:s21:k21:d0:s0)		if iTemp11 [k15 lr20:21 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _case_0_56($23)
check.c(l79:s22:k22:d0:s0)		iTemp12 [k16 lr22:23 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp3 [k7 lr5:24 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] == 0x39 {const-char literal}
check.c(l79:s23:k23:d0:s0)		if iTemp12 [k16 lr22:23 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _case_0_57($24)
check.c(l79:s24:k24:d0:s0)		iTemp13 [k17 lr24:25 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp3 [k7 lr5:24 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] == 0x52 {const-char literal}
check.c(l79:s25:k25:d0:s0)		if iTemp13 [k17 lr24:25 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _case_0_82($25)
check.c(l79:s26:k26:d0:s0)		 goto _swBrk_0($27)
check.c(l80:s27:k27:d0:s0)	 _case_0_49($1) :
check.c(l81:s28:k28:d0:s0)		iTemp15 [k20 lr28:29 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l81:s29:k29:d0:s0)		iTemp16 [k21 lr29:30 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp15 [k20 lr28:29 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l81:s30:k30:d0:s0)		iTemp14 [k18 lr30:53 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_led_num_1_74}[r0x04 ] = iTemp16 [k21 lr29:30 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] - 0x30 {char literal}
check.c(l82:s31:k32:d0:s0)		if iTemp14 [k18 lr30:53 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_led_num_1_74}[r0x04 ] != 0 goto _iffalse_3($3)
check.c(l83:s32:k35:d0:s0)		iTemp18 [k24 lr32:33 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x05 r0x06 r0x07 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l83:s33:k36:d0:s0)		iTemp19 [k25 lr33:34 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = @[iTemp18 [k24 lr32:33 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x05 r0x06 r0x07 ] + 0x0 {const-unsigned-char literal}]
check.c(l83:s34:k37:d0:s0)		iTemp20 [k26 lr34:36 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = iTemp19 [k25 lr33:34 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] - 0x30 {char literal}
check.c(l83:s35:k38:d0:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
check.c(l83:s36:k39:d0:s0)		send iTemp20 [k26 lr34:36 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ]{argreg = 2}
check.c(l83:s37:k40:d0:s0)		iTemp21 [k29 lr37:37 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _led [k23 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( unsigned-char fixed, unsigned-char fixed) fixed}
check.c(l83:s38:k41:d0:s0)		 goto _swBrk_0($27)
check.c(l83:s39:k42:d0:s0)	 _iffalse_3($3) :
check.c(l85:s40:k43:d0:s0)		iTemp23 [k32 lr40:41 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x05 r0x06 r0x07 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l85:s41:k44:d0:s0)		iTemp24 [k33 lr41:42 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = @[iTemp23 [k32 lr40:41 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x05 r0x06 r0x07 ] + 0x0 {const-unsigned-char literal}]
check.c(l85:s42:k45:d0:s0)		iTemp25 [k34 lr42:43 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = iTemp24 [k33 lr41:42 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] - 0x30 {char literal}
check.c(l85:s43:k46:d0:s0)		iTemp26 [k35 lr43:48 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = iTemp25 [k34 lr42:43 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] * 0x64 {const-unsigned-char literal}
check.c(l85:s44:k47:d0:s0)		iTemp27 [k36 lr44:45 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l85:s45:k48:d0:s0)		iTemp28 [k37 lr45:46 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp27 [k36 lr44:45 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l85:s46:k49:d0:s0)		iTemp29 [k38 lr46:47 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = iTemp28 [k37 lr45:46 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] - 0x30 {char literal}
check.c(l85:s47:k50:d0:s0)		iTemp30 [k39 lr47:48 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = iTemp29 [k38 lr46:47 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] * 0xa {const-unsigned-char literal}
check.c(l85:s48:k51:d0:s0)		iTemp31 [k40 lr48:51 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = iTemp26 [k35 lr43:48 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] + iTemp30 [k39 lr47:48 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l86:s49:k52:d0:s0)		iTemp32 [k41 lr49:50 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x4 {const-unsigned-char literal}
check.c(l86:s50:k53:d0:s0)		iTemp33 [k42 lr50:51 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp32 [k41 lr49:50 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l86:s51:k54:d0:s0)		iTemp34 [k43 lr51:52 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = iTemp31 [k40 lr48:51 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] + iTemp33 [k42 lr50:51 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l86:s52:k55:d0:s0)		iTemp22 [k30 lr52:55 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_pwm_1_74}[r0x05 ] = iTemp34 [k43 lr51:52 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] - 0x30 {char literal}
check.c(l87:s53:k57:d0:s0)		iTemp36 [k46 lr53:55 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = iTemp14 [k18 lr30:53 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_led_num_1_74}[r0x04 ] - 0x1 {char literal}
check.c(l87:s54:k58:d0:s0)		send iTemp36 [k46 lr53:55 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]{argreg = 1}
check.c(l87:s55:k59:d0:s0)		send iTemp22 [k30 lr52:55 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_pwm_1_74}[r0x05 ]{argreg = 2}
check.c(l87:s56:k60:d0:s0)		iTemp37 [k49 lr56:56 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _set_pwm [k45 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( unsigned-char fixed, unsigned-char fixed) fixed}
check.c(l89:s57:k62:d0:s0)		 goto _swBrk_0($27)
check.c(l90:s58:k63:d0:s0)	 _case_0_50($5) :
check.c(l91:s59:k64:d0:s0)		iTemp38 [k51 lr59:59 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _limpa_lcd [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( ) fixed}
check.c(l94:s60:k65:d0:s0)		iTemp39 [k53 lr60:88 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] = &[_check_comando_linha_1_1_74 [k52 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [17] fixed}]
check.c(l94:s61:k66:d0:s0)		iTemp40 [k54 lr61:62 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] = iTemp39 [k53 lr60:88 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] + 0x10 {const-unsigned-char literal}
check.c(l94:s62:k67:d0:s0)		*(iTemp40 [k54 lr61:62 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat]) := 0x0 {const-char literal}
check.c(l95:s63:k68:d0:s0)		iTemp41 [k56 lr63:93 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] = &[_check_comando_linha_2_1_74 [k55 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [17] fixed}]
check.c(l95:s64:k69:d0:s0)		iTemp42 [k57 lr64:65 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] = iTemp41 [k56 lr63:93 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] + 0x10 {const-unsigned-char literal}
check.c(l95:s65:k70:d0:s0)		*(iTemp42 [k57 lr64:65 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat]) := 0x0 {const-char literal}
check.c(l96:s66:k289:d0:s0)		iTemp50 [k66 lr66:76 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] := 0x1 {const-char literal}
check.c(l96:s68:k72:d1:s0)	 _forbody_1($28) :
check.c(l97:s69:k74:d1:s0)		iTemp45 [k61 lr69:70 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = iTemp50 [k66 lr66:76 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] - 0x1 {char literal}
check.c(l97:s70:k75:d1:s0)		iTemp46 [k62 lr70:73 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x05 r0x06 ] = iTemp39 [k53 lr60:88 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] + iTemp45 [k61 lr69:70 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ]
check.c(l97:s71:k76:d1:s0)		iTemp47 [k63 lr71:72 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x07 r0x08 r0x09 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + iTemp50 [k66 lr66:76 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ]
check.c(l97:s72:k77:d1:s0)		iTemp48 [k64 lr72:73 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x07 ] = @[iTemp47 [k63 lr71:72 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x07 r0x08 r0x09 ] + 0x0 {const-unsigned-char literal}]
check.c(l97:s73:k78:d1:s0)		*(iTemp46 [k62 lr70:73 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x05 r0x06 ]) := iTemp48 [k64 lr72:73 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x07 ]
check.c(l96:s74:k81:d1:s0)		iTemp50 [k66 lr66:76 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] = iTemp50 [k66 lr66:76 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] + 0x1 {const-unsigned-char literal}
check.c(l96:s75:k83:d1:s0)		iTemp51 [k67 lr75:76 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp50 [k66 lr66:76 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] < 0x11 {const-char literal}
check.c(l96:s76:k84:d1:s0)		if iTemp51 [k67 lr75:76 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forbody_1($28)
check.c(l98:s77:k292:d0:s0)		iTemp58 [k74 lr77:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] := 0x11 {const-char literal}
check.c(l98:s79:k88:d1:s0)	 _forbody_2($30) :
check.c(l99:s80:k90:d1:s0)		iTemp53 [k69 lr80:81 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = iTemp58 [k74 lr77:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] - 0x11 {char literal}
check.c(l99:s81:k91:d1:s0)		iTemp54 [k70 lr81:84 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x05 r0x06 ] = iTemp41 [k56 lr63:93 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] + iTemp53 [k69 lr80:81 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ]
check.c(l99:s82:k92:d1:s0)		iTemp55 [k71 lr82:83 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x07 r0x08 r0x09 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + iTemp58 [k74 lr77:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ]
check.c(l99:s83:k93:d1:s0)		iTemp56 [k72 lr83:84 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x07 ] = @[iTemp55 [k71 lr82:83 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x07 r0x08 r0x09 ] + 0x0 {const-unsigned-char literal}]
check.c(l99:s84:k94:d1:s0)		*(iTemp54 [k70 lr81:84 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x05 r0x06 ]) := iTemp56 [k72 lr83:84 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x07 ]
check.c(l98:s85:k97:d1:s0)		iTemp58 [k74 lr77:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] = iTemp58 [k74 lr77:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] + 0x1 {const-unsigned-char literal}
check.c(l98:s86:k99:d1:s0)		iTemp59 [k75 lr86:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp58 [k74 lr77:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] < 0x21 {const-char literal}
check.c(l98:s87:k100:d1:s0)		if iTemp59 [k75 lr86:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forbody_2($30)
check.c(l100:s88:k103:d0:s0)		iTemp60 [k77 lr88:89 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] := iTemp39 [k53 lr60:88 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat]
check.c(l100:s89:k104:d0:s0)		iTemp61 [k78 lr89:90 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = (char generic* fixed)iTemp60 [k77 lr88:89 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat]
check.c(l100:s90:k105:d0:s0)		send iTemp61 [k78 lr89:90 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ]{argreg = 1}
check.c(l100:s91:k106:d0:s0)		iTemp62 [k80 lr91:91 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _print_lcd_string [k76 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char generic* fixed) fixed}
check.c(l101:s92:k107:d0:s0)		iTemp63 [k82 lr92:92 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _print_lcd_ln [k81 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( ) fixed}
check.c(l102:s93:k108:d0:s0)		iTemp64 [k83 lr93:94 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] := iTemp41 [k56 lr63:93 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat]
check.c(l102:s94:k109:d0:s0)		iTemp65 [k84 lr94:95 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = (char generic* fixed)iTemp64 [k83 lr93:94 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat]
check.c(l102:s95:k110:d0:s0)		send iTemp65 [k84 lr94:95 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ]{argreg = 1}
check.c(l102:s96:k111:d0:s0)		iTemp66 [k85 lr96:96 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _print_lcd_string [k76 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char generic* fixed) fixed}
check.c(l103:s97:k112:d0:s0)		iTemp1 [k4 lr4:258 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _check_comando_ret_1_74}[r0x03 ] := 0x34 {const-unsigned-char literal}
check.c(l104:s98:k113:d0:s0)		 goto _swBrk_0($27)
check.c(l105:s99:k114:d0:s0)	 _case_0_51($8) :
check.c(l106:s100:k115:d0:s0)		iTemp67 [k86 lr100:101 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l106:s101:k116:d0:s0)		iTemp68 [k87 lr101:102 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp67 [k86 lr100:101 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l106:s102:k117:d0:s0)		iTemp69 [k88 lr102:103 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp68 [k87 lr101:102 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l106:s103:k118:d0:s0)		iTemp70 [k89 lr103:109 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp69 [k88 lr102:103 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l106:s104:k119:d0:s0)		iTemp71 [k90 lr104:105 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp70 [k89 lr103:109 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] == 0x1 {int literal}
check.c(l106:s105:k120:d0:s0)		if iTemp71 [k90 lr104:105 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} == 0 goto _iffalse_5($12)
check.c(l107:s106:k124:d0:s0)		_hab_alarme [k91 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed} := 0x1 {const-unsigned-char literal}
check.c(l107:s107:k125:d0:s0)		 goto _swBrk_0($27)
check.c(l107:s108:k126:d0:s0)	 _iffalse_5($12) :
check.c(l108:s109:k131:d0:s0)		if iTemp70 [k89 lr103:109 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] != 0 goto _swBrk_0($27)
check.c(l109:s110:k135:d0:s0)		_hab_alarme [k91 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed} := 0x0 {const-unsigned-char literal}
check.c(l110:s111:k138:d0:s0)		 goto _swBrk_0($27)
check.c(l111:s112:k139:d0:s0)	 _case_0_52($14) :
check.c(l112:s113:k140:d0:s0)		iTemp78 [k98 lr113:114 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l112:s114:k141:d0:s0)		iTemp79 [k99 lr114:115 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp78 [k98 lr113:114 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l112:s115:k142:d0:s0)		iTemp80 [k100 lr115:116 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp79 [k99 lr114:115 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l112:s116:k143:d0:s0)		iTemp81 [k101 lr116:122 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp80 [k100 lr115:116 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l112:s117:k144:d0:s0)		iTemp82 [k102 lr117:118 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp81 [k101 lr116:122 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] == 0x1 {int literal}
check.c(l112:s118:k145:d0:s0)		if iTemp82 [k102 lr117:118 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} == 0 goto _iffalse_7($18)
check.c(l113:s119:k149:d0:s0)		_hab_sensor [k103 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed} := 0x0 {const-unsigned-char literal}
check.c(l113:s120:k150:d0:s0)		 goto _swBrk_0($27)
check.c(l113:s121:k151:d0:s0)	 _iffalse_7($18) :
check.c(l114:s122:k156:d0:s0)		if iTemp81 [k101 lr116:122 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] != 0 goto _swBrk_0($27)
check.c(l115:s123:k160:d0:s0)		_hab_sensor [k103 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed} := 0x2 {const-unsigned-char literal}
check.c(l116:s124:k163:d0:s0)		 goto _swBrk_0($27)
check.c(l117:s125:k164:d0:s0)	 _case_0_53($20) :
check.c(l118:s126:k165:d0:s0)		iTemp89 [k111 lr126:127 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{unsigned-long-int near* fixed}[remat] = &[_sys_timer_pool [k110 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int [2] fixed}]
check.c(l118:s127:k166:d0:s0)		iTemp90 [k112 lr127:165 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{unsigned-long-int near* fixed}[remat] = iTemp89 [k111 lr126:127 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{unsigned-long-int near* fixed}[remat] + 0x4 {unsigned-char literal}
check.c(l118:s128:k167:d0:s0)		iTemp91 [k113 lr128:129 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l118:s129:k168:d0:s0)		iTemp92 [k114 lr129:130 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp91 [k113 lr128:129 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l118:s130:k169:d0:s0)		iTemp93 [k115 lr130:131 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp92 [k114 lr129:130 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l118:s131:k170:d0:s0)		iTemp94 [k116 lr131:133 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp93 [k115 lr130:131 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l118:s132:k299:d0:s0)		send 0x2710 {const-int literal}{argreg = 1}
check.c(l118:s133:k300:d0:s0)		send iTemp94 [k116 lr131:133 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l118:s134:k301:d0:s0)		iTemp95 [k117 lr134:142 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l118:s135:k172:d0:s0)		iTemp96 [k118 lr135:136 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l118:s136:k173:d0:s0)		iTemp97 [k119 lr136:137 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp96 [k118 lr135:136 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l118:s137:k174:d0:s0)		iTemp98 [k120 lr137:138 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp97 [k119 lr136:137 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l118:s138:k175:d0:s0)		iTemp99 [k121 lr138:140 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp98 [k120 lr137:138 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l118:s139:k302:d0:s0)		send 0x3e8 {const-int literal}{argreg = 1}
check.c(l118:s140:k303:d0:s0)		send iTemp99 [k121 lr138:140 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l118:s141:k304:d0:s0)		iTemp100 [k122 lr141:142 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l118:s142:k177:d0:s0)		iTemp101 [k123 lr142:150 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp95 [k117 lr134:142 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp100 [k122 lr141:142 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l119:s143:k178:d0:s0)		iTemp102 [k124 lr143:144 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l119:s144:k179:d0:s0)		iTemp103 [k125 lr144:145 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp102 [k124 lr143:144 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l119:s145:k180:d0:s0)		iTemp104 [k126 lr145:146 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp103 [k125 lr144:145 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l119:s146:k181:d0:s0)		iTemp105 [k127 lr146:148 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp104 [k126 lr145:146 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l119:s147:k305:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l119:s148:k306:d0:s0)		send iTemp105 [k127 lr146:148 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l119:s149:k307:d0:s0)		iTemp106 [k128 lr149:150 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l119:s150:k183:d0:s0)		iTemp107 [k129 lr150:158 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp101 [k123 lr142:150 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp106 [k128 lr149:150 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l119:s151:k184:d0:s0)		iTemp108 [k130 lr151:152 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x4 {const-unsigned-char literal}
check.c(l119:s152:k185:d0:s0)		iTemp109 [k131 lr152:153 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp108 [k130 lr151:152 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l119:s153:k186:d0:s0)		iTemp110 [k132 lr153:154 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp109 [k131 lr152:153 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l119:s154:k187:d0:s0)		iTemp111 [k133 lr154:156 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp110 [k132 lr153:154 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l119:s155:k308:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l119:s156:k309:d0:s0)		send iTemp111 [k133 lr154:156 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l119:s157:k310:d0:s0)		iTemp112 [k134 lr157:158 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l119:s158:k189:d0:s0)		iTemp113 [k135 lr158:162 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp107 [k129 lr150:158 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp112 [k134 lr157:158 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l120:s159:k190:d0:s0)		iTemp114 [k136 lr159:160 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x5 {const-unsigned-char literal}
check.c(l120:s160:k191:d0:s0)		iTemp115 [k137 lr160:161 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp114 [k136 lr159:160 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l120:s161:k192:d0:s0)		iTemp116 [k138 lr161:162 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp115 [k137 lr160:161 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l120:s162:k193:d0:s0)		iTemp117 [k139 lr162:163 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = iTemp113 [k135 lr158:162 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp116 [k138 lr161:162 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ]
check.c(l120:s163:k194:d0:s0)		iTemp118 [k140 lr163:164 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp117 [k139 lr162:163 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l120:s164:k195:d0:s0)		iTemp119 [k141 lr164:165 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x04 r0x05 r0x06 r0x07 ] = (unsigned-long-int fixed)iTemp118 [k140 lr163:164 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]
check.c(l120:s165:k196:d0:s0)		*(iTemp90 [k112 lr127:165 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{unsigned-long-int near* fixed}[remat]) := iTemp119 [k141 lr164:165 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x04 r0x05 r0x06 r0x07 ]
check.c(l121:s166:k197:d0:s0)		 goto _swBrk_0($27)
check.c(l122:s167:k198:d0:s0)	 _case_0_54($21) :
check.c(l123:s168:k199:d0:s0)		iTemp120 [k143 lr168:169 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l123:s169:k200:d0:s0)		iTemp121 [k144 lr169:170 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp120 [k143 lr168:169 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l123:s170:k201:d0:s0)		iTemp122 [k145 lr170:171 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp121 [k144 lr169:170 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l123:s171:k202:d0:s0)		iTemp123 [k146 lr171:173 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp122 [k145 lr170:171 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l123:s172:k311:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l123:s173:k312:d0:s0)		send iTemp123 [k146 lr171:173 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l123:s174:k313:d0:s0)		iTemp124 [k147 lr174:182 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l123:s175:k204:d0:s0)		iTemp125 [k148 lr175:176 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l123:s176:k205:d0:s0)		iTemp126 [k149 lr176:177 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp125 [k148 lr175:176 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l123:s177:k206:d0:s0)		iTemp127 [k150 lr177:178 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp126 [k149 lr176:177 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l123:s178:k207:d0:s0)		iTemp128 [k151 lr178:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp127 [k150 lr177:178 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l123:s179:k314:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l123:s180:k315:d0:s0)		send iTemp128 [k151 lr178:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l123:s181:k316:d0:s0)		iTemp129 [k152 lr181:182 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l123:s182:k209:d0:s0)		iTemp130 [k153 lr182:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp124 [k147 lr174:182 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp129 [k152 lr181:182 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l124:s183:k210:d0:s0)		iTemp131 [k154 lr183:184 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l124:s184:k211:d0:s0)		iTemp132 [k155 lr184:185 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp131 [k154 lr183:184 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l124:s185:k212:d0:s0)		iTemp133 [k156 lr185:186 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp132 [k155 lr184:185 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l124:s186:k213:d0:s0)		iTemp134 [k157 lr186:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp133 [k156 lr185:186 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l124:s187:k214:d0:s0)		_sys_temp_min [k142 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed} = iTemp130 [k153 lr182:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp134 [k157 lr186:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l125:s188:k217:d0:s0)		 goto _swBrk_0($27)
check.c(l126:s189:k218:d0:s0)	 _case_0_55($22) :
check.c(l127:s190:k219:d0:s0)		iTemp137 [k161 lr190:191 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l127:s191:k220:d0:s0)		iTemp138 [k162 lr191:192 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp137 [k161 lr190:191 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l127:s192:k221:d0:s0)		iTemp139 [k163 lr192:193 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp138 [k162 lr191:192 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l127:s193:k222:d0:s0)		iTemp140 [k164 lr193:195 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp139 [k163 lr192:193 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l127:s194:k317:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l127:s195:k318:d0:s0)		send iTemp140 [k164 lr193:195 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l127:s196:k319:d0:s0)		iTemp141 [k165 lr196:204 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l127:s197:k224:d0:s0)		iTemp142 [k166 lr197:198 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l127:s198:k225:d0:s0)		iTemp143 [k167 lr198:199 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp142 [k166 lr197:198 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l127:s199:k226:d0:s0)		iTemp144 [k168 lr199:200 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp143 [k167 lr198:199 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l127:s200:k227:d0:s0)		iTemp145 [k169 lr200:202 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp144 [k168 lr199:200 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l127:s201:k320:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l127:s202:k321:d0:s0)		send iTemp145 [k169 lr200:202 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l127:s203:k322:d0:s0)		iTemp146 [k170 lr203:204 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l127:s204:k229:d0:s0)		iTemp147 [k171 lr204:209 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp141 [k165 lr196:204 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp146 [k170 lr203:204 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l128:s205:k230:d0:s0)		iTemp148 [k172 lr205:206 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l128:s206:k231:d0:s0)		iTemp149 [k173 lr206:207 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp148 [k172 lr205:206 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l128:s207:k232:d0:s0)		iTemp150 [k174 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp149 [k173 lr206:207 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l128:s208:k233:d0:s0)		iTemp151 [k175 lr208:209 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp150 [k174 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l128:s209:k234:d0:s0)		_sys_temp_max [k160 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed} = iTemp147 [k171 lr204:209 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp151 [k175 lr208:209 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l129:s210:k237:d0:s0)		 goto _swBrk_0($27)
check.c(l130:s211:k238:d0:s0)	 _case_0_56($23) :
check.c(l131:s212:k239:d0:s0)		iTemp154 [k179 lr212:213 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l131:s213:k240:d0:s0)		iTemp155 [k180 lr213:214 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp154 [k179 lr212:213 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l131:s214:k241:d0:s0)		iTemp156 [k181 lr214:215 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp155 [k180 lr213:214 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l131:s215:k242:d0:s0)		iTemp157 [k182 lr215:217 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp156 [k181 lr214:215 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l131:s216:k323:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l131:s217:k324:d0:s0)		send iTemp157 [k182 lr215:217 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l131:s218:k325:d0:s0)		iTemp158 [k183 lr218:226 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l131:s219:k244:d0:s0)		iTemp159 [k184 lr219:220 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l131:s220:k245:d0:s0)		iTemp160 [k185 lr220:221 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp159 [k184 lr219:220 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l131:s221:k246:d0:s0)		iTemp161 [k186 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp160 [k185 lr220:221 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l131:s222:k247:d0:s0)		iTemp162 [k187 lr222:224 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp161 [k186 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l131:s223:k326:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l131:s224:k327:d0:s0)		send iTemp162 [k187 lr222:224 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l131:s225:k328:d0:s0)		iTemp163 [k188 lr225:226 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l131:s226:k249:d0:s0)		iTemp164 [k189 lr226:231 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp158 [k183 lr218:226 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp163 [k188 lr225:226 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l132:s227:k250:d0:s0)		iTemp165 [k190 lr227:228 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l132:s228:k251:d0:s0)		iTemp166 [k191 lr228:229 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp165 [k190 lr227:228 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l132:s229:k252:d0:s0)		iTemp167 [k192 lr229:230 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp166 [k191 lr228:229 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l132:s230:k253:d0:s0)		iTemp168 [k193 lr230:231 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp167 [k192 lr229:230 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l132:s231:k254:d0:s0)		_sys_lumi_min [k178 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed} = iTemp164 [k189 lr226:231 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp168 [k193 lr230:231 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l133:s232:k257:d0:s0)		 goto _swBrk_0($27)
check.c(l134:s233:k258:d0:s0)	 _case_0_57($24) :
check.c(l135:s234:k259:d0:s0)		iTemp171 [k196 lr234:235 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l135:s235:k260:d0:s0)		iTemp172 [k197 lr235:236 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp171 [k196 lr234:235 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l135:s236:k261:d0:s0)		iTemp173 [k198 lr236:237 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp172 [k197 lr235:236 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l135:s237:k262:d0:s0)		iTemp174 [k199 lr237:239 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp173 [k198 lr236:237 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l135:s238:k329:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l135:s239:k330:d0:s0)		send iTemp174 [k199 lr237:239 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l135:s240:k331:d0:s0)		iTemp175 [k200 lr240:248 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l135:s241:k264:d0:s0)		iTemp176 [k201 lr241:242 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l135:s242:k265:d0:s0)		iTemp177 [k202 lr242:243 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp176 [k201 lr241:242 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l135:s243:k266:d0:s0)		iTemp178 [k203 lr243:244 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp177 [k202 lr242:243 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l135:s244:k267:d0:s0)		iTemp179 [k204 lr244:246 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp178 [k203 lr243:244 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l135:s245:k332:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l135:s246:k333:d0:s0)		send iTemp179 [k204 lr244:246 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l135:s247:k334:d0:s0)		iTemp180 [k205 lr247:248 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l135:s248:k269:d0:s0)		iTemp181 [k206 lr248:253 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp175 [k200 lr240:248 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp180 [k205 lr247:248 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l136:s249:k270:d0:s0)		iTemp182 [k207 lr249:250 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x00 r0x01 r0x02 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l136:s250:k271:d0:s0)		iTemp183 [k208 lr250:251 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x00 ] = @[iTemp182 [k207 lr249:250 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x00 r0x01 r0x02 ] + 0x0 {const-unsigned-char literal}]
check.c(l136:s251:k272:d0:s0)		iTemp184 [k209 lr251:252 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x00 r0x01 ] = (int fixed)iTemp183 [k208 lr250:251 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x00 ]
check.c(l136:s252:k273:d0:s0)		iTemp185 [k210 lr252:253 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x00 r0x01 ] = iTemp184 [k209 lr251:252 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x00 r0x01 ] - 0x30 {int literal}
check.c(l136:s253:k274:d0:s0)		_sys_temp_max [k160 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed} = iTemp181 [k206 lr248:253 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp185 [k210 lr252:253 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x00 r0x01 ]
check.c(l137:s254:k277:d0:s0)		 goto _swBrk_0($27)
check.c(l138:s255:k278:d0:s0)	 _case_0_82($25) :
check.c(l139:s256:k279:d0:s0)		iTemp1 [k4 lr4:258 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _check_comando_ret_1_74}[r0x03 ] := 0x0 {const-char literal}
check.c(l143:s257:k283:d0:s0)	 _swBrk_0($27) :
check.c(l145:s258:k284:d0:s0)		ret iTemp1 [k4 lr4:258 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _check_comando_ret_1_74}[r0x03 ]
check.c(l145:s259:k285:d0:s0)	 _return($32) :
check.c(l145:s260:k286:d0:s0)		eproc _check_comando [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char function ( char generic* fixed) fixed}

----------------------------------------------------------------
Basic Block _eBBlock41 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 9 : bbnum = 8 1st iCode = 22 , last iCode = 23
visited 0 : hasFcall = 0

defines bitVector :bitvector Size = 299 bSize = 38
Bits on { (22) }

local defines bitVector :bitvector Size = 299 bSize = 38
Bits on { (22) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (3) (5) (6) (8) (10) (12) (14) (16) (18) (20) }

outDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (3) (5) (6) (8) (10) (12) (14) (16) (18) (20) (22) }

usesDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (5) (22) }

----------------------------------------------------------------
check.c(l79:s22:k22:d0:s0)		iTemp12 [k16 lr22:23 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp3 [k7 lr5:24 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] == 0x39 {const-char literal}
check.c(l79:s23:k23:d0:s0)		if iTemp12 [k16 lr22:23 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _case_0_57($24)
check.c(l79:s24:k24:d0:s0)		iTemp13 [k17 lr24:25 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp3 [k7 lr5:24 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] == 0x52 {const-char literal}
check.c(l79:s25:k25:d0:s0)		if iTemp13 [k17 lr24:25 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _case_0_82($25)
check.c(l79:s26:k26:d0:s0)		 goto _swBrk_0($27)
check.c(l80:s27:k27:d0:s0)	 _case_0_49($1) :
check.c(l81:s28:k28:d0:s0)		iTemp15 [k20 lr28:29 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l81:s29:k29:d0:s0)		iTemp16 [k21 lr29:30 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp15 [k20 lr28:29 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l81:s30:k30:d0:s0)		iTemp14 [k18 lr30:53 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_led_num_1_74}[r0x04 ] = iTemp16 [k21 lr29:30 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] - 0x30 {char literal}
check.c(l82:s31:k32:d0:s0)		if iTemp14 [k18 lr30:53 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_led_num_1_74}[r0x04 ] != 0 goto _iffalse_3($3)
check.c(l83:s32:k35:d0:s0)		iTemp18 [k24 lr32:33 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x05 r0x06 r0x07 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l83:s33:k36:d0:s0)		iTemp19 [k25 lr33:34 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = @[iTemp18 [k24 lr32:33 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x05 r0x06 r0x07 ] + 0x0 {const-unsigned-char literal}]
check.c(l83:s34:k37:d0:s0)		iTemp20 [k26 lr34:36 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = iTemp19 [k25 lr33:34 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] - 0x30 {char literal}
check.c(l83:s35:k38:d0:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
check.c(l83:s36:k39:d0:s0)		send iTemp20 [k26 lr34:36 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ]{argreg = 2}
check.c(l83:s37:k40:d0:s0)		iTemp21 [k29 lr37:37 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _led [k23 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( unsigned-char fixed, unsigned-char fixed) fixed}
check.c(l83:s38:k41:d0:s0)		 goto _swBrk_0($27)
check.c(l83:s39:k42:d0:s0)	 _iffalse_3($3) :
check.c(l85:s40:k43:d0:s0)		iTemp23 [k32 lr40:41 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x05 r0x06 r0x07 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l85:s41:k44:d0:s0)		iTemp24 [k33 lr41:42 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = @[iTemp23 [k32 lr40:41 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x05 r0x06 r0x07 ] + 0x0 {const-unsigned-char literal}]
check.c(l85:s42:k45:d0:s0)		iTemp25 [k34 lr42:43 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = iTemp24 [k33 lr41:42 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] - 0x30 {char literal}
check.c(l85:s43:k46:d0:s0)		iTemp26 [k35 lr43:48 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = iTemp25 [k34 lr42:43 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] * 0x64 {const-unsigned-char literal}
check.c(l85:s44:k47:d0:s0)		iTemp27 [k36 lr44:45 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l85:s45:k48:d0:s0)		iTemp28 [k37 lr45:46 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp27 [k36 lr44:45 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l85:s46:k49:d0:s0)		iTemp29 [k38 lr46:47 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = iTemp28 [k37 lr45:46 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] - 0x30 {char literal}
check.c(l85:s47:k50:d0:s0)		iTemp30 [k39 lr47:48 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = iTemp29 [k38 lr46:47 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] * 0xa {const-unsigned-char literal}
check.c(l85:s48:k51:d0:s0)		iTemp31 [k40 lr48:51 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = iTemp26 [k35 lr43:48 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] + iTemp30 [k39 lr47:48 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l86:s49:k52:d0:s0)		iTemp32 [k41 lr49:50 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x4 {const-unsigned-char literal}
check.c(l86:s50:k53:d0:s0)		iTemp33 [k42 lr50:51 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp32 [k41 lr49:50 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l86:s51:k54:d0:s0)		iTemp34 [k43 lr51:52 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = iTemp31 [k40 lr48:51 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] + iTemp33 [k42 lr50:51 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l86:s52:k55:d0:s0)		iTemp22 [k30 lr52:55 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_pwm_1_74}[r0x05 ] = iTemp34 [k43 lr51:52 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] - 0x30 {char literal}
check.c(l87:s53:k57:d0:s0)		iTemp36 [k46 lr53:55 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = iTemp14 [k18 lr30:53 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_led_num_1_74}[r0x04 ] - 0x1 {char literal}
check.c(l87:s54:k58:d0:s0)		send iTemp36 [k46 lr53:55 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]{argreg = 1}
check.c(l87:s55:k59:d0:s0)		send iTemp22 [k30 lr52:55 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_pwm_1_74}[r0x05 ]{argreg = 2}
check.c(l87:s56:k60:d0:s0)		iTemp37 [k49 lr56:56 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _set_pwm [k45 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( unsigned-char fixed, unsigned-char fixed) fixed}
check.c(l89:s57:k62:d0:s0)		 goto _swBrk_0($27)
check.c(l90:s58:k63:d0:s0)	 _case_0_50($5) :
check.c(l91:s59:k64:d0:s0)		iTemp38 [k51 lr59:59 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _limpa_lcd [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( ) fixed}
check.c(l94:s60:k65:d0:s0)		iTemp39 [k53 lr60:88 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] = &[_check_comando_linha_1_1_74 [k52 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [17] fixed}]
check.c(l94:s61:k66:d0:s0)		iTemp40 [k54 lr61:62 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] = iTemp39 [k53 lr60:88 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] + 0x10 {const-unsigned-char literal}
check.c(l94:s62:k67:d0:s0)		*(iTemp40 [k54 lr61:62 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat]) := 0x0 {const-char literal}
check.c(l95:s63:k68:d0:s0)		iTemp41 [k56 lr63:93 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] = &[_check_comando_linha_2_1_74 [k55 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [17] fixed}]
check.c(l95:s64:k69:d0:s0)		iTemp42 [k57 lr64:65 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] = iTemp41 [k56 lr63:93 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] + 0x10 {const-unsigned-char literal}
check.c(l95:s65:k70:d0:s0)		*(iTemp42 [k57 lr64:65 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat]) := 0x0 {const-char literal}
check.c(l96:s66:k289:d0:s0)		iTemp50 [k66 lr66:76 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] := 0x1 {const-char literal}
check.c(l96:s68:k72:d1:s0)	 _forbody_1($28) :
check.c(l97:s69:k74:d1:s0)		iTemp45 [k61 lr69:70 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = iTemp50 [k66 lr66:76 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] - 0x1 {char literal}
check.c(l97:s70:k75:d1:s0)		iTemp46 [k62 lr70:73 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x05 r0x06 ] = iTemp39 [k53 lr60:88 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] + iTemp45 [k61 lr69:70 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ]
check.c(l97:s71:k76:d1:s0)		iTemp47 [k63 lr71:72 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x07 r0x08 r0x09 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + iTemp50 [k66 lr66:76 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ]
check.c(l97:s72:k77:d1:s0)		iTemp48 [k64 lr72:73 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x07 ] = @[iTemp47 [k63 lr71:72 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x07 r0x08 r0x09 ] + 0x0 {const-unsigned-char literal}]
check.c(l97:s73:k78:d1:s0)		*(iTemp46 [k62 lr70:73 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x05 r0x06 ]) := iTemp48 [k64 lr72:73 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x07 ]
check.c(l96:s74:k81:d1:s0)		iTemp50 [k66 lr66:76 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] = iTemp50 [k66 lr66:76 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] + 0x1 {const-unsigned-char literal}
check.c(l96:s75:k83:d1:s0)		iTemp51 [k67 lr75:76 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp50 [k66 lr66:76 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] < 0x11 {const-char literal}
check.c(l96:s76:k84:d1:s0)		if iTemp51 [k67 lr75:76 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forbody_1($28)
check.c(l98:s77:k292:d0:s0)		iTemp58 [k74 lr77:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] := 0x11 {const-char literal}
check.c(l98:s79:k88:d1:s0)	 _forbody_2($30) :
check.c(l99:s80:k90:d1:s0)		iTemp53 [k69 lr80:81 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = iTemp58 [k74 lr77:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] - 0x11 {char literal}
check.c(l99:s81:k91:d1:s0)		iTemp54 [k70 lr81:84 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x05 r0x06 ] = iTemp41 [k56 lr63:93 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] + iTemp53 [k69 lr80:81 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ]
check.c(l99:s82:k92:d1:s0)		iTemp55 [k71 lr82:83 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x07 r0x08 r0x09 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + iTemp58 [k74 lr77:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ]
check.c(l99:s83:k93:d1:s0)		iTemp56 [k72 lr83:84 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x07 ] = @[iTemp55 [k71 lr82:83 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x07 r0x08 r0x09 ] + 0x0 {const-unsigned-char literal}]
check.c(l99:s84:k94:d1:s0)		*(iTemp54 [k70 lr81:84 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x05 r0x06 ]) := iTemp56 [k72 lr83:84 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x07 ]
check.c(l98:s85:k97:d1:s0)		iTemp58 [k74 lr77:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] = iTemp58 [k74 lr77:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] + 0x1 {const-unsigned-char literal}
check.c(l98:s86:k99:d1:s0)		iTemp59 [k75 lr86:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp58 [k74 lr77:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] < 0x21 {const-char literal}
check.c(l98:s87:k100:d1:s0)		if iTemp59 [k75 lr86:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forbody_2($30)
check.c(l100:s88:k103:d0:s0)		iTemp60 [k77 lr88:89 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] := iTemp39 [k53 lr60:88 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat]
check.c(l100:s89:k104:d0:s0)		iTemp61 [k78 lr89:90 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = (char generic* fixed)iTemp60 [k77 lr88:89 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat]
check.c(l100:s90:k105:d0:s0)		send iTemp61 [k78 lr89:90 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ]{argreg = 1}
check.c(l100:s91:k106:d0:s0)		iTemp62 [k80 lr91:91 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _print_lcd_string [k76 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char generic* fixed) fixed}
check.c(l101:s92:k107:d0:s0)		iTemp63 [k82 lr92:92 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _print_lcd_ln [k81 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( ) fixed}
check.c(l102:s93:k108:d0:s0)		iTemp64 [k83 lr93:94 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] := iTemp41 [k56 lr63:93 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat]
check.c(l102:s94:k109:d0:s0)		iTemp65 [k84 lr94:95 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = (char generic* fixed)iTemp64 [k83 lr93:94 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat]
check.c(l102:s95:k110:d0:s0)		send iTemp65 [k84 lr94:95 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ]{argreg = 1}
check.c(l102:s96:k111:d0:s0)		iTemp66 [k85 lr96:96 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _print_lcd_string [k76 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char generic* fixed) fixed}
check.c(l103:s97:k112:d0:s0)		iTemp1 [k4 lr4:258 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _check_comando_ret_1_74}[r0x03 ] := 0x34 {const-unsigned-char literal}
check.c(l104:s98:k113:d0:s0)		 goto _swBrk_0($27)
check.c(l105:s99:k114:d0:s0)	 _case_0_51($8) :
check.c(l106:s100:k115:d0:s0)		iTemp67 [k86 lr100:101 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l106:s101:k116:d0:s0)		iTemp68 [k87 lr101:102 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp67 [k86 lr100:101 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l106:s102:k117:d0:s0)		iTemp69 [k88 lr102:103 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp68 [k87 lr101:102 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l106:s103:k118:d0:s0)		iTemp70 [k89 lr103:109 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp69 [k88 lr102:103 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l106:s104:k119:d0:s0)		iTemp71 [k90 lr104:105 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp70 [k89 lr103:109 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] == 0x1 {int literal}
check.c(l106:s105:k120:d0:s0)		if iTemp71 [k90 lr104:105 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} == 0 goto _iffalse_5($12)
check.c(l107:s106:k124:d0:s0)		_hab_alarme [k91 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed} := 0x1 {const-unsigned-char literal}
check.c(l107:s107:k125:d0:s0)		 goto _swBrk_0($27)
check.c(l107:s108:k126:d0:s0)	 _iffalse_5($12) :
check.c(l108:s109:k131:d0:s0)		if iTemp70 [k89 lr103:109 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] != 0 goto _swBrk_0($27)
check.c(l109:s110:k135:d0:s0)		_hab_alarme [k91 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed} := 0x0 {const-unsigned-char literal}
check.c(l110:s111:k138:d0:s0)		 goto _swBrk_0($27)
check.c(l111:s112:k139:d0:s0)	 _case_0_52($14) :
check.c(l112:s113:k140:d0:s0)		iTemp78 [k98 lr113:114 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l112:s114:k141:d0:s0)		iTemp79 [k99 lr114:115 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp78 [k98 lr113:114 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l112:s115:k142:d0:s0)		iTemp80 [k100 lr115:116 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp79 [k99 lr114:115 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l112:s116:k143:d0:s0)		iTemp81 [k101 lr116:122 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp80 [k100 lr115:116 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l112:s117:k144:d0:s0)		iTemp82 [k102 lr117:118 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp81 [k101 lr116:122 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] == 0x1 {int literal}
check.c(l112:s118:k145:d0:s0)		if iTemp82 [k102 lr117:118 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} == 0 goto _iffalse_7($18)
check.c(l113:s119:k149:d0:s0)		_hab_sensor [k103 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed} := 0x0 {const-unsigned-char literal}
check.c(l113:s120:k150:d0:s0)		 goto _swBrk_0($27)
check.c(l113:s121:k151:d0:s0)	 _iffalse_7($18) :
check.c(l114:s122:k156:d0:s0)		if iTemp81 [k101 lr116:122 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] != 0 goto _swBrk_0($27)
check.c(l115:s123:k160:d0:s0)		_hab_sensor [k103 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed} := 0x2 {const-unsigned-char literal}
check.c(l116:s124:k163:d0:s0)		 goto _swBrk_0($27)
check.c(l117:s125:k164:d0:s0)	 _case_0_53($20) :
check.c(l118:s126:k165:d0:s0)		iTemp89 [k111 lr126:127 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{unsigned-long-int near* fixed}[remat] = &[_sys_timer_pool [k110 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int [2] fixed}]
check.c(l118:s127:k166:d0:s0)		iTemp90 [k112 lr127:165 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{unsigned-long-int near* fixed}[remat] = iTemp89 [k111 lr126:127 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{unsigned-long-int near* fixed}[remat] + 0x4 {unsigned-char literal}
check.c(l118:s128:k167:d0:s0)		iTemp91 [k113 lr128:129 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l118:s129:k168:d0:s0)		iTemp92 [k114 lr129:130 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp91 [k113 lr128:129 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l118:s130:k169:d0:s0)		iTemp93 [k115 lr130:131 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp92 [k114 lr129:130 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l118:s131:k170:d0:s0)		iTemp94 [k116 lr131:133 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp93 [k115 lr130:131 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l118:s132:k299:d0:s0)		send 0x2710 {const-int literal}{argreg = 1}
check.c(l118:s133:k300:d0:s0)		send iTemp94 [k116 lr131:133 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l118:s134:k301:d0:s0)		iTemp95 [k117 lr134:142 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l118:s135:k172:d0:s0)		iTemp96 [k118 lr135:136 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l118:s136:k173:d0:s0)		iTemp97 [k119 lr136:137 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp96 [k118 lr135:136 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l118:s137:k174:d0:s0)		iTemp98 [k120 lr137:138 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp97 [k119 lr136:137 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l118:s138:k175:d0:s0)		iTemp99 [k121 lr138:140 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp98 [k120 lr137:138 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l118:s139:k302:d0:s0)		send 0x3e8 {const-int literal}{argreg = 1}
check.c(l118:s140:k303:d0:s0)		send iTemp99 [k121 lr138:140 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l118:s141:k304:d0:s0)		iTemp100 [k122 lr141:142 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l118:s142:k177:d0:s0)		iTemp101 [k123 lr142:150 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp95 [k117 lr134:142 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp100 [k122 lr141:142 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l119:s143:k178:d0:s0)		iTemp102 [k124 lr143:144 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l119:s144:k179:d0:s0)		iTemp103 [k125 lr144:145 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp102 [k124 lr143:144 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l119:s145:k180:d0:s0)		iTemp104 [k126 lr145:146 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp103 [k125 lr144:145 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l119:s146:k181:d0:s0)		iTemp105 [k127 lr146:148 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp104 [k126 lr145:146 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l119:s147:k305:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l119:s148:k306:d0:s0)		send iTemp105 [k127 lr146:148 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l119:s149:k307:d0:s0)		iTemp106 [k128 lr149:150 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l119:s150:k183:d0:s0)		iTemp107 [k129 lr150:158 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp101 [k123 lr142:150 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp106 [k128 lr149:150 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l119:s151:k184:d0:s0)		iTemp108 [k130 lr151:152 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x4 {const-unsigned-char literal}
check.c(l119:s152:k185:d0:s0)		iTemp109 [k131 lr152:153 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp108 [k130 lr151:152 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l119:s153:k186:d0:s0)		iTemp110 [k132 lr153:154 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp109 [k131 lr152:153 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l119:s154:k187:d0:s0)		iTemp111 [k133 lr154:156 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp110 [k132 lr153:154 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l119:s155:k308:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l119:s156:k309:d0:s0)		send iTemp111 [k133 lr154:156 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l119:s157:k310:d0:s0)		iTemp112 [k134 lr157:158 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l119:s158:k189:d0:s0)		iTemp113 [k135 lr158:162 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp107 [k129 lr150:158 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp112 [k134 lr157:158 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l120:s159:k190:d0:s0)		iTemp114 [k136 lr159:160 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x5 {const-unsigned-char literal}
check.c(l120:s160:k191:d0:s0)		iTemp115 [k137 lr160:161 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp114 [k136 lr159:160 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l120:s161:k192:d0:s0)		iTemp116 [k138 lr161:162 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp115 [k137 lr160:161 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l120:s162:k193:d0:s0)		iTemp117 [k139 lr162:163 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = iTemp113 [k135 lr158:162 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp116 [k138 lr161:162 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ]
check.c(l120:s163:k194:d0:s0)		iTemp118 [k140 lr163:164 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp117 [k139 lr162:163 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l120:s164:k195:d0:s0)		iTemp119 [k141 lr164:165 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x04 r0x05 r0x06 r0x07 ] = (unsigned-long-int fixed)iTemp118 [k140 lr163:164 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]
check.c(l120:s165:k196:d0:s0)		*(iTemp90 [k112 lr127:165 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{unsigned-long-int near* fixed}[remat]) := iTemp119 [k141 lr164:165 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x04 r0x05 r0x06 r0x07 ]
check.c(l121:s166:k197:d0:s0)		 goto _swBrk_0($27)
check.c(l122:s167:k198:d0:s0)	 _case_0_54($21) :
check.c(l123:s168:k199:d0:s0)		iTemp120 [k143 lr168:169 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l123:s169:k200:d0:s0)		iTemp121 [k144 lr169:170 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp120 [k143 lr168:169 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l123:s170:k201:d0:s0)		iTemp122 [k145 lr170:171 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp121 [k144 lr169:170 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l123:s171:k202:d0:s0)		iTemp123 [k146 lr171:173 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp122 [k145 lr170:171 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l123:s172:k311:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l123:s173:k312:d0:s0)		send iTemp123 [k146 lr171:173 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l123:s174:k313:d0:s0)		iTemp124 [k147 lr174:182 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l123:s175:k204:d0:s0)		iTemp125 [k148 lr175:176 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l123:s176:k205:d0:s0)		iTemp126 [k149 lr176:177 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp125 [k148 lr175:176 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l123:s177:k206:d0:s0)		iTemp127 [k150 lr177:178 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp126 [k149 lr176:177 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l123:s178:k207:d0:s0)		iTemp128 [k151 lr178:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp127 [k150 lr177:178 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l123:s179:k314:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l123:s180:k315:d0:s0)		send iTemp128 [k151 lr178:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l123:s181:k316:d0:s0)		iTemp129 [k152 lr181:182 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l123:s182:k209:d0:s0)		iTemp130 [k153 lr182:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp124 [k147 lr174:182 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp129 [k152 lr181:182 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l124:s183:k210:d0:s0)		iTemp131 [k154 lr183:184 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l124:s184:k211:d0:s0)		iTemp132 [k155 lr184:185 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp131 [k154 lr183:184 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l124:s185:k212:d0:s0)		iTemp133 [k156 lr185:186 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp132 [k155 lr184:185 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l124:s186:k213:d0:s0)		iTemp134 [k157 lr186:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp133 [k156 lr185:186 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l124:s187:k214:d0:s0)		_sys_temp_min [k142 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed} = iTemp130 [k153 lr182:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp134 [k157 lr186:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l125:s188:k217:d0:s0)		 goto _swBrk_0($27)
check.c(l126:s189:k218:d0:s0)	 _case_0_55($22) :
check.c(l127:s190:k219:d0:s0)		iTemp137 [k161 lr190:191 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l127:s191:k220:d0:s0)		iTemp138 [k162 lr191:192 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp137 [k161 lr190:191 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l127:s192:k221:d0:s0)		iTemp139 [k163 lr192:193 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp138 [k162 lr191:192 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l127:s193:k222:d0:s0)		iTemp140 [k164 lr193:195 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp139 [k163 lr192:193 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l127:s194:k317:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l127:s195:k318:d0:s0)		send iTemp140 [k164 lr193:195 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l127:s196:k319:d0:s0)		iTemp141 [k165 lr196:204 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l127:s197:k224:d0:s0)		iTemp142 [k166 lr197:198 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l127:s198:k225:d0:s0)		iTemp143 [k167 lr198:199 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp142 [k166 lr197:198 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l127:s199:k226:d0:s0)		iTemp144 [k168 lr199:200 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp143 [k167 lr198:199 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l127:s200:k227:d0:s0)		iTemp145 [k169 lr200:202 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp144 [k168 lr199:200 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l127:s201:k320:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l127:s202:k321:d0:s0)		send iTemp145 [k169 lr200:202 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l127:s203:k322:d0:s0)		iTemp146 [k170 lr203:204 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l127:s204:k229:d0:s0)		iTemp147 [k171 lr204:209 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp141 [k165 lr196:204 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp146 [k170 lr203:204 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l128:s205:k230:d0:s0)		iTemp148 [k172 lr205:206 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l128:s206:k231:d0:s0)		iTemp149 [k173 lr206:207 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp148 [k172 lr205:206 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l128:s207:k232:d0:s0)		iTemp150 [k174 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp149 [k173 lr206:207 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l128:s208:k233:d0:s0)		iTemp151 [k175 lr208:209 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp150 [k174 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l128:s209:k234:d0:s0)		_sys_temp_max [k160 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed} = iTemp147 [k171 lr204:209 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp151 [k175 lr208:209 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l129:s210:k237:d0:s0)		 goto _swBrk_0($27)
check.c(l130:s211:k238:d0:s0)	 _case_0_56($23) :
check.c(l131:s212:k239:d0:s0)		iTemp154 [k179 lr212:213 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l131:s213:k240:d0:s0)		iTemp155 [k180 lr213:214 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp154 [k179 lr212:213 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l131:s214:k241:d0:s0)		iTemp156 [k181 lr214:215 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp155 [k180 lr213:214 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l131:s215:k242:d0:s0)		iTemp157 [k182 lr215:217 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp156 [k181 lr214:215 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l131:s216:k323:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l131:s217:k324:d0:s0)		send iTemp157 [k182 lr215:217 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l131:s218:k325:d0:s0)		iTemp158 [k183 lr218:226 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l131:s219:k244:d0:s0)		iTemp159 [k184 lr219:220 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l131:s220:k245:d0:s0)		iTemp160 [k185 lr220:221 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp159 [k184 lr219:220 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l131:s221:k246:d0:s0)		iTemp161 [k186 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp160 [k185 lr220:221 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l131:s222:k247:d0:s0)		iTemp162 [k187 lr222:224 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp161 [k186 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l131:s223:k326:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l131:s224:k327:d0:s0)		send iTemp162 [k187 lr222:224 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l131:s225:k328:d0:s0)		iTemp163 [k188 lr225:226 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l131:s226:k249:d0:s0)		iTemp164 [k189 lr226:231 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp158 [k183 lr218:226 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp163 [k188 lr225:226 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l132:s227:k250:d0:s0)		iTemp165 [k190 lr227:228 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l132:s228:k251:d0:s0)		iTemp166 [k191 lr228:229 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp165 [k190 lr227:228 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l132:s229:k252:d0:s0)		iTemp167 [k192 lr229:230 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp166 [k191 lr228:229 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l132:s230:k253:d0:s0)		iTemp168 [k193 lr230:231 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp167 [k192 lr229:230 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l132:s231:k254:d0:s0)		_sys_lumi_min [k178 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed} = iTemp164 [k189 lr226:231 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp168 [k193 lr230:231 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l133:s232:k257:d0:s0)		 goto _swBrk_0($27)
check.c(l134:s233:k258:d0:s0)	 _case_0_57($24) :
check.c(l135:s234:k259:d0:s0)		iTemp171 [k196 lr234:235 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l135:s235:k260:d0:s0)		iTemp172 [k197 lr235:236 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp171 [k196 lr234:235 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l135:s236:k261:d0:s0)		iTemp173 [k198 lr236:237 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp172 [k197 lr235:236 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l135:s237:k262:d0:s0)		iTemp174 [k199 lr237:239 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp173 [k198 lr236:237 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l135:s238:k329:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l135:s239:k330:d0:s0)		send iTemp174 [k199 lr237:239 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l135:s240:k331:d0:s0)		iTemp175 [k200 lr240:248 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l135:s241:k264:d0:s0)		iTemp176 [k201 lr241:242 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l135:s242:k265:d0:s0)		iTemp177 [k202 lr242:243 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp176 [k201 lr241:242 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l135:s243:k266:d0:s0)		iTemp178 [k203 lr243:244 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp177 [k202 lr242:243 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l135:s244:k267:d0:s0)		iTemp179 [k204 lr244:246 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp178 [k203 lr243:244 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l135:s245:k332:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l135:s246:k333:d0:s0)		send iTemp179 [k204 lr244:246 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l135:s247:k334:d0:s0)		iTemp180 [k205 lr247:248 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l135:s248:k269:d0:s0)		iTemp181 [k206 lr248:253 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp175 [k200 lr240:248 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp180 [k205 lr247:248 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l136:s249:k270:d0:s0)		iTemp182 [k207 lr249:250 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x00 r0x01 r0x02 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l136:s250:k271:d0:s0)		iTemp183 [k208 lr250:251 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x00 ] = @[iTemp182 [k207 lr249:250 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x00 r0x01 r0x02 ] + 0x0 {const-unsigned-char literal}]
check.c(l136:s251:k272:d0:s0)		iTemp184 [k209 lr251:252 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x00 r0x01 ] = (int fixed)iTemp183 [k208 lr250:251 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x00 ]
check.c(l136:s252:k273:d0:s0)		iTemp185 [k210 lr252:253 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x00 r0x01 ] = iTemp184 [k209 lr251:252 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x00 r0x01 ] - 0x30 {int literal}
check.c(l136:s253:k274:d0:s0)		_sys_temp_max [k160 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed} = iTemp181 [k206 lr248:253 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp185 [k210 lr252:253 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x00 r0x01 ]
check.c(l137:s254:k277:d0:s0)		 goto _swBrk_0($27)
check.c(l138:s255:k278:d0:s0)	 _case_0_82($25) :
check.c(l139:s256:k279:d0:s0)		iTemp1 [k4 lr4:258 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _check_comando_ret_1_74}[r0x03 ] := 0x0 {const-char literal}
check.c(l143:s257:k283:d0:s0)	 _swBrk_0($27) :
check.c(l145:s258:k284:d0:s0)		ret iTemp1 [k4 lr4:258 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _check_comando_ret_1_74}[r0x03 ]
check.c(l145:s259:k285:d0:s0)	 _return($32) :
check.c(l145:s260:k286:d0:s0)		eproc _check_comando [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char function ( char generic* fixed) fixed}

----------------------------------------------------------------
Basic Block _eBBlock42 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 10 : bbnum = 9 1st iCode = 24 , last iCode = 25
visited 0 : hasFcall = 0

defines bitVector :bitvector Size = 299 bSize = 38
Bits on { (24) }

local defines bitVector :bitvector Size = 299 bSize = 38
Bits on { (24) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (3) (5) (6) (8) (10) (12) (14) (16) (18) (20) (22) }

outDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (3) (5) (6) (8) (10) (12) (14) (16) (18) (20) (22) (24) }

usesDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (5) (24) }

----------------------------------------------------------------
check.c(l79:s24:k24:d0:s0)		iTemp13 [k17 lr24:25 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp3 [k7 lr5:24 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] == 0x52 {const-char literal}
check.c(l79:s25:k25:d0:s0)		if iTemp13 [k17 lr24:25 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _case_0_82($25)
check.c(l79:s26:k26:d0:s0)		 goto _swBrk_0($27)
check.c(l80:s27:k27:d0:s0)	 _case_0_49($1) :
check.c(l81:s28:k28:d0:s0)		iTemp15 [k20 lr28:29 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l81:s29:k29:d0:s0)		iTemp16 [k21 lr29:30 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp15 [k20 lr28:29 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l81:s30:k30:d0:s0)		iTemp14 [k18 lr30:53 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_led_num_1_74}[r0x04 ] = iTemp16 [k21 lr29:30 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] - 0x30 {char literal}
check.c(l82:s31:k32:d0:s0)		if iTemp14 [k18 lr30:53 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_led_num_1_74}[r0x04 ] != 0 goto _iffalse_3($3)
check.c(l83:s32:k35:d0:s0)		iTemp18 [k24 lr32:33 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x05 r0x06 r0x07 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l83:s33:k36:d0:s0)		iTemp19 [k25 lr33:34 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = @[iTemp18 [k24 lr32:33 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x05 r0x06 r0x07 ] + 0x0 {const-unsigned-char literal}]
check.c(l83:s34:k37:d0:s0)		iTemp20 [k26 lr34:36 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = iTemp19 [k25 lr33:34 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] - 0x30 {char literal}
check.c(l83:s35:k38:d0:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
check.c(l83:s36:k39:d0:s0)		send iTemp20 [k26 lr34:36 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ]{argreg = 2}
check.c(l83:s37:k40:d0:s0)		iTemp21 [k29 lr37:37 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _led [k23 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( unsigned-char fixed, unsigned-char fixed) fixed}
check.c(l83:s38:k41:d0:s0)		 goto _swBrk_0($27)
check.c(l83:s39:k42:d0:s0)	 _iffalse_3($3) :
check.c(l85:s40:k43:d0:s0)		iTemp23 [k32 lr40:41 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x05 r0x06 r0x07 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l85:s41:k44:d0:s0)		iTemp24 [k33 lr41:42 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = @[iTemp23 [k32 lr40:41 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x05 r0x06 r0x07 ] + 0x0 {const-unsigned-char literal}]
check.c(l85:s42:k45:d0:s0)		iTemp25 [k34 lr42:43 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = iTemp24 [k33 lr41:42 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] - 0x30 {char literal}
check.c(l85:s43:k46:d0:s0)		iTemp26 [k35 lr43:48 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = iTemp25 [k34 lr42:43 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] * 0x64 {const-unsigned-char literal}
check.c(l85:s44:k47:d0:s0)		iTemp27 [k36 lr44:45 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l85:s45:k48:d0:s0)		iTemp28 [k37 lr45:46 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp27 [k36 lr44:45 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l85:s46:k49:d0:s0)		iTemp29 [k38 lr46:47 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = iTemp28 [k37 lr45:46 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] - 0x30 {char literal}
check.c(l85:s47:k50:d0:s0)		iTemp30 [k39 lr47:48 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = iTemp29 [k38 lr46:47 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] * 0xa {const-unsigned-char literal}
check.c(l85:s48:k51:d0:s0)		iTemp31 [k40 lr48:51 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = iTemp26 [k35 lr43:48 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] + iTemp30 [k39 lr47:48 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l86:s49:k52:d0:s0)		iTemp32 [k41 lr49:50 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x4 {const-unsigned-char literal}
check.c(l86:s50:k53:d0:s0)		iTemp33 [k42 lr50:51 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp32 [k41 lr49:50 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l86:s51:k54:d0:s0)		iTemp34 [k43 lr51:52 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = iTemp31 [k40 lr48:51 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] + iTemp33 [k42 lr50:51 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l86:s52:k55:d0:s0)		iTemp22 [k30 lr52:55 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_pwm_1_74}[r0x05 ] = iTemp34 [k43 lr51:52 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] - 0x30 {char literal}
check.c(l87:s53:k57:d0:s0)		iTemp36 [k46 lr53:55 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = iTemp14 [k18 lr30:53 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_led_num_1_74}[r0x04 ] - 0x1 {char literal}
check.c(l87:s54:k58:d0:s0)		send iTemp36 [k46 lr53:55 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]{argreg = 1}
check.c(l87:s55:k59:d0:s0)		send iTemp22 [k30 lr52:55 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_pwm_1_74}[r0x05 ]{argreg = 2}
check.c(l87:s56:k60:d0:s0)		iTemp37 [k49 lr56:56 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _set_pwm [k45 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( unsigned-char fixed, unsigned-char fixed) fixed}
check.c(l89:s57:k62:d0:s0)		 goto _swBrk_0($27)
check.c(l90:s58:k63:d0:s0)	 _case_0_50($5) :
check.c(l91:s59:k64:d0:s0)		iTemp38 [k51 lr59:59 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _limpa_lcd [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( ) fixed}
check.c(l94:s60:k65:d0:s0)		iTemp39 [k53 lr60:88 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] = &[_check_comando_linha_1_1_74 [k52 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [17] fixed}]
check.c(l94:s61:k66:d0:s0)		iTemp40 [k54 lr61:62 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] = iTemp39 [k53 lr60:88 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] + 0x10 {const-unsigned-char literal}
check.c(l94:s62:k67:d0:s0)		*(iTemp40 [k54 lr61:62 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat]) := 0x0 {const-char literal}
check.c(l95:s63:k68:d0:s0)		iTemp41 [k56 lr63:93 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] = &[_check_comando_linha_2_1_74 [k55 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [17] fixed}]
check.c(l95:s64:k69:d0:s0)		iTemp42 [k57 lr64:65 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] = iTemp41 [k56 lr63:93 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] + 0x10 {const-unsigned-char literal}
check.c(l95:s65:k70:d0:s0)		*(iTemp42 [k57 lr64:65 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat]) := 0x0 {const-char literal}
check.c(l96:s66:k289:d0:s0)		iTemp50 [k66 lr66:76 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] := 0x1 {const-char literal}
check.c(l96:s68:k72:d1:s0)	 _forbody_1($28) :
check.c(l97:s69:k74:d1:s0)		iTemp45 [k61 lr69:70 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = iTemp50 [k66 lr66:76 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] - 0x1 {char literal}
check.c(l97:s70:k75:d1:s0)		iTemp46 [k62 lr70:73 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x05 r0x06 ] = iTemp39 [k53 lr60:88 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] + iTemp45 [k61 lr69:70 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ]
check.c(l97:s71:k76:d1:s0)		iTemp47 [k63 lr71:72 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x07 r0x08 r0x09 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + iTemp50 [k66 lr66:76 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ]
check.c(l97:s72:k77:d1:s0)		iTemp48 [k64 lr72:73 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x07 ] = @[iTemp47 [k63 lr71:72 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x07 r0x08 r0x09 ] + 0x0 {const-unsigned-char literal}]
check.c(l97:s73:k78:d1:s0)		*(iTemp46 [k62 lr70:73 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x05 r0x06 ]) := iTemp48 [k64 lr72:73 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x07 ]
check.c(l96:s74:k81:d1:s0)		iTemp50 [k66 lr66:76 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] = iTemp50 [k66 lr66:76 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] + 0x1 {const-unsigned-char literal}
check.c(l96:s75:k83:d1:s0)		iTemp51 [k67 lr75:76 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp50 [k66 lr66:76 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] < 0x11 {const-char literal}
check.c(l96:s76:k84:d1:s0)		if iTemp51 [k67 lr75:76 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forbody_1($28)
check.c(l98:s77:k292:d0:s0)		iTemp58 [k74 lr77:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] := 0x11 {const-char literal}
check.c(l98:s79:k88:d1:s0)	 _forbody_2($30) :
check.c(l99:s80:k90:d1:s0)		iTemp53 [k69 lr80:81 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = iTemp58 [k74 lr77:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] - 0x11 {char literal}
check.c(l99:s81:k91:d1:s0)		iTemp54 [k70 lr81:84 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x05 r0x06 ] = iTemp41 [k56 lr63:93 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] + iTemp53 [k69 lr80:81 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ]
check.c(l99:s82:k92:d1:s0)		iTemp55 [k71 lr82:83 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x07 r0x08 r0x09 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + iTemp58 [k74 lr77:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ]
check.c(l99:s83:k93:d1:s0)		iTemp56 [k72 lr83:84 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x07 ] = @[iTemp55 [k71 lr82:83 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x07 r0x08 r0x09 ] + 0x0 {const-unsigned-char literal}]
check.c(l99:s84:k94:d1:s0)		*(iTemp54 [k70 lr81:84 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x05 r0x06 ]) := iTemp56 [k72 lr83:84 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x07 ]
check.c(l98:s85:k97:d1:s0)		iTemp58 [k74 lr77:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] = iTemp58 [k74 lr77:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] + 0x1 {const-unsigned-char literal}
check.c(l98:s86:k99:d1:s0)		iTemp59 [k75 lr86:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp58 [k74 lr77:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] < 0x21 {const-char literal}
check.c(l98:s87:k100:d1:s0)		if iTemp59 [k75 lr86:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forbody_2($30)
check.c(l100:s88:k103:d0:s0)		iTemp60 [k77 lr88:89 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] := iTemp39 [k53 lr60:88 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat]
check.c(l100:s89:k104:d0:s0)		iTemp61 [k78 lr89:90 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = (char generic* fixed)iTemp60 [k77 lr88:89 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat]
check.c(l100:s90:k105:d0:s0)		send iTemp61 [k78 lr89:90 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ]{argreg = 1}
check.c(l100:s91:k106:d0:s0)		iTemp62 [k80 lr91:91 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _print_lcd_string [k76 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char generic* fixed) fixed}
check.c(l101:s92:k107:d0:s0)		iTemp63 [k82 lr92:92 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _print_lcd_ln [k81 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( ) fixed}
check.c(l102:s93:k108:d0:s0)		iTemp64 [k83 lr93:94 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] := iTemp41 [k56 lr63:93 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat]
check.c(l102:s94:k109:d0:s0)		iTemp65 [k84 lr94:95 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = (char generic* fixed)iTemp64 [k83 lr93:94 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat]
check.c(l102:s95:k110:d0:s0)		send iTemp65 [k84 lr94:95 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ]{argreg = 1}
check.c(l102:s96:k111:d0:s0)		iTemp66 [k85 lr96:96 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _print_lcd_string [k76 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char generic* fixed) fixed}
check.c(l103:s97:k112:d0:s0)		iTemp1 [k4 lr4:258 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _check_comando_ret_1_74}[r0x03 ] := 0x34 {const-unsigned-char literal}
check.c(l104:s98:k113:d0:s0)		 goto _swBrk_0($27)
check.c(l105:s99:k114:d0:s0)	 _case_0_51($8) :
check.c(l106:s100:k115:d0:s0)		iTemp67 [k86 lr100:101 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l106:s101:k116:d0:s0)		iTemp68 [k87 lr101:102 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp67 [k86 lr100:101 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l106:s102:k117:d0:s0)		iTemp69 [k88 lr102:103 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp68 [k87 lr101:102 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l106:s103:k118:d0:s0)		iTemp70 [k89 lr103:109 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp69 [k88 lr102:103 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l106:s104:k119:d0:s0)		iTemp71 [k90 lr104:105 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp70 [k89 lr103:109 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] == 0x1 {int literal}
check.c(l106:s105:k120:d0:s0)		if iTemp71 [k90 lr104:105 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} == 0 goto _iffalse_5($12)
check.c(l107:s106:k124:d0:s0)		_hab_alarme [k91 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed} := 0x1 {const-unsigned-char literal}
check.c(l107:s107:k125:d0:s0)		 goto _swBrk_0($27)
check.c(l107:s108:k126:d0:s0)	 _iffalse_5($12) :
check.c(l108:s109:k131:d0:s0)		if iTemp70 [k89 lr103:109 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] != 0 goto _swBrk_0($27)
check.c(l109:s110:k135:d0:s0)		_hab_alarme [k91 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed} := 0x0 {const-unsigned-char literal}
check.c(l110:s111:k138:d0:s0)		 goto _swBrk_0($27)
check.c(l111:s112:k139:d0:s0)	 _case_0_52($14) :
check.c(l112:s113:k140:d0:s0)		iTemp78 [k98 lr113:114 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l112:s114:k141:d0:s0)		iTemp79 [k99 lr114:115 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp78 [k98 lr113:114 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l112:s115:k142:d0:s0)		iTemp80 [k100 lr115:116 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp79 [k99 lr114:115 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l112:s116:k143:d0:s0)		iTemp81 [k101 lr116:122 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp80 [k100 lr115:116 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l112:s117:k144:d0:s0)		iTemp82 [k102 lr117:118 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp81 [k101 lr116:122 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] == 0x1 {int literal}
check.c(l112:s118:k145:d0:s0)		if iTemp82 [k102 lr117:118 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} == 0 goto _iffalse_7($18)
check.c(l113:s119:k149:d0:s0)		_hab_sensor [k103 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed} := 0x0 {const-unsigned-char literal}
check.c(l113:s120:k150:d0:s0)		 goto _swBrk_0($27)
check.c(l113:s121:k151:d0:s0)	 _iffalse_7($18) :
check.c(l114:s122:k156:d0:s0)		if iTemp81 [k101 lr116:122 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] != 0 goto _swBrk_0($27)
check.c(l115:s123:k160:d0:s0)		_hab_sensor [k103 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed} := 0x2 {const-unsigned-char literal}
check.c(l116:s124:k163:d0:s0)		 goto _swBrk_0($27)
check.c(l117:s125:k164:d0:s0)	 _case_0_53($20) :
check.c(l118:s126:k165:d0:s0)		iTemp89 [k111 lr126:127 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{unsigned-long-int near* fixed}[remat] = &[_sys_timer_pool [k110 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int [2] fixed}]
check.c(l118:s127:k166:d0:s0)		iTemp90 [k112 lr127:165 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{unsigned-long-int near* fixed}[remat] = iTemp89 [k111 lr126:127 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{unsigned-long-int near* fixed}[remat] + 0x4 {unsigned-char literal}
check.c(l118:s128:k167:d0:s0)		iTemp91 [k113 lr128:129 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l118:s129:k168:d0:s0)		iTemp92 [k114 lr129:130 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp91 [k113 lr128:129 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l118:s130:k169:d0:s0)		iTemp93 [k115 lr130:131 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp92 [k114 lr129:130 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l118:s131:k170:d0:s0)		iTemp94 [k116 lr131:133 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp93 [k115 lr130:131 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l118:s132:k299:d0:s0)		send 0x2710 {const-int literal}{argreg = 1}
check.c(l118:s133:k300:d0:s0)		send iTemp94 [k116 lr131:133 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l118:s134:k301:d0:s0)		iTemp95 [k117 lr134:142 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l118:s135:k172:d0:s0)		iTemp96 [k118 lr135:136 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l118:s136:k173:d0:s0)		iTemp97 [k119 lr136:137 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp96 [k118 lr135:136 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l118:s137:k174:d0:s0)		iTemp98 [k120 lr137:138 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp97 [k119 lr136:137 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l118:s138:k175:d0:s0)		iTemp99 [k121 lr138:140 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp98 [k120 lr137:138 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l118:s139:k302:d0:s0)		send 0x3e8 {const-int literal}{argreg = 1}
check.c(l118:s140:k303:d0:s0)		send iTemp99 [k121 lr138:140 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l118:s141:k304:d0:s0)		iTemp100 [k122 lr141:142 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l118:s142:k177:d0:s0)		iTemp101 [k123 lr142:150 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp95 [k117 lr134:142 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp100 [k122 lr141:142 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l119:s143:k178:d0:s0)		iTemp102 [k124 lr143:144 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l119:s144:k179:d0:s0)		iTemp103 [k125 lr144:145 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp102 [k124 lr143:144 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l119:s145:k180:d0:s0)		iTemp104 [k126 lr145:146 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp103 [k125 lr144:145 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l119:s146:k181:d0:s0)		iTemp105 [k127 lr146:148 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp104 [k126 lr145:146 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l119:s147:k305:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l119:s148:k306:d0:s0)		send iTemp105 [k127 lr146:148 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l119:s149:k307:d0:s0)		iTemp106 [k128 lr149:150 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l119:s150:k183:d0:s0)		iTemp107 [k129 lr150:158 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp101 [k123 lr142:150 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp106 [k128 lr149:150 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l119:s151:k184:d0:s0)		iTemp108 [k130 lr151:152 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x4 {const-unsigned-char literal}
check.c(l119:s152:k185:d0:s0)		iTemp109 [k131 lr152:153 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp108 [k130 lr151:152 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l119:s153:k186:d0:s0)		iTemp110 [k132 lr153:154 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp109 [k131 lr152:153 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l119:s154:k187:d0:s0)		iTemp111 [k133 lr154:156 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp110 [k132 lr153:154 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l119:s155:k308:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l119:s156:k309:d0:s0)		send iTemp111 [k133 lr154:156 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l119:s157:k310:d0:s0)		iTemp112 [k134 lr157:158 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l119:s158:k189:d0:s0)		iTemp113 [k135 lr158:162 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp107 [k129 lr150:158 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp112 [k134 lr157:158 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l120:s159:k190:d0:s0)		iTemp114 [k136 lr159:160 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x5 {const-unsigned-char literal}
check.c(l120:s160:k191:d0:s0)		iTemp115 [k137 lr160:161 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp114 [k136 lr159:160 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l120:s161:k192:d0:s0)		iTemp116 [k138 lr161:162 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp115 [k137 lr160:161 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l120:s162:k193:d0:s0)		iTemp117 [k139 lr162:163 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = iTemp113 [k135 lr158:162 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp116 [k138 lr161:162 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ]
check.c(l120:s163:k194:d0:s0)		iTemp118 [k140 lr163:164 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp117 [k139 lr162:163 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l120:s164:k195:d0:s0)		iTemp119 [k141 lr164:165 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x04 r0x05 r0x06 r0x07 ] = (unsigned-long-int fixed)iTemp118 [k140 lr163:164 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]
check.c(l120:s165:k196:d0:s0)		*(iTemp90 [k112 lr127:165 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{unsigned-long-int near* fixed}[remat]) := iTemp119 [k141 lr164:165 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x04 r0x05 r0x06 r0x07 ]
check.c(l121:s166:k197:d0:s0)		 goto _swBrk_0($27)
check.c(l122:s167:k198:d0:s0)	 _case_0_54($21) :
check.c(l123:s168:k199:d0:s0)		iTemp120 [k143 lr168:169 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l123:s169:k200:d0:s0)		iTemp121 [k144 lr169:170 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp120 [k143 lr168:169 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l123:s170:k201:d0:s0)		iTemp122 [k145 lr170:171 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp121 [k144 lr169:170 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l123:s171:k202:d0:s0)		iTemp123 [k146 lr171:173 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp122 [k145 lr170:171 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l123:s172:k311:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l123:s173:k312:d0:s0)		send iTemp123 [k146 lr171:173 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l123:s174:k313:d0:s0)		iTemp124 [k147 lr174:182 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l123:s175:k204:d0:s0)		iTemp125 [k148 lr175:176 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l123:s176:k205:d0:s0)		iTemp126 [k149 lr176:177 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp125 [k148 lr175:176 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l123:s177:k206:d0:s0)		iTemp127 [k150 lr177:178 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp126 [k149 lr176:177 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l123:s178:k207:d0:s0)		iTemp128 [k151 lr178:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp127 [k150 lr177:178 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l123:s179:k314:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l123:s180:k315:d0:s0)		send iTemp128 [k151 lr178:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l123:s181:k316:d0:s0)		iTemp129 [k152 lr181:182 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l123:s182:k209:d0:s0)		iTemp130 [k153 lr182:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp124 [k147 lr174:182 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp129 [k152 lr181:182 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l124:s183:k210:d0:s0)		iTemp131 [k154 lr183:184 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l124:s184:k211:d0:s0)		iTemp132 [k155 lr184:185 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp131 [k154 lr183:184 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l124:s185:k212:d0:s0)		iTemp133 [k156 lr185:186 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp132 [k155 lr184:185 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l124:s186:k213:d0:s0)		iTemp134 [k157 lr186:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp133 [k156 lr185:186 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l124:s187:k214:d0:s0)		_sys_temp_min [k142 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed} = iTemp130 [k153 lr182:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp134 [k157 lr186:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l125:s188:k217:d0:s0)		 goto _swBrk_0($27)
check.c(l126:s189:k218:d0:s0)	 _case_0_55($22) :
check.c(l127:s190:k219:d0:s0)		iTemp137 [k161 lr190:191 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l127:s191:k220:d0:s0)		iTemp138 [k162 lr191:192 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp137 [k161 lr190:191 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l127:s192:k221:d0:s0)		iTemp139 [k163 lr192:193 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp138 [k162 lr191:192 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l127:s193:k222:d0:s0)		iTemp140 [k164 lr193:195 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp139 [k163 lr192:193 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l127:s194:k317:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l127:s195:k318:d0:s0)		send iTemp140 [k164 lr193:195 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l127:s196:k319:d0:s0)		iTemp141 [k165 lr196:204 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l127:s197:k224:d0:s0)		iTemp142 [k166 lr197:198 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l127:s198:k225:d0:s0)		iTemp143 [k167 lr198:199 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp142 [k166 lr197:198 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l127:s199:k226:d0:s0)		iTemp144 [k168 lr199:200 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp143 [k167 lr198:199 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l127:s200:k227:d0:s0)		iTemp145 [k169 lr200:202 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp144 [k168 lr199:200 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l127:s201:k320:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l127:s202:k321:d0:s0)		send iTemp145 [k169 lr200:202 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l127:s203:k322:d0:s0)		iTemp146 [k170 lr203:204 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l127:s204:k229:d0:s0)		iTemp147 [k171 lr204:209 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp141 [k165 lr196:204 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp146 [k170 lr203:204 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l128:s205:k230:d0:s0)		iTemp148 [k172 lr205:206 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l128:s206:k231:d0:s0)		iTemp149 [k173 lr206:207 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp148 [k172 lr205:206 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l128:s207:k232:d0:s0)		iTemp150 [k174 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp149 [k173 lr206:207 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l128:s208:k233:d0:s0)		iTemp151 [k175 lr208:209 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp150 [k174 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l128:s209:k234:d0:s0)		_sys_temp_max [k160 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed} = iTemp147 [k171 lr204:209 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp151 [k175 lr208:209 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l129:s210:k237:d0:s0)		 goto _swBrk_0($27)
check.c(l130:s211:k238:d0:s0)	 _case_0_56($23) :
check.c(l131:s212:k239:d0:s0)		iTemp154 [k179 lr212:213 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l131:s213:k240:d0:s0)		iTemp155 [k180 lr213:214 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp154 [k179 lr212:213 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l131:s214:k241:d0:s0)		iTemp156 [k181 lr214:215 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp155 [k180 lr213:214 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l131:s215:k242:d0:s0)		iTemp157 [k182 lr215:217 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp156 [k181 lr214:215 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l131:s216:k323:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l131:s217:k324:d0:s0)		send iTemp157 [k182 lr215:217 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l131:s218:k325:d0:s0)		iTemp158 [k183 lr218:226 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l131:s219:k244:d0:s0)		iTemp159 [k184 lr219:220 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l131:s220:k245:d0:s0)		iTemp160 [k185 lr220:221 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp159 [k184 lr219:220 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l131:s221:k246:d0:s0)		iTemp161 [k186 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp160 [k185 lr220:221 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l131:s222:k247:d0:s0)		iTemp162 [k187 lr222:224 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp161 [k186 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l131:s223:k326:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l131:s224:k327:d0:s0)		send iTemp162 [k187 lr222:224 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l131:s225:k328:d0:s0)		iTemp163 [k188 lr225:226 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l131:s226:k249:d0:s0)		iTemp164 [k189 lr226:231 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp158 [k183 lr218:226 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp163 [k188 lr225:226 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l132:s227:k250:d0:s0)		iTemp165 [k190 lr227:228 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l132:s228:k251:d0:s0)		iTemp166 [k191 lr228:229 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp165 [k190 lr227:228 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l132:s229:k252:d0:s0)		iTemp167 [k192 lr229:230 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp166 [k191 lr228:229 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l132:s230:k253:d0:s0)		iTemp168 [k193 lr230:231 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp167 [k192 lr229:230 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l132:s231:k254:d0:s0)		_sys_lumi_min [k178 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed} = iTemp164 [k189 lr226:231 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp168 [k193 lr230:231 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l133:s232:k257:d0:s0)		 goto _swBrk_0($27)
check.c(l134:s233:k258:d0:s0)	 _case_0_57($24) :
check.c(l135:s234:k259:d0:s0)		iTemp171 [k196 lr234:235 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l135:s235:k260:d0:s0)		iTemp172 [k197 lr235:236 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp171 [k196 lr234:235 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l135:s236:k261:d0:s0)		iTemp173 [k198 lr236:237 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp172 [k197 lr235:236 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l135:s237:k262:d0:s0)		iTemp174 [k199 lr237:239 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp173 [k198 lr236:237 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l135:s238:k329:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l135:s239:k330:d0:s0)		send iTemp174 [k199 lr237:239 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l135:s240:k331:d0:s0)		iTemp175 [k200 lr240:248 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l135:s241:k264:d0:s0)		iTemp176 [k201 lr241:242 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l135:s242:k265:d0:s0)		iTemp177 [k202 lr242:243 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp176 [k201 lr241:242 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l135:s243:k266:d0:s0)		iTemp178 [k203 lr243:244 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp177 [k202 lr242:243 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l135:s244:k267:d0:s0)		iTemp179 [k204 lr244:246 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp178 [k203 lr243:244 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l135:s245:k332:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l135:s246:k333:d0:s0)		send iTemp179 [k204 lr244:246 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l135:s247:k334:d0:s0)		iTemp180 [k205 lr247:248 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l135:s248:k269:d0:s0)		iTemp181 [k206 lr248:253 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp175 [k200 lr240:248 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp180 [k205 lr247:248 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l136:s249:k270:d0:s0)		iTemp182 [k207 lr249:250 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x00 r0x01 r0x02 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l136:s250:k271:d0:s0)		iTemp183 [k208 lr250:251 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x00 ] = @[iTemp182 [k207 lr249:250 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x00 r0x01 r0x02 ] + 0x0 {const-unsigned-char literal}]
check.c(l136:s251:k272:d0:s0)		iTemp184 [k209 lr251:252 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x00 r0x01 ] = (int fixed)iTemp183 [k208 lr250:251 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x00 ]
check.c(l136:s252:k273:d0:s0)		iTemp185 [k210 lr252:253 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x00 r0x01 ] = iTemp184 [k209 lr251:252 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x00 r0x01 ] - 0x30 {int literal}
check.c(l136:s253:k274:d0:s0)		_sys_temp_max [k160 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed} = iTemp181 [k206 lr248:253 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp185 [k210 lr252:253 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x00 r0x01 ]
check.c(l137:s254:k277:d0:s0)		 goto _swBrk_0($27)
check.c(l138:s255:k278:d0:s0)	 _case_0_82($25) :
check.c(l139:s256:k279:d0:s0)		iTemp1 [k4 lr4:258 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _check_comando_ret_1_74}[r0x03 ] := 0x0 {const-char literal}
check.c(l143:s257:k283:d0:s0)	 _swBrk_0($27) :
check.c(l145:s258:k284:d0:s0)		ret iTemp1 [k4 lr4:258 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _check_comando_ret_1_74}[r0x03 ]
check.c(l145:s259:k285:d0:s0)	 _return($32) :
check.c(l145:s260:k286:d0:s0)		eproc _check_comando [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char function ( char generic* fixed) fixed}

----------------------------------------------------------------
Basic Block _eBBlock43 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 11 : bbnum = 10 1st iCode = 26 , last iCode = 26
visited 0 : hasFcall = 0

defines bitVector :bitvector Size = 299 bSize = 38
Bits on { }

local defines bitVector :
pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (3) (5) (6) (8) (10) (12) (14) (16) (18) (20) (22) (24) }

outDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (3) (5) (6) (8) (10) (12) (14) (16) (18) (20) (22) (24) }

usesDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { }

----------------------------------------------------------------
check.c(l79:s26:k26:d0:s0)		 goto _swBrk_0($27)
check.c(l80:s27:k27:d0:s0)	 _case_0_49($1) :
check.c(l81:s28:k28:d0:s0)		iTemp15 [k20 lr28:29 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l81:s29:k29:d0:s0)		iTemp16 [k21 lr29:30 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp15 [k20 lr28:29 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l81:s30:k30:d0:s0)		iTemp14 [k18 lr30:53 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_led_num_1_74}[r0x04 ] = iTemp16 [k21 lr29:30 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] - 0x30 {char literal}
check.c(l82:s31:k32:d0:s0)		if iTemp14 [k18 lr30:53 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_led_num_1_74}[r0x04 ] != 0 goto _iffalse_3($3)
check.c(l83:s32:k35:d0:s0)		iTemp18 [k24 lr32:33 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x05 r0x06 r0x07 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l83:s33:k36:d0:s0)		iTemp19 [k25 lr33:34 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = @[iTemp18 [k24 lr32:33 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x05 r0x06 r0x07 ] + 0x0 {const-unsigned-char literal}]
check.c(l83:s34:k37:d0:s0)		iTemp20 [k26 lr34:36 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = iTemp19 [k25 lr33:34 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] - 0x30 {char literal}
check.c(l83:s35:k38:d0:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
check.c(l83:s36:k39:d0:s0)		send iTemp20 [k26 lr34:36 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ]{argreg = 2}
check.c(l83:s37:k40:d0:s0)		iTemp21 [k29 lr37:37 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _led [k23 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( unsigned-char fixed, unsigned-char fixed) fixed}
check.c(l83:s38:k41:d0:s0)		 goto _swBrk_0($27)
check.c(l83:s39:k42:d0:s0)	 _iffalse_3($3) :
check.c(l85:s40:k43:d0:s0)		iTemp23 [k32 lr40:41 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x05 r0x06 r0x07 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l85:s41:k44:d0:s0)		iTemp24 [k33 lr41:42 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = @[iTemp23 [k32 lr40:41 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x05 r0x06 r0x07 ] + 0x0 {const-unsigned-char literal}]
check.c(l85:s42:k45:d0:s0)		iTemp25 [k34 lr42:43 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = iTemp24 [k33 lr41:42 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] - 0x30 {char literal}
check.c(l85:s43:k46:d0:s0)		iTemp26 [k35 lr43:48 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = iTemp25 [k34 lr42:43 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] * 0x64 {const-unsigned-char literal}
check.c(l85:s44:k47:d0:s0)		iTemp27 [k36 lr44:45 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l85:s45:k48:d0:s0)		iTemp28 [k37 lr45:46 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp27 [k36 lr44:45 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l85:s46:k49:d0:s0)		iTemp29 [k38 lr46:47 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = iTemp28 [k37 lr45:46 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] - 0x30 {char literal}
check.c(l85:s47:k50:d0:s0)		iTemp30 [k39 lr47:48 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = iTemp29 [k38 lr46:47 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] * 0xa {const-unsigned-char literal}
check.c(l85:s48:k51:d0:s0)		iTemp31 [k40 lr48:51 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = iTemp26 [k35 lr43:48 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] + iTemp30 [k39 lr47:48 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l86:s49:k52:d0:s0)		iTemp32 [k41 lr49:50 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x4 {const-unsigned-char literal}
check.c(l86:s50:k53:d0:s0)		iTemp33 [k42 lr50:51 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp32 [k41 lr49:50 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l86:s51:k54:d0:s0)		iTemp34 [k43 lr51:52 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = iTemp31 [k40 lr48:51 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] + iTemp33 [k42 lr50:51 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l86:s52:k55:d0:s0)		iTemp22 [k30 lr52:55 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_pwm_1_74}[r0x05 ] = iTemp34 [k43 lr51:52 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] - 0x30 {char literal}
check.c(l87:s53:k57:d0:s0)		iTemp36 [k46 lr53:55 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = iTemp14 [k18 lr30:53 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_led_num_1_74}[r0x04 ] - 0x1 {char literal}
check.c(l87:s54:k58:d0:s0)		send iTemp36 [k46 lr53:55 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]{argreg = 1}
check.c(l87:s55:k59:d0:s0)		send iTemp22 [k30 lr52:55 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_pwm_1_74}[r0x05 ]{argreg = 2}
check.c(l87:s56:k60:d0:s0)		iTemp37 [k49 lr56:56 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _set_pwm [k45 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( unsigned-char fixed, unsigned-char fixed) fixed}
check.c(l89:s57:k62:d0:s0)		 goto _swBrk_0($27)
check.c(l90:s58:k63:d0:s0)	 _case_0_50($5) :
check.c(l91:s59:k64:d0:s0)		iTemp38 [k51 lr59:59 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _limpa_lcd [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( ) fixed}
check.c(l94:s60:k65:d0:s0)		iTemp39 [k53 lr60:88 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] = &[_check_comando_linha_1_1_74 [k52 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [17] fixed}]
check.c(l94:s61:k66:d0:s0)		iTemp40 [k54 lr61:62 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] = iTemp39 [k53 lr60:88 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] + 0x10 {const-unsigned-char literal}
check.c(l94:s62:k67:d0:s0)		*(iTemp40 [k54 lr61:62 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat]) := 0x0 {const-char literal}
check.c(l95:s63:k68:d0:s0)		iTemp41 [k56 lr63:93 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] = &[_check_comando_linha_2_1_74 [k55 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [17] fixed}]
check.c(l95:s64:k69:d0:s0)		iTemp42 [k57 lr64:65 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] = iTemp41 [k56 lr63:93 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] + 0x10 {const-unsigned-char literal}
check.c(l95:s65:k70:d0:s0)		*(iTemp42 [k57 lr64:65 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat]) := 0x0 {const-char literal}
check.c(l96:s66:k289:d0:s0)		iTemp50 [k66 lr66:76 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] := 0x1 {const-char literal}
check.c(l96:s68:k72:d1:s0)	 _forbody_1($28) :
check.c(l97:s69:k74:d1:s0)		iTemp45 [k61 lr69:70 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = iTemp50 [k66 lr66:76 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] - 0x1 {char literal}
check.c(l97:s70:k75:d1:s0)		iTemp46 [k62 lr70:73 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x05 r0x06 ] = iTemp39 [k53 lr60:88 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] + iTemp45 [k61 lr69:70 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ]
check.c(l97:s71:k76:d1:s0)		iTemp47 [k63 lr71:72 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x07 r0x08 r0x09 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + iTemp50 [k66 lr66:76 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ]
check.c(l97:s72:k77:d1:s0)		iTemp48 [k64 lr72:73 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x07 ] = @[iTemp47 [k63 lr71:72 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x07 r0x08 r0x09 ] + 0x0 {const-unsigned-char literal}]
check.c(l97:s73:k78:d1:s0)		*(iTemp46 [k62 lr70:73 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x05 r0x06 ]) := iTemp48 [k64 lr72:73 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x07 ]
check.c(l96:s74:k81:d1:s0)		iTemp50 [k66 lr66:76 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] = iTemp50 [k66 lr66:76 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] + 0x1 {const-unsigned-char literal}
check.c(l96:s75:k83:d1:s0)		iTemp51 [k67 lr75:76 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp50 [k66 lr66:76 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] < 0x11 {const-char literal}
check.c(l96:s76:k84:d1:s0)		if iTemp51 [k67 lr75:76 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forbody_1($28)
check.c(l98:s77:k292:d0:s0)		iTemp58 [k74 lr77:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] := 0x11 {const-char literal}
check.c(l98:s79:k88:d1:s0)	 _forbody_2($30) :
check.c(l99:s80:k90:d1:s0)		iTemp53 [k69 lr80:81 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = iTemp58 [k74 lr77:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] - 0x11 {char literal}
check.c(l99:s81:k91:d1:s0)		iTemp54 [k70 lr81:84 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x05 r0x06 ] = iTemp41 [k56 lr63:93 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] + iTemp53 [k69 lr80:81 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ]
check.c(l99:s82:k92:d1:s0)		iTemp55 [k71 lr82:83 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x07 r0x08 r0x09 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + iTemp58 [k74 lr77:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ]
check.c(l99:s83:k93:d1:s0)		iTemp56 [k72 lr83:84 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x07 ] = @[iTemp55 [k71 lr82:83 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x07 r0x08 r0x09 ] + 0x0 {const-unsigned-char literal}]
check.c(l99:s84:k94:d1:s0)		*(iTemp54 [k70 lr81:84 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x05 r0x06 ]) := iTemp56 [k72 lr83:84 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x07 ]
check.c(l98:s85:k97:d1:s0)		iTemp58 [k74 lr77:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] = iTemp58 [k74 lr77:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] + 0x1 {const-unsigned-char literal}
check.c(l98:s86:k99:d1:s0)		iTemp59 [k75 lr86:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp58 [k74 lr77:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] < 0x21 {const-char literal}
check.c(l98:s87:k100:d1:s0)		if iTemp59 [k75 lr86:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forbody_2($30)
check.c(l100:s88:k103:d0:s0)		iTemp60 [k77 lr88:89 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] := iTemp39 [k53 lr60:88 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat]
check.c(l100:s89:k104:d0:s0)		iTemp61 [k78 lr89:90 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = (char generic* fixed)iTemp60 [k77 lr88:89 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat]
check.c(l100:s90:k105:d0:s0)		send iTemp61 [k78 lr89:90 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ]{argreg = 1}
check.c(l100:s91:k106:d0:s0)		iTemp62 [k80 lr91:91 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _print_lcd_string [k76 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char generic* fixed) fixed}
check.c(l101:s92:k107:d0:s0)		iTemp63 [k82 lr92:92 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _print_lcd_ln [k81 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( ) fixed}
check.c(l102:s93:k108:d0:s0)		iTemp64 [k83 lr93:94 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] := iTemp41 [k56 lr63:93 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat]
check.c(l102:s94:k109:d0:s0)		iTemp65 [k84 lr94:95 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = (char generic* fixed)iTemp64 [k83 lr93:94 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat]
check.c(l102:s95:k110:d0:s0)		send iTemp65 [k84 lr94:95 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ]{argreg = 1}
check.c(l102:s96:k111:d0:s0)		iTemp66 [k85 lr96:96 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _print_lcd_string [k76 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char generic* fixed) fixed}
check.c(l103:s97:k112:d0:s0)		iTemp1 [k4 lr4:258 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _check_comando_ret_1_74}[r0x03 ] := 0x34 {const-unsigned-char literal}
check.c(l104:s98:k113:d0:s0)		 goto _swBrk_0($27)
check.c(l105:s99:k114:d0:s0)	 _case_0_51($8) :
check.c(l106:s100:k115:d0:s0)		iTemp67 [k86 lr100:101 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l106:s101:k116:d0:s0)		iTemp68 [k87 lr101:102 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp67 [k86 lr100:101 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l106:s102:k117:d0:s0)		iTemp69 [k88 lr102:103 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp68 [k87 lr101:102 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l106:s103:k118:d0:s0)		iTemp70 [k89 lr103:109 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp69 [k88 lr102:103 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l106:s104:k119:d0:s0)		iTemp71 [k90 lr104:105 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp70 [k89 lr103:109 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] == 0x1 {int literal}
check.c(l106:s105:k120:d0:s0)		if iTemp71 [k90 lr104:105 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} == 0 goto _iffalse_5($12)
check.c(l107:s106:k124:d0:s0)		_hab_alarme [k91 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed} := 0x1 {const-unsigned-char literal}
check.c(l107:s107:k125:d0:s0)		 goto _swBrk_0($27)
check.c(l107:s108:k126:d0:s0)	 _iffalse_5($12) :
check.c(l108:s109:k131:d0:s0)		if iTemp70 [k89 lr103:109 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] != 0 goto _swBrk_0($27)
check.c(l109:s110:k135:d0:s0)		_hab_alarme [k91 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed} := 0x0 {const-unsigned-char literal}
check.c(l110:s111:k138:d0:s0)		 goto _swBrk_0($27)
check.c(l111:s112:k139:d0:s0)	 _case_0_52($14) :
check.c(l112:s113:k140:d0:s0)		iTemp78 [k98 lr113:114 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l112:s114:k141:d0:s0)		iTemp79 [k99 lr114:115 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp78 [k98 lr113:114 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l112:s115:k142:d0:s0)		iTemp80 [k100 lr115:116 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp79 [k99 lr114:115 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l112:s116:k143:d0:s0)		iTemp81 [k101 lr116:122 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp80 [k100 lr115:116 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l112:s117:k144:d0:s0)		iTemp82 [k102 lr117:118 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp81 [k101 lr116:122 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] == 0x1 {int literal}
check.c(l112:s118:k145:d0:s0)		if iTemp82 [k102 lr117:118 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} == 0 goto _iffalse_7($18)
check.c(l113:s119:k149:d0:s0)		_hab_sensor [k103 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed} := 0x0 {const-unsigned-char literal}
check.c(l113:s120:k150:d0:s0)		 goto _swBrk_0($27)
check.c(l113:s121:k151:d0:s0)	 _iffalse_7($18) :
check.c(l114:s122:k156:d0:s0)		if iTemp81 [k101 lr116:122 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] != 0 goto _swBrk_0($27)
check.c(l115:s123:k160:d0:s0)		_hab_sensor [k103 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed} := 0x2 {const-unsigned-char literal}
check.c(l116:s124:k163:d0:s0)		 goto _swBrk_0($27)
check.c(l117:s125:k164:d0:s0)	 _case_0_53($20) :
check.c(l118:s126:k165:d0:s0)		iTemp89 [k111 lr126:127 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{unsigned-long-int near* fixed}[remat] = &[_sys_timer_pool [k110 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int [2] fixed}]
check.c(l118:s127:k166:d0:s0)		iTemp90 [k112 lr127:165 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{unsigned-long-int near* fixed}[remat] = iTemp89 [k111 lr126:127 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{unsigned-long-int near* fixed}[remat] + 0x4 {unsigned-char literal}
check.c(l118:s128:k167:d0:s0)		iTemp91 [k113 lr128:129 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l118:s129:k168:d0:s0)		iTemp92 [k114 lr129:130 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp91 [k113 lr128:129 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l118:s130:k169:d0:s0)		iTemp93 [k115 lr130:131 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp92 [k114 lr129:130 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l118:s131:k170:d0:s0)		iTemp94 [k116 lr131:133 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp93 [k115 lr130:131 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l118:s132:k299:d0:s0)		send 0x2710 {const-int literal}{argreg = 1}
check.c(l118:s133:k300:d0:s0)		send iTemp94 [k116 lr131:133 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l118:s134:k301:d0:s0)		iTemp95 [k117 lr134:142 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l118:s135:k172:d0:s0)		iTemp96 [k118 lr135:136 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l118:s136:k173:d0:s0)		iTemp97 [k119 lr136:137 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp96 [k118 lr135:136 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l118:s137:k174:d0:s0)		iTemp98 [k120 lr137:138 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp97 [k119 lr136:137 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l118:s138:k175:d0:s0)		iTemp99 [k121 lr138:140 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp98 [k120 lr137:138 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l118:s139:k302:d0:s0)		send 0x3e8 {const-int literal}{argreg = 1}
check.c(l118:s140:k303:d0:s0)		send iTemp99 [k121 lr138:140 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l118:s141:k304:d0:s0)		iTemp100 [k122 lr141:142 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l118:s142:k177:d0:s0)		iTemp101 [k123 lr142:150 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp95 [k117 lr134:142 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp100 [k122 lr141:142 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l119:s143:k178:d0:s0)		iTemp102 [k124 lr143:144 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l119:s144:k179:d0:s0)		iTemp103 [k125 lr144:145 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp102 [k124 lr143:144 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l119:s145:k180:d0:s0)		iTemp104 [k126 lr145:146 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp103 [k125 lr144:145 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l119:s146:k181:d0:s0)		iTemp105 [k127 lr146:148 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp104 [k126 lr145:146 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l119:s147:k305:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l119:s148:k306:d0:s0)		send iTemp105 [k127 lr146:148 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l119:s149:k307:d0:s0)		iTemp106 [k128 lr149:150 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l119:s150:k183:d0:s0)		iTemp107 [k129 lr150:158 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp101 [k123 lr142:150 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp106 [k128 lr149:150 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l119:s151:k184:d0:s0)		iTemp108 [k130 lr151:152 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x4 {const-unsigned-char literal}
check.c(l119:s152:k185:d0:s0)		iTemp109 [k131 lr152:153 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp108 [k130 lr151:152 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l119:s153:k186:d0:s0)		iTemp110 [k132 lr153:154 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp109 [k131 lr152:153 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l119:s154:k187:d0:s0)		iTemp111 [k133 lr154:156 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp110 [k132 lr153:154 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l119:s155:k308:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l119:s156:k309:d0:s0)		send iTemp111 [k133 lr154:156 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l119:s157:k310:d0:s0)		iTemp112 [k134 lr157:158 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l119:s158:k189:d0:s0)		iTemp113 [k135 lr158:162 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp107 [k129 lr150:158 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp112 [k134 lr157:158 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l120:s159:k190:d0:s0)		iTemp114 [k136 lr159:160 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x5 {const-unsigned-char literal}
check.c(l120:s160:k191:d0:s0)		iTemp115 [k137 lr160:161 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp114 [k136 lr159:160 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l120:s161:k192:d0:s0)		iTemp116 [k138 lr161:162 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp115 [k137 lr160:161 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l120:s162:k193:d0:s0)		iTemp117 [k139 lr162:163 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = iTemp113 [k135 lr158:162 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp116 [k138 lr161:162 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ]
check.c(l120:s163:k194:d0:s0)		iTemp118 [k140 lr163:164 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp117 [k139 lr162:163 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l120:s164:k195:d0:s0)		iTemp119 [k141 lr164:165 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x04 r0x05 r0x06 r0x07 ] = (unsigned-long-int fixed)iTemp118 [k140 lr163:164 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]
check.c(l120:s165:k196:d0:s0)		*(iTemp90 [k112 lr127:165 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{unsigned-long-int near* fixed}[remat]) := iTemp119 [k141 lr164:165 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x04 r0x05 r0x06 r0x07 ]
check.c(l121:s166:k197:d0:s0)		 goto _swBrk_0($27)
check.c(l122:s167:k198:d0:s0)	 _case_0_54($21) :
check.c(l123:s168:k199:d0:s0)		iTemp120 [k143 lr168:169 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l123:s169:k200:d0:s0)		iTemp121 [k144 lr169:170 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp120 [k143 lr168:169 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l123:s170:k201:d0:s0)		iTemp122 [k145 lr170:171 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp121 [k144 lr169:170 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l123:s171:k202:d0:s0)		iTemp123 [k146 lr171:173 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp122 [k145 lr170:171 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l123:s172:k311:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l123:s173:k312:d0:s0)		send iTemp123 [k146 lr171:173 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l123:s174:k313:d0:s0)		iTemp124 [k147 lr174:182 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l123:s175:k204:d0:s0)		iTemp125 [k148 lr175:176 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l123:s176:k205:d0:s0)		iTemp126 [k149 lr176:177 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp125 [k148 lr175:176 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l123:s177:k206:d0:s0)		iTemp127 [k150 lr177:178 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp126 [k149 lr176:177 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l123:s178:k207:d0:s0)		iTemp128 [k151 lr178:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp127 [k150 lr177:178 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l123:s179:k314:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l123:s180:k315:d0:s0)		send iTemp128 [k151 lr178:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l123:s181:k316:d0:s0)		iTemp129 [k152 lr181:182 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l123:s182:k209:d0:s0)		iTemp130 [k153 lr182:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp124 [k147 lr174:182 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp129 [k152 lr181:182 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l124:s183:k210:d0:s0)		iTemp131 [k154 lr183:184 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l124:s184:k211:d0:s0)		iTemp132 [k155 lr184:185 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp131 [k154 lr183:184 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l124:s185:k212:d0:s0)		iTemp133 [k156 lr185:186 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp132 [k155 lr184:185 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l124:s186:k213:d0:s0)		iTemp134 [k157 lr186:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp133 [k156 lr185:186 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l124:s187:k214:d0:s0)		_sys_temp_min [k142 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed} = iTemp130 [k153 lr182:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp134 [k157 lr186:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l125:s188:k217:d0:s0)		 goto _swBrk_0($27)
check.c(l126:s189:k218:d0:s0)	 _case_0_55($22) :
check.c(l127:s190:k219:d0:s0)		iTemp137 [k161 lr190:191 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l127:s191:k220:d0:s0)		iTemp138 [k162 lr191:192 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp137 [k161 lr190:191 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l127:s192:k221:d0:s0)		iTemp139 [k163 lr192:193 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp138 [k162 lr191:192 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l127:s193:k222:d0:s0)		iTemp140 [k164 lr193:195 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp139 [k163 lr192:193 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l127:s194:k317:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l127:s195:k318:d0:s0)		send iTemp140 [k164 lr193:195 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l127:s196:k319:d0:s0)		iTemp141 [k165 lr196:204 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l127:s197:k224:d0:s0)		iTemp142 [k166 lr197:198 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l127:s198:k225:d0:s0)		iTemp143 [k167 lr198:199 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp142 [k166 lr197:198 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l127:s199:k226:d0:s0)		iTemp144 [k168 lr199:200 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp143 [k167 lr198:199 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l127:s200:k227:d0:s0)		iTemp145 [k169 lr200:202 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp144 [k168 lr199:200 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l127:s201:k320:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l127:s202:k321:d0:s0)		send iTemp145 [k169 lr200:202 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l127:s203:k322:d0:s0)		iTemp146 [k170 lr203:204 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l127:s204:k229:d0:s0)		iTemp147 [k171 lr204:209 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp141 [k165 lr196:204 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp146 [k170 lr203:204 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l128:s205:k230:d0:s0)		iTemp148 [k172 lr205:206 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l128:s206:k231:d0:s0)		iTemp149 [k173 lr206:207 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp148 [k172 lr205:206 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l128:s207:k232:d0:s0)		iTemp150 [k174 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp149 [k173 lr206:207 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l128:s208:k233:d0:s0)		iTemp151 [k175 lr208:209 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp150 [k174 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l128:s209:k234:d0:s0)		_sys_temp_max [k160 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed} = iTemp147 [k171 lr204:209 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp151 [k175 lr208:209 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l129:s210:k237:d0:s0)		 goto _swBrk_0($27)
check.c(l130:s211:k238:d0:s0)	 _case_0_56($23) :
check.c(l131:s212:k239:d0:s0)		iTemp154 [k179 lr212:213 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l131:s213:k240:d0:s0)		iTemp155 [k180 lr213:214 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp154 [k179 lr212:213 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l131:s214:k241:d0:s0)		iTemp156 [k181 lr214:215 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp155 [k180 lr213:214 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l131:s215:k242:d0:s0)		iTemp157 [k182 lr215:217 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp156 [k181 lr214:215 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l131:s216:k323:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l131:s217:k324:d0:s0)		send iTemp157 [k182 lr215:217 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l131:s218:k325:d0:s0)		iTemp158 [k183 lr218:226 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l131:s219:k244:d0:s0)		iTemp159 [k184 lr219:220 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l131:s220:k245:d0:s0)		iTemp160 [k185 lr220:221 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp159 [k184 lr219:220 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l131:s221:k246:d0:s0)		iTemp161 [k186 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp160 [k185 lr220:221 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l131:s222:k247:d0:s0)		iTemp162 [k187 lr222:224 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp161 [k186 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l131:s223:k326:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l131:s224:k327:d0:s0)		send iTemp162 [k187 lr222:224 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l131:s225:k328:d0:s0)		iTemp163 [k188 lr225:226 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l131:s226:k249:d0:s0)		iTemp164 [k189 lr226:231 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp158 [k183 lr218:226 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp163 [k188 lr225:226 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l132:s227:k250:d0:s0)		iTemp165 [k190 lr227:228 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l132:s228:k251:d0:s0)		iTemp166 [k191 lr228:229 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp165 [k190 lr227:228 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l132:s229:k252:d0:s0)		iTemp167 [k192 lr229:230 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp166 [k191 lr228:229 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l132:s230:k253:d0:s0)		iTemp168 [k193 lr230:231 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp167 [k192 lr229:230 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l132:s231:k254:d0:s0)		_sys_lumi_min [k178 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed} = iTemp164 [k189 lr226:231 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp168 [k193 lr230:231 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l133:s232:k257:d0:s0)		 goto _swBrk_0($27)
check.c(l134:s233:k258:d0:s0)	 _case_0_57($24) :
check.c(l135:s234:k259:d0:s0)		iTemp171 [k196 lr234:235 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l135:s235:k260:d0:s0)		iTemp172 [k197 lr235:236 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp171 [k196 lr234:235 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l135:s236:k261:d0:s0)		iTemp173 [k198 lr236:237 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp172 [k197 lr235:236 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l135:s237:k262:d0:s0)		iTemp174 [k199 lr237:239 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp173 [k198 lr236:237 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l135:s238:k329:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l135:s239:k330:d0:s0)		send iTemp174 [k199 lr237:239 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l135:s240:k331:d0:s0)		iTemp175 [k200 lr240:248 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l135:s241:k264:d0:s0)		iTemp176 [k201 lr241:242 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l135:s242:k265:d0:s0)		iTemp177 [k202 lr242:243 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp176 [k201 lr241:242 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l135:s243:k266:d0:s0)		iTemp178 [k203 lr243:244 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp177 [k202 lr242:243 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l135:s244:k267:d0:s0)		iTemp179 [k204 lr244:246 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp178 [k203 lr243:244 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l135:s245:k332:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l135:s246:k333:d0:s0)		send iTemp179 [k204 lr244:246 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l135:s247:k334:d0:s0)		iTemp180 [k205 lr247:248 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l135:s248:k269:d0:s0)		iTemp181 [k206 lr248:253 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp175 [k200 lr240:248 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp180 [k205 lr247:248 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l136:s249:k270:d0:s0)		iTemp182 [k207 lr249:250 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x00 r0x01 r0x02 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l136:s250:k271:d0:s0)		iTemp183 [k208 lr250:251 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x00 ] = @[iTemp182 [k207 lr249:250 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x00 r0x01 r0x02 ] + 0x0 {const-unsigned-char literal}]
check.c(l136:s251:k272:d0:s0)		iTemp184 [k209 lr251:252 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x00 r0x01 ] = (int fixed)iTemp183 [k208 lr250:251 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x00 ]
check.c(l136:s252:k273:d0:s0)		iTemp185 [k210 lr252:253 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x00 r0x01 ] = iTemp184 [k209 lr251:252 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x00 r0x01 ] - 0x30 {int literal}
check.c(l136:s253:k274:d0:s0)		_sys_temp_max [k160 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed} = iTemp181 [k206 lr248:253 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp185 [k210 lr252:253 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x00 r0x01 ]
check.c(l137:s254:k277:d0:s0)		 goto _swBrk_0($27)
check.c(l138:s255:k278:d0:s0)	 _case_0_82($25) :
check.c(l139:s256:k279:d0:s0)		iTemp1 [k4 lr4:258 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _check_comando_ret_1_74}[r0x03 ] := 0x0 {const-char literal}
check.c(l143:s257:k283:d0:s0)	 _swBrk_0($27) :
check.c(l145:s258:k284:d0:s0)		ret iTemp1 [k4 lr4:258 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _check_comando_ret_1_74}[r0x03 ]
check.c(l145:s259:k285:d0:s0)	 _return($32) :
check.c(l145:s260:k286:d0:s0)		eproc _check_comando [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char function ( char generic* fixed) fixed}

----------------------------------------------------------------
Basic Block _case_0_49 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 33 : bbnum = 11 1st iCode = 27 , last iCode = 31
visited 0 : hasFcall = 0

defines bitVector :bitvector Size = 299 bSize = 38
Bits on { (28) (29) (30) (31) }

local defines bitVector :bitvector Size = 299 bSize = 38
Bits on { (28) (29) (30) (31) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (3) (5) (6) }

outDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (3) (5) (6) (28) (29) (30) (31) }

usesDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (28) (29) (30) (31) }

----------------------------------------------------------------
check.c(l80:s27:k27:d0:s0)	 _case_0_49($1) :
check.c(l81:s28:k28:d0:s0)		iTemp15 [k20 lr28:29 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l81:s29:k29:d0:s0)		iTemp16 [k21 lr29:30 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp15 [k20 lr28:29 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l81:s30:k30:d0:s0)		iTemp14 [k18 lr30:53 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_led_num_1_74}[r0x04 ] = iTemp16 [k21 lr29:30 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] - 0x30 {char literal}
check.c(l82:s31:k32:d0:s0)		if iTemp14 [k18 lr30:53 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_led_num_1_74}[r0x04 ] != 0 goto _iffalse_3($3)
check.c(l83:s32:k35:d0:s0)		iTemp18 [k24 lr32:33 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x05 r0x06 r0x07 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l83:s33:k36:d0:s0)		iTemp19 [k25 lr33:34 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = @[iTemp18 [k24 lr32:33 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x05 r0x06 r0x07 ] + 0x0 {const-unsigned-char literal}]
check.c(l83:s34:k37:d0:s0)		iTemp20 [k26 lr34:36 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = iTemp19 [k25 lr33:34 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] - 0x30 {char literal}
check.c(l83:s35:k38:d0:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
check.c(l83:s36:k39:d0:s0)		send iTemp20 [k26 lr34:36 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ]{argreg = 2}
check.c(l83:s37:k40:d0:s0)		iTemp21 [k29 lr37:37 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _led [k23 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( unsigned-char fixed, unsigned-char fixed) fixed}
check.c(l83:s38:k41:d0:s0)		 goto _swBrk_0($27)
check.c(l83:s39:k42:d0:s0)	 _iffalse_3($3) :
check.c(l85:s40:k43:d0:s0)		iTemp23 [k32 lr40:41 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x05 r0x06 r0x07 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l85:s41:k44:d0:s0)		iTemp24 [k33 lr41:42 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = @[iTemp23 [k32 lr40:41 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x05 r0x06 r0x07 ] + 0x0 {const-unsigned-char literal}]
check.c(l85:s42:k45:d0:s0)		iTemp25 [k34 lr42:43 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = iTemp24 [k33 lr41:42 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] - 0x30 {char literal}
check.c(l85:s43:k46:d0:s0)		iTemp26 [k35 lr43:48 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = iTemp25 [k34 lr42:43 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] * 0x64 {const-unsigned-char literal}
check.c(l85:s44:k47:d0:s0)		iTemp27 [k36 lr44:45 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l85:s45:k48:d0:s0)		iTemp28 [k37 lr45:46 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp27 [k36 lr44:45 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l85:s46:k49:d0:s0)		iTemp29 [k38 lr46:47 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = iTemp28 [k37 lr45:46 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] - 0x30 {char literal}
check.c(l85:s47:k50:d0:s0)		iTemp30 [k39 lr47:48 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = iTemp29 [k38 lr46:47 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] * 0xa {const-unsigned-char literal}
check.c(l85:s48:k51:d0:s0)		iTemp31 [k40 lr48:51 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = iTemp26 [k35 lr43:48 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] + iTemp30 [k39 lr47:48 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l86:s49:k52:d0:s0)		iTemp32 [k41 lr49:50 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x4 {const-unsigned-char literal}
check.c(l86:s50:k53:d0:s0)		iTemp33 [k42 lr50:51 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp32 [k41 lr49:50 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l86:s51:k54:d0:s0)		iTemp34 [k43 lr51:52 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = iTemp31 [k40 lr48:51 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] + iTemp33 [k42 lr50:51 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l86:s52:k55:d0:s0)		iTemp22 [k30 lr52:55 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_pwm_1_74}[r0x05 ] = iTemp34 [k43 lr51:52 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] - 0x30 {char literal}
check.c(l87:s53:k57:d0:s0)		iTemp36 [k46 lr53:55 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = iTemp14 [k18 lr30:53 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_led_num_1_74}[r0x04 ] - 0x1 {char literal}
check.c(l87:s54:k58:d0:s0)		send iTemp36 [k46 lr53:55 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]{argreg = 1}
check.c(l87:s55:k59:d0:s0)		send iTemp22 [k30 lr52:55 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_pwm_1_74}[r0x05 ]{argreg = 2}
check.c(l87:s56:k60:d0:s0)		iTemp37 [k49 lr56:56 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _set_pwm [k45 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( unsigned-char fixed, unsigned-char fixed) fixed}
check.c(l89:s57:k62:d0:s0)		 goto _swBrk_0($27)
check.c(l90:s58:k63:d0:s0)	 _case_0_50($5) :
check.c(l91:s59:k64:d0:s0)		iTemp38 [k51 lr59:59 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _limpa_lcd [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( ) fixed}
check.c(l94:s60:k65:d0:s0)		iTemp39 [k53 lr60:88 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] = &[_check_comando_linha_1_1_74 [k52 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [17] fixed}]
check.c(l94:s61:k66:d0:s0)		iTemp40 [k54 lr61:62 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] = iTemp39 [k53 lr60:88 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] + 0x10 {const-unsigned-char literal}
check.c(l94:s62:k67:d0:s0)		*(iTemp40 [k54 lr61:62 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat]) := 0x0 {const-char literal}
check.c(l95:s63:k68:d0:s0)		iTemp41 [k56 lr63:93 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] = &[_check_comando_linha_2_1_74 [k55 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [17] fixed}]
check.c(l95:s64:k69:d0:s0)		iTemp42 [k57 lr64:65 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] = iTemp41 [k56 lr63:93 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] + 0x10 {const-unsigned-char literal}
check.c(l95:s65:k70:d0:s0)		*(iTemp42 [k57 lr64:65 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat]) := 0x0 {const-char literal}
check.c(l96:s66:k289:d0:s0)		iTemp50 [k66 lr66:76 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] := 0x1 {const-char literal}
check.c(l96:s68:k72:d1:s0)	 _forbody_1($28) :
check.c(l97:s69:k74:d1:s0)		iTemp45 [k61 lr69:70 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = iTemp50 [k66 lr66:76 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] - 0x1 {char literal}
check.c(l97:s70:k75:d1:s0)		iTemp46 [k62 lr70:73 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x05 r0x06 ] = iTemp39 [k53 lr60:88 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] + iTemp45 [k61 lr69:70 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ]
check.c(l97:s71:k76:d1:s0)		iTemp47 [k63 lr71:72 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x07 r0x08 r0x09 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + iTemp50 [k66 lr66:76 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ]
check.c(l97:s72:k77:d1:s0)		iTemp48 [k64 lr72:73 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x07 ] = @[iTemp47 [k63 lr71:72 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x07 r0x08 r0x09 ] + 0x0 {const-unsigned-char literal}]
check.c(l97:s73:k78:d1:s0)		*(iTemp46 [k62 lr70:73 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x05 r0x06 ]) := iTemp48 [k64 lr72:73 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x07 ]
check.c(l96:s74:k81:d1:s0)		iTemp50 [k66 lr66:76 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] = iTemp50 [k66 lr66:76 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] + 0x1 {const-unsigned-char literal}
check.c(l96:s75:k83:d1:s0)		iTemp51 [k67 lr75:76 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp50 [k66 lr66:76 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] < 0x11 {const-char literal}
check.c(l96:s76:k84:d1:s0)		if iTemp51 [k67 lr75:76 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forbody_1($28)
check.c(l98:s77:k292:d0:s0)		iTemp58 [k74 lr77:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] := 0x11 {const-char literal}
check.c(l98:s79:k88:d1:s0)	 _forbody_2($30) :
check.c(l99:s80:k90:d1:s0)		iTemp53 [k69 lr80:81 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = iTemp58 [k74 lr77:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] - 0x11 {char literal}
check.c(l99:s81:k91:d1:s0)		iTemp54 [k70 lr81:84 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x05 r0x06 ] = iTemp41 [k56 lr63:93 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] + iTemp53 [k69 lr80:81 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ]
check.c(l99:s82:k92:d1:s0)		iTemp55 [k71 lr82:83 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x07 r0x08 r0x09 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + iTemp58 [k74 lr77:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ]
check.c(l99:s83:k93:d1:s0)		iTemp56 [k72 lr83:84 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x07 ] = @[iTemp55 [k71 lr82:83 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x07 r0x08 r0x09 ] + 0x0 {const-unsigned-char literal}]
check.c(l99:s84:k94:d1:s0)		*(iTemp54 [k70 lr81:84 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x05 r0x06 ]) := iTemp56 [k72 lr83:84 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x07 ]
check.c(l98:s85:k97:d1:s0)		iTemp58 [k74 lr77:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] = iTemp58 [k74 lr77:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] + 0x1 {const-unsigned-char literal}
check.c(l98:s86:k99:d1:s0)		iTemp59 [k75 lr86:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp58 [k74 lr77:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] < 0x21 {const-char literal}
check.c(l98:s87:k100:d1:s0)		if iTemp59 [k75 lr86:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forbody_2($30)
check.c(l100:s88:k103:d0:s0)		iTemp60 [k77 lr88:89 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] := iTemp39 [k53 lr60:88 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat]
check.c(l100:s89:k104:d0:s0)		iTemp61 [k78 lr89:90 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = (char generic* fixed)iTemp60 [k77 lr88:89 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat]
check.c(l100:s90:k105:d0:s0)		send iTemp61 [k78 lr89:90 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ]{argreg = 1}
check.c(l100:s91:k106:d0:s0)		iTemp62 [k80 lr91:91 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _print_lcd_string [k76 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char generic* fixed) fixed}
check.c(l101:s92:k107:d0:s0)		iTemp63 [k82 lr92:92 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _print_lcd_ln [k81 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( ) fixed}
check.c(l102:s93:k108:d0:s0)		iTemp64 [k83 lr93:94 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] := iTemp41 [k56 lr63:93 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat]
check.c(l102:s94:k109:d0:s0)		iTemp65 [k84 lr94:95 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = (char generic* fixed)iTemp64 [k83 lr93:94 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat]
check.c(l102:s95:k110:d0:s0)		send iTemp65 [k84 lr94:95 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ]{argreg = 1}
check.c(l102:s96:k111:d0:s0)		iTemp66 [k85 lr96:96 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _print_lcd_string [k76 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char generic* fixed) fixed}
check.c(l103:s97:k112:d0:s0)		iTemp1 [k4 lr4:258 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _check_comando_ret_1_74}[r0x03 ] := 0x34 {const-unsigned-char literal}
check.c(l104:s98:k113:d0:s0)		 goto _swBrk_0($27)
check.c(l105:s99:k114:d0:s0)	 _case_0_51($8) :
check.c(l106:s100:k115:d0:s0)		iTemp67 [k86 lr100:101 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l106:s101:k116:d0:s0)		iTemp68 [k87 lr101:102 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp67 [k86 lr100:101 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l106:s102:k117:d0:s0)		iTemp69 [k88 lr102:103 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp68 [k87 lr101:102 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l106:s103:k118:d0:s0)		iTemp70 [k89 lr103:109 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp69 [k88 lr102:103 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l106:s104:k119:d0:s0)		iTemp71 [k90 lr104:105 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp70 [k89 lr103:109 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] == 0x1 {int literal}
check.c(l106:s105:k120:d0:s0)		if iTemp71 [k90 lr104:105 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} == 0 goto _iffalse_5($12)
check.c(l107:s106:k124:d0:s0)		_hab_alarme [k91 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed} := 0x1 {const-unsigned-char literal}
check.c(l107:s107:k125:d0:s0)		 goto _swBrk_0($27)
check.c(l107:s108:k126:d0:s0)	 _iffalse_5($12) :
check.c(l108:s109:k131:d0:s0)		if iTemp70 [k89 lr103:109 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] != 0 goto _swBrk_0($27)
check.c(l109:s110:k135:d0:s0)		_hab_alarme [k91 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed} := 0x0 {const-unsigned-char literal}
check.c(l110:s111:k138:d0:s0)		 goto _swBrk_0($27)
check.c(l111:s112:k139:d0:s0)	 _case_0_52($14) :
check.c(l112:s113:k140:d0:s0)		iTemp78 [k98 lr113:114 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l112:s114:k141:d0:s0)		iTemp79 [k99 lr114:115 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp78 [k98 lr113:114 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l112:s115:k142:d0:s0)		iTemp80 [k100 lr115:116 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp79 [k99 lr114:115 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l112:s116:k143:d0:s0)		iTemp81 [k101 lr116:122 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp80 [k100 lr115:116 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l112:s117:k144:d0:s0)		iTemp82 [k102 lr117:118 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp81 [k101 lr116:122 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] == 0x1 {int literal}
check.c(l112:s118:k145:d0:s0)		if iTemp82 [k102 lr117:118 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} == 0 goto _iffalse_7($18)
check.c(l113:s119:k149:d0:s0)		_hab_sensor [k103 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed} := 0x0 {const-unsigned-char literal}
check.c(l113:s120:k150:d0:s0)		 goto _swBrk_0($27)
check.c(l113:s121:k151:d0:s0)	 _iffalse_7($18) :
check.c(l114:s122:k156:d0:s0)		if iTemp81 [k101 lr116:122 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] != 0 goto _swBrk_0($27)
check.c(l115:s123:k160:d0:s0)		_hab_sensor [k103 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed} := 0x2 {const-unsigned-char literal}
check.c(l116:s124:k163:d0:s0)		 goto _swBrk_0($27)
check.c(l117:s125:k164:d0:s0)	 _case_0_53($20) :
check.c(l118:s126:k165:d0:s0)		iTemp89 [k111 lr126:127 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{unsigned-long-int near* fixed}[remat] = &[_sys_timer_pool [k110 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int [2] fixed}]
check.c(l118:s127:k166:d0:s0)		iTemp90 [k112 lr127:165 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{unsigned-long-int near* fixed}[remat] = iTemp89 [k111 lr126:127 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{unsigned-long-int near* fixed}[remat] + 0x4 {unsigned-char literal}
check.c(l118:s128:k167:d0:s0)		iTemp91 [k113 lr128:129 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l118:s129:k168:d0:s0)		iTemp92 [k114 lr129:130 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp91 [k113 lr128:129 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l118:s130:k169:d0:s0)		iTemp93 [k115 lr130:131 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp92 [k114 lr129:130 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l118:s131:k170:d0:s0)		iTemp94 [k116 lr131:133 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp93 [k115 lr130:131 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l118:s132:k299:d0:s0)		send 0x2710 {const-int literal}{argreg = 1}
check.c(l118:s133:k300:d0:s0)		send iTemp94 [k116 lr131:133 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l118:s134:k301:d0:s0)		iTemp95 [k117 lr134:142 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l118:s135:k172:d0:s0)		iTemp96 [k118 lr135:136 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l118:s136:k173:d0:s0)		iTemp97 [k119 lr136:137 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp96 [k118 lr135:136 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l118:s137:k174:d0:s0)		iTemp98 [k120 lr137:138 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp97 [k119 lr136:137 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l118:s138:k175:d0:s0)		iTemp99 [k121 lr138:140 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp98 [k120 lr137:138 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l118:s139:k302:d0:s0)		send 0x3e8 {const-int literal}{argreg = 1}
check.c(l118:s140:k303:d0:s0)		send iTemp99 [k121 lr138:140 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l118:s141:k304:d0:s0)		iTemp100 [k122 lr141:142 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l118:s142:k177:d0:s0)		iTemp101 [k123 lr142:150 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp95 [k117 lr134:142 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp100 [k122 lr141:142 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l119:s143:k178:d0:s0)		iTemp102 [k124 lr143:144 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l119:s144:k179:d0:s0)		iTemp103 [k125 lr144:145 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp102 [k124 lr143:144 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l119:s145:k180:d0:s0)		iTemp104 [k126 lr145:146 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp103 [k125 lr144:145 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l119:s146:k181:d0:s0)		iTemp105 [k127 lr146:148 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp104 [k126 lr145:146 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l119:s147:k305:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l119:s148:k306:d0:s0)		send iTemp105 [k127 lr146:148 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l119:s149:k307:d0:s0)		iTemp106 [k128 lr149:150 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l119:s150:k183:d0:s0)		iTemp107 [k129 lr150:158 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp101 [k123 lr142:150 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp106 [k128 lr149:150 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l119:s151:k184:d0:s0)		iTemp108 [k130 lr151:152 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x4 {const-unsigned-char literal}
check.c(l119:s152:k185:d0:s0)		iTemp109 [k131 lr152:153 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp108 [k130 lr151:152 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l119:s153:k186:d0:s0)		iTemp110 [k132 lr153:154 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp109 [k131 lr152:153 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l119:s154:k187:d0:s0)		iTemp111 [k133 lr154:156 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp110 [k132 lr153:154 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l119:s155:k308:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l119:s156:k309:d0:s0)		send iTemp111 [k133 lr154:156 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l119:s157:k310:d0:s0)		iTemp112 [k134 lr157:158 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l119:s158:k189:d0:s0)		iTemp113 [k135 lr158:162 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp107 [k129 lr150:158 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp112 [k134 lr157:158 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l120:s159:k190:d0:s0)		iTemp114 [k136 lr159:160 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x5 {const-unsigned-char literal}
check.c(l120:s160:k191:d0:s0)		iTemp115 [k137 lr160:161 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp114 [k136 lr159:160 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l120:s161:k192:d0:s0)		iTemp116 [k138 lr161:162 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp115 [k137 lr160:161 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l120:s162:k193:d0:s0)		iTemp117 [k139 lr162:163 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = iTemp113 [k135 lr158:162 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp116 [k138 lr161:162 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ]
check.c(l120:s163:k194:d0:s0)		iTemp118 [k140 lr163:164 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp117 [k139 lr162:163 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l120:s164:k195:d0:s0)		iTemp119 [k141 lr164:165 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x04 r0x05 r0x06 r0x07 ] = (unsigned-long-int fixed)iTemp118 [k140 lr163:164 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]
check.c(l120:s165:k196:d0:s0)		*(iTemp90 [k112 lr127:165 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{unsigned-long-int near* fixed}[remat]) := iTemp119 [k141 lr164:165 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x04 r0x05 r0x06 r0x07 ]
check.c(l121:s166:k197:d0:s0)		 goto _swBrk_0($27)
check.c(l122:s167:k198:d0:s0)	 _case_0_54($21) :
check.c(l123:s168:k199:d0:s0)		iTemp120 [k143 lr168:169 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l123:s169:k200:d0:s0)		iTemp121 [k144 lr169:170 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp120 [k143 lr168:169 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l123:s170:k201:d0:s0)		iTemp122 [k145 lr170:171 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp121 [k144 lr169:170 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l123:s171:k202:d0:s0)		iTemp123 [k146 lr171:173 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp122 [k145 lr170:171 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l123:s172:k311:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l123:s173:k312:d0:s0)		send iTemp123 [k146 lr171:173 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l123:s174:k313:d0:s0)		iTemp124 [k147 lr174:182 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l123:s175:k204:d0:s0)		iTemp125 [k148 lr175:176 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l123:s176:k205:d0:s0)		iTemp126 [k149 lr176:177 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp125 [k148 lr175:176 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l123:s177:k206:d0:s0)		iTemp127 [k150 lr177:178 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp126 [k149 lr176:177 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l123:s178:k207:d0:s0)		iTemp128 [k151 lr178:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp127 [k150 lr177:178 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l123:s179:k314:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l123:s180:k315:d0:s0)		send iTemp128 [k151 lr178:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l123:s181:k316:d0:s0)		iTemp129 [k152 lr181:182 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l123:s182:k209:d0:s0)		iTemp130 [k153 lr182:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp124 [k147 lr174:182 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp129 [k152 lr181:182 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l124:s183:k210:d0:s0)		iTemp131 [k154 lr183:184 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l124:s184:k211:d0:s0)		iTemp132 [k155 lr184:185 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp131 [k154 lr183:184 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l124:s185:k212:d0:s0)		iTemp133 [k156 lr185:186 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp132 [k155 lr184:185 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l124:s186:k213:d0:s0)		iTemp134 [k157 lr186:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp133 [k156 lr185:186 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l124:s187:k214:d0:s0)		_sys_temp_min [k142 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed} = iTemp130 [k153 lr182:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp134 [k157 lr186:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l125:s188:k217:d0:s0)		 goto _swBrk_0($27)
check.c(l126:s189:k218:d0:s0)	 _case_0_55($22) :
check.c(l127:s190:k219:d0:s0)		iTemp137 [k161 lr190:191 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l127:s191:k220:d0:s0)		iTemp138 [k162 lr191:192 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp137 [k161 lr190:191 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l127:s192:k221:d0:s0)		iTemp139 [k163 lr192:193 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp138 [k162 lr191:192 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l127:s193:k222:d0:s0)		iTemp140 [k164 lr193:195 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp139 [k163 lr192:193 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l127:s194:k317:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l127:s195:k318:d0:s0)		send iTemp140 [k164 lr193:195 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l127:s196:k319:d0:s0)		iTemp141 [k165 lr196:204 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l127:s197:k224:d0:s0)		iTemp142 [k166 lr197:198 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l127:s198:k225:d0:s0)		iTemp143 [k167 lr198:199 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp142 [k166 lr197:198 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l127:s199:k226:d0:s0)		iTemp144 [k168 lr199:200 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp143 [k167 lr198:199 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l127:s200:k227:d0:s0)		iTemp145 [k169 lr200:202 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp144 [k168 lr199:200 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l127:s201:k320:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l127:s202:k321:d0:s0)		send iTemp145 [k169 lr200:202 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l127:s203:k322:d0:s0)		iTemp146 [k170 lr203:204 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l127:s204:k229:d0:s0)		iTemp147 [k171 lr204:209 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp141 [k165 lr196:204 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp146 [k170 lr203:204 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l128:s205:k230:d0:s0)		iTemp148 [k172 lr205:206 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l128:s206:k231:d0:s0)		iTemp149 [k173 lr206:207 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp148 [k172 lr205:206 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l128:s207:k232:d0:s0)		iTemp150 [k174 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp149 [k173 lr206:207 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l128:s208:k233:d0:s0)		iTemp151 [k175 lr208:209 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp150 [k174 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l128:s209:k234:d0:s0)		_sys_temp_max [k160 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed} = iTemp147 [k171 lr204:209 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp151 [k175 lr208:209 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l129:s210:k237:d0:s0)		 goto _swBrk_0($27)
check.c(l130:s211:k238:d0:s0)	 _case_0_56($23) :
check.c(l131:s212:k239:d0:s0)		iTemp154 [k179 lr212:213 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l131:s213:k240:d0:s0)		iTemp155 [k180 lr213:214 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp154 [k179 lr212:213 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l131:s214:k241:d0:s0)		iTemp156 [k181 lr214:215 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp155 [k180 lr213:214 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l131:s215:k242:d0:s0)		iTemp157 [k182 lr215:217 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp156 [k181 lr214:215 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l131:s216:k323:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l131:s217:k324:d0:s0)		send iTemp157 [k182 lr215:217 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l131:s218:k325:d0:s0)		iTemp158 [k183 lr218:226 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l131:s219:k244:d0:s0)		iTemp159 [k184 lr219:220 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l131:s220:k245:d0:s0)		iTemp160 [k185 lr220:221 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp159 [k184 lr219:220 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l131:s221:k246:d0:s0)		iTemp161 [k186 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp160 [k185 lr220:221 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l131:s222:k247:d0:s0)		iTemp162 [k187 lr222:224 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp161 [k186 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l131:s223:k326:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l131:s224:k327:d0:s0)		send iTemp162 [k187 lr222:224 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l131:s225:k328:d0:s0)		iTemp163 [k188 lr225:226 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l131:s226:k249:d0:s0)		iTemp164 [k189 lr226:231 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp158 [k183 lr218:226 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp163 [k188 lr225:226 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l132:s227:k250:d0:s0)		iTemp165 [k190 lr227:228 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l132:s228:k251:d0:s0)		iTemp166 [k191 lr228:229 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp165 [k190 lr227:228 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l132:s229:k252:d0:s0)		iTemp167 [k192 lr229:230 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp166 [k191 lr228:229 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l132:s230:k253:d0:s0)		iTemp168 [k193 lr230:231 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp167 [k192 lr229:230 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l132:s231:k254:d0:s0)		_sys_lumi_min [k178 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed} = iTemp164 [k189 lr226:231 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp168 [k193 lr230:231 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l133:s232:k257:d0:s0)		 goto _swBrk_0($27)
check.c(l134:s233:k258:d0:s0)	 _case_0_57($24) :
check.c(l135:s234:k259:d0:s0)		iTemp171 [k196 lr234:235 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l135:s235:k260:d0:s0)		iTemp172 [k197 lr235:236 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp171 [k196 lr234:235 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l135:s236:k261:d0:s0)		iTemp173 [k198 lr236:237 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp172 [k197 lr235:236 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l135:s237:k262:d0:s0)		iTemp174 [k199 lr237:239 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp173 [k198 lr236:237 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l135:s238:k329:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l135:s239:k330:d0:s0)		send iTemp174 [k199 lr237:239 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l135:s240:k331:d0:s0)		iTemp175 [k200 lr240:248 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l135:s241:k264:d0:s0)		iTemp176 [k201 lr241:242 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l135:s242:k265:d0:s0)		iTemp177 [k202 lr242:243 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp176 [k201 lr241:242 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l135:s243:k266:d0:s0)		iTemp178 [k203 lr243:244 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp177 [k202 lr242:243 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l135:s244:k267:d0:s0)		iTemp179 [k204 lr244:246 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp178 [k203 lr243:244 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l135:s245:k332:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l135:s246:k333:d0:s0)		send iTemp179 [k204 lr244:246 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l135:s247:k334:d0:s0)		iTemp180 [k205 lr247:248 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l135:s248:k269:d0:s0)		iTemp181 [k206 lr248:253 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp175 [k200 lr240:248 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp180 [k205 lr247:248 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l136:s249:k270:d0:s0)		iTemp182 [k207 lr249:250 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x00 r0x01 r0x02 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l136:s250:k271:d0:s0)		iTemp183 [k208 lr250:251 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x00 ] = @[iTemp182 [k207 lr249:250 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x00 r0x01 r0x02 ] + 0x0 {const-unsigned-char literal}]
check.c(l136:s251:k272:d0:s0)		iTemp184 [k209 lr251:252 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x00 r0x01 ] = (int fixed)iTemp183 [k208 lr250:251 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x00 ]
check.c(l136:s252:k273:d0:s0)		iTemp185 [k210 lr252:253 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x00 r0x01 ] = iTemp184 [k209 lr251:252 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x00 r0x01 ] - 0x30 {int literal}
check.c(l136:s253:k274:d0:s0)		_sys_temp_max [k160 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed} = iTemp181 [k206 lr248:253 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp185 [k210 lr252:253 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x00 r0x01 ]
check.c(l137:s254:k277:d0:s0)		 goto _swBrk_0($27)
check.c(l138:s255:k278:d0:s0)	 _case_0_82($25) :
check.c(l139:s256:k279:d0:s0)		iTemp1 [k4 lr4:258 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _check_comando_ret_1_74}[r0x03 ] := 0x0 {const-char literal}
check.c(l143:s257:k283:d0:s0)	 _swBrk_0($27) :
check.c(l145:s258:k284:d0:s0)		ret iTemp1 [k4 lr4:258 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _check_comando_ret_1_74}[r0x03 ]
check.c(l145:s259:k285:d0:s0)	 _return($32) :
check.c(l145:s260:k286:d0:s0)		eproc _check_comando [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char function ( char generic* fixed) fixed}

----------------------------------------------------------------
Basic Block _eBBlock44 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 34 : bbnum = 12 1st iCode = 32 , last iCode = 38
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 299 bSize = 38
Bits on { (35) (36) (37) }

local defines bitVector :bitvector Size = 299 bSize = 38
Bits on { (35) (36) (37) (40) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (3) (5) (6) (28) (29) (30) (31) }

outDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (3) (5) (6) (28) (29) (30) (31) (35) (36) (37) (40) }

usesDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (35) (36) (37) (40) }

----------------------------------------------------------------
check.c(l83:s32:k35:d0:s0)		iTemp18 [k24 lr32:33 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x05 r0x06 r0x07 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l83:s33:k36:d0:s0)		iTemp19 [k25 lr33:34 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = @[iTemp18 [k24 lr32:33 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x05 r0x06 r0x07 ] + 0x0 {const-unsigned-char literal}]
check.c(l83:s34:k37:d0:s0)		iTemp20 [k26 lr34:36 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = iTemp19 [k25 lr33:34 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] - 0x30 {char literal}
check.c(l83:s35:k38:d0:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
check.c(l83:s36:k39:d0:s0)		send iTemp20 [k26 lr34:36 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ]{argreg = 2}
check.c(l83:s37:k40:d0:s0)		iTemp21 [k29 lr37:37 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _led [k23 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( unsigned-char fixed, unsigned-char fixed) fixed}
check.c(l83:s38:k41:d0:s0)		 goto _swBrk_0($27)
check.c(l83:s39:k42:d0:s0)	 _iffalse_3($3) :
check.c(l85:s40:k43:d0:s0)		iTemp23 [k32 lr40:41 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x05 r0x06 r0x07 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l85:s41:k44:d0:s0)		iTemp24 [k33 lr41:42 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = @[iTemp23 [k32 lr40:41 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x05 r0x06 r0x07 ] + 0x0 {const-unsigned-char literal}]
check.c(l85:s42:k45:d0:s0)		iTemp25 [k34 lr42:43 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = iTemp24 [k33 lr41:42 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] - 0x30 {char literal}
check.c(l85:s43:k46:d0:s0)		iTemp26 [k35 lr43:48 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = iTemp25 [k34 lr42:43 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] * 0x64 {const-unsigned-char literal}
check.c(l85:s44:k47:d0:s0)		iTemp27 [k36 lr44:45 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l85:s45:k48:d0:s0)		iTemp28 [k37 lr45:46 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp27 [k36 lr44:45 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l85:s46:k49:d0:s0)		iTemp29 [k38 lr46:47 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = iTemp28 [k37 lr45:46 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] - 0x30 {char literal}
check.c(l85:s47:k50:d0:s0)		iTemp30 [k39 lr47:48 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = iTemp29 [k38 lr46:47 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] * 0xa {const-unsigned-char literal}
check.c(l85:s48:k51:d0:s0)		iTemp31 [k40 lr48:51 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = iTemp26 [k35 lr43:48 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] + iTemp30 [k39 lr47:48 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l86:s49:k52:d0:s0)		iTemp32 [k41 lr49:50 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x4 {const-unsigned-char literal}
check.c(l86:s50:k53:d0:s0)		iTemp33 [k42 lr50:51 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp32 [k41 lr49:50 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l86:s51:k54:d0:s0)		iTemp34 [k43 lr51:52 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = iTemp31 [k40 lr48:51 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] + iTemp33 [k42 lr50:51 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l86:s52:k55:d0:s0)		iTemp22 [k30 lr52:55 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_pwm_1_74}[r0x05 ] = iTemp34 [k43 lr51:52 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] - 0x30 {char literal}
check.c(l87:s53:k57:d0:s0)		iTemp36 [k46 lr53:55 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = iTemp14 [k18 lr30:53 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_led_num_1_74}[r0x04 ] - 0x1 {char literal}
check.c(l87:s54:k58:d0:s0)		send iTemp36 [k46 lr53:55 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]{argreg = 1}
check.c(l87:s55:k59:d0:s0)		send iTemp22 [k30 lr52:55 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_pwm_1_74}[r0x05 ]{argreg = 2}
check.c(l87:s56:k60:d0:s0)		iTemp37 [k49 lr56:56 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _set_pwm [k45 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( unsigned-char fixed, unsigned-char fixed) fixed}
check.c(l89:s57:k62:d0:s0)		 goto _swBrk_0($27)
check.c(l90:s58:k63:d0:s0)	 _case_0_50($5) :
check.c(l91:s59:k64:d0:s0)		iTemp38 [k51 lr59:59 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _limpa_lcd [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( ) fixed}
check.c(l94:s60:k65:d0:s0)		iTemp39 [k53 lr60:88 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] = &[_check_comando_linha_1_1_74 [k52 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [17] fixed}]
check.c(l94:s61:k66:d0:s0)		iTemp40 [k54 lr61:62 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] = iTemp39 [k53 lr60:88 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] + 0x10 {const-unsigned-char literal}
check.c(l94:s62:k67:d0:s0)		*(iTemp40 [k54 lr61:62 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat]) := 0x0 {const-char literal}
check.c(l95:s63:k68:d0:s0)		iTemp41 [k56 lr63:93 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] = &[_check_comando_linha_2_1_74 [k55 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [17] fixed}]
check.c(l95:s64:k69:d0:s0)		iTemp42 [k57 lr64:65 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] = iTemp41 [k56 lr63:93 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] + 0x10 {const-unsigned-char literal}
check.c(l95:s65:k70:d0:s0)		*(iTemp42 [k57 lr64:65 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat]) := 0x0 {const-char literal}
check.c(l96:s66:k289:d0:s0)		iTemp50 [k66 lr66:76 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] := 0x1 {const-char literal}
check.c(l96:s68:k72:d1:s0)	 _forbody_1($28) :
check.c(l97:s69:k74:d1:s0)		iTemp45 [k61 lr69:70 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = iTemp50 [k66 lr66:76 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] - 0x1 {char literal}
check.c(l97:s70:k75:d1:s0)		iTemp46 [k62 lr70:73 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x05 r0x06 ] = iTemp39 [k53 lr60:88 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] + iTemp45 [k61 lr69:70 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ]
check.c(l97:s71:k76:d1:s0)		iTemp47 [k63 lr71:72 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x07 r0x08 r0x09 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + iTemp50 [k66 lr66:76 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ]
check.c(l97:s72:k77:d1:s0)		iTemp48 [k64 lr72:73 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x07 ] = @[iTemp47 [k63 lr71:72 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x07 r0x08 r0x09 ] + 0x0 {const-unsigned-char literal}]
check.c(l97:s73:k78:d1:s0)		*(iTemp46 [k62 lr70:73 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x05 r0x06 ]) := iTemp48 [k64 lr72:73 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x07 ]
check.c(l96:s74:k81:d1:s0)		iTemp50 [k66 lr66:76 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] = iTemp50 [k66 lr66:76 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] + 0x1 {const-unsigned-char literal}
check.c(l96:s75:k83:d1:s0)		iTemp51 [k67 lr75:76 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp50 [k66 lr66:76 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] < 0x11 {const-char literal}
check.c(l96:s76:k84:d1:s0)		if iTemp51 [k67 lr75:76 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forbody_1($28)
check.c(l98:s77:k292:d0:s0)		iTemp58 [k74 lr77:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] := 0x11 {const-char literal}
check.c(l98:s79:k88:d1:s0)	 _forbody_2($30) :
check.c(l99:s80:k90:d1:s0)		iTemp53 [k69 lr80:81 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = iTemp58 [k74 lr77:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] - 0x11 {char literal}
check.c(l99:s81:k91:d1:s0)		iTemp54 [k70 lr81:84 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x05 r0x06 ] = iTemp41 [k56 lr63:93 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] + iTemp53 [k69 lr80:81 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ]
check.c(l99:s82:k92:d1:s0)		iTemp55 [k71 lr82:83 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x07 r0x08 r0x09 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + iTemp58 [k74 lr77:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ]
check.c(l99:s83:k93:d1:s0)		iTemp56 [k72 lr83:84 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x07 ] = @[iTemp55 [k71 lr82:83 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x07 r0x08 r0x09 ] + 0x0 {const-unsigned-char literal}]
check.c(l99:s84:k94:d1:s0)		*(iTemp54 [k70 lr81:84 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x05 r0x06 ]) := iTemp56 [k72 lr83:84 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x07 ]
check.c(l98:s85:k97:d1:s0)		iTemp58 [k74 lr77:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] = iTemp58 [k74 lr77:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] + 0x1 {const-unsigned-char literal}
check.c(l98:s86:k99:d1:s0)		iTemp59 [k75 lr86:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp58 [k74 lr77:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] < 0x21 {const-char literal}
check.c(l98:s87:k100:d1:s0)		if iTemp59 [k75 lr86:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forbody_2($30)
check.c(l100:s88:k103:d0:s0)		iTemp60 [k77 lr88:89 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] := iTemp39 [k53 lr60:88 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat]
check.c(l100:s89:k104:d0:s0)		iTemp61 [k78 lr89:90 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = (char generic* fixed)iTemp60 [k77 lr88:89 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat]
check.c(l100:s90:k105:d0:s0)		send iTemp61 [k78 lr89:90 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ]{argreg = 1}
check.c(l100:s91:k106:d0:s0)		iTemp62 [k80 lr91:91 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _print_lcd_string [k76 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char generic* fixed) fixed}
check.c(l101:s92:k107:d0:s0)		iTemp63 [k82 lr92:92 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _print_lcd_ln [k81 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( ) fixed}
check.c(l102:s93:k108:d0:s0)		iTemp64 [k83 lr93:94 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] := iTemp41 [k56 lr63:93 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat]
check.c(l102:s94:k109:d0:s0)		iTemp65 [k84 lr94:95 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = (char generic* fixed)iTemp64 [k83 lr93:94 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat]
check.c(l102:s95:k110:d0:s0)		send iTemp65 [k84 lr94:95 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ]{argreg = 1}
check.c(l102:s96:k111:d0:s0)		iTemp66 [k85 lr96:96 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _print_lcd_string [k76 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char generic* fixed) fixed}
check.c(l103:s97:k112:d0:s0)		iTemp1 [k4 lr4:258 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _check_comando_ret_1_74}[r0x03 ] := 0x34 {const-unsigned-char literal}
check.c(l104:s98:k113:d0:s0)		 goto _swBrk_0($27)
check.c(l105:s99:k114:d0:s0)	 _case_0_51($8) :
check.c(l106:s100:k115:d0:s0)		iTemp67 [k86 lr100:101 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l106:s101:k116:d0:s0)		iTemp68 [k87 lr101:102 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp67 [k86 lr100:101 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l106:s102:k117:d0:s0)		iTemp69 [k88 lr102:103 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp68 [k87 lr101:102 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l106:s103:k118:d0:s0)		iTemp70 [k89 lr103:109 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp69 [k88 lr102:103 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l106:s104:k119:d0:s0)		iTemp71 [k90 lr104:105 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp70 [k89 lr103:109 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] == 0x1 {int literal}
check.c(l106:s105:k120:d0:s0)		if iTemp71 [k90 lr104:105 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} == 0 goto _iffalse_5($12)
check.c(l107:s106:k124:d0:s0)		_hab_alarme [k91 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed} := 0x1 {const-unsigned-char literal}
check.c(l107:s107:k125:d0:s0)		 goto _swBrk_0($27)
check.c(l107:s108:k126:d0:s0)	 _iffalse_5($12) :
check.c(l108:s109:k131:d0:s0)		if iTemp70 [k89 lr103:109 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] != 0 goto _swBrk_0($27)
check.c(l109:s110:k135:d0:s0)		_hab_alarme [k91 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed} := 0x0 {const-unsigned-char literal}
check.c(l110:s111:k138:d0:s0)		 goto _swBrk_0($27)
check.c(l111:s112:k139:d0:s0)	 _case_0_52($14) :
check.c(l112:s113:k140:d0:s0)		iTemp78 [k98 lr113:114 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l112:s114:k141:d0:s0)		iTemp79 [k99 lr114:115 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp78 [k98 lr113:114 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l112:s115:k142:d0:s0)		iTemp80 [k100 lr115:116 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp79 [k99 lr114:115 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l112:s116:k143:d0:s0)		iTemp81 [k101 lr116:122 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp80 [k100 lr115:116 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l112:s117:k144:d0:s0)		iTemp82 [k102 lr117:118 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp81 [k101 lr116:122 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] == 0x1 {int literal}
check.c(l112:s118:k145:d0:s0)		if iTemp82 [k102 lr117:118 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} == 0 goto _iffalse_7($18)
check.c(l113:s119:k149:d0:s0)		_hab_sensor [k103 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed} := 0x0 {const-unsigned-char literal}
check.c(l113:s120:k150:d0:s0)		 goto _swBrk_0($27)
check.c(l113:s121:k151:d0:s0)	 _iffalse_7($18) :
check.c(l114:s122:k156:d0:s0)		if iTemp81 [k101 lr116:122 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] != 0 goto _swBrk_0($27)
check.c(l115:s123:k160:d0:s0)		_hab_sensor [k103 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed} := 0x2 {const-unsigned-char literal}
check.c(l116:s124:k163:d0:s0)		 goto _swBrk_0($27)
check.c(l117:s125:k164:d0:s0)	 _case_0_53($20) :
check.c(l118:s126:k165:d0:s0)		iTemp89 [k111 lr126:127 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{unsigned-long-int near* fixed}[remat] = &[_sys_timer_pool [k110 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int [2] fixed}]
check.c(l118:s127:k166:d0:s0)		iTemp90 [k112 lr127:165 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{unsigned-long-int near* fixed}[remat] = iTemp89 [k111 lr126:127 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{unsigned-long-int near* fixed}[remat] + 0x4 {unsigned-char literal}
check.c(l118:s128:k167:d0:s0)		iTemp91 [k113 lr128:129 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l118:s129:k168:d0:s0)		iTemp92 [k114 lr129:130 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp91 [k113 lr128:129 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l118:s130:k169:d0:s0)		iTemp93 [k115 lr130:131 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp92 [k114 lr129:130 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l118:s131:k170:d0:s0)		iTemp94 [k116 lr131:133 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp93 [k115 lr130:131 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l118:s132:k299:d0:s0)		send 0x2710 {const-int literal}{argreg = 1}
check.c(l118:s133:k300:d0:s0)		send iTemp94 [k116 lr131:133 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l118:s134:k301:d0:s0)		iTemp95 [k117 lr134:142 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l118:s135:k172:d0:s0)		iTemp96 [k118 lr135:136 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l118:s136:k173:d0:s0)		iTemp97 [k119 lr136:137 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp96 [k118 lr135:136 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l118:s137:k174:d0:s0)		iTemp98 [k120 lr137:138 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp97 [k119 lr136:137 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l118:s138:k175:d0:s0)		iTemp99 [k121 lr138:140 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp98 [k120 lr137:138 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l118:s139:k302:d0:s0)		send 0x3e8 {const-int literal}{argreg = 1}
check.c(l118:s140:k303:d0:s0)		send iTemp99 [k121 lr138:140 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l118:s141:k304:d0:s0)		iTemp100 [k122 lr141:142 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l118:s142:k177:d0:s0)		iTemp101 [k123 lr142:150 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp95 [k117 lr134:142 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp100 [k122 lr141:142 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l119:s143:k178:d0:s0)		iTemp102 [k124 lr143:144 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l119:s144:k179:d0:s0)		iTemp103 [k125 lr144:145 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp102 [k124 lr143:144 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l119:s145:k180:d0:s0)		iTemp104 [k126 lr145:146 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp103 [k125 lr144:145 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l119:s146:k181:d0:s0)		iTemp105 [k127 lr146:148 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp104 [k126 lr145:146 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l119:s147:k305:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l119:s148:k306:d0:s0)		send iTemp105 [k127 lr146:148 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l119:s149:k307:d0:s0)		iTemp106 [k128 lr149:150 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l119:s150:k183:d0:s0)		iTemp107 [k129 lr150:158 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp101 [k123 lr142:150 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp106 [k128 lr149:150 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l119:s151:k184:d0:s0)		iTemp108 [k130 lr151:152 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x4 {const-unsigned-char literal}
check.c(l119:s152:k185:d0:s0)		iTemp109 [k131 lr152:153 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp108 [k130 lr151:152 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l119:s153:k186:d0:s0)		iTemp110 [k132 lr153:154 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp109 [k131 lr152:153 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l119:s154:k187:d0:s0)		iTemp111 [k133 lr154:156 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp110 [k132 lr153:154 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l119:s155:k308:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l119:s156:k309:d0:s0)		send iTemp111 [k133 lr154:156 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l119:s157:k310:d0:s0)		iTemp112 [k134 lr157:158 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l119:s158:k189:d0:s0)		iTemp113 [k135 lr158:162 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp107 [k129 lr150:158 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp112 [k134 lr157:158 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l120:s159:k190:d0:s0)		iTemp114 [k136 lr159:160 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x5 {const-unsigned-char literal}
check.c(l120:s160:k191:d0:s0)		iTemp115 [k137 lr160:161 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp114 [k136 lr159:160 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l120:s161:k192:d0:s0)		iTemp116 [k138 lr161:162 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp115 [k137 lr160:161 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l120:s162:k193:d0:s0)		iTemp117 [k139 lr162:163 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = iTemp113 [k135 lr158:162 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp116 [k138 lr161:162 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ]
check.c(l120:s163:k194:d0:s0)		iTemp118 [k140 lr163:164 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp117 [k139 lr162:163 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l120:s164:k195:d0:s0)		iTemp119 [k141 lr164:165 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x04 r0x05 r0x06 r0x07 ] = (unsigned-long-int fixed)iTemp118 [k140 lr163:164 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]
check.c(l120:s165:k196:d0:s0)		*(iTemp90 [k112 lr127:165 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{unsigned-long-int near* fixed}[remat]) := iTemp119 [k141 lr164:165 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x04 r0x05 r0x06 r0x07 ]
check.c(l121:s166:k197:d0:s0)		 goto _swBrk_0($27)
check.c(l122:s167:k198:d0:s0)	 _case_0_54($21) :
check.c(l123:s168:k199:d0:s0)		iTemp120 [k143 lr168:169 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l123:s169:k200:d0:s0)		iTemp121 [k144 lr169:170 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp120 [k143 lr168:169 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l123:s170:k201:d0:s0)		iTemp122 [k145 lr170:171 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp121 [k144 lr169:170 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l123:s171:k202:d0:s0)		iTemp123 [k146 lr171:173 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp122 [k145 lr170:171 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l123:s172:k311:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l123:s173:k312:d0:s0)		send iTemp123 [k146 lr171:173 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l123:s174:k313:d0:s0)		iTemp124 [k147 lr174:182 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l123:s175:k204:d0:s0)		iTemp125 [k148 lr175:176 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l123:s176:k205:d0:s0)		iTemp126 [k149 lr176:177 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp125 [k148 lr175:176 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l123:s177:k206:d0:s0)		iTemp127 [k150 lr177:178 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp126 [k149 lr176:177 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l123:s178:k207:d0:s0)		iTemp128 [k151 lr178:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp127 [k150 lr177:178 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l123:s179:k314:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l123:s180:k315:d0:s0)		send iTemp128 [k151 lr178:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l123:s181:k316:d0:s0)		iTemp129 [k152 lr181:182 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l123:s182:k209:d0:s0)		iTemp130 [k153 lr182:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp124 [k147 lr174:182 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp129 [k152 lr181:182 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l124:s183:k210:d0:s0)		iTemp131 [k154 lr183:184 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l124:s184:k211:d0:s0)		iTemp132 [k155 lr184:185 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp131 [k154 lr183:184 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l124:s185:k212:d0:s0)		iTemp133 [k156 lr185:186 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp132 [k155 lr184:185 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l124:s186:k213:d0:s0)		iTemp134 [k157 lr186:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp133 [k156 lr185:186 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l124:s187:k214:d0:s0)		_sys_temp_min [k142 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed} = iTemp130 [k153 lr182:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp134 [k157 lr186:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l125:s188:k217:d0:s0)		 goto _swBrk_0($27)
check.c(l126:s189:k218:d0:s0)	 _case_0_55($22) :
check.c(l127:s190:k219:d0:s0)		iTemp137 [k161 lr190:191 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l127:s191:k220:d0:s0)		iTemp138 [k162 lr191:192 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp137 [k161 lr190:191 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l127:s192:k221:d0:s0)		iTemp139 [k163 lr192:193 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp138 [k162 lr191:192 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l127:s193:k222:d0:s0)		iTemp140 [k164 lr193:195 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp139 [k163 lr192:193 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l127:s194:k317:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l127:s195:k318:d0:s0)		send iTemp140 [k164 lr193:195 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l127:s196:k319:d0:s0)		iTemp141 [k165 lr196:204 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l127:s197:k224:d0:s0)		iTemp142 [k166 lr197:198 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l127:s198:k225:d0:s0)		iTemp143 [k167 lr198:199 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp142 [k166 lr197:198 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l127:s199:k226:d0:s0)		iTemp144 [k168 lr199:200 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp143 [k167 lr198:199 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l127:s200:k227:d0:s0)		iTemp145 [k169 lr200:202 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp144 [k168 lr199:200 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l127:s201:k320:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l127:s202:k321:d0:s0)		send iTemp145 [k169 lr200:202 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l127:s203:k322:d0:s0)		iTemp146 [k170 lr203:204 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l127:s204:k229:d0:s0)		iTemp147 [k171 lr204:209 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp141 [k165 lr196:204 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp146 [k170 lr203:204 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l128:s205:k230:d0:s0)		iTemp148 [k172 lr205:206 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l128:s206:k231:d0:s0)		iTemp149 [k173 lr206:207 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp148 [k172 lr205:206 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l128:s207:k232:d0:s0)		iTemp150 [k174 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp149 [k173 lr206:207 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l128:s208:k233:d0:s0)		iTemp151 [k175 lr208:209 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp150 [k174 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l128:s209:k234:d0:s0)		_sys_temp_max [k160 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed} = iTemp147 [k171 lr204:209 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp151 [k175 lr208:209 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l129:s210:k237:d0:s0)		 goto _swBrk_0($27)
check.c(l130:s211:k238:d0:s0)	 _case_0_56($23) :
check.c(l131:s212:k239:d0:s0)		iTemp154 [k179 lr212:213 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l131:s213:k240:d0:s0)		iTemp155 [k180 lr213:214 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp154 [k179 lr212:213 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l131:s214:k241:d0:s0)		iTemp156 [k181 lr214:215 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp155 [k180 lr213:214 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l131:s215:k242:d0:s0)		iTemp157 [k182 lr215:217 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp156 [k181 lr214:215 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l131:s216:k323:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l131:s217:k324:d0:s0)		send iTemp157 [k182 lr215:217 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l131:s218:k325:d0:s0)		iTemp158 [k183 lr218:226 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l131:s219:k244:d0:s0)		iTemp159 [k184 lr219:220 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l131:s220:k245:d0:s0)		iTemp160 [k185 lr220:221 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp159 [k184 lr219:220 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l131:s221:k246:d0:s0)		iTemp161 [k186 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp160 [k185 lr220:221 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l131:s222:k247:d0:s0)		iTemp162 [k187 lr222:224 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp161 [k186 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l131:s223:k326:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l131:s224:k327:d0:s0)		send iTemp162 [k187 lr222:224 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l131:s225:k328:d0:s0)		iTemp163 [k188 lr225:226 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l131:s226:k249:d0:s0)		iTemp164 [k189 lr226:231 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp158 [k183 lr218:226 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp163 [k188 lr225:226 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l132:s227:k250:d0:s0)		iTemp165 [k190 lr227:228 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l132:s228:k251:d0:s0)		iTemp166 [k191 lr228:229 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp165 [k190 lr227:228 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l132:s229:k252:d0:s0)		iTemp167 [k192 lr229:230 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp166 [k191 lr228:229 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l132:s230:k253:d0:s0)		iTemp168 [k193 lr230:231 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp167 [k192 lr229:230 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l132:s231:k254:d0:s0)		_sys_lumi_min [k178 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed} = iTemp164 [k189 lr226:231 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp168 [k193 lr230:231 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l133:s232:k257:d0:s0)		 goto _swBrk_0($27)
check.c(l134:s233:k258:d0:s0)	 _case_0_57($24) :
check.c(l135:s234:k259:d0:s0)		iTemp171 [k196 lr234:235 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l135:s235:k260:d0:s0)		iTemp172 [k197 lr235:236 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp171 [k196 lr234:235 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l135:s236:k261:d0:s0)		iTemp173 [k198 lr236:237 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp172 [k197 lr235:236 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l135:s237:k262:d0:s0)		iTemp174 [k199 lr237:239 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp173 [k198 lr236:237 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l135:s238:k329:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l135:s239:k330:d0:s0)		send iTemp174 [k199 lr237:239 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l135:s240:k331:d0:s0)		iTemp175 [k200 lr240:248 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l135:s241:k264:d0:s0)		iTemp176 [k201 lr241:242 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l135:s242:k265:d0:s0)		iTemp177 [k202 lr242:243 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp176 [k201 lr241:242 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l135:s243:k266:d0:s0)		iTemp178 [k203 lr243:244 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp177 [k202 lr242:243 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l135:s244:k267:d0:s0)		iTemp179 [k204 lr244:246 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp178 [k203 lr243:244 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l135:s245:k332:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l135:s246:k333:d0:s0)		send iTemp179 [k204 lr244:246 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l135:s247:k334:d0:s0)		iTemp180 [k205 lr247:248 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l135:s248:k269:d0:s0)		iTemp181 [k206 lr248:253 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp175 [k200 lr240:248 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp180 [k205 lr247:248 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l136:s249:k270:d0:s0)		iTemp182 [k207 lr249:250 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x00 r0x01 r0x02 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l136:s250:k271:d0:s0)		iTemp183 [k208 lr250:251 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x00 ] = @[iTemp182 [k207 lr249:250 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x00 r0x01 r0x02 ] + 0x0 {const-unsigned-char literal}]
check.c(l136:s251:k272:d0:s0)		iTemp184 [k209 lr251:252 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x00 r0x01 ] = (int fixed)iTemp183 [k208 lr250:251 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x00 ]
check.c(l136:s252:k273:d0:s0)		iTemp185 [k210 lr252:253 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x00 r0x01 ] = iTemp184 [k209 lr251:252 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x00 r0x01 ] - 0x30 {int literal}
check.c(l136:s253:k274:d0:s0)		_sys_temp_max [k160 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed} = iTemp181 [k206 lr248:253 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp185 [k210 lr252:253 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x00 r0x01 ]
check.c(l137:s254:k277:d0:s0)		 goto _swBrk_0($27)
check.c(l138:s255:k278:d0:s0)	 _case_0_82($25) :
check.c(l139:s256:k279:d0:s0)		iTemp1 [k4 lr4:258 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _check_comando_ret_1_74}[r0x03 ] := 0x0 {const-char literal}
check.c(l143:s257:k283:d0:s0)	 _swBrk_0($27) :
check.c(l145:s258:k284:d0:s0)		ret iTemp1 [k4 lr4:258 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _check_comando_ret_1_74}[r0x03 ]
check.c(l145:s259:k285:d0:s0)	 _return($32) :
check.c(l145:s260:k286:d0:s0)		eproc _check_comando [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char function ( char generic* fixed) fixed}

----------------------------------------------------------------
Basic Block _iffalse_3 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 35 : bbnum = 13 1st iCode = 39 , last iCode = 57
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 299 bSize = 38
Bits on { (43) (44) (45) (46) (47) (48) (49) (50) (51) (52) (53) (54) (55) (56) (57) }

local defines bitVector :bitvector Size = 299 bSize = 38
Bits on { (43) (44) (45) (46) (47) (48) (49) (50) (51) (52) (53) (54) (55) (56) (57) (60) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (3) (5) (6) (28) (29) (30) (31) }

outDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (3) (5) (6) (28) (29) (30) (31) (43) (44) (45) (46) (47) (48) (49) (50) (51) (52) (53) (54) (55) (56) (57) (60) }

usesDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (31) (43) (44) (45) (46) (47) (48) (49) (50) (51) (52) (53) (54) (55) (56) (57) (60) }

----------------------------------------------------------------
check.c(l83:s39:k42:d0:s0)	 _iffalse_3($3) :
check.c(l85:s40:k43:d0:s0)		iTemp23 [k32 lr40:41 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x05 r0x06 r0x07 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l85:s41:k44:d0:s0)		iTemp24 [k33 lr41:42 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = @[iTemp23 [k32 lr40:41 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x05 r0x06 r0x07 ] + 0x0 {const-unsigned-char literal}]
check.c(l85:s42:k45:d0:s0)		iTemp25 [k34 lr42:43 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = iTemp24 [k33 lr41:42 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] - 0x30 {char literal}
check.c(l85:s43:k46:d0:s0)		iTemp26 [k35 lr43:48 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = iTemp25 [k34 lr42:43 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] * 0x64 {const-unsigned-char literal}
check.c(l85:s44:k47:d0:s0)		iTemp27 [k36 lr44:45 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l85:s45:k48:d0:s0)		iTemp28 [k37 lr45:46 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp27 [k36 lr44:45 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l85:s46:k49:d0:s0)		iTemp29 [k38 lr46:47 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = iTemp28 [k37 lr45:46 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] - 0x30 {char literal}
check.c(l85:s47:k50:d0:s0)		iTemp30 [k39 lr47:48 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = iTemp29 [k38 lr46:47 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] * 0xa {const-unsigned-char literal}
check.c(l85:s48:k51:d0:s0)		iTemp31 [k40 lr48:51 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = iTemp26 [k35 lr43:48 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] + iTemp30 [k39 lr47:48 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l86:s49:k52:d0:s0)		iTemp32 [k41 lr49:50 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x4 {const-unsigned-char literal}
check.c(l86:s50:k53:d0:s0)		iTemp33 [k42 lr50:51 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp32 [k41 lr49:50 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l86:s51:k54:d0:s0)		iTemp34 [k43 lr51:52 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = iTemp31 [k40 lr48:51 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] + iTemp33 [k42 lr50:51 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l86:s52:k55:d0:s0)		iTemp22 [k30 lr52:55 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_pwm_1_74}[r0x05 ] = iTemp34 [k43 lr51:52 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] - 0x30 {char literal}
check.c(l87:s53:k57:d0:s0)		iTemp36 [k46 lr53:55 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = iTemp14 [k18 lr30:53 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_led_num_1_74}[r0x04 ] - 0x1 {char literal}
check.c(l87:s54:k58:d0:s0)		send iTemp36 [k46 lr53:55 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]{argreg = 1}
check.c(l87:s55:k59:d0:s0)		send iTemp22 [k30 lr52:55 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_pwm_1_74}[r0x05 ]{argreg = 2}
check.c(l87:s56:k60:d0:s0)		iTemp37 [k49 lr56:56 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _set_pwm [k45 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( unsigned-char fixed, unsigned-char fixed) fixed}
check.c(l89:s57:k62:d0:s0)		 goto _swBrk_0($27)
check.c(l90:s58:k63:d0:s0)	 _case_0_50($5) :
check.c(l91:s59:k64:d0:s0)		iTemp38 [k51 lr59:59 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _limpa_lcd [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( ) fixed}
check.c(l94:s60:k65:d0:s0)		iTemp39 [k53 lr60:88 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] = &[_check_comando_linha_1_1_74 [k52 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [17] fixed}]
check.c(l94:s61:k66:d0:s0)		iTemp40 [k54 lr61:62 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] = iTemp39 [k53 lr60:88 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] + 0x10 {const-unsigned-char literal}
check.c(l94:s62:k67:d0:s0)		*(iTemp40 [k54 lr61:62 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat]) := 0x0 {const-char literal}
check.c(l95:s63:k68:d0:s0)		iTemp41 [k56 lr63:93 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] = &[_check_comando_linha_2_1_74 [k55 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [17] fixed}]
check.c(l95:s64:k69:d0:s0)		iTemp42 [k57 lr64:65 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] = iTemp41 [k56 lr63:93 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] + 0x10 {const-unsigned-char literal}
check.c(l95:s65:k70:d0:s0)		*(iTemp42 [k57 lr64:65 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat]) := 0x0 {const-char literal}
check.c(l96:s66:k289:d0:s0)		iTemp50 [k66 lr66:76 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] := 0x1 {const-char literal}
check.c(l96:s68:k72:d1:s0)	 _forbody_1($28) :
check.c(l97:s69:k74:d1:s0)		iTemp45 [k61 lr69:70 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = iTemp50 [k66 lr66:76 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] - 0x1 {char literal}
check.c(l97:s70:k75:d1:s0)		iTemp46 [k62 lr70:73 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x05 r0x06 ] = iTemp39 [k53 lr60:88 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] + iTemp45 [k61 lr69:70 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ]
check.c(l97:s71:k76:d1:s0)		iTemp47 [k63 lr71:72 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x07 r0x08 r0x09 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + iTemp50 [k66 lr66:76 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ]
check.c(l97:s72:k77:d1:s0)		iTemp48 [k64 lr72:73 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x07 ] = @[iTemp47 [k63 lr71:72 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x07 r0x08 r0x09 ] + 0x0 {const-unsigned-char literal}]
check.c(l97:s73:k78:d1:s0)		*(iTemp46 [k62 lr70:73 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x05 r0x06 ]) := iTemp48 [k64 lr72:73 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x07 ]
check.c(l96:s74:k81:d1:s0)		iTemp50 [k66 lr66:76 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] = iTemp50 [k66 lr66:76 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] + 0x1 {const-unsigned-char literal}
check.c(l96:s75:k83:d1:s0)		iTemp51 [k67 lr75:76 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp50 [k66 lr66:76 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] < 0x11 {const-char literal}
check.c(l96:s76:k84:d1:s0)		if iTemp51 [k67 lr75:76 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forbody_1($28)
check.c(l98:s77:k292:d0:s0)		iTemp58 [k74 lr77:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] := 0x11 {const-char literal}
check.c(l98:s79:k88:d1:s0)	 _forbody_2($30) :
check.c(l99:s80:k90:d1:s0)		iTemp53 [k69 lr80:81 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = iTemp58 [k74 lr77:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] - 0x11 {char literal}
check.c(l99:s81:k91:d1:s0)		iTemp54 [k70 lr81:84 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x05 r0x06 ] = iTemp41 [k56 lr63:93 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] + iTemp53 [k69 lr80:81 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ]
check.c(l99:s82:k92:d1:s0)		iTemp55 [k71 lr82:83 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x07 r0x08 r0x09 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + iTemp58 [k74 lr77:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ]
check.c(l99:s83:k93:d1:s0)		iTemp56 [k72 lr83:84 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x07 ] = @[iTemp55 [k71 lr82:83 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x07 r0x08 r0x09 ] + 0x0 {const-unsigned-char literal}]
check.c(l99:s84:k94:d1:s0)		*(iTemp54 [k70 lr81:84 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x05 r0x06 ]) := iTemp56 [k72 lr83:84 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x07 ]
check.c(l98:s85:k97:d1:s0)		iTemp58 [k74 lr77:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] = iTemp58 [k74 lr77:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] + 0x1 {const-unsigned-char literal}
check.c(l98:s86:k99:d1:s0)		iTemp59 [k75 lr86:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp58 [k74 lr77:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] < 0x21 {const-char literal}
check.c(l98:s87:k100:d1:s0)		if iTemp59 [k75 lr86:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forbody_2($30)
check.c(l100:s88:k103:d0:s0)		iTemp60 [k77 lr88:89 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] := iTemp39 [k53 lr60:88 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat]
check.c(l100:s89:k104:d0:s0)		iTemp61 [k78 lr89:90 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = (char generic* fixed)iTemp60 [k77 lr88:89 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat]
check.c(l100:s90:k105:d0:s0)		send iTemp61 [k78 lr89:90 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ]{argreg = 1}
check.c(l100:s91:k106:d0:s0)		iTemp62 [k80 lr91:91 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _print_lcd_string [k76 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char generic* fixed) fixed}
check.c(l101:s92:k107:d0:s0)		iTemp63 [k82 lr92:92 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _print_lcd_ln [k81 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( ) fixed}
check.c(l102:s93:k108:d0:s0)		iTemp64 [k83 lr93:94 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] := iTemp41 [k56 lr63:93 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat]
check.c(l102:s94:k109:d0:s0)		iTemp65 [k84 lr94:95 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = (char generic* fixed)iTemp64 [k83 lr93:94 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat]
check.c(l102:s95:k110:d0:s0)		send iTemp65 [k84 lr94:95 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ]{argreg = 1}
check.c(l102:s96:k111:d0:s0)		iTemp66 [k85 lr96:96 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _print_lcd_string [k76 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char generic* fixed) fixed}
check.c(l103:s97:k112:d0:s0)		iTemp1 [k4 lr4:258 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _check_comando_ret_1_74}[r0x03 ] := 0x34 {const-unsigned-char literal}
check.c(l104:s98:k113:d0:s0)		 goto _swBrk_0($27)
check.c(l105:s99:k114:d0:s0)	 _case_0_51($8) :
check.c(l106:s100:k115:d0:s0)		iTemp67 [k86 lr100:101 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l106:s101:k116:d0:s0)		iTemp68 [k87 lr101:102 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp67 [k86 lr100:101 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l106:s102:k117:d0:s0)		iTemp69 [k88 lr102:103 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp68 [k87 lr101:102 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l106:s103:k118:d0:s0)		iTemp70 [k89 lr103:109 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp69 [k88 lr102:103 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l106:s104:k119:d0:s0)		iTemp71 [k90 lr104:105 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp70 [k89 lr103:109 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] == 0x1 {int literal}
check.c(l106:s105:k120:d0:s0)		if iTemp71 [k90 lr104:105 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} == 0 goto _iffalse_5($12)
check.c(l107:s106:k124:d0:s0)		_hab_alarme [k91 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed} := 0x1 {const-unsigned-char literal}
check.c(l107:s107:k125:d0:s0)		 goto _swBrk_0($27)
check.c(l107:s108:k126:d0:s0)	 _iffalse_5($12) :
check.c(l108:s109:k131:d0:s0)		if iTemp70 [k89 lr103:109 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] != 0 goto _swBrk_0($27)
check.c(l109:s110:k135:d0:s0)		_hab_alarme [k91 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed} := 0x0 {const-unsigned-char literal}
check.c(l110:s111:k138:d0:s0)		 goto _swBrk_0($27)
check.c(l111:s112:k139:d0:s0)	 _case_0_52($14) :
check.c(l112:s113:k140:d0:s0)		iTemp78 [k98 lr113:114 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l112:s114:k141:d0:s0)		iTemp79 [k99 lr114:115 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp78 [k98 lr113:114 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l112:s115:k142:d0:s0)		iTemp80 [k100 lr115:116 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp79 [k99 lr114:115 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l112:s116:k143:d0:s0)		iTemp81 [k101 lr116:122 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp80 [k100 lr115:116 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l112:s117:k144:d0:s0)		iTemp82 [k102 lr117:118 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp81 [k101 lr116:122 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] == 0x1 {int literal}
check.c(l112:s118:k145:d0:s0)		if iTemp82 [k102 lr117:118 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} == 0 goto _iffalse_7($18)
check.c(l113:s119:k149:d0:s0)		_hab_sensor [k103 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed} := 0x0 {const-unsigned-char literal}
check.c(l113:s120:k150:d0:s0)		 goto _swBrk_0($27)
check.c(l113:s121:k151:d0:s0)	 _iffalse_7($18) :
check.c(l114:s122:k156:d0:s0)		if iTemp81 [k101 lr116:122 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] != 0 goto _swBrk_0($27)
check.c(l115:s123:k160:d0:s0)		_hab_sensor [k103 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed} := 0x2 {const-unsigned-char literal}
check.c(l116:s124:k163:d0:s0)		 goto _swBrk_0($27)
check.c(l117:s125:k164:d0:s0)	 _case_0_53($20) :
check.c(l118:s126:k165:d0:s0)		iTemp89 [k111 lr126:127 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{unsigned-long-int near* fixed}[remat] = &[_sys_timer_pool [k110 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int [2] fixed}]
check.c(l118:s127:k166:d0:s0)		iTemp90 [k112 lr127:165 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{unsigned-long-int near* fixed}[remat] = iTemp89 [k111 lr126:127 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{unsigned-long-int near* fixed}[remat] + 0x4 {unsigned-char literal}
check.c(l118:s128:k167:d0:s0)		iTemp91 [k113 lr128:129 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l118:s129:k168:d0:s0)		iTemp92 [k114 lr129:130 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp91 [k113 lr128:129 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l118:s130:k169:d0:s0)		iTemp93 [k115 lr130:131 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp92 [k114 lr129:130 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l118:s131:k170:d0:s0)		iTemp94 [k116 lr131:133 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp93 [k115 lr130:131 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l118:s132:k299:d0:s0)		send 0x2710 {const-int literal}{argreg = 1}
check.c(l118:s133:k300:d0:s0)		send iTemp94 [k116 lr131:133 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l118:s134:k301:d0:s0)		iTemp95 [k117 lr134:142 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l118:s135:k172:d0:s0)		iTemp96 [k118 lr135:136 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l118:s136:k173:d0:s0)		iTemp97 [k119 lr136:137 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp96 [k118 lr135:136 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l118:s137:k174:d0:s0)		iTemp98 [k120 lr137:138 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp97 [k119 lr136:137 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l118:s138:k175:d0:s0)		iTemp99 [k121 lr138:140 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp98 [k120 lr137:138 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l118:s139:k302:d0:s0)		send 0x3e8 {const-int literal}{argreg = 1}
check.c(l118:s140:k303:d0:s0)		send iTemp99 [k121 lr138:140 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l118:s141:k304:d0:s0)		iTemp100 [k122 lr141:142 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l118:s142:k177:d0:s0)		iTemp101 [k123 lr142:150 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp95 [k117 lr134:142 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp100 [k122 lr141:142 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l119:s143:k178:d0:s0)		iTemp102 [k124 lr143:144 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l119:s144:k179:d0:s0)		iTemp103 [k125 lr144:145 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp102 [k124 lr143:144 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l119:s145:k180:d0:s0)		iTemp104 [k126 lr145:146 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp103 [k125 lr144:145 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l119:s146:k181:d0:s0)		iTemp105 [k127 lr146:148 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp104 [k126 lr145:146 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l119:s147:k305:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l119:s148:k306:d0:s0)		send iTemp105 [k127 lr146:148 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l119:s149:k307:d0:s0)		iTemp106 [k128 lr149:150 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l119:s150:k183:d0:s0)		iTemp107 [k129 lr150:158 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp101 [k123 lr142:150 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp106 [k128 lr149:150 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l119:s151:k184:d0:s0)		iTemp108 [k130 lr151:152 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x4 {const-unsigned-char literal}
check.c(l119:s152:k185:d0:s0)		iTemp109 [k131 lr152:153 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp108 [k130 lr151:152 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l119:s153:k186:d0:s0)		iTemp110 [k132 lr153:154 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp109 [k131 lr152:153 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l119:s154:k187:d0:s0)		iTemp111 [k133 lr154:156 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp110 [k132 lr153:154 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l119:s155:k308:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l119:s156:k309:d0:s0)		send iTemp111 [k133 lr154:156 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l119:s157:k310:d0:s0)		iTemp112 [k134 lr157:158 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l119:s158:k189:d0:s0)		iTemp113 [k135 lr158:162 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp107 [k129 lr150:158 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp112 [k134 lr157:158 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l120:s159:k190:d0:s0)		iTemp114 [k136 lr159:160 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x5 {const-unsigned-char literal}
check.c(l120:s160:k191:d0:s0)		iTemp115 [k137 lr160:161 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp114 [k136 lr159:160 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l120:s161:k192:d0:s0)		iTemp116 [k138 lr161:162 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp115 [k137 lr160:161 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l120:s162:k193:d0:s0)		iTemp117 [k139 lr162:163 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = iTemp113 [k135 lr158:162 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp116 [k138 lr161:162 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ]
check.c(l120:s163:k194:d0:s0)		iTemp118 [k140 lr163:164 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp117 [k139 lr162:163 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l120:s164:k195:d0:s0)		iTemp119 [k141 lr164:165 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x04 r0x05 r0x06 r0x07 ] = (unsigned-long-int fixed)iTemp118 [k140 lr163:164 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]
check.c(l120:s165:k196:d0:s0)		*(iTemp90 [k112 lr127:165 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{unsigned-long-int near* fixed}[remat]) := iTemp119 [k141 lr164:165 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x04 r0x05 r0x06 r0x07 ]
check.c(l121:s166:k197:d0:s0)		 goto _swBrk_0($27)
check.c(l122:s167:k198:d0:s0)	 _case_0_54($21) :
check.c(l123:s168:k199:d0:s0)		iTemp120 [k143 lr168:169 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l123:s169:k200:d0:s0)		iTemp121 [k144 lr169:170 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp120 [k143 lr168:169 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l123:s170:k201:d0:s0)		iTemp122 [k145 lr170:171 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp121 [k144 lr169:170 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l123:s171:k202:d0:s0)		iTemp123 [k146 lr171:173 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp122 [k145 lr170:171 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l123:s172:k311:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l123:s173:k312:d0:s0)		send iTemp123 [k146 lr171:173 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l123:s174:k313:d0:s0)		iTemp124 [k147 lr174:182 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l123:s175:k204:d0:s0)		iTemp125 [k148 lr175:176 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l123:s176:k205:d0:s0)		iTemp126 [k149 lr176:177 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp125 [k148 lr175:176 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l123:s177:k206:d0:s0)		iTemp127 [k150 lr177:178 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp126 [k149 lr176:177 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l123:s178:k207:d0:s0)		iTemp128 [k151 lr178:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp127 [k150 lr177:178 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l123:s179:k314:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l123:s180:k315:d0:s0)		send iTemp128 [k151 lr178:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l123:s181:k316:d0:s0)		iTemp129 [k152 lr181:182 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l123:s182:k209:d0:s0)		iTemp130 [k153 lr182:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp124 [k147 lr174:182 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp129 [k152 lr181:182 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l124:s183:k210:d0:s0)		iTemp131 [k154 lr183:184 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l124:s184:k211:d0:s0)		iTemp132 [k155 lr184:185 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp131 [k154 lr183:184 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l124:s185:k212:d0:s0)		iTemp133 [k156 lr185:186 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp132 [k155 lr184:185 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l124:s186:k213:d0:s0)		iTemp134 [k157 lr186:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp133 [k156 lr185:186 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l124:s187:k214:d0:s0)		_sys_temp_min [k142 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed} = iTemp130 [k153 lr182:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp134 [k157 lr186:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l125:s188:k217:d0:s0)		 goto _swBrk_0($27)
check.c(l126:s189:k218:d0:s0)	 _case_0_55($22) :
check.c(l127:s190:k219:d0:s0)		iTemp137 [k161 lr190:191 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l127:s191:k220:d0:s0)		iTemp138 [k162 lr191:192 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp137 [k161 lr190:191 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l127:s192:k221:d0:s0)		iTemp139 [k163 lr192:193 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp138 [k162 lr191:192 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l127:s193:k222:d0:s0)		iTemp140 [k164 lr193:195 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp139 [k163 lr192:193 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l127:s194:k317:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l127:s195:k318:d0:s0)		send iTemp140 [k164 lr193:195 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l127:s196:k319:d0:s0)		iTemp141 [k165 lr196:204 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l127:s197:k224:d0:s0)		iTemp142 [k166 lr197:198 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l127:s198:k225:d0:s0)		iTemp143 [k167 lr198:199 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp142 [k166 lr197:198 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l127:s199:k226:d0:s0)		iTemp144 [k168 lr199:200 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp143 [k167 lr198:199 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l127:s200:k227:d0:s0)		iTemp145 [k169 lr200:202 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp144 [k168 lr199:200 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l127:s201:k320:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l127:s202:k321:d0:s0)		send iTemp145 [k169 lr200:202 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l127:s203:k322:d0:s0)		iTemp146 [k170 lr203:204 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l127:s204:k229:d0:s0)		iTemp147 [k171 lr204:209 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp141 [k165 lr196:204 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp146 [k170 lr203:204 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l128:s205:k230:d0:s0)		iTemp148 [k172 lr205:206 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l128:s206:k231:d0:s0)		iTemp149 [k173 lr206:207 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp148 [k172 lr205:206 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l128:s207:k232:d0:s0)		iTemp150 [k174 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp149 [k173 lr206:207 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l128:s208:k233:d0:s0)		iTemp151 [k175 lr208:209 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp150 [k174 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l128:s209:k234:d0:s0)		_sys_temp_max [k160 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed} = iTemp147 [k171 lr204:209 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp151 [k175 lr208:209 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l129:s210:k237:d0:s0)		 goto _swBrk_0($27)
check.c(l130:s211:k238:d0:s0)	 _case_0_56($23) :
check.c(l131:s212:k239:d0:s0)		iTemp154 [k179 lr212:213 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l131:s213:k240:d0:s0)		iTemp155 [k180 lr213:214 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp154 [k179 lr212:213 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l131:s214:k241:d0:s0)		iTemp156 [k181 lr214:215 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp155 [k180 lr213:214 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l131:s215:k242:d0:s0)		iTemp157 [k182 lr215:217 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp156 [k181 lr214:215 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l131:s216:k323:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l131:s217:k324:d0:s0)		send iTemp157 [k182 lr215:217 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l131:s218:k325:d0:s0)		iTemp158 [k183 lr218:226 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l131:s219:k244:d0:s0)		iTemp159 [k184 lr219:220 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l131:s220:k245:d0:s0)		iTemp160 [k185 lr220:221 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp159 [k184 lr219:220 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l131:s221:k246:d0:s0)		iTemp161 [k186 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp160 [k185 lr220:221 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l131:s222:k247:d0:s0)		iTemp162 [k187 lr222:224 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp161 [k186 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l131:s223:k326:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l131:s224:k327:d0:s0)		send iTemp162 [k187 lr222:224 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l131:s225:k328:d0:s0)		iTemp163 [k188 lr225:226 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l131:s226:k249:d0:s0)		iTemp164 [k189 lr226:231 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp158 [k183 lr218:226 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp163 [k188 lr225:226 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l132:s227:k250:d0:s0)		iTemp165 [k190 lr227:228 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l132:s228:k251:d0:s0)		iTemp166 [k191 lr228:229 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp165 [k190 lr227:228 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l132:s229:k252:d0:s0)		iTemp167 [k192 lr229:230 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp166 [k191 lr228:229 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l132:s230:k253:d0:s0)		iTemp168 [k193 lr230:231 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp167 [k192 lr229:230 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l132:s231:k254:d0:s0)		_sys_lumi_min [k178 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed} = iTemp164 [k189 lr226:231 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp168 [k193 lr230:231 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l133:s232:k257:d0:s0)		 goto _swBrk_0($27)
check.c(l134:s233:k258:d0:s0)	 _case_0_57($24) :
check.c(l135:s234:k259:d0:s0)		iTemp171 [k196 lr234:235 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l135:s235:k260:d0:s0)		iTemp172 [k197 lr235:236 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp171 [k196 lr234:235 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l135:s236:k261:d0:s0)		iTemp173 [k198 lr236:237 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp172 [k197 lr235:236 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l135:s237:k262:d0:s0)		iTemp174 [k199 lr237:239 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp173 [k198 lr236:237 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l135:s238:k329:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l135:s239:k330:d0:s0)		send iTemp174 [k199 lr237:239 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l135:s240:k331:d0:s0)		iTemp175 [k200 lr240:248 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l135:s241:k264:d0:s0)		iTemp176 [k201 lr241:242 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l135:s242:k265:d0:s0)		iTemp177 [k202 lr242:243 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp176 [k201 lr241:242 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l135:s243:k266:d0:s0)		iTemp178 [k203 lr243:244 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp177 [k202 lr242:243 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l135:s244:k267:d0:s0)		iTemp179 [k204 lr244:246 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp178 [k203 lr243:244 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l135:s245:k332:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l135:s246:k333:d0:s0)		send iTemp179 [k204 lr244:246 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l135:s247:k334:d0:s0)		iTemp180 [k205 lr247:248 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l135:s248:k269:d0:s0)		iTemp181 [k206 lr248:253 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp175 [k200 lr240:248 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp180 [k205 lr247:248 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l136:s249:k270:d0:s0)		iTemp182 [k207 lr249:250 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x00 r0x01 r0x02 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l136:s250:k271:d0:s0)		iTemp183 [k208 lr250:251 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x00 ] = @[iTemp182 [k207 lr249:250 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x00 r0x01 r0x02 ] + 0x0 {const-unsigned-char literal}]
check.c(l136:s251:k272:d0:s0)		iTemp184 [k209 lr251:252 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x00 r0x01 ] = (int fixed)iTemp183 [k208 lr250:251 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x00 ]
check.c(l136:s252:k273:d0:s0)		iTemp185 [k210 lr252:253 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x00 r0x01 ] = iTemp184 [k209 lr251:252 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x00 r0x01 ] - 0x30 {int literal}
check.c(l136:s253:k274:d0:s0)		_sys_temp_max [k160 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed} = iTemp181 [k206 lr248:253 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp185 [k210 lr252:253 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x00 r0x01 ]
check.c(l137:s254:k277:d0:s0)		 goto _swBrk_0($27)
check.c(l138:s255:k278:d0:s0)	 _case_0_82($25) :
check.c(l139:s256:k279:d0:s0)		iTemp1 [k4 lr4:258 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _check_comando_ret_1_74}[r0x03 ] := 0x0 {const-char literal}
check.c(l143:s257:k283:d0:s0)	 _swBrk_0($27) :
check.c(l145:s258:k284:d0:s0)		ret iTemp1 [k4 lr4:258 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _check_comando_ret_1_74}[r0x03 ]
check.c(l145:s259:k285:d0:s0)	 _return($32) :
check.c(l145:s260:k286:d0:s0)		eproc _check_comando [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char function ( char generic* fixed) fixed}

----------------------------------------------------------------
Basic Block _case_0_50 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 26 : bbnum = 14 1st iCode = 58 , last iCode = 66
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 299 bSize = 38
Bits on { (65) (66) (68) (69) (289) }

local defines bitVector :bitvector Size = 299 bSize = 38
Bits on { (64) (65) (66) (68) (69) (289) }

pointers Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (54) (57) }

in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (3) (5) (6) (8) }

outDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (3) (5) (6) (8) (64) (65) (66) (68) (69) (289) }

usesDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (64) (65) (66) (68) (69) }

----------------------------------------------------------------
check.c(l90:s58:k63:d0:s0)	 _case_0_50($5) :
check.c(l91:s59:k64:d0:s0)		iTemp38 [k51 lr59:59 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _limpa_lcd [k50 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( ) fixed}
check.c(l94:s60:k65:d0:s0)		iTemp39 [k53 lr60:88 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] = &[_check_comando_linha_1_1_74 [k52 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [17] fixed}]
check.c(l94:s61:k66:d0:s0)		iTemp40 [k54 lr61:62 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] = iTemp39 [k53 lr60:88 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] + 0x10 {const-unsigned-char literal}
check.c(l94:s62:k67:d0:s0)		*(iTemp40 [k54 lr61:62 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat]) := 0x0 {const-char literal}
check.c(l95:s63:k68:d0:s0)		iTemp41 [k56 lr63:93 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] = &[_check_comando_linha_2_1_74 [k55 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [17] fixed}]
check.c(l95:s64:k69:d0:s0)		iTemp42 [k57 lr64:65 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] = iTemp41 [k56 lr63:93 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] + 0x10 {const-unsigned-char literal}
check.c(l95:s65:k70:d0:s0)		*(iTemp42 [k57 lr64:65 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat]) := 0x0 {const-char literal}
check.c(l96:s66:k289:d0:s0)		iTemp50 [k66 lr66:76 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] := 0x1 {const-char literal}
check.c(l96:s68:k72:d1:s0)	 _forbody_1($28) :
check.c(l97:s69:k74:d1:s0)		iTemp45 [k61 lr69:70 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = iTemp50 [k66 lr66:76 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] - 0x1 {char literal}
check.c(l97:s70:k75:d1:s0)		iTemp46 [k62 lr70:73 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x05 r0x06 ] = iTemp39 [k53 lr60:88 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] + iTemp45 [k61 lr69:70 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ]
check.c(l97:s71:k76:d1:s0)		iTemp47 [k63 lr71:72 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x07 r0x08 r0x09 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + iTemp50 [k66 lr66:76 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ]
check.c(l97:s72:k77:d1:s0)		iTemp48 [k64 lr72:73 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x07 ] = @[iTemp47 [k63 lr71:72 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x07 r0x08 r0x09 ] + 0x0 {const-unsigned-char literal}]
check.c(l97:s73:k78:d1:s0)		*(iTemp46 [k62 lr70:73 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x05 r0x06 ]) := iTemp48 [k64 lr72:73 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x07 ]
check.c(l96:s74:k81:d1:s0)		iTemp50 [k66 lr66:76 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] = iTemp50 [k66 lr66:76 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] + 0x1 {const-unsigned-char literal}
check.c(l96:s75:k83:d1:s0)		iTemp51 [k67 lr75:76 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp50 [k66 lr66:76 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] < 0x11 {const-char literal}
check.c(l96:s76:k84:d1:s0)		if iTemp51 [k67 lr75:76 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forbody_1($28)
check.c(l98:s77:k292:d0:s0)		iTemp58 [k74 lr77:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] := 0x11 {const-char literal}
check.c(l98:s79:k88:d1:s0)	 _forbody_2($30) :
check.c(l99:s80:k90:d1:s0)		iTemp53 [k69 lr80:81 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = iTemp58 [k74 lr77:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] - 0x11 {char literal}
check.c(l99:s81:k91:d1:s0)		iTemp54 [k70 lr81:84 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x05 r0x06 ] = iTemp41 [k56 lr63:93 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] + iTemp53 [k69 lr80:81 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ]
check.c(l99:s82:k92:d1:s0)		iTemp55 [k71 lr82:83 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x07 r0x08 r0x09 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + iTemp58 [k74 lr77:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ]
check.c(l99:s83:k93:d1:s0)		iTemp56 [k72 lr83:84 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x07 ] = @[iTemp55 [k71 lr82:83 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x07 r0x08 r0x09 ] + 0x0 {const-unsigned-char literal}]
check.c(l99:s84:k94:d1:s0)		*(iTemp54 [k70 lr81:84 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x05 r0x06 ]) := iTemp56 [k72 lr83:84 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x07 ]
check.c(l98:s85:k97:d1:s0)		iTemp58 [k74 lr77:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] = iTemp58 [k74 lr77:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] + 0x1 {const-unsigned-char literal}
check.c(l98:s86:k99:d1:s0)		iTemp59 [k75 lr86:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp58 [k74 lr77:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] < 0x21 {const-char literal}
check.c(l98:s87:k100:d1:s0)		if iTemp59 [k75 lr86:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forbody_2($30)
check.c(l100:s88:k103:d0:s0)		iTemp60 [k77 lr88:89 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] := iTemp39 [k53 lr60:88 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat]
check.c(l100:s89:k104:d0:s0)		iTemp61 [k78 lr89:90 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = (char generic* fixed)iTemp60 [k77 lr88:89 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat]
check.c(l100:s90:k105:d0:s0)		send iTemp61 [k78 lr89:90 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ]{argreg = 1}
check.c(l100:s91:k106:d0:s0)		iTemp62 [k80 lr91:91 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _print_lcd_string [k76 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char generic* fixed) fixed}
check.c(l101:s92:k107:d0:s0)		iTemp63 [k82 lr92:92 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _print_lcd_ln [k81 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( ) fixed}
check.c(l102:s93:k108:d0:s0)		iTemp64 [k83 lr93:94 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] := iTemp41 [k56 lr63:93 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat]
check.c(l102:s94:k109:d0:s0)		iTemp65 [k84 lr94:95 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = (char generic* fixed)iTemp64 [k83 lr93:94 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat]
check.c(l102:s95:k110:d0:s0)		send iTemp65 [k84 lr94:95 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ]{argreg = 1}
check.c(l102:s96:k111:d0:s0)		iTemp66 [k85 lr96:96 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _print_lcd_string [k76 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char generic* fixed) fixed}
check.c(l103:s97:k112:d0:s0)		iTemp1 [k4 lr4:258 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _check_comando_ret_1_74}[r0x03 ] := 0x34 {const-unsigned-char literal}
check.c(l104:s98:k113:d0:s0)		 goto _swBrk_0($27)
check.c(l105:s99:k114:d0:s0)	 _case_0_51($8) :
check.c(l106:s100:k115:d0:s0)		iTemp67 [k86 lr100:101 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l106:s101:k116:d0:s0)		iTemp68 [k87 lr101:102 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp67 [k86 lr100:101 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l106:s102:k117:d0:s0)		iTemp69 [k88 lr102:103 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp68 [k87 lr101:102 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l106:s103:k118:d0:s0)		iTemp70 [k89 lr103:109 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp69 [k88 lr102:103 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l106:s104:k119:d0:s0)		iTemp71 [k90 lr104:105 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp70 [k89 lr103:109 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] == 0x1 {int literal}
check.c(l106:s105:k120:d0:s0)		if iTemp71 [k90 lr104:105 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} == 0 goto _iffalse_5($12)
check.c(l107:s106:k124:d0:s0)		_hab_alarme [k91 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed} := 0x1 {const-unsigned-char literal}
check.c(l107:s107:k125:d0:s0)		 goto _swBrk_0($27)
check.c(l107:s108:k126:d0:s0)	 _iffalse_5($12) :
check.c(l108:s109:k131:d0:s0)		if iTemp70 [k89 lr103:109 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] != 0 goto _swBrk_0($27)
check.c(l109:s110:k135:d0:s0)		_hab_alarme [k91 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed} := 0x0 {const-unsigned-char literal}
check.c(l110:s111:k138:d0:s0)		 goto _swBrk_0($27)
check.c(l111:s112:k139:d0:s0)	 _case_0_52($14) :
check.c(l112:s113:k140:d0:s0)		iTemp78 [k98 lr113:114 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l112:s114:k141:d0:s0)		iTemp79 [k99 lr114:115 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp78 [k98 lr113:114 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l112:s115:k142:d0:s0)		iTemp80 [k100 lr115:116 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp79 [k99 lr114:115 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l112:s116:k143:d0:s0)		iTemp81 [k101 lr116:122 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp80 [k100 lr115:116 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l112:s117:k144:d0:s0)		iTemp82 [k102 lr117:118 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp81 [k101 lr116:122 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] == 0x1 {int literal}
check.c(l112:s118:k145:d0:s0)		if iTemp82 [k102 lr117:118 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} == 0 goto _iffalse_7($18)
check.c(l113:s119:k149:d0:s0)		_hab_sensor [k103 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed} := 0x0 {const-unsigned-char literal}
check.c(l113:s120:k150:d0:s0)		 goto _swBrk_0($27)
check.c(l113:s121:k151:d0:s0)	 _iffalse_7($18) :
check.c(l114:s122:k156:d0:s0)		if iTemp81 [k101 lr116:122 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] != 0 goto _swBrk_0($27)
check.c(l115:s123:k160:d0:s0)		_hab_sensor [k103 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed} := 0x2 {const-unsigned-char literal}
check.c(l116:s124:k163:d0:s0)		 goto _swBrk_0($27)
check.c(l117:s125:k164:d0:s0)	 _case_0_53($20) :
check.c(l118:s126:k165:d0:s0)		iTemp89 [k111 lr126:127 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{unsigned-long-int near* fixed}[remat] = &[_sys_timer_pool [k110 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int [2] fixed}]
check.c(l118:s127:k166:d0:s0)		iTemp90 [k112 lr127:165 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{unsigned-long-int near* fixed}[remat] = iTemp89 [k111 lr126:127 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{unsigned-long-int near* fixed}[remat] + 0x4 {unsigned-char literal}
check.c(l118:s128:k167:d0:s0)		iTemp91 [k113 lr128:129 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l118:s129:k168:d0:s0)		iTemp92 [k114 lr129:130 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp91 [k113 lr128:129 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l118:s130:k169:d0:s0)		iTemp93 [k115 lr130:131 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp92 [k114 lr129:130 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l118:s131:k170:d0:s0)		iTemp94 [k116 lr131:133 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp93 [k115 lr130:131 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l118:s132:k299:d0:s0)		send 0x2710 {const-int literal}{argreg = 1}
check.c(l118:s133:k300:d0:s0)		send iTemp94 [k116 lr131:133 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l118:s134:k301:d0:s0)		iTemp95 [k117 lr134:142 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l118:s135:k172:d0:s0)		iTemp96 [k118 lr135:136 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l118:s136:k173:d0:s0)		iTemp97 [k119 lr136:137 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp96 [k118 lr135:136 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l118:s137:k174:d0:s0)		iTemp98 [k120 lr137:138 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp97 [k119 lr136:137 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l118:s138:k175:d0:s0)		iTemp99 [k121 lr138:140 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp98 [k120 lr137:138 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l118:s139:k302:d0:s0)		send 0x3e8 {const-int literal}{argreg = 1}
check.c(l118:s140:k303:d0:s0)		send iTemp99 [k121 lr138:140 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l118:s141:k304:d0:s0)		iTemp100 [k122 lr141:142 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l118:s142:k177:d0:s0)		iTemp101 [k123 lr142:150 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp95 [k117 lr134:142 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp100 [k122 lr141:142 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l119:s143:k178:d0:s0)		iTemp102 [k124 lr143:144 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l119:s144:k179:d0:s0)		iTemp103 [k125 lr144:145 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp102 [k124 lr143:144 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l119:s145:k180:d0:s0)		iTemp104 [k126 lr145:146 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp103 [k125 lr144:145 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l119:s146:k181:d0:s0)		iTemp105 [k127 lr146:148 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp104 [k126 lr145:146 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l119:s147:k305:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l119:s148:k306:d0:s0)		send iTemp105 [k127 lr146:148 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l119:s149:k307:d0:s0)		iTemp106 [k128 lr149:150 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l119:s150:k183:d0:s0)		iTemp107 [k129 lr150:158 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp101 [k123 lr142:150 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp106 [k128 lr149:150 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l119:s151:k184:d0:s0)		iTemp108 [k130 lr151:152 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x4 {const-unsigned-char literal}
check.c(l119:s152:k185:d0:s0)		iTemp109 [k131 lr152:153 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp108 [k130 lr151:152 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l119:s153:k186:d0:s0)		iTemp110 [k132 lr153:154 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp109 [k131 lr152:153 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l119:s154:k187:d0:s0)		iTemp111 [k133 lr154:156 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp110 [k132 lr153:154 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l119:s155:k308:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l119:s156:k309:d0:s0)		send iTemp111 [k133 lr154:156 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l119:s157:k310:d0:s0)		iTemp112 [k134 lr157:158 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l119:s158:k189:d0:s0)		iTemp113 [k135 lr158:162 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp107 [k129 lr150:158 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp112 [k134 lr157:158 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l120:s159:k190:d0:s0)		iTemp114 [k136 lr159:160 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x5 {const-unsigned-char literal}
check.c(l120:s160:k191:d0:s0)		iTemp115 [k137 lr160:161 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp114 [k136 lr159:160 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l120:s161:k192:d0:s0)		iTemp116 [k138 lr161:162 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp115 [k137 lr160:161 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l120:s162:k193:d0:s0)		iTemp117 [k139 lr162:163 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = iTemp113 [k135 lr158:162 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp116 [k138 lr161:162 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ]
check.c(l120:s163:k194:d0:s0)		iTemp118 [k140 lr163:164 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp117 [k139 lr162:163 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l120:s164:k195:d0:s0)		iTemp119 [k141 lr164:165 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x04 r0x05 r0x06 r0x07 ] = (unsigned-long-int fixed)iTemp118 [k140 lr163:164 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]
check.c(l120:s165:k196:d0:s0)		*(iTemp90 [k112 lr127:165 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{unsigned-long-int near* fixed}[remat]) := iTemp119 [k141 lr164:165 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x04 r0x05 r0x06 r0x07 ]
check.c(l121:s166:k197:d0:s0)		 goto _swBrk_0($27)
check.c(l122:s167:k198:d0:s0)	 _case_0_54($21) :
check.c(l123:s168:k199:d0:s0)		iTemp120 [k143 lr168:169 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l123:s169:k200:d0:s0)		iTemp121 [k144 lr169:170 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp120 [k143 lr168:169 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l123:s170:k201:d0:s0)		iTemp122 [k145 lr170:171 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp121 [k144 lr169:170 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l123:s171:k202:d0:s0)		iTemp123 [k146 lr171:173 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp122 [k145 lr170:171 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l123:s172:k311:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l123:s173:k312:d0:s0)		send iTemp123 [k146 lr171:173 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l123:s174:k313:d0:s0)		iTemp124 [k147 lr174:182 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l123:s175:k204:d0:s0)		iTemp125 [k148 lr175:176 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l123:s176:k205:d0:s0)		iTemp126 [k149 lr176:177 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp125 [k148 lr175:176 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l123:s177:k206:d0:s0)		iTemp127 [k150 lr177:178 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp126 [k149 lr176:177 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l123:s178:k207:d0:s0)		iTemp128 [k151 lr178:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp127 [k150 lr177:178 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l123:s179:k314:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l123:s180:k315:d0:s0)		send iTemp128 [k151 lr178:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l123:s181:k316:d0:s0)		iTemp129 [k152 lr181:182 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l123:s182:k209:d0:s0)		iTemp130 [k153 lr182:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp124 [k147 lr174:182 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp129 [k152 lr181:182 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l124:s183:k210:d0:s0)		iTemp131 [k154 lr183:184 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l124:s184:k211:d0:s0)		iTemp132 [k155 lr184:185 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp131 [k154 lr183:184 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l124:s185:k212:d0:s0)		iTemp133 [k156 lr185:186 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp132 [k155 lr184:185 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l124:s186:k213:d0:s0)		iTemp134 [k157 lr186:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp133 [k156 lr185:186 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l124:s187:k214:d0:s0)		_sys_temp_min [k142 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed} = iTemp130 [k153 lr182:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp134 [k157 lr186:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l125:s188:k217:d0:s0)		 goto _swBrk_0($27)
check.c(l126:s189:k218:d0:s0)	 _case_0_55($22) :
check.c(l127:s190:k219:d0:s0)		iTemp137 [k161 lr190:191 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l127:s191:k220:d0:s0)		iTemp138 [k162 lr191:192 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp137 [k161 lr190:191 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l127:s192:k221:d0:s0)		iTemp139 [k163 lr192:193 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp138 [k162 lr191:192 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l127:s193:k222:d0:s0)		iTemp140 [k164 lr193:195 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp139 [k163 lr192:193 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l127:s194:k317:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l127:s195:k318:d0:s0)		send iTemp140 [k164 lr193:195 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l127:s196:k319:d0:s0)		iTemp141 [k165 lr196:204 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l127:s197:k224:d0:s0)		iTemp142 [k166 lr197:198 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l127:s198:k225:d0:s0)		iTemp143 [k167 lr198:199 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp142 [k166 lr197:198 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l127:s199:k226:d0:s0)		iTemp144 [k168 lr199:200 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp143 [k167 lr198:199 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l127:s200:k227:d0:s0)		iTemp145 [k169 lr200:202 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp144 [k168 lr199:200 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l127:s201:k320:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l127:s202:k321:d0:s0)		send iTemp145 [k169 lr200:202 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l127:s203:k322:d0:s0)		iTemp146 [k170 lr203:204 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l127:s204:k229:d0:s0)		iTemp147 [k171 lr204:209 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp141 [k165 lr196:204 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp146 [k170 lr203:204 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l128:s205:k230:d0:s0)		iTemp148 [k172 lr205:206 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l128:s206:k231:d0:s0)		iTemp149 [k173 lr206:207 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp148 [k172 lr205:206 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l128:s207:k232:d0:s0)		iTemp150 [k174 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp149 [k173 lr206:207 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l128:s208:k233:d0:s0)		iTemp151 [k175 lr208:209 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp150 [k174 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l128:s209:k234:d0:s0)		_sys_temp_max [k160 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed} = iTemp147 [k171 lr204:209 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp151 [k175 lr208:209 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l129:s210:k237:d0:s0)		 goto _swBrk_0($27)
check.c(l130:s211:k238:d0:s0)	 _case_0_56($23) :
check.c(l131:s212:k239:d0:s0)		iTemp154 [k179 lr212:213 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l131:s213:k240:d0:s0)		iTemp155 [k180 lr213:214 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp154 [k179 lr212:213 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l131:s214:k241:d0:s0)		iTemp156 [k181 lr214:215 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp155 [k180 lr213:214 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l131:s215:k242:d0:s0)		iTemp157 [k182 lr215:217 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp156 [k181 lr214:215 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l131:s216:k323:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l131:s217:k324:d0:s0)		send iTemp157 [k182 lr215:217 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l131:s218:k325:d0:s0)		iTemp158 [k183 lr218:226 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l131:s219:k244:d0:s0)		iTemp159 [k184 lr219:220 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l131:s220:k245:d0:s0)		iTemp160 [k185 lr220:221 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp159 [k184 lr219:220 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l131:s221:k246:d0:s0)		iTemp161 [k186 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp160 [k185 lr220:221 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l131:s222:k247:d0:s0)		iTemp162 [k187 lr222:224 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp161 [k186 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l131:s223:k326:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l131:s224:k327:d0:s0)		send iTemp162 [k187 lr222:224 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l131:s225:k328:d0:s0)		iTemp163 [k188 lr225:226 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l131:s226:k249:d0:s0)		iTemp164 [k189 lr226:231 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp158 [k183 lr218:226 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp163 [k188 lr225:226 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l132:s227:k250:d0:s0)		iTemp165 [k190 lr227:228 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l132:s228:k251:d0:s0)		iTemp166 [k191 lr228:229 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp165 [k190 lr227:228 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l132:s229:k252:d0:s0)		iTemp167 [k192 lr229:230 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp166 [k191 lr228:229 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l132:s230:k253:d0:s0)		iTemp168 [k193 lr230:231 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp167 [k192 lr229:230 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l132:s231:k254:d0:s0)		_sys_lumi_min [k178 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed} = iTemp164 [k189 lr226:231 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp168 [k193 lr230:231 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l133:s232:k257:d0:s0)		 goto _swBrk_0($27)
check.c(l134:s233:k258:d0:s0)	 _case_0_57($24) :
check.c(l135:s234:k259:d0:s0)		iTemp171 [k196 lr234:235 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l135:s235:k260:d0:s0)		iTemp172 [k197 lr235:236 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp171 [k196 lr234:235 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l135:s236:k261:d0:s0)		iTemp173 [k198 lr236:237 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp172 [k197 lr235:236 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l135:s237:k262:d0:s0)		iTemp174 [k199 lr237:239 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp173 [k198 lr236:237 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l135:s238:k329:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l135:s239:k330:d0:s0)		send iTemp174 [k199 lr237:239 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l135:s240:k331:d0:s0)		iTemp175 [k200 lr240:248 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l135:s241:k264:d0:s0)		iTemp176 [k201 lr241:242 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l135:s242:k265:d0:s0)		iTemp177 [k202 lr242:243 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp176 [k201 lr241:242 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l135:s243:k266:d0:s0)		iTemp178 [k203 lr243:244 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp177 [k202 lr242:243 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l135:s244:k267:d0:s0)		iTemp179 [k204 lr244:246 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp178 [k203 lr243:244 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l135:s245:k332:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l135:s246:k333:d0:s0)		send iTemp179 [k204 lr244:246 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l135:s247:k334:d0:s0)		iTemp180 [k205 lr247:248 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l135:s248:k269:d0:s0)		iTemp181 [k206 lr248:253 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp175 [k200 lr240:248 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp180 [k205 lr247:248 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l136:s249:k270:d0:s0)		iTemp182 [k207 lr249:250 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x00 r0x01 r0x02 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l136:s250:k271:d0:s0)		iTemp183 [k208 lr250:251 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x00 ] = @[iTemp182 [k207 lr249:250 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x00 r0x01 r0x02 ] + 0x0 {const-unsigned-char literal}]
check.c(l136:s251:k272:d0:s0)		iTemp184 [k209 lr251:252 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x00 r0x01 ] = (int fixed)iTemp183 [k208 lr250:251 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x00 ]
check.c(l136:s252:k273:d0:s0)		iTemp185 [k210 lr252:253 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x00 r0x01 ] = iTemp184 [k209 lr251:252 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x00 r0x01 ] - 0x30 {int literal}
check.c(l136:s253:k274:d0:s0)		_sys_temp_max [k160 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed} = iTemp181 [k206 lr248:253 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp185 [k210 lr252:253 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x00 r0x01 ]
check.c(l137:s254:k277:d0:s0)		 goto _swBrk_0($27)
check.c(l138:s255:k278:d0:s0)	 _case_0_82($25) :
check.c(l139:s256:k279:d0:s0)		iTemp1 [k4 lr4:258 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _check_comando_ret_1_74}[r0x03 ] := 0x0 {const-char literal}
check.c(l143:s257:k283:d0:s0)	 _swBrk_0($27) :
check.c(l145:s258:k284:d0:s0)		ret iTemp1 [k4 lr4:258 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _check_comando_ret_1_74}[r0x03 ]
check.c(l145:s259:k285:d0:s0)	 _return($32) :
check.c(l145:s260:k286:d0:s0)		eproc _check_comando [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char function ( char generic* fixed) fixed}

----------------------------------------------------------------
Basic Block preHeaderLbl6 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 27 : bbnum = 15 1st iCode = 67 , last iCode = 67
visited 0 : hasFcall = 0

defines bitVector :bitvector Size = 299 bSize = 38
Bits on { }

local defines bitVector :
pointers Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (54) (57) }

in pointers Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (54) (57) }

inDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (3) (5) (6) (8) (64) (65) (66) (68) (69) (289) }

outDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (3) (5) (6) (8) (64) (65) (66) (68) (69) (289) }

usesDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { }

----------------------------------------------------------------
check.c(l96:s67:k297:d0:s0)	 preHeaderLbl6($85) :
check.c(l96:s68:k72:d1:s0)	 _forbody_1($28) :
check.c(l97:s69:k74:d1:s0)		iTemp45 [k61 lr69:70 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = iTemp50 [k66 lr66:76 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] - 0x1 {char literal}
check.c(l97:s70:k75:d1:s0)		iTemp46 [k62 lr70:73 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x05 r0x06 ] = iTemp39 [k53 lr60:88 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] + iTemp45 [k61 lr69:70 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ]
check.c(l97:s71:k76:d1:s0)		iTemp47 [k63 lr71:72 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x07 r0x08 r0x09 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + iTemp50 [k66 lr66:76 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ]
check.c(l97:s72:k77:d1:s0)		iTemp48 [k64 lr72:73 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x07 ] = @[iTemp47 [k63 lr71:72 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x07 r0x08 r0x09 ] + 0x0 {const-unsigned-char literal}]
check.c(l97:s73:k78:d1:s0)		*(iTemp46 [k62 lr70:73 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x05 r0x06 ]) := iTemp48 [k64 lr72:73 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x07 ]
check.c(l96:s74:k81:d1:s0)		iTemp50 [k66 lr66:76 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] = iTemp50 [k66 lr66:76 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] + 0x1 {const-unsigned-char literal}
check.c(l96:s75:k83:d1:s0)		iTemp51 [k67 lr75:76 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp50 [k66 lr66:76 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] < 0x11 {const-char literal}
check.c(l96:s76:k84:d1:s0)		if iTemp51 [k67 lr75:76 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forbody_1($28)
check.c(l98:s77:k292:d0:s0)		iTemp58 [k74 lr77:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] := 0x11 {const-char literal}
check.c(l98:s79:k88:d1:s0)	 _forbody_2($30) :
check.c(l99:s80:k90:d1:s0)		iTemp53 [k69 lr80:81 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = iTemp58 [k74 lr77:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] - 0x11 {char literal}
check.c(l99:s81:k91:d1:s0)		iTemp54 [k70 lr81:84 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x05 r0x06 ] = iTemp41 [k56 lr63:93 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] + iTemp53 [k69 lr80:81 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ]
check.c(l99:s82:k92:d1:s0)		iTemp55 [k71 lr82:83 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x07 r0x08 r0x09 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + iTemp58 [k74 lr77:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ]
check.c(l99:s83:k93:d1:s0)		iTemp56 [k72 lr83:84 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x07 ] = @[iTemp55 [k71 lr82:83 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x07 r0x08 r0x09 ] + 0x0 {const-unsigned-char literal}]
check.c(l99:s84:k94:d1:s0)		*(iTemp54 [k70 lr81:84 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x05 r0x06 ]) := iTemp56 [k72 lr83:84 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x07 ]
check.c(l98:s85:k97:d1:s0)		iTemp58 [k74 lr77:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] = iTemp58 [k74 lr77:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] + 0x1 {const-unsigned-char literal}
check.c(l98:s86:k99:d1:s0)		iTemp59 [k75 lr86:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp58 [k74 lr77:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] < 0x21 {const-char literal}
check.c(l98:s87:k100:d1:s0)		if iTemp59 [k75 lr86:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forbody_2($30)
check.c(l100:s88:k103:d0:s0)		iTemp60 [k77 lr88:89 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] := iTemp39 [k53 lr60:88 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat]
check.c(l100:s89:k104:d0:s0)		iTemp61 [k78 lr89:90 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = (char generic* fixed)iTemp60 [k77 lr88:89 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat]
check.c(l100:s90:k105:d0:s0)		send iTemp61 [k78 lr89:90 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ]{argreg = 1}
check.c(l100:s91:k106:d0:s0)		iTemp62 [k80 lr91:91 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _print_lcd_string [k76 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char generic* fixed) fixed}
check.c(l101:s92:k107:d0:s0)		iTemp63 [k82 lr92:92 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _print_lcd_ln [k81 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( ) fixed}
check.c(l102:s93:k108:d0:s0)		iTemp64 [k83 lr93:94 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] := iTemp41 [k56 lr63:93 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat]
check.c(l102:s94:k109:d0:s0)		iTemp65 [k84 lr94:95 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = (char generic* fixed)iTemp64 [k83 lr93:94 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat]
check.c(l102:s95:k110:d0:s0)		send iTemp65 [k84 lr94:95 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ]{argreg = 1}
check.c(l102:s96:k111:d0:s0)		iTemp66 [k85 lr96:96 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _print_lcd_string [k76 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char generic* fixed) fixed}
check.c(l103:s97:k112:d0:s0)		iTemp1 [k4 lr4:258 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _check_comando_ret_1_74}[r0x03 ] := 0x34 {const-unsigned-char literal}
check.c(l104:s98:k113:d0:s0)		 goto _swBrk_0($27)
check.c(l105:s99:k114:d0:s0)	 _case_0_51($8) :
check.c(l106:s100:k115:d0:s0)		iTemp67 [k86 lr100:101 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l106:s101:k116:d0:s0)		iTemp68 [k87 lr101:102 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp67 [k86 lr100:101 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l106:s102:k117:d0:s0)		iTemp69 [k88 lr102:103 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp68 [k87 lr101:102 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l106:s103:k118:d0:s0)		iTemp70 [k89 lr103:109 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp69 [k88 lr102:103 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l106:s104:k119:d0:s0)		iTemp71 [k90 lr104:105 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp70 [k89 lr103:109 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] == 0x1 {int literal}
check.c(l106:s105:k120:d0:s0)		if iTemp71 [k90 lr104:105 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} == 0 goto _iffalse_5($12)
check.c(l107:s106:k124:d0:s0)		_hab_alarme [k91 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed} := 0x1 {const-unsigned-char literal}
check.c(l107:s107:k125:d0:s0)		 goto _swBrk_0($27)
check.c(l107:s108:k126:d0:s0)	 _iffalse_5($12) :
check.c(l108:s109:k131:d0:s0)		if iTemp70 [k89 lr103:109 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] != 0 goto _swBrk_0($27)
check.c(l109:s110:k135:d0:s0)		_hab_alarme [k91 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed} := 0x0 {const-unsigned-char literal}
check.c(l110:s111:k138:d0:s0)		 goto _swBrk_0($27)
check.c(l111:s112:k139:d0:s0)	 _case_0_52($14) :
check.c(l112:s113:k140:d0:s0)		iTemp78 [k98 lr113:114 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l112:s114:k141:d0:s0)		iTemp79 [k99 lr114:115 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp78 [k98 lr113:114 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l112:s115:k142:d0:s0)		iTemp80 [k100 lr115:116 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp79 [k99 lr114:115 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l112:s116:k143:d0:s0)		iTemp81 [k101 lr116:122 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp80 [k100 lr115:116 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l112:s117:k144:d0:s0)		iTemp82 [k102 lr117:118 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp81 [k101 lr116:122 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] == 0x1 {int literal}
check.c(l112:s118:k145:d0:s0)		if iTemp82 [k102 lr117:118 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} == 0 goto _iffalse_7($18)
check.c(l113:s119:k149:d0:s0)		_hab_sensor [k103 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed} := 0x0 {const-unsigned-char literal}
check.c(l113:s120:k150:d0:s0)		 goto _swBrk_0($27)
check.c(l113:s121:k151:d0:s0)	 _iffalse_7($18) :
check.c(l114:s122:k156:d0:s0)		if iTemp81 [k101 lr116:122 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] != 0 goto _swBrk_0($27)
check.c(l115:s123:k160:d0:s0)		_hab_sensor [k103 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed} := 0x2 {const-unsigned-char literal}
check.c(l116:s124:k163:d0:s0)		 goto _swBrk_0($27)
check.c(l117:s125:k164:d0:s0)	 _case_0_53($20) :
check.c(l118:s126:k165:d0:s0)		iTemp89 [k111 lr126:127 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{unsigned-long-int near* fixed}[remat] = &[_sys_timer_pool [k110 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int [2] fixed}]
check.c(l118:s127:k166:d0:s0)		iTemp90 [k112 lr127:165 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{unsigned-long-int near* fixed}[remat] = iTemp89 [k111 lr126:127 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{unsigned-long-int near* fixed}[remat] + 0x4 {unsigned-char literal}
check.c(l118:s128:k167:d0:s0)		iTemp91 [k113 lr128:129 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l118:s129:k168:d0:s0)		iTemp92 [k114 lr129:130 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp91 [k113 lr128:129 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l118:s130:k169:d0:s0)		iTemp93 [k115 lr130:131 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp92 [k114 lr129:130 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l118:s131:k170:d0:s0)		iTemp94 [k116 lr131:133 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp93 [k115 lr130:131 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l118:s132:k299:d0:s0)		send 0x2710 {const-int literal}{argreg = 1}
check.c(l118:s133:k300:d0:s0)		send iTemp94 [k116 lr131:133 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l118:s134:k301:d0:s0)		iTemp95 [k117 lr134:142 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l118:s135:k172:d0:s0)		iTemp96 [k118 lr135:136 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l118:s136:k173:d0:s0)		iTemp97 [k119 lr136:137 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp96 [k118 lr135:136 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l118:s137:k174:d0:s0)		iTemp98 [k120 lr137:138 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp97 [k119 lr136:137 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l118:s138:k175:d0:s0)		iTemp99 [k121 lr138:140 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp98 [k120 lr137:138 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l118:s139:k302:d0:s0)		send 0x3e8 {const-int literal}{argreg = 1}
check.c(l118:s140:k303:d0:s0)		send iTemp99 [k121 lr138:140 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l118:s141:k304:d0:s0)		iTemp100 [k122 lr141:142 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l118:s142:k177:d0:s0)		iTemp101 [k123 lr142:150 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp95 [k117 lr134:142 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp100 [k122 lr141:142 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l119:s143:k178:d0:s0)		iTemp102 [k124 lr143:144 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l119:s144:k179:d0:s0)		iTemp103 [k125 lr144:145 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp102 [k124 lr143:144 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l119:s145:k180:d0:s0)		iTemp104 [k126 lr145:146 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp103 [k125 lr144:145 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l119:s146:k181:d0:s0)		iTemp105 [k127 lr146:148 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp104 [k126 lr145:146 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l119:s147:k305:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l119:s148:k306:d0:s0)		send iTemp105 [k127 lr146:148 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l119:s149:k307:d0:s0)		iTemp106 [k128 lr149:150 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l119:s150:k183:d0:s0)		iTemp107 [k129 lr150:158 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp101 [k123 lr142:150 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp106 [k128 lr149:150 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l119:s151:k184:d0:s0)		iTemp108 [k130 lr151:152 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x4 {const-unsigned-char literal}
check.c(l119:s152:k185:d0:s0)		iTemp109 [k131 lr152:153 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp108 [k130 lr151:152 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l119:s153:k186:d0:s0)		iTemp110 [k132 lr153:154 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp109 [k131 lr152:153 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l119:s154:k187:d0:s0)		iTemp111 [k133 lr154:156 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp110 [k132 lr153:154 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l119:s155:k308:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l119:s156:k309:d0:s0)		send iTemp111 [k133 lr154:156 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l119:s157:k310:d0:s0)		iTemp112 [k134 lr157:158 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l119:s158:k189:d0:s0)		iTemp113 [k135 lr158:162 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp107 [k129 lr150:158 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp112 [k134 lr157:158 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l120:s159:k190:d0:s0)		iTemp114 [k136 lr159:160 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x5 {const-unsigned-char literal}
check.c(l120:s160:k191:d0:s0)		iTemp115 [k137 lr160:161 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp114 [k136 lr159:160 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l120:s161:k192:d0:s0)		iTemp116 [k138 lr161:162 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp115 [k137 lr160:161 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l120:s162:k193:d0:s0)		iTemp117 [k139 lr162:163 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = iTemp113 [k135 lr158:162 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp116 [k138 lr161:162 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ]
check.c(l120:s163:k194:d0:s0)		iTemp118 [k140 lr163:164 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp117 [k139 lr162:163 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l120:s164:k195:d0:s0)		iTemp119 [k141 lr164:165 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x04 r0x05 r0x06 r0x07 ] = (unsigned-long-int fixed)iTemp118 [k140 lr163:164 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]
check.c(l120:s165:k196:d0:s0)		*(iTemp90 [k112 lr127:165 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{unsigned-long-int near* fixed}[remat]) := iTemp119 [k141 lr164:165 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x04 r0x05 r0x06 r0x07 ]
check.c(l121:s166:k197:d0:s0)		 goto _swBrk_0($27)
check.c(l122:s167:k198:d0:s0)	 _case_0_54($21) :
check.c(l123:s168:k199:d0:s0)		iTemp120 [k143 lr168:169 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l123:s169:k200:d0:s0)		iTemp121 [k144 lr169:170 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp120 [k143 lr168:169 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l123:s170:k201:d0:s0)		iTemp122 [k145 lr170:171 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp121 [k144 lr169:170 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l123:s171:k202:d0:s0)		iTemp123 [k146 lr171:173 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp122 [k145 lr170:171 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l123:s172:k311:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l123:s173:k312:d0:s0)		send iTemp123 [k146 lr171:173 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l123:s174:k313:d0:s0)		iTemp124 [k147 lr174:182 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l123:s175:k204:d0:s0)		iTemp125 [k148 lr175:176 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l123:s176:k205:d0:s0)		iTemp126 [k149 lr176:177 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp125 [k148 lr175:176 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l123:s177:k206:d0:s0)		iTemp127 [k150 lr177:178 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp126 [k149 lr176:177 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l123:s178:k207:d0:s0)		iTemp128 [k151 lr178:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp127 [k150 lr177:178 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l123:s179:k314:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l123:s180:k315:d0:s0)		send iTemp128 [k151 lr178:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l123:s181:k316:d0:s0)		iTemp129 [k152 lr181:182 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l123:s182:k209:d0:s0)		iTemp130 [k153 lr182:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp124 [k147 lr174:182 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp129 [k152 lr181:182 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l124:s183:k210:d0:s0)		iTemp131 [k154 lr183:184 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l124:s184:k211:d0:s0)		iTemp132 [k155 lr184:185 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp131 [k154 lr183:184 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l124:s185:k212:d0:s0)		iTemp133 [k156 lr185:186 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp132 [k155 lr184:185 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l124:s186:k213:d0:s0)		iTemp134 [k157 lr186:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp133 [k156 lr185:186 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l124:s187:k214:d0:s0)		_sys_temp_min [k142 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed} = iTemp130 [k153 lr182:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp134 [k157 lr186:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l125:s188:k217:d0:s0)		 goto _swBrk_0($27)
check.c(l126:s189:k218:d0:s0)	 _case_0_55($22) :
check.c(l127:s190:k219:d0:s0)		iTemp137 [k161 lr190:191 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l127:s191:k220:d0:s0)		iTemp138 [k162 lr191:192 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp137 [k161 lr190:191 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l127:s192:k221:d0:s0)		iTemp139 [k163 lr192:193 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp138 [k162 lr191:192 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l127:s193:k222:d0:s0)		iTemp140 [k164 lr193:195 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp139 [k163 lr192:193 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l127:s194:k317:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l127:s195:k318:d0:s0)		send iTemp140 [k164 lr193:195 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l127:s196:k319:d0:s0)		iTemp141 [k165 lr196:204 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l127:s197:k224:d0:s0)		iTemp142 [k166 lr197:198 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l127:s198:k225:d0:s0)		iTemp143 [k167 lr198:199 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp142 [k166 lr197:198 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l127:s199:k226:d0:s0)		iTemp144 [k168 lr199:200 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp143 [k167 lr198:199 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l127:s200:k227:d0:s0)		iTemp145 [k169 lr200:202 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp144 [k168 lr199:200 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l127:s201:k320:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l127:s202:k321:d0:s0)		send iTemp145 [k169 lr200:202 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l127:s203:k322:d0:s0)		iTemp146 [k170 lr203:204 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l127:s204:k229:d0:s0)		iTemp147 [k171 lr204:209 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp141 [k165 lr196:204 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp146 [k170 lr203:204 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l128:s205:k230:d0:s0)		iTemp148 [k172 lr205:206 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l128:s206:k231:d0:s0)		iTemp149 [k173 lr206:207 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp148 [k172 lr205:206 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l128:s207:k232:d0:s0)		iTemp150 [k174 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp149 [k173 lr206:207 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l128:s208:k233:d0:s0)		iTemp151 [k175 lr208:209 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp150 [k174 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l128:s209:k234:d0:s0)		_sys_temp_max [k160 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed} = iTemp147 [k171 lr204:209 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp151 [k175 lr208:209 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l129:s210:k237:d0:s0)		 goto _swBrk_0($27)
check.c(l130:s211:k238:d0:s0)	 _case_0_56($23) :
check.c(l131:s212:k239:d0:s0)		iTemp154 [k179 lr212:213 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l131:s213:k240:d0:s0)		iTemp155 [k180 lr213:214 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp154 [k179 lr212:213 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l131:s214:k241:d0:s0)		iTemp156 [k181 lr214:215 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp155 [k180 lr213:214 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l131:s215:k242:d0:s0)		iTemp157 [k182 lr215:217 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp156 [k181 lr214:215 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l131:s216:k323:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l131:s217:k324:d0:s0)		send iTemp157 [k182 lr215:217 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l131:s218:k325:d0:s0)		iTemp158 [k183 lr218:226 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l131:s219:k244:d0:s0)		iTemp159 [k184 lr219:220 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l131:s220:k245:d0:s0)		iTemp160 [k185 lr220:221 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp159 [k184 lr219:220 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l131:s221:k246:d0:s0)		iTemp161 [k186 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp160 [k185 lr220:221 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l131:s222:k247:d0:s0)		iTemp162 [k187 lr222:224 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp161 [k186 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l131:s223:k326:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l131:s224:k327:d0:s0)		send iTemp162 [k187 lr222:224 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l131:s225:k328:d0:s0)		iTemp163 [k188 lr225:226 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l131:s226:k249:d0:s0)		iTemp164 [k189 lr226:231 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp158 [k183 lr218:226 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp163 [k188 lr225:226 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l132:s227:k250:d0:s0)		iTemp165 [k190 lr227:228 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l132:s228:k251:d0:s0)		iTemp166 [k191 lr228:229 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp165 [k190 lr227:228 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l132:s229:k252:d0:s0)		iTemp167 [k192 lr229:230 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp166 [k191 lr228:229 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l132:s230:k253:d0:s0)		iTemp168 [k193 lr230:231 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp167 [k192 lr229:230 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l132:s231:k254:d0:s0)		_sys_lumi_min [k178 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed} = iTemp164 [k189 lr226:231 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp168 [k193 lr230:231 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l133:s232:k257:d0:s0)		 goto _swBrk_0($27)
check.c(l134:s233:k258:d0:s0)	 _case_0_57($24) :
check.c(l135:s234:k259:d0:s0)		iTemp171 [k196 lr234:235 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l135:s235:k260:d0:s0)		iTemp172 [k197 lr235:236 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp171 [k196 lr234:235 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l135:s236:k261:d0:s0)		iTemp173 [k198 lr236:237 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp172 [k197 lr235:236 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l135:s237:k262:d0:s0)		iTemp174 [k199 lr237:239 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp173 [k198 lr236:237 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l135:s238:k329:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l135:s239:k330:d0:s0)		send iTemp174 [k199 lr237:239 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l135:s240:k331:d0:s0)		iTemp175 [k200 lr240:248 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l135:s241:k264:d0:s0)		iTemp176 [k201 lr241:242 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l135:s242:k265:d0:s0)		iTemp177 [k202 lr242:243 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp176 [k201 lr241:242 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l135:s243:k266:d0:s0)		iTemp178 [k203 lr243:244 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp177 [k202 lr242:243 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l135:s244:k267:d0:s0)		iTemp179 [k204 lr244:246 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp178 [k203 lr243:244 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l135:s245:k332:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l135:s246:k333:d0:s0)		send iTemp179 [k204 lr244:246 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l135:s247:k334:d0:s0)		iTemp180 [k205 lr247:248 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l135:s248:k269:d0:s0)		iTemp181 [k206 lr248:253 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp175 [k200 lr240:248 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp180 [k205 lr247:248 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l136:s249:k270:d0:s0)		iTemp182 [k207 lr249:250 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x00 r0x01 r0x02 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l136:s250:k271:d0:s0)		iTemp183 [k208 lr250:251 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x00 ] = @[iTemp182 [k207 lr249:250 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x00 r0x01 r0x02 ] + 0x0 {const-unsigned-char literal}]
check.c(l136:s251:k272:d0:s0)		iTemp184 [k209 lr251:252 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x00 r0x01 ] = (int fixed)iTemp183 [k208 lr250:251 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x00 ]
check.c(l136:s252:k273:d0:s0)		iTemp185 [k210 lr252:253 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x00 r0x01 ] = iTemp184 [k209 lr251:252 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x00 r0x01 ] - 0x30 {int literal}
check.c(l136:s253:k274:d0:s0)		_sys_temp_max [k160 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed} = iTemp181 [k206 lr248:253 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp185 [k210 lr252:253 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x00 r0x01 ]
check.c(l137:s254:k277:d0:s0)		 goto _swBrk_0($27)
check.c(l138:s255:k278:d0:s0)	 _case_0_82($25) :
check.c(l139:s256:k279:d0:s0)		iTemp1 [k4 lr4:258 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _check_comando_ret_1_74}[r0x03 ] := 0x0 {const-char literal}
check.c(l143:s257:k283:d0:s0)	 _swBrk_0($27) :
check.c(l145:s258:k284:d0:s0)		ret iTemp1 [k4 lr4:258 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _check_comando_ret_1_74}[r0x03 ]
check.c(l145:s259:k285:d0:s0)	 _return($32) :
check.c(l145:s260:k286:d0:s0)		eproc _check_comando [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char function ( char generic* fixed) fixed}

----------------------------------------------------------------
Basic Block _forbody_1 : loop Depth = 1 noPath = 0 , lastinLoop = 0
depth 1st num 28 : bbnum = 16 1st iCode = 68 , last iCode = 76
visited 0 : hasFcall = 0

defines bitVector :bitvector Size = 299 bSize = 38
Bits on { (74) (75) (76) (77) (81) (83) }

local defines bitVector :bitvector Size = 299 bSize = 38
Bits on { (74) (75) (76) (77) (81) (83) }

pointers Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (54) (57) (62) }

in pointers Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (54) (57) }

inDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (3) (5) (6) (8) (64) (65) (66) (68) (69) (74) (75) (76) (77) (81) (83) (289) }

outDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (3) (5) (6) (8) (64) (65) (66) (68) (69) (74) (75) (76) (77) (81) (83) }

usesDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (65) (74) (75) (76) (77) (81) (83) (289) }

----------------------------------------------------------------
check.c(l96:s68:k72:d1:s0)	 _forbody_1($28) :
check.c(l97:s69:k74:d1:s0)		iTemp45 [k61 lr69:70 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = iTemp50 [k66 lr66:76 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] - 0x1 {char literal}
check.c(l97:s70:k75:d1:s0)		iTemp46 [k62 lr70:73 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x05 r0x06 ] = iTemp39 [k53 lr60:88 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] + iTemp45 [k61 lr69:70 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ]
check.c(l97:s71:k76:d1:s0)		iTemp47 [k63 lr71:72 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x07 r0x08 r0x09 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + iTemp50 [k66 lr66:76 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ]
check.c(l97:s72:k77:d1:s0)		iTemp48 [k64 lr72:73 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x07 ] = @[iTemp47 [k63 lr71:72 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x07 r0x08 r0x09 ] + 0x0 {const-unsigned-char literal}]
check.c(l97:s73:k78:d1:s0)		*(iTemp46 [k62 lr70:73 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x05 r0x06 ]) := iTemp48 [k64 lr72:73 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x07 ]
check.c(l96:s74:k81:d1:s0)		iTemp50 [k66 lr66:76 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] = iTemp50 [k66 lr66:76 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] + 0x1 {const-unsigned-char literal}
check.c(l96:s75:k83:d1:s0)		iTemp51 [k67 lr75:76 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp50 [k66 lr66:76 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] < 0x11 {const-char literal}
check.c(l96:s76:k84:d1:s0)		if iTemp51 [k67 lr75:76 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forbody_1($28)
check.c(l98:s77:k292:d0:s0)		iTemp58 [k74 lr77:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] := 0x11 {const-char literal}
check.c(l98:s79:k88:d1:s0)	 _forbody_2($30) :
check.c(l99:s80:k90:d1:s0)		iTemp53 [k69 lr80:81 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = iTemp58 [k74 lr77:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] - 0x11 {char literal}
check.c(l99:s81:k91:d1:s0)		iTemp54 [k70 lr81:84 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x05 r0x06 ] = iTemp41 [k56 lr63:93 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] + iTemp53 [k69 lr80:81 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ]
check.c(l99:s82:k92:d1:s0)		iTemp55 [k71 lr82:83 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x07 r0x08 r0x09 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + iTemp58 [k74 lr77:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ]
check.c(l99:s83:k93:d1:s0)		iTemp56 [k72 lr83:84 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x07 ] = @[iTemp55 [k71 lr82:83 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x07 r0x08 r0x09 ] + 0x0 {const-unsigned-char literal}]
check.c(l99:s84:k94:d1:s0)		*(iTemp54 [k70 lr81:84 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x05 r0x06 ]) := iTemp56 [k72 lr83:84 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x07 ]
check.c(l98:s85:k97:d1:s0)		iTemp58 [k74 lr77:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] = iTemp58 [k74 lr77:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] + 0x1 {const-unsigned-char literal}
check.c(l98:s86:k99:d1:s0)		iTemp59 [k75 lr86:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp58 [k74 lr77:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] < 0x21 {const-char literal}
check.c(l98:s87:k100:d1:s0)		if iTemp59 [k75 lr86:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forbody_2($30)
check.c(l100:s88:k103:d0:s0)		iTemp60 [k77 lr88:89 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] := iTemp39 [k53 lr60:88 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat]
check.c(l100:s89:k104:d0:s0)		iTemp61 [k78 lr89:90 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = (char generic* fixed)iTemp60 [k77 lr88:89 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat]
check.c(l100:s90:k105:d0:s0)		send iTemp61 [k78 lr89:90 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ]{argreg = 1}
check.c(l100:s91:k106:d0:s0)		iTemp62 [k80 lr91:91 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _print_lcd_string [k76 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char generic* fixed) fixed}
check.c(l101:s92:k107:d0:s0)		iTemp63 [k82 lr92:92 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _print_lcd_ln [k81 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( ) fixed}
check.c(l102:s93:k108:d0:s0)		iTemp64 [k83 lr93:94 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] := iTemp41 [k56 lr63:93 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat]
check.c(l102:s94:k109:d0:s0)		iTemp65 [k84 lr94:95 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = (char generic* fixed)iTemp64 [k83 lr93:94 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat]
check.c(l102:s95:k110:d0:s0)		send iTemp65 [k84 lr94:95 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ]{argreg = 1}
check.c(l102:s96:k111:d0:s0)		iTemp66 [k85 lr96:96 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _print_lcd_string [k76 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char generic* fixed) fixed}
check.c(l103:s97:k112:d0:s0)		iTemp1 [k4 lr4:258 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _check_comando_ret_1_74}[r0x03 ] := 0x34 {const-unsigned-char literal}
check.c(l104:s98:k113:d0:s0)		 goto _swBrk_0($27)
check.c(l105:s99:k114:d0:s0)	 _case_0_51($8) :
check.c(l106:s100:k115:d0:s0)		iTemp67 [k86 lr100:101 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l106:s101:k116:d0:s0)		iTemp68 [k87 lr101:102 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp67 [k86 lr100:101 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l106:s102:k117:d0:s0)		iTemp69 [k88 lr102:103 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp68 [k87 lr101:102 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l106:s103:k118:d0:s0)		iTemp70 [k89 lr103:109 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp69 [k88 lr102:103 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l106:s104:k119:d0:s0)		iTemp71 [k90 lr104:105 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp70 [k89 lr103:109 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] == 0x1 {int literal}
check.c(l106:s105:k120:d0:s0)		if iTemp71 [k90 lr104:105 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} == 0 goto _iffalse_5($12)
check.c(l107:s106:k124:d0:s0)		_hab_alarme [k91 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed} := 0x1 {const-unsigned-char literal}
check.c(l107:s107:k125:d0:s0)		 goto _swBrk_0($27)
check.c(l107:s108:k126:d0:s0)	 _iffalse_5($12) :
check.c(l108:s109:k131:d0:s0)		if iTemp70 [k89 lr103:109 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] != 0 goto _swBrk_0($27)
check.c(l109:s110:k135:d0:s0)		_hab_alarme [k91 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed} := 0x0 {const-unsigned-char literal}
check.c(l110:s111:k138:d0:s0)		 goto _swBrk_0($27)
check.c(l111:s112:k139:d0:s0)	 _case_0_52($14) :
check.c(l112:s113:k140:d0:s0)		iTemp78 [k98 lr113:114 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l112:s114:k141:d0:s0)		iTemp79 [k99 lr114:115 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp78 [k98 lr113:114 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l112:s115:k142:d0:s0)		iTemp80 [k100 lr115:116 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp79 [k99 lr114:115 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l112:s116:k143:d0:s0)		iTemp81 [k101 lr116:122 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp80 [k100 lr115:116 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l112:s117:k144:d0:s0)		iTemp82 [k102 lr117:118 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp81 [k101 lr116:122 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] == 0x1 {int literal}
check.c(l112:s118:k145:d0:s0)		if iTemp82 [k102 lr117:118 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} == 0 goto _iffalse_7($18)
check.c(l113:s119:k149:d0:s0)		_hab_sensor [k103 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed} := 0x0 {const-unsigned-char literal}
check.c(l113:s120:k150:d0:s0)		 goto _swBrk_0($27)
check.c(l113:s121:k151:d0:s0)	 _iffalse_7($18) :
check.c(l114:s122:k156:d0:s0)		if iTemp81 [k101 lr116:122 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] != 0 goto _swBrk_0($27)
check.c(l115:s123:k160:d0:s0)		_hab_sensor [k103 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed} := 0x2 {const-unsigned-char literal}
check.c(l116:s124:k163:d0:s0)		 goto _swBrk_0($27)
check.c(l117:s125:k164:d0:s0)	 _case_0_53($20) :
check.c(l118:s126:k165:d0:s0)		iTemp89 [k111 lr126:127 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{unsigned-long-int near* fixed}[remat] = &[_sys_timer_pool [k110 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int [2] fixed}]
check.c(l118:s127:k166:d0:s0)		iTemp90 [k112 lr127:165 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{unsigned-long-int near* fixed}[remat] = iTemp89 [k111 lr126:127 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{unsigned-long-int near* fixed}[remat] + 0x4 {unsigned-char literal}
check.c(l118:s128:k167:d0:s0)		iTemp91 [k113 lr128:129 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l118:s129:k168:d0:s0)		iTemp92 [k114 lr129:130 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp91 [k113 lr128:129 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l118:s130:k169:d0:s0)		iTemp93 [k115 lr130:131 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp92 [k114 lr129:130 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l118:s131:k170:d0:s0)		iTemp94 [k116 lr131:133 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp93 [k115 lr130:131 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l118:s132:k299:d0:s0)		send 0x2710 {const-int literal}{argreg = 1}
check.c(l118:s133:k300:d0:s0)		send iTemp94 [k116 lr131:133 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l118:s134:k301:d0:s0)		iTemp95 [k117 lr134:142 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l118:s135:k172:d0:s0)		iTemp96 [k118 lr135:136 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l118:s136:k173:d0:s0)		iTemp97 [k119 lr136:137 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp96 [k118 lr135:136 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l118:s137:k174:d0:s0)		iTemp98 [k120 lr137:138 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp97 [k119 lr136:137 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l118:s138:k175:d0:s0)		iTemp99 [k121 lr138:140 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp98 [k120 lr137:138 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l118:s139:k302:d0:s0)		send 0x3e8 {const-int literal}{argreg = 1}
check.c(l118:s140:k303:d0:s0)		send iTemp99 [k121 lr138:140 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l118:s141:k304:d0:s0)		iTemp100 [k122 lr141:142 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l118:s142:k177:d0:s0)		iTemp101 [k123 lr142:150 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp95 [k117 lr134:142 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp100 [k122 lr141:142 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l119:s143:k178:d0:s0)		iTemp102 [k124 lr143:144 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l119:s144:k179:d0:s0)		iTemp103 [k125 lr144:145 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp102 [k124 lr143:144 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l119:s145:k180:d0:s0)		iTemp104 [k126 lr145:146 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp103 [k125 lr144:145 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l119:s146:k181:d0:s0)		iTemp105 [k127 lr146:148 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp104 [k126 lr145:146 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l119:s147:k305:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l119:s148:k306:d0:s0)		send iTemp105 [k127 lr146:148 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l119:s149:k307:d0:s0)		iTemp106 [k128 lr149:150 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l119:s150:k183:d0:s0)		iTemp107 [k129 lr150:158 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp101 [k123 lr142:150 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp106 [k128 lr149:150 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l119:s151:k184:d0:s0)		iTemp108 [k130 lr151:152 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x4 {const-unsigned-char literal}
check.c(l119:s152:k185:d0:s0)		iTemp109 [k131 lr152:153 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp108 [k130 lr151:152 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l119:s153:k186:d0:s0)		iTemp110 [k132 lr153:154 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp109 [k131 lr152:153 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l119:s154:k187:d0:s0)		iTemp111 [k133 lr154:156 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp110 [k132 lr153:154 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l119:s155:k308:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l119:s156:k309:d0:s0)		send iTemp111 [k133 lr154:156 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l119:s157:k310:d0:s0)		iTemp112 [k134 lr157:158 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l119:s158:k189:d0:s0)		iTemp113 [k135 lr158:162 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp107 [k129 lr150:158 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp112 [k134 lr157:158 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l120:s159:k190:d0:s0)		iTemp114 [k136 lr159:160 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x5 {const-unsigned-char literal}
check.c(l120:s160:k191:d0:s0)		iTemp115 [k137 lr160:161 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp114 [k136 lr159:160 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l120:s161:k192:d0:s0)		iTemp116 [k138 lr161:162 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp115 [k137 lr160:161 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l120:s162:k193:d0:s0)		iTemp117 [k139 lr162:163 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = iTemp113 [k135 lr158:162 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp116 [k138 lr161:162 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ]
check.c(l120:s163:k194:d0:s0)		iTemp118 [k140 lr163:164 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp117 [k139 lr162:163 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l120:s164:k195:d0:s0)		iTemp119 [k141 lr164:165 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x04 r0x05 r0x06 r0x07 ] = (unsigned-long-int fixed)iTemp118 [k140 lr163:164 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]
check.c(l120:s165:k196:d0:s0)		*(iTemp90 [k112 lr127:165 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{unsigned-long-int near* fixed}[remat]) := iTemp119 [k141 lr164:165 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x04 r0x05 r0x06 r0x07 ]
check.c(l121:s166:k197:d0:s0)		 goto _swBrk_0($27)
check.c(l122:s167:k198:d0:s0)	 _case_0_54($21) :
check.c(l123:s168:k199:d0:s0)		iTemp120 [k143 lr168:169 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l123:s169:k200:d0:s0)		iTemp121 [k144 lr169:170 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp120 [k143 lr168:169 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l123:s170:k201:d0:s0)		iTemp122 [k145 lr170:171 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp121 [k144 lr169:170 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l123:s171:k202:d0:s0)		iTemp123 [k146 lr171:173 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp122 [k145 lr170:171 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l123:s172:k311:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l123:s173:k312:d0:s0)		send iTemp123 [k146 lr171:173 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l123:s174:k313:d0:s0)		iTemp124 [k147 lr174:182 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l123:s175:k204:d0:s0)		iTemp125 [k148 lr175:176 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l123:s176:k205:d0:s0)		iTemp126 [k149 lr176:177 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp125 [k148 lr175:176 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l123:s177:k206:d0:s0)		iTemp127 [k150 lr177:178 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp126 [k149 lr176:177 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l123:s178:k207:d0:s0)		iTemp128 [k151 lr178:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp127 [k150 lr177:178 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l123:s179:k314:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l123:s180:k315:d0:s0)		send iTemp128 [k151 lr178:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l123:s181:k316:d0:s0)		iTemp129 [k152 lr181:182 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l123:s182:k209:d0:s0)		iTemp130 [k153 lr182:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp124 [k147 lr174:182 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp129 [k152 lr181:182 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l124:s183:k210:d0:s0)		iTemp131 [k154 lr183:184 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l124:s184:k211:d0:s0)		iTemp132 [k155 lr184:185 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp131 [k154 lr183:184 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l124:s185:k212:d0:s0)		iTemp133 [k156 lr185:186 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp132 [k155 lr184:185 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l124:s186:k213:d0:s0)		iTemp134 [k157 lr186:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp133 [k156 lr185:186 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l124:s187:k214:d0:s0)		_sys_temp_min [k142 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed} = iTemp130 [k153 lr182:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp134 [k157 lr186:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l125:s188:k217:d0:s0)		 goto _swBrk_0($27)
check.c(l126:s189:k218:d0:s0)	 _case_0_55($22) :
check.c(l127:s190:k219:d0:s0)		iTemp137 [k161 lr190:191 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l127:s191:k220:d0:s0)		iTemp138 [k162 lr191:192 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp137 [k161 lr190:191 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l127:s192:k221:d0:s0)		iTemp139 [k163 lr192:193 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp138 [k162 lr191:192 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l127:s193:k222:d0:s0)		iTemp140 [k164 lr193:195 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp139 [k163 lr192:193 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l127:s194:k317:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l127:s195:k318:d0:s0)		send iTemp140 [k164 lr193:195 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l127:s196:k319:d0:s0)		iTemp141 [k165 lr196:204 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l127:s197:k224:d0:s0)		iTemp142 [k166 lr197:198 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l127:s198:k225:d0:s0)		iTemp143 [k167 lr198:199 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp142 [k166 lr197:198 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l127:s199:k226:d0:s0)		iTemp144 [k168 lr199:200 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp143 [k167 lr198:199 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l127:s200:k227:d0:s0)		iTemp145 [k169 lr200:202 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp144 [k168 lr199:200 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l127:s201:k320:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l127:s202:k321:d0:s0)		send iTemp145 [k169 lr200:202 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l127:s203:k322:d0:s0)		iTemp146 [k170 lr203:204 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l127:s204:k229:d0:s0)		iTemp147 [k171 lr204:209 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp141 [k165 lr196:204 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp146 [k170 lr203:204 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l128:s205:k230:d0:s0)		iTemp148 [k172 lr205:206 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l128:s206:k231:d0:s0)		iTemp149 [k173 lr206:207 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp148 [k172 lr205:206 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l128:s207:k232:d0:s0)		iTemp150 [k174 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp149 [k173 lr206:207 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l128:s208:k233:d0:s0)		iTemp151 [k175 lr208:209 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp150 [k174 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l128:s209:k234:d0:s0)		_sys_temp_max [k160 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed} = iTemp147 [k171 lr204:209 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp151 [k175 lr208:209 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l129:s210:k237:d0:s0)		 goto _swBrk_0($27)
check.c(l130:s211:k238:d0:s0)	 _case_0_56($23) :
check.c(l131:s212:k239:d0:s0)		iTemp154 [k179 lr212:213 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l131:s213:k240:d0:s0)		iTemp155 [k180 lr213:214 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp154 [k179 lr212:213 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l131:s214:k241:d0:s0)		iTemp156 [k181 lr214:215 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp155 [k180 lr213:214 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l131:s215:k242:d0:s0)		iTemp157 [k182 lr215:217 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp156 [k181 lr214:215 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l131:s216:k323:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l131:s217:k324:d0:s0)		send iTemp157 [k182 lr215:217 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l131:s218:k325:d0:s0)		iTemp158 [k183 lr218:226 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l131:s219:k244:d0:s0)		iTemp159 [k184 lr219:220 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l131:s220:k245:d0:s0)		iTemp160 [k185 lr220:221 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp159 [k184 lr219:220 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l131:s221:k246:d0:s0)		iTemp161 [k186 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp160 [k185 lr220:221 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l131:s222:k247:d0:s0)		iTemp162 [k187 lr222:224 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp161 [k186 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l131:s223:k326:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l131:s224:k327:d0:s0)		send iTemp162 [k187 lr222:224 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l131:s225:k328:d0:s0)		iTemp163 [k188 lr225:226 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l131:s226:k249:d0:s0)		iTemp164 [k189 lr226:231 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp158 [k183 lr218:226 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp163 [k188 lr225:226 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l132:s227:k250:d0:s0)		iTemp165 [k190 lr227:228 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l132:s228:k251:d0:s0)		iTemp166 [k191 lr228:229 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp165 [k190 lr227:228 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l132:s229:k252:d0:s0)		iTemp167 [k192 lr229:230 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp166 [k191 lr228:229 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l132:s230:k253:d0:s0)		iTemp168 [k193 lr230:231 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp167 [k192 lr229:230 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l132:s231:k254:d0:s0)		_sys_lumi_min [k178 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed} = iTemp164 [k189 lr226:231 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp168 [k193 lr230:231 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l133:s232:k257:d0:s0)		 goto _swBrk_0($27)
check.c(l134:s233:k258:d0:s0)	 _case_0_57($24) :
check.c(l135:s234:k259:d0:s0)		iTemp171 [k196 lr234:235 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l135:s235:k260:d0:s0)		iTemp172 [k197 lr235:236 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp171 [k196 lr234:235 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l135:s236:k261:d0:s0)		iTemp173 [k198 lr236:237 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp172 [k197 lr235:236 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l135:s237:k262:d0:s0)		iTemp174 [k199 lr237:239 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp173 [k198 lr236:237 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l135:s238:k329:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l135:s239:k330:d0:s0)		send iTemp174 [k199 lr237:239 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l135:s240:k331:d0:s0)		iTemp175 [k200 lr240:248 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l135:s241:k264:d0:s0)		iTemp176 [k201 lr241:242 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l135:s242:k265:d0:s0)		iTemp177 [k202 lr242:243 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp176 [k201 lr241:242 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l135:s243:k266:d0:s0)		iTemp178 [k203 lr243:244 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp177 [k202 lr242:243 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l135:s244:k267:d0:s0)		iTemp179 [k204 lr244:246 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp178 [k203 lr243:244 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l135:s245:k332:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l135:s246:k333:d0:s0)		send iTemp179 [k204 lr244:246 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l135:s247:k334:d0:s0)		iTemp180 [k205 lr247:248 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l135:s248:k269:d0:s0)		iTemp181 [k206 lr248:253 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp175 [k200 lr240:248 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp180 [k205 lr247:248 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l136:s249:k270:d0:s0)		iTemp182 [k207 lr249:250 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x00 r0x01 r0x02 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l136:s250:k271:d0:s0)		iTemp183 [k208 lr250:251 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x00 ] = @[iTemp182 [k207 lr249:250 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x00 r0x01 r0x02 ] + 0x0 {const-unsigned-char literal}]
check.c(l136:s251:k272:d0:s0)		iTemp184 [k209 lr251:252 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x00 r0x01 ] = (int fixed)iTemp183 [k208 lr250:251 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x00 ]
check.c(l136:s252:k273:d0:s0)		iTemp185 [k210 lr252:253 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x00 r0x01 ] = iTemp184 [k209 lr251:252 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x00 r0x01 ] - 0x30 {int literal}
check.c(l136:s253:k274:d0:s0)		_sys_temp_max [k160 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed} = iTemp181 [k206 lr248:253 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp185 [k210 lr252:253 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x00 r0x01 ]
check.c(l137:s254:k277:d0:s0)		 goto _swBrk_0($27)
check.c(l138:s255:k278:d0:s0)	 _case_0_82($25) :
check.c(l139:s256:k279:d0:s0)		iTemp1 [k4 lr4:258 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _check_comando_ret_1_74}[r0x03 ] := 0x0 {const-char literal}
check.c(l143:s257:k283:d0:s0)	 _swBrk_0($27) :
check.c(l145:s258:k284:d0:s0)		ret iTemp1 [k4 lr4:258 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _check_comando_ret_1_74}[r0x03 ]
check.c(l145:s259:k285:d0:s0)	 _return($32) :
check.c(l145:s260:k286:d0:s0)		eproc _check_comando [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char function ( char generic* fixed) fixed}

----------------------------------------------------------------
Basic Block _eBBlock45 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 29 : bbnum = 17 1st iCode = 77 , last iCode = 77
visited 0 : hasFcall = 0

defines bitVector :bitvector Size = 299 bSize = 38
Bits on { (292) }

local defines bitVector :bitvector Size = 299 bSize = 38
Bits on { (292) }

pointers Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (54) (57) (62) }

in pointers Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (54) (57) (62) }

inDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (3) (5) (6) (8) (64) (65) (66) (68) (69) (74) (75) (76) (77) (81) (83) }

outDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (3) (5) (6) (8) (64) (65) (66) (68) (69) (74) (75) (76) (77) (81) (83) (292) }

usesDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { }

----------------------------------------------------------------
check.c(l98:s77:k292:d0:s0)		iTemp58 [k74 lr77:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] := 0x11 {const-char literal}
check.c(l98:s79:k88:d1:s0)	 _forbody_2($30) :
check.c(l99:s80:k90:d1:s0)		iTemp53 [k69 lr80:81 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = iTemp58 [k74 lr77:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] - 0x11 {char literal}
check.c(l99:s81:k91:d1:s0)		iTemp54 [k70 lr81:84 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x05 r0x06 ] = iTemp41 [k56 lr63:93 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] + iTemp53 [k69 lr80:81 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ]
check.c(l99:s82:k92:d1:s0)		iTemp55 [k71 lr82:83 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x07 r0x08 r0x09 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + iTemp58 [k74 lr77:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ]
check.c(l99:s83:k93:d1:s0)		iTemp56 [k72 lr83:84 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x07 ] = @[iTemp55 [k71 lr82:83 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x07 r0x08 r0x09 ] + 0x0 {const-unsigned-char literal}]
check.c(l99:s84:k94:d1:s0)		*(iTemp54 [k70 lr81:84 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x05 r0x06 ]) := iTemp56 [k72 lr83:84 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x07 ]
check.c(l98:s85:k97:d1:s0)		iTemp58 [k74 lr77:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] = iTemp58 [k74 lr77:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] + 0x1 {const-unsigned-char literal}
check.c(l98:s86:k99:d1:s0)		iTemp59 [k75 lr86:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp58 [k74 lr77:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] < 0x21 {const-char literal}
check.c(l98:s87:k100:d1:s0)		if iTemp59 [k75 lr86:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forbody_2($30)
check.c(l100:s88:k103:d0:s0)		iTemp60 [k77 lr88:89 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] := iTemp39 [k53 lr60:88 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat]
check.c(l100:s89:k104:d0:s0)		iTemp61 [k78 lr89:90 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = (char generic* fixed)iTemp60 [k77 lr88:89 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat]
check.c(l100:s90:k105:d0:s0)		send iTemp61 [k78 lr89:90 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ]{argreg = 1}
check.c(l100:s91:k106:d0:s0)		iTemp62 [k80 lr91:91 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _print_lcd_string [k76 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char generic* fixed) fixed}
check.c(l101:s92:k107:d0:s0)		iTemp63 [k82 lr92:92 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _print_lcd_ln [k81 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( ) fixed}
check.c(l102:s93:k108:d0:s0)		iTemp64 [k83 lr93:94 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] := iTemp41 [k56 lr63:93 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat]
check.c(l102:s94:k109:d0:s0)		iTemp65 [k84 lr94:95 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = (char generic* fixed)iTemp64 [k83 lr93:94 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat]
check.c(l102:s95:k110:d0:s0)		send iTemp65 [k84 lr94:95 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ]{argreg = 1}
check.c(l102:s96:k111:d0:s0)		iTemp66 [k85 lr96:96 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _print_lcd_string [k76 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char generic* fixed) fixed}
check.c(l103:s97:k112:d0:s0)		iTemp1 [k4 lr4:258 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _check_comando_ret_1_74}[r0x03 ] := 0x34 {const-unsigned-char literal}
check.c(l104:s98:k113:d0:s0)		 goto _swBrk_0($27)
check.c(l105:s99:k114:d0:s0)	 _case_0_51($8) :
check.c(l106:s100:k115:d0:s0)		iTemp67 [k86 lr100:101 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l106:s101:k116:d0:s0)		iTemp68 [k87 lr101:102 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp67 [k86 lr100:101 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l106:s102:k117:d0:s0)		iTemp69 [k88 lr102:103 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp68 [k87 lr101:102 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l106:s103:k118:d0:s0)		iTemp70 [k89 lr103:109 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp69 [k88 lr102:103 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l106:s104:k119:d0:s0)		iTemp71 [k90 lr104:105 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp70 [k89 lr103:109 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] == 0x1 {int literal}
check.c(l106:s105:k120:d0:s0)		if iTemp71 [k90 lr104:105 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} == 0 goto _iffalse_5($12)
check.c(l107:s106:k124:d0:s0)		_hab_alarme [k91 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed} := 0x1 {const-unsigned-char literal}
check.c(l107:s107:k125:d0:s0)		 goto _swBrk_0($27)
check.c(l107:s108:k126:d0:s0)	 _iffalse_5($12) :
check.c(l108:s109:k131:d0:s0)		if iTemp70 [k89 lr103:109 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] != 0 goto _swBrk_0($27)
check.c(l109:s110:k135:d0:s0)		_hab_alarme [k91 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed} := 0x0 {const-unsigned-char literal}
check.c(l110:s111:k138:d0:s0)		 goto _swBrk_0($27)
check.c(l111:s112:k139:d0:s0)	 _case_0_52($14) :
check.c(l112:s113:k140:d0:s0)		iTemp78 [k98 lr113:114 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l112:s114:k141:d0:s0)		iTemp79 [k99 lr114:115 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp78 [k98 lr113:114 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l112:s115:k142:d0:s0)		iTemp80 [k100 lr115:116 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp79 [k99 lr114:115 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l112:s116:k143:d0:s0)		iTemp81 [k101 lr116:122 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp80 [k100 lr115:116 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l112:s117:k144:d0:s0)		iTemp82 [k102 lr117:118 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp81 [k101 lr116:122 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] == 0x1 {int literal}
check.c(l112:s118:k145:d0:s0)		if iTemp82 [k102 lr117:118 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} == 0 goto _iffalse_7($18)
check.c(l113:s119:k149:d0:s0)		_hab_sensor [k103 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed} := 0x0 {const-unsigned-char literal}
check.c(l113:s120:k150:d0:s0)		 goto _swBrk_0($27)
check.c(l113:s121:k151:d0:s0)	 _iffalse_7($18) :
check.c(l114:s122:k156:d0:s0)		if iTemp81 [k101 lr116:122 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] != 0 goto _swBrk_0($27)
check.c(l115:s123:k160:d0:s0)		_hab_sensor [k103 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed} := 0x2 {const-unsigned-char literal}
check.c(l116:s124:k163:d0:s0)		 goto _swBrk_0($27)
check.c(l117:s125:k164:d0:s0)	 _case_0_53($20) :
check.c(l118:s126:k165:d0:s0)		iTemp89 [k111 lr126:127 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{unsigned-long-int near* fixed}[remat] = &[_sys_timer_pool [k110 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int [2] fixed}]
check.c(l118:s127:k166:d0:s0)		iTemp90 [k112 lr127:165 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{unsigned-long-int near* fixed}[remat] = iTemp89 [k111 lr126:127 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{unsigned-long-int near* fixed}[remat] + 0x4 {unsigned-char literal}
check.c(l118:s128:k167:d0:s0)		iTemp91 [k113 lr128:129 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l118:s129:k168:d0:s0)		iTemp92 [k114 lr129:130 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp91 [k113 lr128:129 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l118:s130:k169:d0:s0)		iTemp93 [k115 lr130:131 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp92 [k114 lr129:130 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l118:s131:k170:d0:s0)		iTemp94 [k116 lr131:133 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp93 [k115 lr130:131 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l118:s132:k299:d0:s0)		send 0x2710 {const-int literal}{argreg = 1}
check.c(l118:s133:k300:d0:s0)		send iTemp94 [k116 lr131:133 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l118:s134:k301:d0:s0)		iTemp95 [k117 lr134:142 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l118:s135:k172:d0:s0)		iTemp96 [k118 lr135:136 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l118:s136:k173:d0:s0)		iTemp97 [k119 lr136:137 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp96 [k118 lr135:136 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l118:s137:k174:d0:s0)		iTemp98 [k120 lr137:138 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp97 [k119 lr136:137 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l118:s138:k175:d0:s0)		iTemp99 [k121 lr138:140 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp98 [k120 lr137:138 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l118:s139:k302:d0:s0)		send 0x3e8 {const-int literal}{argreg = 1}
check.c(l118:s140:k303:d0:s0)		send iTemp99 [k121 lr138:140 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l118:s141:k304:d0:s0)		iTemp100 [k122 lr141:142 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l118:s142:k177:d0:s0)		iTemp101 [k123 lr142:150 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp95 [k117 lr134:142 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp100 [k122 lr141:142 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l119:s143:k178:d0:s0)		iTemp102 [k124 lr143:144 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l119:s144:k179:d0:s0)		iTemp103 [k125 lr144:145 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp102 [k124 lr143:144 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l119:s145:k180:d0:s0)		iTemp104 [k126 lr145:146 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp103 [k125 lr144:145 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l119:s146:k181:d0:s0)		iTemp105 [k127 lr146:148 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp104 [k126 lr145:146 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l119:s147:k305:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l119:s148:k306:d0:s0)		send iTemp105 [k127 lr146:148 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l119:s149:k307:d0:s0)		iTemp106 [k128 lr149:150 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l119:s150:k183:d0:s0)		iTemp107 [k129 lr150:158 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp101 [k123 lr142:150 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp106 [k128 lr149:150 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l119:s151:k184:d0:s0)		iTemp108 [k130 lr151:152 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x4 {const-unsigned-char literal}
check.c(l119:s152:k185:d0:s0)		iTemp109 [k131 lr152:153 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp108 [k130 lr151:152 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l119:s153:k186:d0:s0)		iTemp110 [k132 lr153:154 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp109 [k131 lr152:153 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l119:s154:k187:d0:s0)		iTemp111 [k133 lr154:156 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp110 [k132 lr153:154 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l119:s155:k308:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l119:s156:k309:d0:s0)		send iTemp111 [k133 lr154:156 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l119:s157:k310:d0:s0)		iTemp112 [k134 lr157:158 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l119:s158:k189:d0:s0)		iTemp113 [k135 lr158:162 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp107 [k129 lr150:158 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp112 [k134 lr157:158 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l120:s159:k190:d0:s0)		iTemp114 [k136 lr159:160 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x5 {const-unsigned-char literal}
check.c(l120:s160:k191:d0:s0)		iTemp115 [k137 lr160:161 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp114 [k136 lr159:160 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l120:s161:k192:d0:s0)		iTemp116 [k138 lr161:162 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp115 [k137 lr160:161 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l120:s162:k193:d0:s0)		iTemp117 [k139 lr162:163 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = iTemp113 [k135 lr158:162 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp116 [k138 lr161:162 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ]
check.c(l120:s163:k194:d0:s0)		iTemp118 [k140 lr163:164 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp117 [k139 lr162:163 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l120:s164:k195:d0:s0)		iTemp119 [k141 lr164:165 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x04 r0x05 r0x06 r0x07 ] = (unsigned-long-int fixed)iTemp118 [k140 lr163:164 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]
check.c(l120:s165:k196:d0:s0)		*(iTemp90 [k112 lr127:165 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{unsigned-long-int near* fixed}[remat]) := iTemp119 [k141 lr164:165 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x04 r0x05 r0x06 r0x07 ]
check.c(l121:s166:k197:d0:s0)		 goto _swBrk_0($27)
check.c(l122:s167:k198:d0:s0)	 _case_0_54($21) :
check.c(l123:s168:k199:d0:s0)		iTemp120 [k143 lr168:169 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l123:s169:k200:d0:s0)		iTemp121 [k144 lr169:170 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp120 [k143 lr168:169 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l123:s170:k201:d0:s0)		iTemp122 [k145 lr170:171 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp121 [k144 lr169:170 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l123:s171:k202:d0:s0)		iTemp123 [k146 lr171:173 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp122 [k145 lr170:171 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l123:s172:k311:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l123:s173:k312:d0:s0)		send iTemp123 [k146 lr171:173 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l123:s174:k313:d0:s0)		iTemp124 [k147 lr174:182 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l123:s175:k204:d0:s0)		iTemp125 [k148 lr175:176 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l123:s176:k205:d0:s0)		iTemp126 [k149 lr176:177 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp125 [k148 lr175:176 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l123:s177:k206:d0:s0)		iTemp127 [k150 lr177:178 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp126 [k149 lr176:177 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l123:s178:k207:d0:s0)		iTemp128 [k151 lr178:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp127 [k150 lr177:178 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l123:s179:k314:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l123:s180:k315:d0:s0)		send iTemp128 [k151 lr178:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l123:s181:k316:d0:s0)		iTemp129 [k152 lr181:182 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l123:s182:k209:d0:s0)		iTemp130 [k153 lr182:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp124 [k147 lr174:182 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp129 [k152 lr181:182 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l124:s183:k210:d0:s0)		iTemp131 [k154 lr183:184 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l124:s184:k211:d0:s0)		iTemp132 [k155 lr184:185 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp131 [k154 lr183:184 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l124:s185:k212:d0:s0)		iTemp133 [k156 lr185:186 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp132 [k155 lr184:185 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l124:s186:k213:d0:s0)		iTemp134 [k157 lr186:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp133 [k156 lr185:186 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l124:s187:k214:d0:s0)		_sys_temp_min [k142 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed} = iTemp130 [k153 lr182:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp134 [k157 lr186:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l125:s188:k217:d0:s0)		 goto _swBrk_0($27)
check.c(l126:s189:k218:d0:s0)	 _case_0_55($22) :
check.c(l127:s190:k219:d0:s0)		iTemp137 [k161 lr190:191 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l127:s191:k220:d0:s0)		iTemp138 [k162 lr191:192 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp137 [k161 lr190:191 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l127:s192:k221:d0:s0)		iTemp139 [k163 lr192:193 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp138 [k162 lr191:192 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l127:s193:k222:d0:s0)		iTemp140 [k164 lr193:195 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp139 [k163 lr192:193 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l127:s194:k317:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l127:s195:k318:d0:s0)		send iTemp140 [k164 lr193:195 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l127:s196:k319:d0:s0)		iTemp141 [k165 lr196:204 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l127:s197:k224:d0:s0)		iTemp142 [k166 lr197:198 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l127:s198:k225:d0:s0)		iTemp143 [k167 lr198:199 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp142 [k166 lr197:198 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l127:s199:k226:d0:s0)		iTemp144 [k168 lr199:200 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp143 [k167 lr198:199 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l127:s200:k227:d0:s0)		iTemp145 [k169 lr200:202 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp144 [k168 lr199:200 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l127:s201:k320:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l127:s202:k321:d0:s0)		send iTemp145 [k169 lr200:202 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l127:s203:k322:d0:s0)		iTemp146 [k170 lr203:204 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l127:s204:k229:d0:s0)		iTemp147 [k171 lr204:209 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp141 [k165 lr196:204 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp146 [k170 lr203:204 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l128:s205:k230:d0:s0)		iTemp148 [k172 lr205:206 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l128:s206:k231:d0:s0)		iTemp149 [k173 lr206:207 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp148 [k172 lr205:206 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l128:s207:k232:d0:s0)		iTemp150 [k174 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp149 [k173 lr206:207 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l128:s208:k233:d0:s0)		iTemp151 [k175 lr208:209 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp150 [k174 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l128:s209:k234:d0:s0)		_sys_temp_max [k160 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed} = iTemp147 [k171 lr204:209 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp151 [k175 lr208:209 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l129:s210:k237:d0:s0)		 goto _swBrk_0($27)
check.c(l130:s211:k238:d0:s0)	 _case_0_56($23) :
check.c(l131:s212:k239:d0:s0)		iTemp154 [k179 lr212:213 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l131:s213:k240:d0:s0)		iTemp155 [k180 lr213:214 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp154 [k179 lr212:213 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l131:s214:k241:d0:s0)		iTemp156 [k181 lr214:215 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp155 [k180 lr213:214 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l131:s215:k242:d0:s0)		iTemp157 [k182 lr215:217 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp156 [k181 lr214:215 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l131:s216:k323:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l131:s217:k324:d0:s0)		send iTemp157 [k182 lr215:217 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l131:s218:k325:d0:s0)		iTemp158 [k183 lr218:226 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l131:s219:k244:d0:s0)		iTemp159 [k184 lr219:220 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l131:s220:k245:d0:s0)		iTemp160 [k185 lr220:221 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp159 [k184 lr219:220 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l131:s221:k246:d0:s0)		iTemp161 [k186 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp160 [k185 lr220:221 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l131:s222:k247:d0:s0)		iTemp162 [k187 lr222:224 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp161 [k186 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l131:s223:k326:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l131:s224:k327:d0:s0)		send iTemp162 [k187 lr222:224 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l131:s225:k328:d0:s0)		iTemp163 [k188 lr225:226 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l131:s226:k249:d0:s0)		iTemp164 [k189 lr226:231 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp158 [k183 lr218:226 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp163 [k188 lr225:226 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l132:s227:k250:d0:s0)		iTemp165 [k190 lr227:228 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l132:s228:k251:d0:s0)		iTemp166 [k191 lr228:229 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp165 [k190 lr227:228 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l132:s229:k252:d0:s0)		iTemp167 [k192 lr229:230 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp166 [k191 lr228:229 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l132:s230:k253:d0:s0)		iTemp168 [k193 lr230:231 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp167 [k192 lr229:230 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l132:s231:k254:d0:s0)		_sys_lumi_min [k178 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed} = iTemp164 [k189 lr226:231 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp168 [k193 lr230:231 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l133:s232:k257:d0:s0)		 goto _swBrk_0($27)
check.c(l134:s233:k258:d0:s0)	 _case_0_57($24) :
check.c(l135:s234:k259:d0:s0)		iTemp171 [k196 lr234:235 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l135:s235:k260:d0:s0)		iTemp172 [k197 lr235:236 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp171 [k196 lr234:235 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l135:s236:k261:d0:s0)		iTemp173 [k198 lr236:237 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp172 [k197 lr235:236 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l135:s237:k262:d0:s0)		iTemp174 [k199 lr237:239 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp173 [k198 lr236:237 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l135:s238:k329:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l135:s239:k330:d0:s0)		send iTemp174 [k199 lr237:239 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l135:s240:k331:d0:s0)		iTemp175 [k200 lr240:248 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l135:s241:k264:d0:s0)		iTemp176 [k201 lr241:242 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l135:s242:k265:d0:s0)		iTemp177 [k202 lr242:243 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp176 [k201 lr241:242 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l135:s243:k266:d0:s0)		iTemp178 [k203 lr243:244 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp177 [k202 lr242:243 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l135:s244:k267:d0:s0)		iTemp179 [k204 lr244:246 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp178 [k203 lr243:244 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l135:s245:k332:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l135:s246:k333:d0:s0)		send iTemp179 [k204 lr244:246 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l135:s247:k334:d0:s0)		iTemp180 [k205 lr247:248 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l135:s248:k269:d0:s0)		iTemp181 [k206 lr248:253 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp175 [k200 lr240:248 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp180 [k205 lr247:248 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l136:s249:k270:d0:s0)		iTemp182 [k207 lr249:250 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x00 r0x01 r0x02 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l136:s250:k271:d0:s0)		iTemp183 [k208 lr250:251 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x00 ] = @[iTemp182 [k207 lr249:250 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x00 r0x01 r0x02 ] + 0x0 {const-unsigned-char literal}]
check.c(l136:s251:k272:d0:s0)		iTemp184 [k209 lr251:252 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x00 r0x01 ] = (int fixed)iTemp183 [k208 lr250:251 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x00 ]
check.c(l136:s252:k273:d0:s0)		iTemp185 [k210 lr252:253 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x00 r0x01 ] = iTemp184 [k209 lr251:252 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x00 r0x01 ] - 0x30 {int literal}
check.c(l136:s253:k274:d0:s0)		_sys_temp_max [k160 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed} = iTemp181 [k206 lr248:253 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp185 [k210 lr252:253 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x00 r0x01 ]
check.c(l137:s254:k277:d0:s0)		 goto _swBrk_0($27)
check.c(l138:s255:k278:d0:s0)	 _case_0_82($25) :
check.c(l139:s256:k279:d0:s0)		iTemp1 [k4 lr4:258 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _check_comando_ret_1_74}[r0x03 ] := 0x0 {const-char literal}
check.c(l143:s257:k283:d0:s0)	 _swBrk_0($27) :
check.c(l145:s258:k284:d0:s0)		ret iTemp1 [k4 lr4:258 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _check_comando_ret_1_74}[r0x03 ]
check.c(l145:s259:k285:d0:s0)	 _return($32) :
check.c(l145:s260:k286:d0:s0)		eproc _check_comando [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char function ( char generic* fixed) fixed}

----------------------------------------------------------------
Basic Block preHeaderLbl7 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 30 : bbnum = 18 1st iCode = 78 , last iCode = 78
visited 0 : hasFcall = 0

defines bitVector :bitvector Size = 299 bSize = 38
Bits on { }

local defines bitVector :
pointers Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (54) (57) (62) }

in pointers Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (54) (57) (62) }

inDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (3) (5) (6) (8) (64) (65) (66) (68) (69) (74) (75) (76) (77) (81) (83) (292) }

outDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (3) (5) (6) (8) (64) (65) (66) (68) (69) (74) (75) (76) (77) (81) (83) (292) }

usesDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { }

----------------------------------------------------------------
check.c(l98:s78:k298:d0:s0)	 preHeaderLbl7($87) :
check.c(l98:s79:k88:d1:s0)	 _forbody_2($30) :
check.c(l99:s80:k90:d1:s0)		iTemp53 [k69 lr80:81 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = iTemp58 [k74 lr77:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] - 0x11 {char literal}
check.c(l99:s81:k91:d1:s0)		iTemp54 [k70 lr81:84 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x05 r0x06 ] = iTemp41 [k56 lr63:93 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] + iTemp53 [k69 lr80:81 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ]
check.c(l99:s82:k92:d1:s0)		iTemp55 [k71 lr82:83 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x07 r0x08 r0x09 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + iTemp58 [k74 lr77:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ]
check.c(l99:s83:k93:d1:s0)		iTemp56 [k72 lr83:84 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x07 ] = @[iTemp55 [k71 lr82:83 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x07 r0x08 r0x09 ] + 0x0 {const-unsigned-char literal}]
check.c(l99:s84:k94:d1:s0)		*(iTemp54 [k70 lr81:84 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x05 r0x06 ]) := iTemp56 [k72 lr83:84 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x07 ]
check.c(l98:s85:k97:d1:s0)		iTemp58 [k74 lr77:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] = iTemp58 [k74 lr77:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] + 0x1 {const-unsigned-char literal}
check.c(l98:s86:k99:d1:s0)		iTemp59 [k75 lr86:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp58 [k74 lr77:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] < 0x21 {const-char literal}
check.c(l98:s87:k100:d1:s0)		if iTemp59 [k75 lr86:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forbody_2($30)
check.c(l100:s88:k103:d0:s0)		iTemp60 [k77 lr88:89 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] := iTemp39 [k53 lr60:88 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat]
check.c(l100:s89:k104:d0:s0)		iTemp61 [k78 lr89:90 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = (char generic* fixed)iTemp60 [k77 lr88:89 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat]
check.c(l100:s90:k105:d0:s0)		send iTemp61 [k78 lr89:90 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ]{argreg = 1}
check.c(l100:s91:k106:d0:s0)		iTemp62 [k80 lr91:91 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _print_lcd_string [k76 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char generic* fixed) fixed}
check.c(l101:s92:k107:d0:s0)		iTemp63 [k82 lr92:92 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _print_lcd_ln [k81 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( ) fixed}
check.c(l102:s93:k108:d0:s0)		iTemp64 [k83 lr93:94 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] := iTemp41 [k56 lr63:93 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat]
check.c(l102:s94:k109:d0:s0)		iTemp65 [k84 lr94:95 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = (char generic* fixed)iTemp64 [k83 lr93:94 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat]
check.c(l102:s95:k110:d0:s0)		send iTemp65 [k84 lr94:95 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ]{argreg = 1}
check.c(l102:s96:k111:d0:s0)		iTemp66 [k85 lr96:96 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _print_lcd_string [k76 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char generic* fixed) fixed}
check.c(l103:s97:k112:d0:s0)		iTemp1 [k4 lr4:258 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _check_comando_ret_1_74}[r0x03 ] := 0x34 {const-unsigned-char literal}
check.c(l104:s98:k113:d0:s0)		 goto _swBrk_0($27)
check.c(l105:s99:k114:d0:s0)	 _case_0_51($8) :
check.c(l106:s100:k115:d0:s0)		iTemp67 [k86 lr100:101 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l106:s101:k116:d0:s0)		iTemp68 [k87 lr101:102 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp67 [k86 lr100:101 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l106:s102:k117:d0:s0)		iTemp69 [k88 lr102:103 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp68 [k87 lr101:102 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l106:s103:k118:d0:s0)		iTemp70 [k89 lr103:109 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp69 [k88 lr102:103 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l106:s104:k119:d0:s0)		iTemp71 [k90 lr104:105 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp70 [k89 lr103:109 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] == 0x1 {int literal}
check.c(l106:s105:k120:d0:s0)		if iTemp71 [k90 lr104:105 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} == 0 goto _iffalse_5($12)
check.c(l107:s106:k124:d0:s0)		_hab_alarme [k91 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed} := 0x1 {const-unsigned-char literal}
check.c(l107:s107:k125:d0:s0)		 goto _swBrk_0($27)
check.c(l107:s108:k126:d0:s0)	 _iffalse_5($12) :
check.c(l108:s109:k131:d0:s0)		if iTemp70 [k89 lr103:109 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] != 0 goto _swBrk_0($27)
check.c(l109:s110:k135:d0:s0)		_hab_alarme [k91 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed} := 0x0 {const-unsigned-char literal}
check.c(l110:s111:k138:d0:s0)		 goto _swBrk_0($27)
check.c(l111:s112:k139:d0:s0)	 _case_0_52($14) :
check.c(l112:s113:k140:d0:s0)		iTemp78 [k98 lr113:114 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l112:s114:k141:d0:s0)		iTemp79 [k99 lr114:115 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp78 [k98 lr113:114 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l112:s115:k142:d0:s0)		iTemp80 [k100 lr115:116 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp79 [k99 lr114:115 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l112:s116:k143:d0:s0)		iTemp81 [k101 lr116:122 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp80 [k100 lr115:116 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l112:s117:k144:d0:s0)		iTemp82 [k102 lr117:118 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp81 [k101 lr116:122 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] == 0x1 {int literal}
check.c(l112:s118:k145:d0:s0)		if iTemp82 [k102 lr117:118 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} == 0 goto _iffalse_7($18)
check.c(l113:s119:k149:d0:s0)		_hab_sensor [k103 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed} := 0x0 {const-unsigned-char literal}
check.c(l113:s120:k150:d0:s0)		 goto _swBrk_0($27)
check.c(l113:s121:k151:d0:s0)	 _iffalse_7($18) :
check.c(l114:s122:k156:d0:s0)		if iTemp81 [k101 lr116:122 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] != 0 goto _swBrk_0($27)
check.c(l115:s123:k160:d0:s0)		_hab_sensor [k103 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed} := 0x2 {const-unsigned-char literal}
check.c(l116:s124:k163:d0:s0)		 goto _swBrk_0($27)
check.c(l117:s125:k164:d0:s0)	 _case_0_53($20) :
check.c(l118:s126:k165:d0:s0)		iTemp89 [k111 lr126:127 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{unsigned-long-int near* fixed}[remat] = &[_sys_timer_pool [k110 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int [2] fixed}]
check.c(l118:s127:k166:d0:s0)		iTemp90 [k112 lr127:165 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{unsigned-long-int near* fixed}[remat] = iTemp89 [k111 lr126:127 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{unsigned-long-int near* fixed}[remat] + 0x4 {unsigned-char literal}
check.c(l118:s128:k167:d0:s0)		iTemp91 [k113 lr128:129 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l118:s129:k168:d0:s0)		iTemp92 [k114 lr129:130 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp91 [k113 lr128:129 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l118:s130:k169:d0:s0)		iTemp93 [k115 lr130:131 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp92 [k114 lr129:130 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l118:s131:k170:d0:s0)		iTemp94 [k116 lr131:133 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp93 [k115 lr130:131 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l118:s132:k299:d0:s0)		send 0x2710 {const-int literal}{argreg = 1}
check.c(l118:s133:k300:d0:s0)		send iTemp94 [k116 lr131:133 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l118:s134:k301:d0:s0)		iTemp95 [k117 lr134:142 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l118:s135:k172:d0:s0)		iTemp96 [k118 lr135:136 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l118:s136:k173:d0:s0)		iTemp97 [k119 lr136:137 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp96 [k118 lr135:136 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l118:s137:k174:d0:s0)		iTemp98 [k120 lr137:138 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp97 [k119 lr136:137 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l118:s138:k175:d0:s0)		iTemp99 [k121 lr138:140 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp98 [k120 lr137:138 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l118:s139:k302:d0:s0)		send 0x3e8 {const-int literal}{argreg = 1}
check.c(l118:s140:k303:d0:s0)		send iTemp99 [k121 lr138:140 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l118:s141:k304:d0:s0)		iTemp100 [k122 lr141:142 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l118:s142:k177:d0:s0)		iTemp101 [k123 lr142:150 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp95 [k117 lr134:142 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp100 [k122 lr141:142 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l119:s143:k178:d0:s0)		iTemp102 [k124 lr143:144 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l119:s144:k179:d0:s0)		iTemp103 [k125 lr144:145 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp102 [k124 lr143:144 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l119:s145:k180:d0:s0)		iTemp104 [k126 lr145:146 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp103 [k125 lr144:145 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l119:s146:k181:d0:s0)		iTemp105 [k127 lr146:148 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp104 [k126 lr145:146 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l119:s147:k305:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l119:s148:k306:d0:s0)		send iTemp105 [k127 lr146:148 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l119:s149:k307:d0:s0)		iTemp106 [k128 lr149:150 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l119:s150:k183:d0:s0)		iTemp107 [k129 lr150:158 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp101 [k123 lr142:150 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp106 [k128 lr149:150 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l119:s151:k184:d0:s0)		iTemp108 [k130 lr151:152 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x4 {const-unsigned-char literal}
check.c(l119:s152:k185:d0:s0)		iTemp109 [k131 lr152:153 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp108 [k130 lr151:152 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l119:s153:k186:d0:s0)		iTemp110 [k132 lr153:154 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp109 [k131 lr152:153 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l119:s154:k187:d0:s0)		iTemp111 [k133 lr154:156 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp110 [k132 lr153:154 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l119:s155:k308:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l119:s156:k309:d0:s0)		send iTemp111 [k133 lr154:156 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l119:s157:k310:d0:s0)		iTemp112 [k134 lr157:158 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l119:s158:k189:d0:s0)		iTemp113 [k135 lr158:162 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp107 [k129 lr150:158 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp112 [k134 lr157:158 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l120:s159:k190:d0:s0)		iTemp114 [k136 lr159:160 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x5 {const-unsigned-char literal}
check.c(l120:s160:k191:d0:s0)		iTemp115 [k137 lr160:161 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp114 [k136 lr159:160 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l120:s161:k192:d0:s0)		iTemp116 [k138 lr161:162 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp115 [k137 lr160:161 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l120:s162:k193:d0:s0)		iTemp117 [k139 lr162:163 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = iTemp113 [k135 lr158:162 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp116 [k138 lr161:162 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ]
check.c(l120:s163:k194:d0:s0)		iTemp118 [k140 lr163:164 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp117 [k139 lr162:163 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l120:s164:k195:d0:s0)		iTemp119 [k141 lr164:165 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x04 r0x05 r0x06 r0x07 ] = (unsigned-long-int fixed)iTemp118 [k140 lr163:164 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]
check.c(l120:s165:k196:d0:s0)		*(iTemp90 [k112 lr127:165 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{unsigned-long-int near* fixed}[remat]) := iTemp119 [k141 lr164:165 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x04 r0x05 r0x06 r0x07 ]
check.c(l121:s166:k197:d0:s0)		 goto _swBrk_0($27)
check.c(l122:s167:k198:d0:s0)	 _case_0_54($21) :
check.c(l123:s168:k199:d0:s0)		iTemp120 [k143 lr168:169 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l123:s169:k200:d0:s0)		iTemp121 [k144 lr169:170 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp120 [k143 lr168:169 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l123:s170:k201:d0:s0)		iTemp122 [k145 lr170:171 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp121 [k144 lr169:170 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l123:s171:k202:d0:s0)		iTemp123 [k146 lr171:173 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp122 [k145 lr170:171 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l123:s172:k311:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l123:s173:k312:d0:s0)		send iTemp123 [k146 lr171:173 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l123:s174:k313:d0:s0)		iTemp124 [k147 lr174:182 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l123:s175:k204:d0:s0)		iTemp125 [k148 lr175:176 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l123:s176:k205:d0:s0)		iTemp126 [k149 lr176:177 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp125 [k148 lr175:176 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l123:s177:k206:d0:s0)		iTemp127 [k150 lr177:178 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp126 [k149 lr176:177 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l123:s178:k207:d0:s0)		iTemp128 [k151 lr178:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp127 [k150 lr177:178 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l123:s179:k314:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l123:s180:k315:d0:s0)		send iTemp128 [k151 lr178:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l123:s181:k316:d0:s0)		iTemp129 [k152 lr181:182 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l123:s182:k209:d0:s0)		iTemp130 [k153 lr182:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp124 [k147 lr174:182 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp129 [k152 lr181:182 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l124:s183:k210:d0:s0)		iTemp131 [k154 lr183:184 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l124:s184:k211:d0:s0)		iTemp132 [k155 lr184:185 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp131 [k154 lr183:184 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l124:s185:k212:d0:s0)		iTemp133 [k156 lr185:186 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp132 [k155 lr184:185 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l124:s186:k213:d0:s0)		iTemp134 [k157 lr186:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp133 [k156 lr185:186 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l124:s187:k214:d0:s0)		_sys_temp_min [k142 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed} = iTemp130 [k153 lr182:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp134 [k157 lr186:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l125:s188:k217:d0:s0)		 goto _swBrk_0($27)
check.c(l126:s189:k218:d0:s0)	 _case_0_55($22) :
check.c(l127:s190:k219:d0:s0)		iTemp137 [k161 lr190:191 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l127:s191:k220:d0:s0)		iTemp138 [k162 lr191:192 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp137 [k161 lr190:191 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l127:s192:k221:d0:s0)		iTemp139 [k163 lr192:193 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp138 [k162 lr191:192 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l127:s193:k222:d0:s0)		iTemp140 [k164 lr193:195 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp139 [k163 lr192:193 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l127:s194:k317:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l127:s195:k318:d0:s0)		send iTemp140 [k164 lr193:195 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l127:s196:k319:d0:s0)		iTemp141 [k165 lr196:204 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l127:s197:k224:d0:s0)		iTemp142 [k166 lr197:198 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l127:s198:k225:d0:s0)		iTemp143 [k167 lr198:199 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp142 [k166 lr197:198 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l127:s199:k226:d0:s0)		iTemp144 [k168 lr199:200 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp143 [k167 lr198:199 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l127:s200:k227:d0:s0)		iTemp145 [k169 lr200:202 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp144 [k168 lr199:200 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l127:s201:k320:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l127:s202:k321:d0:s0)		send iTemp145 [k169 lr200:202 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l127:s203:k322:d0:s0)		iTemp146 [k170 lr203:204 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l127:s204:k229:d0:s0)		iTemp147 [k171 lr204:209 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp141 [k165 lr196:204 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp146 [k170 lr203:204 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l128:s205:k230:d0:s0)		iTemp148 [k172 lr205:206 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l128:s206:k231:d0:s0)		iTemp149 [k173 lr206:207 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp148 [k172 lr205:206 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l128:s207:k232:d0:s0)		iTemp150 [k174 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp149 [k173 lr206:207 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l128:s208:k233:d0:s0)		iTemp151 [k175 lr208:209 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp150 [k174 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l128:s209:k234:d0:s0)		_sys_temp_max [k160 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed} = iTemp147 [k171 lr204:209 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp151 [k175 lr208:209 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l129:s210:k237:d0:s0)		 goto _swBrk_0($27)
check.c(l130:s211:k238:d0:s0)	 _case_0_56($23) :
check.c(l131:s212:k239:d0:s0)		iTemp154 [k179 lr212:213 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l131:s213:k240:d0:s0)		iTemp155 [k180 lr213:214 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp154 [k179 lr212:213 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l131:s214:k241:d0:s0)		iTemp156 [k181 lr214:215 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp155 [k180 lr213:214 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l131:s215:k242:d0:s0)		iTemp157 [k182 lr215:217 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp156 [k181 lr214:215 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l131:s216:k323:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l131:s217:k324:d0:s0)		send iTemp157 [k182 lr215:217 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l131:s218:k325:d0:s0)		iTemp158 [k183 lr218:226 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l131:s219:k244:d0:s0)		iTemp159 [k184 lr219:220 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l131:s220:k245:d0:s0)		iTemp160 [k185 lr220:221 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp159 [k184 lr219:220 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l131:s221:k246:d0:s0)		iTemp161 [k186 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp160 [k185 lr220:221 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l131:s222:k247:d0:s0)		iTemp162 [k187 lr222:224 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp161 [k186 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l131:s223:k326:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l131:s224:k327:d0:s0)		send iTemp162 [k187 lr222:224 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l131:s225:k328:d0:s0)		iTemp163 [k188 lr225:226 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l131:s226:k249:d0:s0)		iTemp164 [k189 lr226:231 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp158 [k183 lr218:226 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp163 [k188 lr225:226 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l132:s227:k250:d0:s0)		iTemp165 [k190 lr227:228 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l132:s228:k251:d0:s0)		iTemp166 [k191 lr228:229 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp165 [k190 lr227:228 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l132:s229:k252:d0:s0)		iTemp167 [k192 lr229:230 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp166 [k191 lr228:229 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l132:s230:k253:d0:s0)		iTemp168 [k193 lr230:231 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp167 [k192 lr229:230 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l132:s231:k254:d0:s0)		_sys_lumi_min [k178 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed} = iTemp164 [k189 lr226:231 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp168 [k193 lr230:231 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l133:s232:k257:d0:s0)		 goto _swBrk_0($27)
check.c(l134:s233:k258:d0:s0)	 _case_0_57($24) :
check.c(l135:s234:k259:d0:s0)		iTemp171 [k196 lr234:235 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l135:s235:k260:d0:s0)		iTemp172 [k197 lr235:236 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp171 [k196 lr234:235 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l135:s236:k261:d0:s0)		iTemp173 [k198 lr236:237 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp172 [k197 lr235:236 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l135:s237:k262:d0:s0)		iTemp174 [k199 lr237:239 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp173 [k198 lr236:237 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l135:s238:k329:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l135:s239:k330:d0:s0)		send iTemp174 [k199 lr237:239 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l135:s240:k331:d0:s0)		iTemp175 [k200 lr240:248 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l135:s241:k264:d0:s0)		iTemp176 [k201 lr241:242 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l135:s242:k265:d0:s0)		iTemp177 [k202 lr242:243 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp176 [k201 lr241:242 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l135:s243:k266:d0:s0)		iTemp178 [k203 lr243:244 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp177 [k202 lr242:243 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l135:s244:k267:d0:s0)		iTemp179 [k204 lr244:246 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp178 [k203 lr243:244 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l135:s245:k332:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l135:s246:k333:d0:s0)		send iTemp179 [k204 lr244:246 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l135:s247:k334:d0:s0)		iTemp180 [k205 lr247:248 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l135:s248:k269:d0:s0)		iTemp181 [k206 lr248:253 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp175 [k200 lr240:248 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp180 [k205 lr247:248 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l136:s249:k270:d0:s0)		iTemp182 [k207 lr249:250 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x00 r0x01 r0x02 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l136:s250:k271:d0:s0)		iTemp183 [k208 lr250:251 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x00 ] = @[iTemp182 [k207 lr249:250 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x00 r0x01 r0x02 ] + 0x0 {const-unsigned-char literal}]
check.c(l136:s251:k272:d0:s0)		iTemp184 [k209 lr251:252 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x00 r0x01 ] = (int fixed)iTemp183 [k208 lr250:251 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x00 ]
check.c(l136:s252:k273:d0:s0)		iTemp185 [k210 lr252:253 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x00 r0x01 ] = iTemp184 [k209 lr251:252 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x00 r0x01 ] - 0x30 {int literal}
check.c(l136:s253:k274:d0:s0)		_sys_temp_max [k160 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed} = iTemp181 [k206 lr248:253 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp185 [k210 lr252:253 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x00 r0x01 ]
check.c(l137:s254:k277:d0:s0)		 goto _swBrk_0($27)
check.c(l138:s255:k278:d0:s0)	 _case_0_82($25) :
check.c(l139:s256:k279:d0:s0)		iTemp1 [k4 lr4:258 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _check_comando_ret_1_74}[r0x03 ] := 0x0 {const-char literal}
check.c(l143:s257:k283:d0:s0)	 _swBrk_0($27) :
check.c(l145:s258:k284:d0:s0)		ret iTemp1 [k4 lr4:258 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _check_comando_ret_1_74}[r0x03 ]
check.c(l145:s259:k285:d0:s0)	 _return($32) :
check.c(l145:s260:k286:d0:s0)		eproc _check_comando [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char function ( char generic* fixed) fixed}

----------------------------------------------------------------
Basic Block _forbody_2 : loop Depth = 1 noPath = 0 , lastinLoop = 0
depth 1st num 31 : bbnum = 19 1st iCode = 79 , last iCode = 87
visited 0 : hasFcall = 0

defines bitVector :bitvector Size = 299 bSize = 38
Bits on { (90) (91) (92) (93) (97) (99) }

local defines bitVector :bitvector Size = 299 bSize = 38
Bits on { (90) (91) (92) (93) (97) (99) }

pointers Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (54) (57) (62) (70) }

in pointers Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (54) (57) (62) }

inDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (3) (5) (6) (8) (64) (65) (66) (68) (69) (74) (75) (76) (77) (81) (83) (90) (91) (92) (93) (97) (99) (292) }

outDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (3) (5) (6) (8) (64) (65) (66) (68) (69) (74) (75) (76) (77) (81) (83) (90) (91) (92) (93) (97) (99) }

usesDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (68) (90) (91) (92) (93) (97) (99) (292) }

----------------------------------------------------------------
check.c(l98:s79:k88:d1:s0)	 _forbody_2($30) :
check.c(l99:s80:k90:d1:s0)		iTemp53 [k69 lr80:81 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ] = iTemp58 [k74 lr77:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] - 0x11 {char literal}
check.c(l99:s81:k91:d1:s0)		iTemp54 [k70 lr81:84 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x05 r0x06 ] = iTemp41 [k56 lr63:93 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] + iTemp53 [k69 lr80:81 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x05 ]
check.c(l99:s82:k92:d1:s0)		iTemp55 [k71 lr82:83 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x07 r0x08 r0x09 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + iTemp58 [k74 lr77:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ]
check.c(l99:s83:k93:d1:s0)		iTemp56 [k72 lr83:84 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x07 ] = @[iTemp55 [k71 lr82:83 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x07 r0x08 r0x09 ] + 0x0 {const-unsigned-char literal}]
check.c(l99:s84:k94:d1:s0)		*(iTemp54 [k70 lr81:84 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x05 r0x06 ]) := iTemp56 [k72 lr83:84 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x07 ]
check.c(l98:s85:k97:d1:s0)		iTemp58 [k74 lr77:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] = iTemp58 [k74 lr77:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] + 0x1 {const-unsigned-char literal}
check.c(l98:s86:k99:d1:s0)		iTemp59 [k75 lr86:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp58 [k74 lr77:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{ sir@ _check_comando_i_1_74}[r0x04 ] < 0x21 {const-char literal}
check.c(l98:s87:k100:d1:s0)		if iTemp59 [k75 lr86:87 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forbody_2($30)
check.c(l100:s88:k103:d0:s0)		iTemp60 [k77 lr88:89 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] := iTemp39 [k53 lr60:88 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat]
check.c(l100:s89:k104:d0:s0)		iTemp61 [k78 lr89:90 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = (char generic* fixed)iTemp60 [k77 lr88:89 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat]
check.c(l100:s90:k105:d0:s0)		send iTemp61 [k78 lr89:90 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ]{argreg = 1}
check.c(l100:s91:k106:d0:s0)		iTemp62 [k80 lr91:91 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _print_lcd_string [k76 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char generic* fixed) fixed}
check.c(l101:s92:k107:d0:s0)		iTemp63 [k82 lr92:92 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _print_lcd_ln [k81 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( ) fixed}
check.c(l102:s93:k108:d0:s0)		iTemp64 [k83 lr93:94 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] := iTemp41 [k56 lr63:93 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat]
check.c(l102:s94:k109:d0:s0)		iTemp65 [k84 lr94:95 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = (char generic* fixed)iTemp64 [k83 lr93:94 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat]
check.c(l102:s95:k110:d0:s0)		send iTemp65 [k84 lr94:95 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ]{argreg = 1}
check.c(l102:s96:k111:d0:s0)		iTemp66 [k85 lr96:96 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _print_lcd_string [k76 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char generic* fixed) fixed}
check.c(l103:s97:k112:d0:s0)		iTemp1 [k4 lr4:258 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _check_comando_ret_1_74}[r0x03 ] := 0x34 {const-unsigned-char literal}
check.c(l104:s98:k113:d0:s0)		 goto _swBrk_0($27)
check.c(l105:s99:k114:d0:s0)	 _case_0_51($8) :
check.c(l106:s100:k115:d0:s0)		iTemp67 [k86 lr100:101 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l106:s101:k116:d0:s0)		iTemp68 [k87 lr101:102 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp67 [k86 lr100:101 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l106:s102:k117:d0:s0)		iTemp69 [k88 lr102:103 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp68 [k87 lr101:102 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l106:s103:k118:d0:s0)		iTemp70 [k89 lr103:109 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp69 [k88 lr102:103 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l106:s104:k119:d0:s0)		iTemp71 [k90 lr104:105 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp70 [k89 lr103:109 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] == 0x1 {int literal}
check.c(l106:s105:k120:d0:s0)		if iTemp71 [k90 lr104:105 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} == 0 goto _iffalse_5($12)
check.c(l107:s106:k124:d0:s0)		_hab_alarme [k91 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed} := 0x1 {const-unsigned-char literal}
check.c(l107:s107:k125:d0:s0)		 goto _swBrk_0($27)
check.c(l107:s108:k126:d0:s0)	 _iffalse_5($12) :
check.c(l108:s109:k131:d0:s0)		if iTemp70 [k89 lr103:109 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] != 0 goto _swBrk_0($27)
check.c(l109:s110:k135:d0:s0)		_hab_alarme [k91 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed} := 0x0 {const-unsigned-char literal}
check.c(l110:s111:k138:d0:s0)		 goto _swBrk_0($27)
check.c(l111:s112:k139:d0:s0)	 _case_0_52($14) :
check.c(l112:s113:k140:d0:s0)		iTemp78 [k98 lr113:114 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l112:s114:k141:d0:s0)		iTemp79 [k99 lr114:115 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp78 [k98 lr113:114 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l112:s115:k142:d0:s0)		iTemp80 [k100 lr115:116 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp79 [k99 lr114:115 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l112:s116:k143:d0:s0)		iTemp81 [k101 lr116:122 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp80 [k100 lr115:116 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l112:s117:k144:d0:s0)		iTemp82 [k102 lr117:118 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp81 [k101 lr116:122 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] == 0x1 {int literal}
check.c(l112:s118:k145:d0:s0)		if iTemp82 [k102 lr117:118 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} == 0 goto _iffalse_7($18)
check.c(l113:s119:k149:d0:s0)		_hab_sensor [k103 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed} := 0x0 {const-unsigned-char literal}
check.c(l113:s120:k150:d0:s0)		 goto _swBrk_0($27)
check.c(l113:s121:k151:d0:s0)	 _iffalse_7($18) :
check.c(l114:s122:k156:d0:s0)		if iTemp81 [k101 lr116:122 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] != 0 goto _swBrk_0($27)
check.c(l115:s123:k160:d0:s0)		_hab_sensor [k103 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed} := 0x2 {const-unsigned-char literal}
check.c(l116:s124:k163:d0:s0)		 goto _swBrk_0($27)
check.c(l117:s125:k164:d0:s0)	 _case_0_53($20) :
check.c(l118:s126:k165:d0:s0)		iTemp89 [k111 lr126:127 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{unsigned-long-int near* fixed}[remat] = &[_sys_timer_pool [k110 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int [2] fixed}]
check.c(l118:s127:k166:d0:s0)		iTemp90 [k112 lr127:165 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{unsigned-long-int near* fixed}[remat] = iTemp89 [k111 lr126:127 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{unsigned-long-int near* fixed}[remat] + 0x4 {unsigned-char literal}
check.c(l118:s128:k167:d0:s0)		iTemp91 [k113 lr128:129 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l118:s129:k168:d0:s0)		iTemp92 [k114 lr129:130 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp91 [k113 lr128:129 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l118:s130:k169:d0:s0)		iTemp93 [k115 lr130:131 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp92 [k114 lr129:130 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l118:s131:k170:d0:s0)		iTemp94 [k116 lr131:133 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp93 [k115 lr130:131 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l118:s132:k299:d0:s0)		send 0x2710 {const-int literal}{argreg = 1}
check.c(l118:s133:k300:d0:s0)		send iTemp94 [k116 lr131:133 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l118:s134:k301:d0:s0)		iTemp95 [k117 lr134:142 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l118:s135:k172:d0:s0)		iTemp96 [k118 lr135:136 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l118:s136:k173:d0:s0)		iTemp97 [k119 lr136:137 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp96 [k118 lr135:136 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l118:s137:k174:d0:s0)		iTemp98 [k120 lr137:138 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp97 [k119 lr136:137 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l118:s138:k175:d0:s0)		iTemp99 [k121 lr138:140 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp98 [k120 lr137:138 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l118:s139:k302:d0:s0)		send 0x3e8 {const-int literal}{argreg = 1}
check.c(l118:s140:k303:d0:s0)		send iTemp99 [k121 lr138:140 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l118:s141:k304:d0:s0)		iTemp100 [k122 lr141:142 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l118:s142:k177:d0:s0)		iTemp101 [k123 lr142:150 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp95 [k117 lr134:142 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp100 [k122 lr141:142 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l119:s143:k178:d0:s0)		iTemp102 [k124 lr143:144 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l119:s144:k179:d0:s0)		iTemp103 [k125 lr144:145 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp102 [k124 lr143:144 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l119:s145:k180:d0:s0)		iTemp104 [k126 lr145:146 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp103 [k125 lr144:145 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l119:s146:k181:d0:s0)		iTemp105 [k127 lr146:148 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp104 [k126 lr145:146 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l119:s147:k305:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l119:s148:k306:d0:s0)		send iTemp105 [k127 lr146:148 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l119:s149:k307:d0:s0)		iTemp106 [k128 lr149:150 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l119:s150:k183:d0:s0)		iTemp107 [k129 lr150:158 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp101 [k123 lr142:150 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp106 [k128 lr149:150 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l119:s151:k184:d0:s0)		iTemp108 [k130 lr151:152 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x4 {const-unsigned-char literal}
check.c(l119:s152:k185:d0:s0)		iTemp109 [k131 lr152:153 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp108 [k130 lr151:152 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l119:s153:k186:d0:s0)		iTemp110 [k132 lr153:154 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp109 [k131 lr152:153 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l119:s154:k187:d0:s0)		iTemp111 [k133 lr154:156 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp110 [k132 lr153:154 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l119:s155:k308:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l119:s156:k309:d0:s0)		send iTemp111 [k133 lr154:156 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l119:s157:k310:d0:s0)		iTemp112 [k134 lr157:158 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l119:s158:k189:d0:s0)		iTemp113 [k135 lr158:162 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp107 [k129 lr150:158 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp112 [k134 lr157:158 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l120:s159:k190:d0:s0)		iTemp114 [k136 lr159:160 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x5 {const-unsigned-char literal}
check.c(l120:s160:k191:d0:s0)		iTemp115 [k137 lr160:161 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp114 [k136 lr159:160 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l120:s161:k192:d0:s0)		iTemp116 [k138 lr161:162 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp115 [k137 lr160:161 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l120:s162:k193:d0:s0)		iTemp117 [k139 lr162:163 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = iTemp113 [k135 lr158:162 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp116 [k138 lr161:162 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ]
check.c(l120:s163:k194:d0:s0)		iTemp118 [k140 lr163:164 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp117 [k139 lr162:163 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l120:s164:k195:d0:s0)		iTemp119 [k141 lr164:165 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x04 r0x05 r0x06 r0x07 ] = (unsigned-long-int fixed)iTemp118 [k140 lr163:164 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]
check.c(l120:s165:k196:d0:s0)		*(iTemp90 [k112 lr127:165 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{unsigned-long-int near* fixed}[remat]) := iTemp119 [k141 lr164:165 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x04 r0x05 r0x06 r0x07 ]
check.c(l121:s166:k197:d0:s0)		 goto _swBrk_0($27)
check.c(l122:s167:k198:d0:s0)	 _case_0_54($21) :
check.c(l123:s168:k199:d0:s0)		iTemp120 [k143 lr168:169 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l123:s169:k200:d0:s0)		iTemp121 [k144 lr169:170 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp120 [k143 lr168:169 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l123:s170:k201:d0:s0)		iTemp122 [k145 lr170:171 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp121 [k144 lr169:170 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l123:s171:k202:d0:s0)		iTemp123 [k146 lr171:173 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp122 [k145 lr170:171 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l123:s172:k311:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l123:s173:k312:d0:s0)		send iTemp123 [k146 lr171:173 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l123:s174:k313:d0:s0)		iTemp124 [k147 lr174:182 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l123:s175:k204:d0:s0)		iTemp125 [k148 lr175:176 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l123:s176:k205:d0:s0)		iTemp126 [k149 lr176:177 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp125 [k148 lr175:176 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l123:s177:k206:d0:s0)		iTemp127 [k150 lr177:178 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp126 [k149 lr176:177 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l123:s178:k207:d0:s0)		iTemp128 [k151 lr178:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp127 [k150 lr177:178 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l123:s179:k314:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l123:s180:k315:d0:s0)		send iTemp128 [k151 lr178:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l123:s181:k316:d0:s0)		iTemp129 [k152 lr181:182 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l123:s182:k209:d0:s0)		iTemp130 [k153 lr182:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp124 [k147 lr174:182 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp129 [k152 lr181:182 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l124:s183:k210:d0:s0)		iTemp131 [k154 lr183:184 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l124:s184:k211:d0:s0)		iTemp132 [k155 lr184:185 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp131 [k154 lr183:184 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l124:s185:k212:d0:s0)		iTemp133 [k156 lr185:186 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp132 [k155 lr184:185 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l124:s186:k213:d0:s0)		iTemp134 [k157 lr186:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp133 [k156 lr185:186 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l124:s187:k214:d0:s0)		_sys_temp_min [k142 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed} = iTemp130 [k153 lr182:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp134 [k157 lr186:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l125:s188:k217:d0:s0)		 goto _swBrk_0($27)
check.c(l126:s189:k218:d0:s0)	 _case_0_55($22) :
check.c(l127:s190:k219:d0:s0)		iTemp137 [k161 lr190:191 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l127:s191:k220:d0:s0)		iTemp138 [k162 lr191:192 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp137 [k161 lr190:191 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l127:s192:k221:d0:s0)		iTemp139 [k163 lr192:193 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp138 [k162 lr191:192 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l127:s193:k222:d0:s0)		iTemp140 [k164 lr193:195 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp139 [k163 lr192:193 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l127:s194:k317:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l127:s195:k318:d0:s0)		send iTemp140 [k164 lr193:195 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l127:s196:k319:d0:s0)		iTemp141 [k165 lr196:204 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l127:s197:k224:d0:s0)		iTemp142 [k166 lr197:198 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l127:s198:k225:d0:s0)		iTemp143 [k167 lr198:199 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp142 [k166 lr197:198 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l127:s199:k226:d0:s0)		iTemp144 [k168 lr199:200 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp143 [k167 lr198:199 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l127:s200:k227:d0:s0)		iTemp145 [k169 lr200:202 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp144 [k168 lr199:200 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l127:s201:k320:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l127:s202:k321:d0:s0)		send iTemp145 [k169 lr200:202 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l127:s203:k322:d0:s0)		iTemp146 [k170 lr203:204 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l127:s204:k229:d0:s0)		iTemp147 [k171 lr204:209 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp141 [k165 lr196:204 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp146 [k170 lr203:204 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l128:s205:k230:d0:s0)		iTemp148 [k172 lr205:206 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l128:s206:k231:d0:s0)		iTemp149 [k173 lr206:207 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp148 [k172 lr205:206 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l128:s207:k232:d0:s0)		iTemp150 [k174 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp149 [k173 lr206:207 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l128:s208:k233:d0:s0)		iTemp151 [k175 lr208:209 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp150 [k174 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l128:s209:k234:d0:s0)		_sys_temp_max [k160 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed} = iTemp147 [k171 lr204:209 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp151 [k175 lr208:209 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l129:s210:k237:d0:s0)		 goto _swBrk_0($27)
check.c(l130:s211:k238:d0:s0)	 _case_0_56($23) :
check.c(l131:s212:k239:d0:s0)		iTemp154 [k179 lr212:213 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l131:s213:k240:d0:s0)		iTemp155 [k180 lr213:214 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp154 [k179 lr212:213 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l131:s214:k241:d0:s0)		iTemp156 [k181 lr214:215 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp155 [k180 lr213:214 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l131:s215:k242:d0:s0)		iTemp157 [k182 lr215:217 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp156 [k181 lr214:215 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l131:s216:k323:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l131:s217:k324:d0:s0)		send iTemp157 [k182 lr215:217 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l131:s218:k325:d0:s0)		iTemp158 [k183 lr218:226 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l131:s219:k244:d0:s0)		iTemp159 [k184 lr219:220 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l131:s220:k245:d0:s0)		iTemp160 [k185 lr220:221 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp159 [k184 lr219:220 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l131:s221:k246:d0:s0)		iTemp161 [k186 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp160 [k185 lr220:221 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l131:s222:k247:d0:s0)		iTemp162 [k187 lr222:224 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp161 [k186 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l131:s223:k326:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l131:s224:k327:d0:s0)		send iTemp162 [k187 lr222:224 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l131:s225:k328:d0:s0)		iTemp163 [k188 lr225:226 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l131:s226:k249:d0:s0)		iTemp164 [k189 lr226:231 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp158 [k183 lr218:226 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp163 [k188 lr225:226 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l132:s227:k250:d0:s0)		iTemp165 [k190 lr227:228 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l132:s228:k251:d0:s0)		iTemp166 [k191 lr228:229 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp165 [k190 lr227:228 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l132:s229:k252:d0:s0)		iTemp167 [k192 lr229:230 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp166 [k191 lr228:229 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l132:s230:k253:d0:s0)		iTemp168 [k193 lr230:231 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp167 [k192 lr229:230 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l132:s231:k254:d0:s0)		_sys_lumi_min [k178 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed} = iTemp164 [k189 lr226:231 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp168 [k193 lr230:231 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l133:s232:k257:d0:s0)		 goto _swBrk_0($27)
check.c(l134:s233:k258:d0:s0)	 _case_0_57($24) :
check.c(l135:s234:k259:d0:s0)		iTemp171 [k196 lr234:235 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l135:s235:k260:d0:s0)		iTemp172 [k197 lr235:236 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp171 [k196 lr234:235 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l135:s236:k261:d0:s0)		iTemp173 [k198 lr236:237 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp172 [k197 lr235:236 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l135:s237:k262:d0:s0)		iTemp174 [k199 lr237:239 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp173 [k198 lr236:237 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l135:s238:k329:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l135:s239:k330:d0:s0)		send iTemp174 [k199 lr237:239 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l135:s240:k331:d0:s0)		iTemp175 [k200 lr240:248 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l135:s241:k264:d0:s0)		iTemp176 [k201 lr241:242 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l135:s242:k265:d0:s0)		iTemp177 [k202 lr242:243 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp176 [k201 lr241:242 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l135:s243:k266:d0:s0)		iTemp178 [k203 lr243:244 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp177 [k202 lr242:243 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l135:s244:k267:d0:s0)		iTemp179 [k204 lr244:246 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp178 [k203 lr243:244 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l135:s245:k332:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l135:s246:k333:d0:s0)		send iTemp179 [k204 lr244:246 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l135:s247:k334:d0:s0)		iTemp180 [k205 lr247:248 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l135:s248:k269:d0:s0)		iTemp181 [k206 lr248:253 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp175 [k200 lr240:248 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp180 [k205 lr247:248 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l136:s249:k270:d0:s0)		iTemp182 [k207 lr249:250 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x00 r0x01 r0x02 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l136:s250:k271:d0:s0)		iTemp183 [k208 lr250:251 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x00 ] = @[iTemp182 [k207 lr249:250 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x00 r0x01 r0x02 ] + 0x0 {const-unsigned-char literal}]
check.c(l136:s251:k272:d0:s0)		iTemp184 [k209 lr251:252 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x00 r0x01 ] = (int fixed)iTemp183 [k208 lr250:251 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x00 ]
check.c(l136:s252:k273:d0:s0)		iTemp185 [k210 lr252:253 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x00 r0x01 ] = iTemp184 [k209 lr251:252 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x00 r0x01 ] - 0x30 {int literal}
check.c(l136:s253:k274:d0:s0)		_sys_temp_max [k160 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed} = iTemp181 [k206 lr248:253 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp185 [k210 lr252:253 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x00 r0x01 ]
check.c(l137:s254:k277:d0:s0)		 goto _swBrk_0($27)
check.c(l138:s255:k278:d0:s0)	 _case_0_82($25) :
check.c(l139:s256:k279:d0:s0)		iTemp1 [k4 lr4:258 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _check_comando_ret_1_74}[r0x03 ] := 0x0 {const-char literal}
check.c(l143:s257:k283:d0:s0)	 _swBrk_0($27) :
check.c(l145:s258:k284:d0:s0)		ret iTemp1 [k4 lr4:258 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _check_comando_ret_1_74}[r0x03 ]
check.c(l145:s259:k285:d0:s0)	 _return($32) :
check.c(l145:s260:k286:d0:s0)		eproc _check_comando [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char function ( char generic* fixed) fixed}

----------------------------------------------------------------
Basic Block _eBBlock46 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 32 : bbnum = 20 1st iCode = 88 , last iCode = 98
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 299 bSize = 38
Bits on { (103) (104) (108) (109) (112) }

local defines bitVector :bitvector Size = 299 bSize = 38
Bits on { (103) (104) (106) (107) (108) (109) (111) (112) }

pointers Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (54) (57) (62) (70) (78) (84) }

in pointers Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (54) (57) (62) (70) }

inDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (3) (5) (6) (8) (64) (65) (66) (68) (69) (74) (75) (76) (77) (81) (83) (90) (91) (92) (93) (97) (99) }

outDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (5) (6) (8) (64) (65) (66) (68) (69) (74) (75) (76) (77) (81) (83) (90) (91) (92) (93) (97) (99) (103) (104) (106) (107) (108) (109) (111) (112) }

usesDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (65) (68) (103) (104) (106) (107) (108) (109) (111) }

----------------------------------------------------------------
check.c(l100:s88:k103:d0:s0)		iTemp60 [k77 lr88:89 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] := iTemp39 [k53 lr60:88 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat]
check.c(l100:s89:k104:d0:s0)		iTemp61 [k78 lr89:90 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = (char generic* fixed)iTemp60 [k77 lr88:89 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat]
check.c(l100:s90:k105:d0:s0)		send iTemp61 [k78 lr89:90 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ]{argreg = 1}
check.c(l100:s91:k106:d0:s0)		iTemp62 [k80 lr91:91 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _print_lcd_string [k76 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char generic* fixed) fixed}
check.c(l101:s92:k107:d0:s0)		iTemp63 [k82 lr92:92 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _print_lcd_ln [k81 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( ) fixed}
check.c(l102:s93:k108:d0:s0)		iTemp64 [k83 lr93:94 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] := iTemp41 [k56 lr63:93 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat]
check.c(l102:s94:k109:d0:s0)		iTemp65 [k84 lr94:95 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = (char generic* fixed)iTemp64 [k83 lr93:94 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat]
check.c(l102:s95:k110:d0:s0)		send iTemp65 [k84 lr94:95 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ]{argreg = 1}
check.c(l102:s96:k111:d0:s0)		iTemp66 [k85 lr96:96 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _print_lcd_string [k76 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( char generic* fixed) fixed}
check.c(l103:s97:k112:d0:s0)		iTemp1 [k4 lr4:258 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _check_comando_ret_1_74}[r0x03 ] := 0x34 {const-unsigned-char literal}
check.c(l104:s98:k113:d0:s0)		 goto _swBrk_0($27)
check.c(l105:s99:k114:d0:s0)	 _case_0_51($8) :
check.c(l106:s100:k115:d0:s0)		iTemp67 [k86 lr100:101 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l106:s101:k116:d0:s0)		iTemp68 [k87 lr101:102 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp67 [k86 lr100:101 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l106:s102:k117:d0:s0)		iTemp69 [k88 lr102:103 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp68 [k87 lr101:102 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l106:s103:k118:d0:s0)		iTemp70 [k89 lr103:109 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp69 [k88 lr102:103 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l106:s104:k119:d0:s0)		iTemp71 [k90 lr104:105 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp70 [k89 lr103:109 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] == 0x1 {int literal}
check.c(l106:s105:k120:d0:s0)		if iTemp71 [k90 lr104:105 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} == 0 goto _iffalse_5($12)
check.c(l107:s106:k124:d0:s0)		_hab_alarme [k91 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed} := 0x1 {const-unsigned-char literal}
check.c(l107:s107:k125:d0:s0)		 goto _swBrk_0($27)
check.c(l107:s108:k126:d0:s0)	 _iffalse_5($12) :
check.c(l108:s109:k131:d0:s0)		if iTemp70 [k89 lr103:109 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] != 0 goto _swBrk_0($27)
check.c(l109:s110:k135:d0:s0)		_hab_alarme [k91 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed} := 0x0 {const-unsigned-char literal}
check.c(l110:s111:k138:d0:s0)		 goto _swBrk_0($27)
check.c(l111:s112:k139:d0:s0)	 _case_0_52($14) :
check.c(l112:s113:k140:d0:s0)		iTemp78 [k98 lr113:114 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l112:s114:k141:d0:s0)		iTemp79 [k99 lr114:115 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp78 [k98 lr113:114 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l112:s115:k142:d0:s0)		iTemp80 [k100 lr115:116 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp79 [k99 lr114:115 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l112:s116:k143:d0:s0)		iTemp81 [k101 lr116:122 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp80 [k100 lr115:116 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l112:s117:k144:d0:s0)		iTemp82 [k102 lr117:118 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp81 [k101 lr116:122 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] == 0x1 {int literal}
check.c(l112:s118:k145:d0:s0)		if iTemp82 [k102 lr117:118 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} == 0 goto _iffalse_7($18)
check.c(l113:s119:k149:d0:s0)		_hab_sensor [k103 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed} := 0x0 {const-unsigned-char literal}
check.c(l113:s120:k150:d0:s0)		 goto _swBrk_0($27)
check.c(l113:s121:k151:d0:s0)	 _iffalse_7($18) :
check.c(l114:s122:k156:d0:s0)		if iTemp81 [k101 lr116:122 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] != 0 goto _swBrk_0($27)
check.c(l115:s123:k160:d0:s0)		_hab_sensor [k103 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed} := 0x2 {const-unsigned-char literal}
check.c(l116:s124:k163:d0:s0)		 goto _swBrk_0($27)
check.c(l117:s125:k164:d0:s0)	 _case_0_53($20) :
check.c(l118:s126:k165:d0:s0)		iTemp89 [k111 lr126:127 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{unsigned-long-int near* fixed}[remat] = &[_sys_timer_pool [k110 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int [2] fixed}]
check.c(l118:s127:k166:d0:s0)		iTemp90 [k112 lr127:165 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{unsigned-long-int near* fixed}[remat] = iTemp89 [k111 lr126:127 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{unsigned-long-int near* fixed}[remat] + 0x4 {unsigned-char literal}
check.c(l118:s128:k167:d0:s0)		iTemp91 [k113 lr128:129 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l118:s129:k168:d0:s0)		iTemp92 [k114 lr129:130 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp91 [k113 lr128:129 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l118:s130:k169:d0:s0)		iTemp93 [k115 lr130:131 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp92 [k114 lr129:130 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l118:s131:k170:d0:s0)		iTemp94 [k116 lr131:133 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp93 [k115 lr130:131 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l118:s132:k299:d0:s0)		send 0x2710 {const-int literal}{argreg = 1}
check.c(l118:s133:k300:d0:s0)		send iTemp94 [k116 lr131:133 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l118:s134:k301:d0:s0)		iTemp95 [k117 lr134:142 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l118:s135:k172:d0:s0)		iTemp96 [k118 lr135:136 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l118:s136:k173:d0:s0)		iTemp97 [k119 lr136:137 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp96 [k118 lr135:136 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l118:s137:k174:d0:s0)		iTemp98 [k120 lr137:138 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp97 [k119 lr136:137 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l118:s138:k175:d0:s0)		iTemp99 [k121 lr138:140 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp98 [k120 lr137:138 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l118:s139:k302:d0:s0)		send 0x3e8 {const-int literal}{argreg = 1}
check.c(l118:s140:k303:d0:s0)		send iTemp99 [k121 lr138:140 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l118:s141:k304:d0:s0)		iTemp100 [k122 lr141:142 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l118:s142:k177:d0:s0)		iTemp101 [k123 lr142:150 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp95 [k117 lr134:142 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp100 [k122 lr141:142 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l119:s143:k178:d0:s0)		iTemp102 [k124 lr143:144 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l119:s144:k179:d0:s0)		iTemp103 [k125 lr144:145 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp102 [k124 lr143:144 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l119:s145:k180:d0:s0)		iTemp104 [k126 lr145:146 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp103 [k125 lr144:145 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l119:s146:k181:d0:s0)		iTemp105 [k127 lr146:148 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp104 [k126 lr145:146 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l119:s147:k305:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l119:s148:k306:d0:s0)		send iTemp105 [k127 lr146:148 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l119:s149:k307:d0:s0)		iTemp106 [k128 lr149:150 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l119:s150:k183:d0:s0)		iTemp107 [k129 lr150:158 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp101 [k123 lr142:150 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp106 [k128 lr149:150 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l119:s151:k184:d0:s0)		iTemp108 [k130 lr151:152 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x4 {const-unsigned-char literal}
check.c(l119:s152:k185:d0:s0)		iTemp109 [k131 lr152:153 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp108 [k130 lr151:152 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l119:s153:k186:d0:s0)		iTemp110 [k132 lr153:154 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp109 [k131 lr152:153 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l119:s154:k187:d0:s0)		iTemp111 [k133 lr154:156 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp110 [k132 lr153:154 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l119:s155:k308:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l119:s156:k309:d0:s0)		send iTemp111 [k133 lr154:156 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l119:s157:k310:d0:s0)		iTemp112 [k134 lr157:158 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l119:s158:k189:d0:s0)		iTemp113 [k135 lr158:162 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp107 [k129 lr150:158 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp112 [k134 lr157:158 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l120:s159:k190:d0:s0)		iTemp114 [k136 lr159:160 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x5 {const-unsigned-char literal}
check.c(l120:s160:k191:d0:s0)		iTemp115 [k137 lr160:161 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp114 [k136 lr159:160 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l120:s161:k192:d0:s0)		iTemp116 [k138 lr161:162 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp115 [k137 lr160:161 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l120:s162:k193:d0:s0)		iTemp117 [k139 lr162:163 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = iTemp113 [k135 lr158:162 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp116 [k138 lr161:162 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ]
check.c(l120:s163:k194:d0:s0)		iTemp118 [k140 lr163:164 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp117 [k139 lr162:163 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l120:s164:k195:d0:s0)		iTemp119 [k141 lr164:165 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x04 r0x05 r0x06 r0x07 ] = (unsigned-long-int fixed)iTemp118 [k140 lr163:164 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]
check.c(l120:s165:k196:d0:s0)		*(iTemp90 [k112 lr127:165 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{unsigned-long-int near* fixed}[remat]) := iTemp119 [k141 lr164:165 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x04 r0x05 r0x06 r0x07 ]
check.c(l121:s166:k197:d0:s0)		 goto _swBrk_0($27)
check.c(l122:s167:k198:d0:s0)	 _case_0_54($21) :
check.c(l123:s168:k199:d0:s0)		iTemp120 [k143 lr168:169 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l123:s169:k200:d0:s0)		iTemp121 [k144 lr169:170 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp120 [k143 lr168:169 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l123:s170:k201:d0:s0)		iTemp122 [k145 lr170:171 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp121 [k144 lr169:170 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l123:s171:k202:d0:s0)		iTemp123 [k146 lr171:173 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp122 [k145 lr170:171 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l123:s172:k311:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l123:s173:k312:d0:s0)		send iTemp123 [k146 lr171:173 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l123:s174:k313:d0:s0)		iTemp124 [k147 lr174:182 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l123:s175:k204:d0:s0)		iTemp125 [k148 lr175:176 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l123:s176:k205:d0:s0)		iTemp126 [k149 lr176:177 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp125 [k148 lr175:176 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l123:s177:k206:d0:s0)		iTemp127 [k150 lr177:178 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp126 [k149 lr176:177 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l123:s178:k207:d0:s0)		iTemp128 [k151 lr178:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp127 [k150 lr177:178 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l123:s179:k314:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l123:s180:k315:d0:s0)		send iTemp128 [k151 lr178:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l123:s181:k316:d0:s0)		iTemp129 [k152 lr181:182 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l123:s182:k209:d0:s0)		iTemp130 [k153 lr182:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp124 [k147 lr174:182 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp129 [k152 lr181:182 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l124:s183:k210:d0:s0)		iTemp131 [k154 lr183:184 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l124:s184:k211:d0:s0)		iTemp132 [k155 lr184:185 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp131 [k154 lr183:184 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l124:s185:k212:d0:s0)		iTemp133 [k156 lr185:186 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp132 [k155 lr184:185 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l124:s186:k213:d0:s0)		iTemp134 [k157 lr186:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp133 [k156 lr185:186 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l124:s187:k214:d0:s0)		_sys_temp_min [k142 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed} = iTemp130 [k153 lr182:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp134 [k157 lr186:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l125:s188:k217:d0:s0)		 goto _swBrk_0($27)
check.c(l126:s189:k218:d0:s0)	 _case_0_55($22) :
check.c(l127:s190:k219:d0:s0)		iTemp137 [k161 lr190:191 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l127:s191:k220:d0:s0)		iTemp138 [k162 lr191:192 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp137 [k161 lr190:191 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l127:s192:k221:d0:s0)		iTemp139 [k163 lr192:193 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp138 [k162 lr191:192 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l127:s193:k222:d0:s0)		iTemp140 [k164 lr193:195 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp139 [k163 lr192:193 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l127:s194:k317:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l127:s195:k318:d0:s0)		send iTemp140 [k164 lr193:195 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l127:s196:k319:d0:s0)		iTemp141 [k165 lr196:204 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l127:s197:k224:d0:s0)		iTemp142 [k166 lr197:198 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l127:s198:k225:d0:s0)		iTemp143 [k167 lr198:199 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp142 [k166 lr197:198 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l127:s199:k226:d0:s0)		iTemp144 [k168 lr199:200 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp143 [k167 lr198:199 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l127:s200:k227:d0:s0)		iTemp145 [k169 lr200:202 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp144 [k168 lr199:200 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l127:s201:k320:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l127:s202:k321:d0:s0)		send iTemp145 [k169 lr200:202 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l127:s203:k322:d0:s0)		iTemp146 [k170 lr203:204 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l127:s204:k229:d0:s0)		iTemp147 [k171 lr204:209 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp141 [k165 lr196:204 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp146 [k170 lr203:204 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l128:s205:k230:d0:s0)		iTemp148 [k172 lr205:206 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l128:s206:k231:d0:s0)		iTemp149 [k173 lr206:207 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp148 [k172 lr205:206 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l128:s207:k232:d0:s0)		iTemp150 [k174 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp149 [k173 lr206:207 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l128:s208:k233:d0:s0)		iTemp151 [k175 lr208:209 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp150 [k174 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l128:s209:k234:d0:s0)		_sys_temp_max [k160 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed} = iTemp147 [k171 lr204:209 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp151 [k175 lr208:209 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l129:s210:k237:d0:s0)		 goto _swBrk_0($27)
check.c(l130:s211:k238:d0:s0)	 _case_0_56($23) :
check.c(l131:s212:k239:d0:s0)		iTemp154 [k179 lr212:213 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l131:s213:k240:d0:s0)		iTemp155 [k180 lr213:214 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp154 [k179 lr212:213 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l131:s214:k241:d0:s0)		iTemp156 [k181 lr214:215 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp155 [k180 lr213:214 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l131:s215:k242:d0:s0)		iTemp157 [k182 lr215:217 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp156 [k181 lr214:215 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l131:s216:k323:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l131:s217:k324:d0:s0)		send iTemp157 [k182 lr215:217 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l131:s218:k325:d0:s0)		iTemp158 [k183 lr218:226 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l131:s219:k244:d0:s0)		iTemp159 [k184 lr219:220 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l131:s220:k245:d0:s0)		iTemp160 [k185 lr220:221 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp159 [k184 lr219:220 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l131:s221:k246:d0:s0)		iTemp161 [k186 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp160 [k185 lr220:221 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l131:s222:k247:d0:s0)		iTemp162 [k187 lr222:224 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp161 [k186 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l131:s223:k326:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l131:s224:k327:d0:s0)		send iTemp162 [k187 lr222:224 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l131:s225:k328:d0:s0)		iTemp163 [k188 lr225:226 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l131:s226:k249:d0:s0)		iTemp164 [k189 lr226:231 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp158 [k183 lr218:226 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp163 [k188 lr225:226 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l132:s227:k250:d0:s0)		iTemp165 [k190 lr227:228 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l132:s228:k251:d0:s0)		iTemp166 [k191 lr228:229 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp165 [k190 lr227:228 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l132:s229:k252:d0:s0)		iTemp167 [k192 lr229:230 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp166 [k191 lr228:229 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l132:s230:k253:d0:s0)		iTemp168 [k193 lr230:231 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp167 [k192 lr229:230 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l132:s231:k254:d0:s0)		_sys_lumi_min [k178 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed} = iTemp164 [k189 lr226:231 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp168 [k193 lr230:231 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l133:s232:k257:d0:s0)		 goto _swBrk_0($27)
check.c(l134:s233:k258:d0:s0)	 _case_0_57($24) :
check.c(l135:s234:k259:d0:s0)		iTemp171 [k196 lr234:235 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l135:s235:k260:d0:s0)		iTemp172 [k197 lr235:236 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp171 [k196 lr234:235 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l135:s236:k261:d0:s0)		iTemp173 [k198 lr236:237 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp172 [k197 lr235:236 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l135:s237:k262:d0:s0)		iTemp174 [k199 lr237:239 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp173 [k198 lr236:237 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l135:s238:k329:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l135:s239:k330:d0:s0)		send iTemp174 [k199 lr237:239 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l135:s240:k331:d0:s0)		iTemp175 [k200 lr240:248 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l135:s241:k264:d0:s0)		iTemp176 [k201 lr241:242 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l135:s242:k265:d0:s0)		iTemp177 [k202 lr242:243 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp176 [k201 lr241:242 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l135:s243:k266:d0:s0)		iTemp178 [k203 lr243:244 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp177 [k202 lr242:243 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l135:s244:k267:d0:s0)		iTemp179 [k204 lr244:246 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp178 [k203 lr243:244 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l135:s245:k332:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l135:s246:k333:d0:s0)		send iTemp179 [k204 lr244:246 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l135:s247:k334:d0:s0)		iTemp180 [k205 lr247:248 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l135:s248:k269:d0:s0)		iTemp181 [k206 lr248:253 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp175 [k200 lr240:248 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp180 [k205 lr247:248 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l136:s249:k270:d0:s0)		iTemp182 [k207 lr249:250 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x00 r0x01 r0x02 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l136:s250:k271:d0:s0)		iTemp183 [k208 lr250:251 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x00 ] = @[iTemp182 [k207 lr249:250 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x00 r0x01 r0x02 ] + 0x0 {const-unsigned-char literal}]
check.c(l136:s251:k272:d0:s0)		iTemp184 [k209 lr251:252 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x00 r0x01 ] = (int fixed)iTemp183 [k208 lr250:251 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x00 ]
check.c(l136:s252:k273:d0:s0)		iTemp185 [k210 lr252:253 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x00 r0x01 ] = iTemp184 [k209 lr251:252 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x00 r0x01 ] - 0x30 {int literal}
check.c(l136:s253:k274:d0:s0)		_sys_temp_max [k160 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed} = iTemp181 [k206 lr248:253 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp185 [k210 lr252:253 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x00 r0x01 ]
check.c(l137:s254:k277:d0:s0)		 goto _swBrk_0($27)
check.c(l138:s255:k278:d0:s0)	 _case_0_82($25) :
check.c(l139:s256:k279:d0:s0)		iTemp1 [k4 lr4:258 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _check_comando_ret_1_74}[r0x03 ] := 0x0 {const-char literal}
check.c(l143:s257:k283:d0:s0)	 _swBrk_0($27) :
check.c(l145:s258:k284:d0:s0)		ret iTemp1 [k4 lr4:258 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _check_comando_ret_1_74}[r0x03 ]
check.c(l145:s259:k285:d0:s0)	 _return($32) :
check.c(l145:s260:k286:d0:s0)		eproc _check_comando [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char function ( char generic* fixed) fixed}

----------------------------------------------------------------
Basic Block _case_0_51 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 22 : bbnum = 21 1st iCode = 99 , last iCode = 105
visited 0 : hasFcall = 0

defines bitVector :bitvector Size = 299 bSize = 38
Bits on { (115) (116) (117) (118) (119) }

local defines bitVector :bitvector Size = 299 bSize = 38
Bits on { (115) (116) (117) (118) (119) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (3) (5) (6) (8) (10) }

outDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (3) (5) (6) (8) (10) (115) (116) (117) (118) (119) }

usesDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (115) (116) (117) (118) (119) }

----------------------------------------------------------------
check.c(l105:s99:k114:d0:s0)	 _case_0_51($8) :
check.c(l106:s100:k115:d0:s0)		iTemp67 [k86 lr100:101 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l106:s101:k116:d0:s0)		iTemp68 [k87 lr101:102 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp67 [k86 lr100:101 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l106:s102:k117:d0:s0)		iTemp69 [k88 lr102:103 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp68 [k87 lr101:102 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l106:s103:k118:d0:s0)		iTemp70 [k89 lr103:109 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp69 [k88 lr102:103 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l106:s104:k119:d0:s0)		iTemp71 [k90 lr104:105 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp70 [k89 lr103:109 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] == 0x1 {int literal}
check.c(l106:s105:k120:d0:s0)		if iTemp71 [k90 lr104:105 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} == 0 goto _iffalse_5($12)
check.c(l107:s106:k124:d0:s0)		_hab_alarme [k91 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed} := 0x1 {const-unsigned-char literal}
check.c(l107:s107:k125:d0:s0)		 goto _swBrk_0($27)
check.c(l107:s108:k126:d0:s0)	 _iffalse_5($12) :
check.c(l108:s109:k131:d0:s0)		if iTemp70 [k89 lr103:109 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] != 0 goto _swBrk_0($27)
check.c(l109:s110:k135:d0:s0)		_hab_alarme [k91 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed} := 0x0 {const-unsigned-char literal}
check.c(l110:s111:k138:d0:s0)		 goto _swBrk_0($27)
check.c(l111:s112:k139:d0:s0)	 _case_0_52($14) :
check.c(l112:s113:k140:d0:s0)		iTemp78 [k98 lr113:114 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l112:s114:k141:d0:s0)		iTemp79 [k99 lr114:115 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp78 [k98 lr113:114 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l112:s115:k142:d0:s0)		iTemp80 [k100 lr115:116 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp79 [k99 lr114:115 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l112:s116:k143:d0:s0)		iTemp81 [k101 lr116:122 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp80 [k100 lr115:116 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l112:s117:k144:d0:s0)		iTemp82 [k102 lr117:118 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp81 [k101 lr116:122 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] == 0x1 {int literal}
check.c(l112:s118:k145:d0:s0)		if iTemp82 [k102 lr117:118 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} == 0 goto _iffalse_7($18)
check.c(l113:s119:k149:d0:s0)		_hab_sensor [k103 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed} := 0x0 {const-unsigned-char literal}
check.c(l113:s120:k150:d0:s0)		 goto _swBrk_0($27)
check.c(l113:s121:k151:d0:s0)	 _iffalse_7($18) :
check.c(l114:s122:k156:d0:s0)		if iTemp81 [k101 lr116:122 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] != 0 goto _swBrk_0($27)
check.c(l115:s123:k160:d0:s0)		_hab_sensor [k103 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed} := 0x2 {const-unsigned-char literal}
check.c(l116:s124:k163:d0:s0)		 goto _swBrk_0($27)
check.c(l117:s125:k164:d0:s0)	 _case_0_53($20) :
check.c(l118:s126:k165:d0:s0)		iTemp89 [k111 lr126:127 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{unsigned-long-int near* fixed}[remat] = &[_sys_timer_pool [k110 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int [2] fixed}]
check.c(l118:s127:k166:d0:s0)		iTemp90 [k112 lr127:165 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{unsigned-long-int near* fixed}[remat] = iTemp89 [k111 lr126:127 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{unsigned-long-int near* fixed}[remat] + 0x4 {unsigned-char literal}
check.c(l118:s128:k167:d0:s0)		iTemp91 [k113 lr128:129 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l118:s129:k168:d0:s0)		iTemp92 [k114 lr129:130 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp91 [k113 lr128:129 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l118:s130:k169:d0:s0)		iTemp93 [k115 lr130:131 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp92 [k114 lr129:130 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l118:s131:k170:d0:s0)		iTemp94 [k116 lr131:133 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp93 [k115 lr130:131 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l118:s132:k299:d0:s0)		send 0x2710 {const-int literal}{argreg = 1}
check.c(l118:s133:k300:d0:s0)		send iTemp94 [k116 lr131:133 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l118:s134:k301:d0:s0)		iTemp95 [k117 lr134:142 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l118:s135:k172:d0:s0)		iTemp96 [k118 lr135:136 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l118:s136:k173:d0:s0)		iTemp97 [k119 lr136:137 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp96 [k118 lr135:136 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l118:s137:k174:d0:s0)		iTemp98 [k120 lr137:138 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp97 [k119 lr136:137 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l118:s138:k175:d0:s0)		iTemp99 [k121 lr138:140 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp98 [k120 lr137:138 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l118:s139:k302:d0:s0)		send 0x3e8 {const-int literal}{argreg = 1}
check.c(l118:s140:k303:d0:s0)		send iTemp99 [k121 lr138:140 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l118:s141:k304:d0:s0)		iTemp100 [k122 lr141:142 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l118:s142:k177:d0:s0)		iTemp101 [k123 lr142:150 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp95 [k117 lr134:142 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp100 [k122 lr141:142 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l119:s143:k178:d0:s0)		iTemp102 [k124 lr143:144 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l119:s144:k179:d0:s0)		iTemp103 [k125 lr144:145 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp102 [k124 lr143:144 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l119:s145:k180:d0:s0)		iTemp104 [k126 lr145:146 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp103 [k125 lr144:145 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l119:s146:k181:d0:s0)		iTemp105 [k127 lr146:148 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp104 [k126 lr145:146 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l119:s147:k305:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l119:s148:k306:d0:s0)		send iTemp105 [k127 lr146:148 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l119:s149:k307:d0:s0)		iTemp106 [k128 lr149:150 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l119:s150:k183:d0:s0)		iTemp107 [k129 lr150:158 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp101 [k123 lr142:150 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp106 [k128 lr149:150 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l119:s151:k184:d0:s0)		iTemp108 [k130 lr151:152 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x4 {const-unsigned-char literal}
check.c(l119:s152:k185:d0:s0)		iTemp109 [k131 lr152:153 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp108 [k130 lr151:152 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l119:s153:k186:d0:s0)		iTemp110 [k132 lr153:154 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp109 [k131 lr152:153 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l119:s154:k187:d0:s0)		iTemp111 [k133 lr154:156 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp110 [k132 lr153:154 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l119:s155:k308:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l119:s156:k309:d0:s0)		send iTemp111 [k133 lr154:156 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l119:s157:k310:d0:s0)		iTemp112 [k134 lr157:158 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l119:s158:k189:d0:s0)		iTemp113 [k135 lr158:162 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp107 [k129 lr150:158 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp112 [k134 lr157:158 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l120:s159:k190:d0:s0)		iTemp114 [k136 lr159:160 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x5 {const-unsigned-char literal}
check.c(l120:s160:k191:d0:s0)		iTemp115 [k137 lr160:161 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp114 [k136 lr159:160 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l120:s161:k192:d0:s0)		iTemp116 [k138 lr161:162 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp115 [k137 lr160:161 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l120:s162:k193:d0:s0)		iTemp117 [k139 lr162:163 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = iTemp113 [k135 lr158:162 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp116 [k138 lr161:162 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ]
check.c(l120:s163:k194:d0:s0)		iTemp118 [k140 lr163:164 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp117 [k139 lr162:163 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l120:s164:k195:d0:s0)		iTemp119 [k141 lr164:165 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x04 r0x05 r0x06 r0x07 ] = (unsigned-long-int fixed)iTemp118 [k140 lr163:164 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]
check.c(l120:s165:k196:d0:s0)		*(iTemp90 [k112 lr127:165 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{unsigned-long-int near* fixed}[remat]) := iTemp119 [k141 lr164:165 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x04 r0x05 r0x06 r0x07 ]
check.c(l121:s166:k197:d0:s0)		 goto _swBrk_0($27)
check.c(l122:s167:k198:d0:s0)	 _case_0_54($21) :
check.c(l123:s168:k199:d0:s0)		iTemp120 [k143 lr168:169 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l123:s169:k200:d0:s0)		iTemp121 [k144 lr169:170 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp120 [k143 lr168:169 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l123:s170:k201:d0:s0)		iTemp122 [k145 lr170:171 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp121 [k144 lr169:170 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l123:s171:k202:d0:s0)		iTemp123 [k146 lr171:173 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp122 [k145 lr170:171 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l123:s172:k311:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l123:s173:k312:d0:s0)		send iTemp123 [k146 lr171:173 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l123:s174:k313:d0:s0)		iTemp124 [k147 lr174:182 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l123:s175:k204:d0:s0)		iTemp125 [k148 lr175:176 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l123:s176:k205:d0:s0)		iTemp126 [k149 lr176:177 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp125 [k148 lr175:176 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l123:s177:k206:d0:s0)		iTemp127 [k150 lr177:178 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp126 [k149 lr176:177 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l123:s178:k207:d0:s0)		iTemp128 [k151 lr178:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp127 [k150 lr177:178 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l123:s179:k314:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l123:s180:k315:d0:s0)		send iTemp128 [k151 lr178:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l123:s181:k316:d0:s0)		iTemp129 [k152 lr181:182 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l123:s182:k209:d0:s0)		iTemp130 [k153 lr182:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp124 [k147 lr174:182 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp129 [k152 lr181:182 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l124:s183:k210:d0:s0)		iTemp131 [k154 lr183:184 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l124:s184:k211:d0:s0)		iTemp132 [k155 lr184:185 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp131 [k154 lr183:184 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l124:s185:k212:d0:s0)		iTemp133 [k156 lr185:186 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp132 [k155 lr184:185 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l124:s186:k213:d0:s0)		iTemp134 [k157 lr186:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp133 [k156 lr185:186 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l124:s187:k214:d0:s0)		_sys_temp_min [k142 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed} = iTemp130 [k153 lr182:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp134 [k157 lr186:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l125:s188:k217:d0:s0)		 goto _swBrk_0($27)
check.c(l126:s189:k218:d0:s0)	 _case_0_55($22) :
check.c(l127:s190:k219:d0:s0)		iTemp137 [k161 lr190:191 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l127:s191:k220:d0:s0)		iTemp138 [k162 lr191:192 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp137 [k161 lr190:191 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l127:s192:k221:d0:s0)		iTemp139 [k163 lr192:193 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp138 [k162 lr191:192 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l127:s193:k222:d0:s0)		iTemp140 [k164 lr193:195 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp139 [k163 lr192:193 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l127:s194:k317:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l127:s195:k318:d0:s0)		send iTemp140 [k164 lr193:195 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l127:s196:k319:d0:s0)		iTemp141 [k165 lr196:204 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l127:s197:k224:d0:s0)		iTemp142 [k166 lr197:198 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l127:s198:k225:d0:s0)		iTemp143 [k167 lr198:199 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp142 [k166 lr197:198 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l127:s199:k226:d0:s0)		iTemp144 [k168 lr199:200 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp143 [k167 lr198:199 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l127:s200:k227:d0:s0)		iTemp145 [k169 lr200:202 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp144 [k168 lr199:200 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l127:s201:k320:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l127:s202:k321:d0:s0)		send iTemp145 [k169 lr200:202 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l127:s203:k322:d0:s0)		iTemp146 [k170 lr203:204 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l127:s204:k229:d0:s0)		iTemp147 [k171 lr204:209 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp141 [k165 lr196:204 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp146 [k170 lr203:204 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l128:s205:k230:d0:s0)		iTemp148 [k172 lr205:206 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l128:s206:k231:d0:s0)		iTemp149 [k173 lr206:207 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp148 [k172 lr205:206 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l128:s207:k232:d0:s0)		iTemp150 [k174 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp149 [k173 lr206:207 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l128:s208:k233:d0:s0)		iTemp151 [k175 lr208:209 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp150 [k174 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l128:s209:k234:d0:s0)		_sys_temp_max [k160 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed} = iTemp147 [k171 lr204:209 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp151 [k175 lr208:209 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l129:s210:k237:d0:s0)		 goto _swBrk_0($27)
check.c(l130:s211:k238:d0:s0)	 _case_0_56($23) :
check.c(l131:s212:k239:d0:s0)		iTemp154 [k179 lr212:213 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l131:s213:k240:d0:s0)		iTemp155 [k180 lr213:214 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp154 [k179 lr212:213 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l131:s214:k241:d0:s0)		iTemp156 [k181 lr214:215 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp155 [k180 lr213:214 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l131:s215:k242:d0:s0)		iTemp157 [k182 lr215:217 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp156 [k181 lr214:215 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l131:s216:k323:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l131:s217:k324:d0:s0)		send iTemp157 [k182 lr215:217 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l131:s218:k325:d0:s0)		iTemp158 [k183 lr218:226 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l131:s219:k244:d0:s0)		iTemp159 [k184 lr219:220 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l131:s220:k245:d0:s0)		iTemp160 [k185 lr220:221 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp159 [k184 lr219:220 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l131:s221:k246:d0:s0)		iTemp161 [k186 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp160 [k185 lr220:221 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l131:s222:k247:d0:s0)		iTemp162 [k187 lr222:224 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp161 [k186 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l131:s223:k326:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l131:s224:k327:d0:s0)		send iTemp162 [k187 lr222:224 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l131:s225:k328:d0:s0)		iTemp163 [k188 lr225:226 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l131:s226:k249:d0:s0)		iTemp164 [k189 lr226:231 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp158 [k183 lr218:226 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp163 [k188 lr225:226 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l132:s227:k250:d0:s0)		iTemp165 [k190 lr227:228 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l132:s228:k251:d0:s0)		iTemp166 [k191 lr228:229 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp165 [k190 lr227:228 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l132:s229:k252:d0:s0)		iTemp167 [k192 lr229:230 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp166 [k191 lr228:229 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l132:s230:k253:d0:s0)		iTemp168 [k193 lr230:231 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp167 [k192 lr229:230 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l132:s231:k254:d0:s0)		_sys_lumi_min [k178 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed} = iTemp164 [k189 lr226:231 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp168 [k193 lr230:231 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l133:s232:k257:d0:s0)		 goto _swBrk_0($27)
check.c(l134:s233:k258:d0:s0)	 _case_0_57($24) :
check.c(l135:s234:k259:d0:s0)		iTemp171 [k196 lr234:235 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l135:s235:k260:d0:s0)		iTemp172 [k197 lr235:236 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp171 [k196 lr234:235 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l135:s236:k261:d0:s0)		iTemp173 [k198 lr236:237 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp172 [k197 lr235:236 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l135:s237:k262:d0:s0)		iTemp174 [k199 lr237:239 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp173 [k198 lr236:237 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l135:s238:k329:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l135:s239:k330:d0:s0)		send iTemp174 [k199 lr237:239 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l135:s240:k331:d0:s0)		iTemp175 [k200 lr240:248 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l135:s241:k264:d0:s0)		iTemp176 [k201 lr241:242 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l135:s242:k265:d0:s0)		iTemp177 [k202 lr242:243 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp176 [k201 lr241:242 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l135:s243:k266:d0:s0)		iTemp178 [k203 lr243:244 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp177 [k202 lr242:243 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l135:s244:k267:d0:s0)		iTemp179 [k204 lr244:246 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp178 [k203 lr243:244 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l135:s245:k332:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l135:s246:k333:d0:s0)		send iTemp179 [k204 lr244:246 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l135:s247:k334:d0:s0)		iTemp180 [k205 lr247:248 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l135:s248:k269:d0:s0)		iTemp181 [k206 lr248:253 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp175 [k200 lr240:248 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp180 [k205 lr247:248 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l136:s249:k270:d0:s0)		iTemp182 [k207 lr249:250 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x00 r0x01 r0x02 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l136:s250:k271:d0:s0)		iTemp183 [k208 lr250:251 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x00 ] = @[iTemp182 [k207 lr249:250 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x00 r0x01 r0x02 ] + 0x0 {const-unsigned-char literal}]
check.c(l136:s251:k272:d0:s0)		iTemp184 [k209 lr251:252 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x00 r0x01 ] = (int fixed)iTemp183 [k208 lr250:251 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x00 ]
check.c(l136:s252:k273:d0:s0)		iTemp185 [k210 lr252:253 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x00 r0x01 ] = iTemp184 [k209 lr251:252 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x00 r0x01 ] - 0x30 {int literal}
check.c(l136:s253:k274:d0:s0)		_sys_temp_max [k160 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed} = iTemp181 [k206 lr248:253 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp185 [k210 lr252:253 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x00 r0x01 ]
check.c(l137:s254:k277:d0:s0)		 goto _swBrk_0($27)
check.c(l138:s255:k278:d0:s0)	 _case_0_82($25) :
check.c(l139:s256:k279:d0:s0)		iTemp1 [k4 lr4:258 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _check_comando_ret_1_74}[r0x03 ] := 0x0 {const-char literal}
check.c(l143:s257:k283:d0:s0)	 _swBrk_0($27) :
check.c(l145:s258:k284:d0:s0)		ret iTemp1 [k4 lr4:258 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _check_comando_ret_1_74}[r0x03 ]
check.c(l145:s259:k285:d0:s0)	 _return($32) :
check.c(l145:s260:k286:d0:s0)		eproc _check_comando [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char function ( char generic* fixed) fixed}

----------------------------------------------------------------
Basic Block _eBBlock47 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 23 : bbnum = 22 1st iCode = 106 , last iCode = 107
visited 0 : hasFcall = 0

defines bitVector :bitvector Size = 299 bSize = 38
Bits on { (124) }

local defines bitVector :bitvector Size = 299 bSize = 38
Bits on { (124) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (3) (5) (6) (8) (10) (115) (116) (117) (118) (119) }

outDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (3) (5) (6) (8) (10) (115) (116) (117) (118) (119) (124) }

usesDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { }

----------------------------------------------------------------
check.c(l107:s106:k124:d0:s0)		_hab_alarme [k91 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed} := 0x1 {const-unsigned-char literal}
check.c(l107:s107:k125:d0:s0)		 goto _swBrk_0($27)
check.c(l107:s108:k126:d0:s0)	 _iffalse_5($12) :
check.c(l108:s109:k131:d0:s0)		if iTemp70 [k89 lr103:109 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] != 0 goto _swBrk_0($27)
check.c(l109:s110:k135:d0:s0)		_hab_alarme [k91 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed} := 0x0 {const-unsigned-char literal}
check.c(l110:s111:k138:d0:s0)		 goto _swBrk_0($27)
check.c(l111:s112:k139:d0:s0)	 _case_0_52($14) :
check.c(l112:s113:k140:d0:s0)		iTemp78 [k98 lr113:114 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l112:s114:k141:d0:s0)		iTemp79 [k99 lr114:115 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp78 [k98 lr113:114 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l112:s115:k142:d0:s0)		iTemp80 [k100 lr115:116 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp79 [k99 lr114:115 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l112:s116:k143:d0:s0)		iTemp81 [k101 lr116:122 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp80 [k100 lr115:116 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l112:s117:k144:d0:s0)		iTemp82 [k102 lr117:118 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp81 [k101 lr116:122 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] == 0x1 {int literal}
check.c(l112:s118:k145:d0:s0)		if iTemp82 [k102 lr117:118 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} == 0 goto _iffalse_7($18)
check.c(l113:s119:k149:d0:s0)		_hab_sensor [k103 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed} := 0x0 {const-unsigned-char literal}
check.c(l113:s120:k150:d0:s0)		 goto _swBrk_0($27)
check.c(l113:s121:k151:d0:s0)	 _iffalse_7($18) :
check.c(l114:s122:k156:d0:s0)		if iTemp81 [k101 lr116:122 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] != 0 goto _swBrk_0($27)
check.c(l115:s123:k160:d0:s0)		_hab_sensor [k103 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed} := 0x2 {const-unsigned-char literal}
check.c(l116:s124:k163:d0:s0)		 goto _swBrk_0($27)
check.c(l117:s125:k164:d0:s0)	 _case_0_53($20) :
check.c(l118:s126:k165:d0:s0)		iTemp89 [k111 lr126:127 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{unsigned-long-int near* fixed}[remat] = &[_sys_timer_pool [k110 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int [2] fixed}]
check.c(l118:s127:k166:d0:s0)		iTemp90 [k112 lr127:165 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{unsigned-long-int near* fixed}[remat] = iTemp89 [k111 lr126:127 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{unsigned-long-int near* fixed}[remat] + 0x4 {unsigned-char literal}
check.c(l118:s128:k167:d0:s0)		iTemp91 [k113 lr128:129 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l118:s129:k168:d0:s0)		iTemp92 [k114 lr129:130 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp91 [k113 lr128:129 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l118:s130:k169:d0:s0)		iTemp93 [k115 lr130:131 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp92 [k114 lr129:130 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l118:s131:k170:d0:s0)		iTemp94 [k116 lr131:133 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp93 [k115 lr130:131 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l118:s132:k299:d0:s0)		send 0x2710 {const-int literal}{argreg = 1}
check.c(l118:s133:k300:d0:s0)		send iTemp94 [k116 lr131:133 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l118:s134:k301:d0:s0)		iTemp95 [k117 lr134:142 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l118:s135:k172:d0:s0)		iTemp96 [k118 lr135:136 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l118:s136:k173:d0:s0)		iTemp97 [k119 lr136:137 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp96 [k118 lr135:136 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l118:s137:k174:d0:s0)		iTemp98 [k120 lr137:138 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp97 [k119 lr136:137 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l118:s138:k175:d0:s0)		iTemp99 [k121 lr138:140 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp98 [k120 lr137:138 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l118:s139:k302:d0:s0)		send 0x3e8 {const-int literal}{argreg = 1}
check.c(l118:s140:k303:d0:s0)		send iTemp99 [k121 lr138:140 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l118:s141:k304:d0:s0)		iTemp100 [k122 lr141:142 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l118:s142:k177:d0:s0)		iTemp101 [k123 lr142:150 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp95 [k117 lr134:142 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp100 [k122 lr141:142 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l119:s143:k178:d0:s0)		iTemp102 [k124 lr143:144 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l119:s144:k179:d0:s0)		iTemp103 [k125 lr144:145 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp102 [k124 lr143:144 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l119:s145:k180:d0:s0)		iTemp104 [k126 lr145:146 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp103 [k125 lr144:145 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l119:s146:k181:d0:s0)		iTemp105 [k127 lr146:148 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp104 [k126 lr145:146 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l119:s147:k305:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l119:s148:k306:d0:s0)		send iTemp105 [k127 lr146:148 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l119:s149:k307:d0:s0)		iTemp106 [k128 lr149:150 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l119:s150:k183:d0:s0)		iTemp107 [k129 lr150:158 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp101 [k123 lr142:150 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp106 [k128 lr149:150 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l119:s151:k184:d0:s0)		iTemp108 [k130 lr151:152 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x4 {const-unsigned-char literal}
check.c(l119:s152:k185:d0:s0)		iTemp109 [k131 lr152:153 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp108 [k130 lr151:152 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l119:s153:k186:d0:s0)		iTemp110 [k132 lr153:154 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp109 [k131 lr152:153 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l119:s154:k187:d0:s0)		iTemp111 [k133 lr154:156 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp110 [k132 lr153:154 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l119:s155:k308:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l119:s156:k309:d0:s0)		send iTemp111 [k133 lr154:156 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l119:s157:k310:d0:s0)		iTemp112 [k134 lr157:158 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l119:s158:k189:d0:s0)		iTemp113 [k135 lr158:162 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp107 [k129 lr150:158 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp112 [k134 lr157:158 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l120:s159:k190:d0:s0)		iTemp114 [k136 lr159:160 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x5 {const-unsigned-char literal}
check.c(l120:s160:k191:d0:s0)		iTemp115 [k137 lr160:161 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp114 [k136 lr159:160 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l120:s161:k192:d0:s0)		iTemp116 [k138 lr161:162 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp115 [k137 lr160:161 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l120:s162:k193:d0:s0)		iTemp117 [k139 lr162:163 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = iTemp113 [k135 lr158:162 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp116 [k138 lr161:162 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ]
check.c(l120:s163:k194:d0:s0)		iTemp118 [k140 lr163:164 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp117 [k139 lr162:163 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l120:s164:k195:d0:s0)		iTemp119 [k141 lr164:165 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x04 r0x05 r0x06 r0x07 ] = (unsigned-long-int fixed)iTemp118 [k140 lr163:164 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]
check.c(l120:s165:k196:d0:s0)		*(iTemp90 [k112 lr127:165 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{unsigned-long-int near* fixed}[remat]) := iTemp119 [k141 lr164:165 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x04 r0x05 r0x06 r0x07 ]
check.c(l121:s166:k197:d0:s0)		 goto _swBrk_0($27)
check.c(l122:s167:k198:d0:s0)	 _case_0_54($21) :
check.c(l123:s168:k199:d0:s0)		iTemp120 [k143 lr168:169 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l123:s169:k200:d0:s0)		iTemp121 [k144 lr169:170 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp120 [k143 lr168:169 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l123:s170:k201:d0:s0)		iTemp122 [k145 lr170:171 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp121 [k144 lr169:170 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l123:s171:k202:d0:s0)		iTemp123 [k146 lr171:173 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp122 [k145 lr170:171 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l123:s172:k311:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l123:s173:k312:d0:s0)		send iTemp123 [k146 lr171:173 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l123:s174:k313:d0:s0)		iTemp124 [k147 lr174:182 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l123:s175:k204:d0:s0)		iTemp125 [k148 lr175:176 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l123:s176:k205:d0:s0)		iTemp126 [k149 lr176:177 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp125 [k148 lr175:176 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l123:s177:k206:d0:s0)		iTemp127 [k150 lr177:178 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp126 [k149 lr176:177 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l123:s178:k207:d0:s0)		iTemp128 [k151 lr178:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp127 [k150 lr177:178 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l123:s179:k314:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l123:s180:k315:d0:s0)		send iTemp128 [k151 lr178:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l123:s181:k316:d0:s0)		iTemp129 [k152 lr181:182 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l123:s182:k209:d0:s0)		iTemp130 [k153 lr182:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp124 [k147 lr174:182 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp129 [k152 lr181:182 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l124:s183:k210:d0:s0)		iTemp131 [k154 lr183:184 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l124:s184:k211:d0:s0)		iTemp132 [k155 lr184:185 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp131 [k154 lr183:184 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l124:s185:k212:d0:s0)		iTemp133 [k156 lr185:186 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp132 [k155 lr184:185 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l124:s186:k213:d0:s0)		iTemp134 [k157 lr186:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp133 [k156 lr185:186 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l124:s187:k214:d0:s0)		_sys_temp_min [k142 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed} = iTemp130 [k153 lr182:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp134 [k157 lr186:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l125:s188:k217:d0:s0)		 goto _swBrk_0($27)
check.c(l126:s189:k218:d0:s0)	 _case_0_55($22) :
check.c(l127:s190:k219:d0:s0)		iTemp137 [k161 lr190:191 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l127:s191:k220:d0:s0)		iTemp138 [k162 lr191:192 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp137 [k161 lr190:191 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l127:s192:k221:d0:s0)		iTemp139 [k163 lr192:193 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp138 [k162 lr191:192 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l127:s193:k222:d0:s0)		iTemp140 [k164 lr193:195 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp139 [k163 lr192:193 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l127:s194:k317:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l127:s195:k318:d0:s0)		send iTemp140 [k164 lr193:195 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l127:s196:k319:d0:s0)		iTemp141 [k165 lr196:204 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l127:s197:k224:d0:s0)		iTemp142 [k166 lr197:198 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l127:s198:k225:d0:s0)		iTemp143 [k167 lr198:199 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp142 [k166 lr197:198 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l127:s199:k226:d0:s0)		iTemp144 [k168 lr199:200 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp143 [k167 lr198:199 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l127:s200:k227:d0:s0)		iTemp145 [k169 lr200:202 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp144 [k168 lr199:200 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l127:s201:k320:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l127:s202:k321:d0:s0)		send iTemp145 [k169 lr200:202 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l127:s203:k322:d0:s0)		iTemp146 [k170 lr203:204 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l127:s204:k229:d0:s0)		iTemp147 [k171 lr204:209 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp141 [k165 lr196:204 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp146 [k170 lr203:204 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l128:s205:k230:d0:s0)		iTemp148 [k172 lr205:206 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l128:s206:k231:d0:s0)		iTemp149 [k173 lr206:207 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp148 [k172 lr205:206 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l128:s207:k232:d0:s0)		iTemp150 [k174 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp149 [k173 lr206:207 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l128:s208:k233:d0:s0)		iTemp151 [k175 lr208:209 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp150 [k174 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l128:s209:k234:d0:s0)		_sys_temp_max [k160 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed} = iTemp147 [k171 lr204:209 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp151 [k175 lr208:209 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l129:s210:k237:d0:s0)		 goto _swBrk_0($27)
check.c(l130:s211:k238:d0:s0)	 _case_0_56($23) :
check.c(l131:s212:k239:d0:s0)		iTemp154 [k179 lr212:213 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l131:s213:k240:d0:s0)		iTemp155 [k180 lr213:214 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp154 [k179 lr212:213 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l131:s214:k241:d0:s0)		iTemp156 [k181 lr214:215 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp155 [k180 lr213:214 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l131:s215:k242:d0:s0)		iTemp157 [k182 lr215:217 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp156 [k181 lr214:215 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l131:s216:k323:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l131:s217:k324:d0:s0)		send iTemp157 [k182 lr215:217 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l131:s218:k325:d0:s0)		iTemp158 [k183 lr218:226 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l131:s219:k244:d0:s0)		iTemp159 [k184 lr219:220 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l131:s220:k245:d0:s0)		iTemp160 [k185 lr220:221 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp159 [k184 lr219:220 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l131:s221:k246:d0:s0)		iTemp161 [k186 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp160 [k185 lr220:221 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l131:s222:k247:d0:s0)		iTemp162 [k187 lr222:224 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp161 [k186 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l131:s223:k326:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l131:s224:k327:d0:s0)		send iTemp162 [k187 lr222:224 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l131:s225:k328:d0:s0)		iTemp163 [k188 lr225:226 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l131:s226:k249:d0:s0)		iTemp164 [k189 lr226:231 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp158 [k183 lr218:226 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp163 [k188 lr225:226 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l132:s227:k250:d0:s0)		iTemp165 [k190 lr227:228 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l132:s228:k251:d0:s0)		iTemp166 [k191 lr228:229 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp165 [k190 lr227:228 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l132:s229:k252:d0:s0)		iTemp167 [k192 lr229:230 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp166 [k191 lr228:229 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l132:s230:k253:d0:s0)		iTemp168 [k193 lr230:231 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp167 [k192 lr229:230 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l132:s231:k254:d0:s0)		_sys_lumi_min [k178 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed} = iTemp164 [k189 lr226:231 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp168 [k193 lr230:231 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l133:s232:k257:d0:s0)		 goto _swBrk_0($27)
check.c(l134:s233:k258:d0:s0)	 _case_0_57($24) :
check.c(l135:s234:k259:d0:s0)		iTemp171 [k196 lr234:235 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l135:s235:k260:d0:s0)		iTemp172 [k197 lr235:236 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp171 [k196 lr234:235 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l135:s236:k261:d0:s0)		iTemp173 [k198 lr236:237 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp172 [k197 lr235:236 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l135:s237:k262:d0:s0)		iTemp174 [k199 lr237:239 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp173 [k198 lr236:237 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l135:s238:k329:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l135:s239:k330:d0:s0)		send iTemp174 [k199 lr237:239 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l135:s240:k331:d0:s0)		iTemp175 [k200 lr240:248 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l135:s241:k264:d0:s0)		iTemp176 [k201 lr241:242 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l135:s242:k265:d0:s0)		iTemp177 [k202 lr242:243 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp176 [k201 lr241:242 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l135:s243:k266:d0:s0)		iTemp178 [k203 lr243:244 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp177 [k202 lr242:243 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l135:s244:k267:d0:s0)		iTemp179 [k204 lr244:246 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp178 [k203 lr243:244 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l135:s245:k332:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l135:s246:k333:d0:s0)		send iTemp179 [k204 lr244:246 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l135:s247:k334:d0:s0)		iTemp180 [k205 lr247:248 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l135:s248:k269:d0:s0)		iTemp181 [k206 lr248:253 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp175 [k200 lr240:248 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp180 [k205 lr247:248 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l136:s249:k270:d0:s0)		iTemp182 [k207 lr249:250 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x00 r0x01 r0x02 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l136:s250:k271:d0:s0)		iTemp183 [k208 lr250:251 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x00 ] = @[iTemp182 [k207 lr249:250 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x00 r0x01 r0x02 ] + 0x0 {const-unsigned-char literal}]
check.c(l136:s251:k272:d0:s0)		iTemp184 [k209 lr251:252 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x00 r0x01 ] = (int fixed)iTemp183 [k208 lr250:251 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x00 ]
check.c(l136:s252:k273:d0:s0)		iTemp185 [k210 lr252:253 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x00 r0x01 ] = iTemp184 [k209 lr251:252 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x00 r0x01 ] - 0x30 {int literal}
check.c(l136:s253:k274:d0:s0)		_sys_temp_max [k160 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed} = iTemp181 [k206 lr248:253 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp185 [k210 lr252:253 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x00 r0x01 ]
check.c(l137:s254:k277:d0:s0)		 goto _swBrk_0($27)
check.c(l138:s255:k278:d0:s0)	 _case_0_82($25) :
check.c(l139:s256:k279:d0:s0)		iTemp1 [k4 lr4:258 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _check_comando_ret_1_74}[r0x03 ] := 0x0 {const-char literal}
check.c(l143:s257:k283:d0:s0)	 _swBrk_0($27) :
check.c(l145:s258:k284:d0:s0)		ret iTemp1 [k4 lr4:258 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _check_comando_ret_1_74}[r0x03 ]
check.c(l145:s259:k285:d0:s0)	 _return($32) :
check.c(l145:s260:k286:d0:s0)		eproc _check_comando [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char function ( char generic* fixed) fixed}

----------------------------------------------------------------
Basic Block _iffalse_5 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 24 : bbnum = 23 1st iCode = 108 , last iCode = 109
visited 0 : hasFcall = 0

defines bitVector :bitvector Size = 299 bSize = 38
Bits on { }

local defines bitVector :
pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (3) (5) (6) (8) (10) (115) (116) (117) (118) (119) }

outDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (3) (5) (6) (8) (10) (115) (116) (117) (118) (119) }

usesDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (118) }

----------------------------------------------------------------
check.c(l107:s108:k126:d0:s0)	 _iffalse_5($12) :
check.c(l108:s109:k131:d0:s0)		if iTemp70 [k89 lr103:109 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] != 0 goto _swBrk_0($27)
check.c(l109:s110:k135:d0:s0)		_hab_alarme [k91 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed} := 0x0 {const-unsigned-char literal}
check.c(l110:s111:k138:d0:s0)		 goto _swBrk_0($27)
check.c(l111:s112:k139:d0:s0)	 _case_0_52($14) :
check.c(l112:s113:k140:d0:s0)		iTemp78 [k98 lr113:114 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l112:s114:k141:d0:s0)		iTemp79 [k99 lr114:115 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp78 [k98 lr113:114 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l112:s115:k142:d0:s0)		iTemp80 [k100 lr115:116 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp79 [k99 lr114:115 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l112:s116:k143:d0:s0)		iTemp81 [k101 lr116:122 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp80 [k100 lr115:116 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l112:s117:k144:d0:s0)		iTemp82 [k102 lr117:118 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp81 [k101 lr116:122 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] == 0x1 {int literal}
check.c(l112:s118:k145:d0:s0)		if iTemp82 [k102 lr117:118 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} == 0 goto _iffalse_7($18)
check.c(l113:s119:k149:d0:s0)		_hab_sensor [k103 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed} := 0x0 {const-unsigned-char literal}
check.c(l113:s120:k150:d0:s0)		 goto _swBrk_0($27)
check.c(l113:s121:k151:d0:s0)	 _iffalse_7($18) :
check.c(l114:s122:k156:d0:s0)		if iTemp81 [k101 lr116:122 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] != 0 goto _swBrk_0($27)
check.c(l115:s123:k160:d0:s0)		_hab_sensor [k103 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed} := 0x2 {const-unsigned-char literal}
check.c(l116:s124:k163:d0:s0)		 goto _swBrk_0($27)
check.c(l117:s125:k164:d0:s0)	 _case_0_53($20) :
check.c(l118:s126:k165:d0:s0)		iTemp89 [k111 lr126:127 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{unsigned-long-int near* fixed}[remat] = &[_sys_timer_pool [k110 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int [2] fixed}]
check.c(l118:s127:k166:d0:s0)		iTemp90 [k112 lr127:165 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{unsigned-long-int near* fixed}[remat] = iTemp89 [k111 lr126:127 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{unsigned-long-int near* fixed}[remat] + 0x4 {unsigned-char literal}
check.c(l118:s128:k167:d0:s0)		iTemp91 [k113 lr128:129 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l118:s129:k168:d0:s0)		iTemp92 [k114 lr129:130 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp91 [k113 lr128:129 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l118:s130:k169:d0:s0)		iTemp93 [k115 lr130:131 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp92 [k114 lr129:130 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l118:s131:k170:d0:s0)		iTemp94 [k116 lr131:133 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp93 [k115 lr130:131 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l118:s132:k299:d0:s0)		send 0x2710 {const-int literal}{argreg = 1}
check.c(l118:s133:k300:d0:s0)		send iTemp94 [k116 lr131:133 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l118:s134:k301:d0:s0)		iTemp95 [k117 lr134:142 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l118:s135:k172:d0:s0)		iTemp96 [k118 lr135:136 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l118:s136:k173:d0:s0)		iTemp97 [k119 lr136:137 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp96 [k118 lr135:136 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l118:s137:k174:d0:s0)		iTemp98 [k120 lr137:138 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp97 [k119 lr136:137 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l118:s138:k175:d0:s0)		iTemp99 [k121 lr138:140 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp98 [k120 lr137:138 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l118:s139:k302:d0:s0)		send 0x3e8 {const-int literal}{argreg = 1}
check.c(l118:s140:k303:d0:s0)		send iTemp99 [k121 lr138:140 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l118:s141:k304:d0:s0)		iTemp100 [k122 lr141:142 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l118:s142:k177:d0:s0)		iTemp101 [k123 lr142:150 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp95 [k117 lr134:142 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp100 [k122 lr141:142 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l119:s143:k178:d0:s0)		iTemp102 [k124 lr143:144 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l119:s144:k179:d0:s0)		iTemp103 [k125 lr144:145 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp102 [k124 lr143:144 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l119:s145:k180:d0:s0)		iTemp104 [k126 lr145:146 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp103 [k125 lr144:145 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l119:s146:k181:d0:s0)		iTemp105 [k127 lr146:148 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp104 [k126 lr145:146 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l119:s147:k305:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l119:s148:k306:d0:s0)		send iTemp105 [k127 lr146:148 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l119:s149:k307:d0:s0)		iTemp106 [k128 lr149:150 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l119:s150:k183:d0:s0)		iTemp107 [k129 lr150:158 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp101 [k123 lr142:150 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp106 [k128 lr149:150 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l119:s151:k184:d0:s0)		iTemp108 [k130 lr151:152 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x4 {const-unsigned-char literal}
check.c(l119:s152:k185:d0:s0)		iTemp109 [k131 lr152:153 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp108 [k130 lr151:152 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l119:s153:k186:d0:s0)		iTemp110 [k132 lr153:154 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp109 [k131 lr152:153 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l119:s154:k187:d0:s0)		iTemp111 [k133 lr154:156 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp110 [k132 lr153:154 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l119:s155:k308:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l119:s156:k309:d0:s0)		send iTemp111 [k133 lr154:156 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l119:s157:k310:d0:s0)		iTemp112 [k134 lr157:158 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l119:s158:k189:d0:s0)		iTemp113 [k135 lr158:162 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp107 [k129 lr150:158 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp112 [k134 lr157:158 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l120:s159:k190:d0:s0)		iTemp114 [k136 lr159:160 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x5 {const-unsigned-char literal}
check.c(l120:s160:k191:d0:s0)		iTemp115 [k137 lr160:161 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp114 [k136 lr159:160 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l120:s161:k192:d0:s0)		iTemp116 [k138 lr161:162 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp115 [k137 lr160:161 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l120:s162:k193:d0:s0)		iTemp117 [k139 lr162:163 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = iTemp113 [k135 lr158:162 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp116 [k138 lr161:162 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ]
check.c(l120:s163:k194:d0:s0)		iTemp118 [k140 lr163:164 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp117 [k139 lr162:163 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l120:s164:k195:d0:s0)		iTemp119 [k141 lr164:165 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x04 r0x05 r0x06 r0x07 ] = (unsigned-long-int fixed)iTemp118 [k140 lr163:164 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]
check.c(l120:s165:k196:d0:s0)		*(iTemp90 [k112 lr127:165 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{unsigned-long-int near* fixed}[remat]) := iTemp119 [k141 lr164:165 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x04 r0x05 r0x06 r0x07 ]
check.c(l121:s166:k197:d0:s0)		 goto _swBrk_0($27)
check.c(l122:s167:k198:d0:s0)	 _case_0_54($21) :
check.c(l123:s168:k199:d0:s0)		iTemp120 [k143 lr168:169 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l123:s169:k200:d0:s0)		iTemp121 [k144 lr169:170 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp120 [k143 lr168:169 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l123:s170:k201:d0:s0)		iTemp122 [k145 lr170:171 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp121 [k144 lr169:170 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l123:s171:k202:d0:s0)		iTemp123 [k146 lr171:173 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp122 [k145 lr170:171 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l123:s172:k311:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l123:s173:k312:d0:s0)		send iTemp123 [k146 lr171:173 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l123:s174:k313:d0:s0)		iTemp124 [k147 lr174:182 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l123:s175:k204:d0:s0)		iTemp125 [k148 lr175:176 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l123:s176:k205:d0:s0)		iTemp126 [k149 lr176:177 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp125 [k148 lr175:176 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l123:s177:k206:d0:s0)		iTemp127 [k150 lr177:178 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp126 [k149 lr176:177 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l123:s178:k207:d0:s0)		iTemp128 [k151 lr178:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp127 [k150 lr177:178 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l123:s179:k314:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l123:s180:k315:d0:s0)		send iTemp128 [k151 lr178:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l123:s181:k316:d0:s0)		iTemp129 [k152 lr181:182 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l123:s182:k209:d0:s0)		iTemp130 [k153 lr182:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp124 [k147 lr174:182 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp129 [k152 lr181:182 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l124:s183:k210:d0:s0)		iTemp131 [k154 lr183:184 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l124:s184:k211:d0:s0)		iTemp132 [k155 lr184:185 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp131 [k154 lr183:184 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l124:s185:k212:d0:s0)		iTemp133 [k156 lr185:186 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp132 [k155 lr184:185 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l124:s186:k213:d0:s0)		iTemp134 [k157 lr186:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp133 [k156 lr185:186 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l124:s187:k214:d0:s0)		_sys_temp_min [k142 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed} = iTemp130 [k153 lr182:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp134 [k157 lr186:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l125:s188:k217:d0:s0)		 goto _swBrk_0($27)
check.c(l126:s189:k218:d0:s0)	 _case_0_55($22) :
check.c(l127:s190:k219:d0:s0)		iTemp137 [k161 lr190:191 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l127:s191:k220:d0:s0)		iTemp138 [k162 lr191:192 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp137 [k161 lr190:191 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l127:s192:k221:d0:s0)		iTemp139 [k163 lr192:193 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp138 [k162 lr191:192 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l127:s193:k222:d0:s0)		iTemp140 [k164 lr193:195 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp139 [k163 lr192:193 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l127:s194:k317:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l127:s195:k318:d0:s0)		send iTemp140 [k164 lr193:195 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l127:s196:k319:d0:s0)		iTemp141 [k165 lr196:204 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l127:s197:k224:d0:s0)		iTemp142 [k166 lr197:198 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l127:s198:k225:d0:s0)		iTemp143 [k167 lr198:199 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp142 [k166 lr197:198 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l127:s199:k226:d0:s0)		iTemp144 [k168 lr199:200 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp143 [k167 lr198:199 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l127:s200:k227:d0:s0)		iTemp145 [k169 lr200:202 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp144 [k168 lr199:200 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l127:s201:k320:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l127:s202:k321:d0:s0)		send iTemp145 [k169 lr200:202 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l127:s203:k322:d0:s0)		iTemp146 [k170 lr203:204 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l127:s204:k229:d0:s0)		iTemp147 [k171 lr204:209 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp141 [k165 lr196:204 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp146 [k170 lr203:204 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l128:s205:k230:d0:s0)		iTemp148 [k172 lr205:206 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l128:s206:k231:d0:s0)		iTemp149 [k173 lr206:207 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp148 [k172 lr205:206 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l128:s207:k232:d0:s0)		iTemp150 [k174 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp149 [k173 lr206:207 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l128:s208:k233:d0:s0)		iTemp151 [k175 lr208:209 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp150 [k174 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l128:s209:k234:d0:s0)		_sys_temp_max [k160 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed} = iTemp147 [k171 lr204:209 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp151 [k175 lr208:209 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l129:s210:k237:d0:s0)		 goto _swBrk_0($27)
check.c(l130:s211:k238:d0:s0)	 _case_0_56($23) :
check.c(l131:s212:k239:d0:s0)		iTemp154 [k179 lr212:213 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l131:s213:k240:d0:s0)		iTemp155 [k180 lr213:214 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp154 [k179 lr212:213 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l131:s214:k241:d0:s0)		iTemp156 [k181 lr214:215 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp155 [k180 lr213:214 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l131:s215:k242:d0:s0)		iTemp157 [k182 lr215:217 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp156 [k181 lr214:215 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l131:s216:k323:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l131:s217:k324:d0:s0)		send iTemp157 [k182 lr215:217 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l131:s218:k325:d0:s0)		iTemp158 [k183 lr218:226 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l131:s219:k244:d0:s0)		iTemp159 [k184 lr219:220 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l131:s220:k245:d0:s0)		iTemp160 [k185 lr220:221 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp159 [k184 lr219:220 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l131:s221:k246:d0:s0)		iTemp161 [k186 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp160 [k185 lr220:221 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l131:s222:k247:d0:s0)		iTemp162 [k187 lr222:224 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp161 [k186 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l131:s223:k326:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l131:s224:k327:d0:s0)		send iTemp162 [k187 lr222:224 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l131:s225:k328:d0:s0)		iTemp163 [k188 lr225:226 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l131:s226:k249:d0:s0)		iTemp164 [k189 lr226:231 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp158 [k183 lr218:226 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp163 [k188 lr225:226 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l132:s227:k250:d0:s0)		iTemp165 [k190 lr227:228 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l132:s228:k251:d0:s0)		iTemp166 [k191 lr228:229 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp165 [k190 lr227:228 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l132:s229:k252:d0:s0)		iTemp167 [k192 lr229:230 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp166 [k191 lr228:229 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l132:s230:k253:d0:s0)		iTemp168 [k193 lr230:231 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp167 [k192 lr229:230 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l132:s231:k254:d0:s0)		_sys_lumi_min [k178 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed} = iTemp164 [k189 lr226:231 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp168 [k193 lr230:231 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l133:s232:k257:d0:s0)		 goto _swBrk_0($27)
check.c(l134:s233:k258:d0:s0)	 _case_0_57($24) :
check.c(l135:s234:k259:d0:s0)		iTemp171 [k196 lr234:235 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l135:s235:k260:d0:s0)		iTemp172 [k197 lr235:236 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp171 [k196 lr234:235 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l135:s236:k261:d0:s0)		iTemp173 [k198 lr236:237 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp172 [k197 lr235:236 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l135:s237:k262:d0:s0)		iTemp174 [k199 lr237:239 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp173 [k198 lr236:237 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l135:s238:k329:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l135:s239:k330:d0:s0)		send iTemp174 [k199 lr237:239 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l135:s240:k331:d0:s0)		iTemp175 [k200 lr240:248 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l135:s241:k264:d0:s0)		iTemp176 [k201 lr241:242 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l135:s242:k265:d0:s0)		iTemp177 [k202 lr242:243 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp176 [k201 lr241:242 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l135:s243:k266:d0:s0)		iTemp178 [k203 lr243:244 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp177 [k202 lr242:243 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l135:s244:k267:d0:s0)		iTemp179 [k204 lr244:246 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp178 [k203 lr243:244 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l135:s245:k332:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l135:s246:k333:d0:s0)		send iTemp179 [k204 lr244:246 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l135:s247:k334:d0:s0)		iTemp180 [k205 lr247:248 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l135:s248:k269:d0:s0)		iTemp181 [k206 lr248:253 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp175 [k200 lr240:248 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp180 [k205 lr247:248 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l136:s249:k270:d0:s0)		iTemp182 [k207 lr249:250 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x00 r0x01 r0x02 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l136:s250:k271:d0:s0)		iTemp183 [k208 lr250:251 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x00 ] = @[iTemp182 [k207 lr249:250 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x00 r0x01 r0x02 ] + 0x0 {const-unsigned-char literal}]
check.c(l136:s251:k272:d0:s0)		iTemp184 [k209 lr251:252 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x00 r0x01 ] = (int fixed)iTemp183 [k208 lr250:251 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x00 ]
check.c(l136:s252:k273:d0:s0)		iTemp185 [k210 lr252:253 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x00 r0x01 ] = iTemp184 [k209 lr251:252 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x00 r0x01 ] - 0x30 {int literal}
check.c(l136:s253:k274:d0:s0)		_sys_temp_max [k160 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed} = iTemp181 [k206 lr248:253 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp185 [k210 lr252:253 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x00 r0x01 ]
check.c(l137:s254:k277:d0:s0)		 goto _swBrk_0($27)
check.c(l138:s255:k278:d0:s0)	 _case_0_82($25) :
check.c(l139:s256:k279:d0:s0)		iTemp1 [k4 lr4:258 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _check_comando_ret_1_74}[r0x03 ] := 0x0 {const-char literal}
check.c(l143:s257:k283:d0:s0)	 _swBrk_0($27) :
check.c(l145:s258:k284:d0:s0)		ret iTemp1 [k4 lr4:258 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _check_comando_ret_1_74}[r0x03 ]
check.c(l145:s259:k285:d0:s0)	 _return($32) :
check.c(l145:s260:k286:d0:s0)		eproc _check_comando [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char function ( char generic* fixed) fixed}

----------------------------------------------------------------
Basic Block _eBBlock48 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 25 : bbnum = 24 1st iCode = 110 , last iCode = 111
visited 0 : hasFcall = 0

defines bitVector :bitvector Size = 299 bSize = 38
Bits on { (135) }

local defines bitVector :bitvector Size = 299 bSize = 38
Bits on { (135) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (3) (5) (6) (8) (10) (115) (116) (117) (118) (119) }

outDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (3) (5) (6) (8) (10) (115) (116) (117) (118) (119) (135) }

usesDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { }

----------------------------------------------------------------
check.c(l109:s110:k135:d0:s0)		_hab_alarme [k91 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed} := 0x0 {const-unsigned-char literal}
check.c(l110:s111:k138:d0:s0)		 goto _swBrk_0($27)
check.c(l111:s112:k139:d0:s0)	 _case_0_52($14) :
check.c(l112:s113:k140:d0:s0)		iTemp78 [k98 lr113:114 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l112:s114:k141:d0:s0)		iTemp79 [k99 lr114:115 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp78 [k98 lr113:114 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l112:s115:k142:d0:s0)		iTemp80 [k100 lr115:116 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp79 [k99 lr114:115 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l112:s116:k143:d0:s0)		iTemp81 [k101 lr116:122 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp80 [k100 lr115:116 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l112:s117:k144:d0:s0)		iTemp82 [k102 lr117:118 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp81 [k101 lr116:122 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] == 0x1 {int literal}
check.c(l112:s118:k145:d0:s0)		if iTemp82 [k102 lr117:118 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} == 0 goto _iffalse_7($18)
check.c(l113:s119:k149:d0:s0)		_hab_sensor [k103 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed} := 0x0 {const-unsigned-char literal}
check.c(l113:s120:k150:d0:s0)		 goto _swBrk_0($27)
check.c(l113:s121:k151:d0:s0)	 _iffalse_7($18) :
check.c(l114:s122:k156:d0:s0)		if iTemp81 [k101 lr116:122 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] != 0 goto _swBrk_0($27)
check.c(l115:s123:k160:d0:s0)		_hab_sensor [k103 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed} := 0x2 {const-unsigned-char literal}
check.c(l116:s124:k163:d0:s0)		 goto _swBrk_0($27)
check.c(l117:s125:k164:d0:s0)	 _case_0_53($20) :
check.c(l118:s126:k165:d0:s0)		iTemp89 [k111 lr126:127 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{unsigned-long-int near* fixed}[remat] = &[_sys_timer_pool [k110 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int [2] fixed}]
check.c(l118:s127:k166:d0:s0)		iTemp90 [k112 lr127:165 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{unsigned-long-int near* fixed}[remat] = iTemp89 [k111 lr126:127 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{unsigned-long-int near* fixed}[remat] + 0x4 {unsigned-char literal}
check.c(l118:s128:k167:d0:s0)		iTemp91 [k113 lr128:129 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l118:s129:k168:d0:s0)		iTemp92 [k114 lr129:130 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp91 [k113 lr128:129 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l118:s130:k169:d0:s0)		iTemp93 [k115 lr130:131 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp92 [k114 lr129:130 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l118:s131:k170:d0:s0)		iTemp94 [k116 lr131:133 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp93 [k115 lr130:131 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l118:s132:k299:d0:s0)		send 0x2710 {const-int literal}{argreg = 1}
check.c(l118:s133:k300:d0:s0)		send iTemp94 [k116 lr131:133 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l118:s134:k301:d0:s0)		iTemp95 [k117 lr134:142 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l118:s135:k172:d0:s0)		iTemp96 [k118 lr135:136 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l118:s136:k173:d0:s0)		iTemp97 [k119 lr136:137 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp96 [k118 lr135:136 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l118:s137:k174:d0:s0)		iTemp98 [k120 lr137:138 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp97 [k119 lr136:137 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l118:s138:k175:d0:s0)		iTemp99 [k121 lr138:140 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp98 [k120 lr137:138 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l118:s139:k302:d0:s0)		send 0x3e8 {const-int literal}{argreg = 1}
check.c(l118:s140:k303:d0:s0)		send iTemp99 [k121 lr138:140 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l118:s141:k304:d0:s0)		iTemp100 [k122 lr141:142 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l118:s142:k177:d0:s0)		iTemp101 [k123 lr142:150 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp95 [k117 lr134:142 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp100 [k122 lr141:142 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l119:s143:k178:d0:s0)		iTemp102 [k124 lr143:144 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l119:s144:k179:d0:s0)		iTemp103 [k125 lr144:145 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp102 [k124 lr143:144 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l119:s145:k180:d0:s0)		iTemp104 [k126 lr145:146 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp103 [k125 lr144:145 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l119:s146:k181:d0:s0)		iTemp105 [k127 lr146:148 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp104 [k126 lr145:146 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l119:s147:k305:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l119:s148:k306:d0:s0)		send iTemp105 [k127 lr146:148 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l119:s149:k307:d0:s0)		iTemp106 [k128 lr149:150 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l119:s150:k183:d0:s0)		iTemp107 [k129 lr150:158 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp101 [k123 lr142:150 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp106 [k128 lr149:150 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l119:s151:k184:d0:s0)		iTemp108 [k130 lr151:152 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x4 {const-unsigned-char literal}
check.c(l119:s152:k185:d0:s0)		iTemp109 [k131 lr152:153 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp108 [k130 lr151:152 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l119:s153:k186:d0:s0)		iTemp110 [k132 lr153:154 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp109 [k131 lr152:153 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l119:s154:k187:d0:s0)		iTemp111 [k133 lr154:156 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp110 [k132 lr153:154 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l119:s155:k308:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l119:s156:k309:d0:s0)		send iTemp111 [k133 lr154:156 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l119:s157:k310:d0:s0)		iTemp112 [k134 lr157:158 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l119:s158:k189:d0:s0)		iTemp113 [k135 lr158:162 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp107 [k129 lr150:158 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp112 [k134 lr157:158 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l120:s159:k190:d0:s0)		iTemp114 [k136 lr159:160 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x5 {const-unsigned-char literal}
check.c(l120:s160:k191:d0:s0)		iTemp115 [k137 lr160:161 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp114 [k136 lr159:160 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l120:s161:k192:d0:s0)		iTemp116 [k138 lr161:162 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp115 [k137 lr160:161 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l120:s162:k193:d0:s0)		iTemp117 [k139 lr162:163 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = iTemp113 [k135 lr158:162 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp116 [k138 lr161:162 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ]
check.c(l120:s163:k194:d0:s0)		iTemp118 [k140 lr163:164 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp117 [k139 lr162:163 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l120:s164:k195:d0:s0)		iTemp119 [k141 lr164:165 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x04 r0x05 r0x06 r0x07 ] = (unsigned-long-int fixed)iTemp118 [k140 lr163:164 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]
check.c(l120:s165:k196:d0:s0)		*(iTemp90 [k112 lr127:165 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{unsigned-long-int near* fixed}[remat]) := iTemp119 [k141 lr164:165 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x04 r0x05 r0x06 r0x07 ]
check.c(l121:s166:k197:d0:s0)		 goto _swBrk_0($27)
check.c(l122:s167:k198:d0:s0)	 _case_0_54($21) :
check.c(l123:s168:k199:d0:s0)		iTemp120 [k143 lr168:169 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l123:s169:k200:d0:s0)		iTemp121 [k144 lr169:170 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp120 [k143 lr168:169 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l123:s170:k201:d0:s0)		iTemp122 [k145 lr170:171 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp121 [k144 lr169:170 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l123:s171:k202:d0:s0)		iTemp123 [k146 lr171:173 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp122 [k145 lr170:171 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l123:s172:k311:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l123:s173:k312:d0:s0)		send iTemp123 [k146 lr171:173 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l123:s174:k313:d0:s0)		iTemp124 [k147 lr174:182 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l123:s175:k204:d0:s0)		iTemp125 [k148 lr175:176 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l123:s176:k205:d0:s0)		iTemp126 [k149 lr176:177 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp125 [k148 lr175:176 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l123:s177:k206:d0:s0)		iTemp127 [k150 lr177:178 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp126 [k149 lr176:177 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l123:s178:k207:d0:s0)		iTemp128 [k151 lr178:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp127 [k150 lr177:178 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l123:s179:k314:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l123:s180:k315:d0:s0)		send iTemp128 [k151 lr178:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l123:s181:k316:d0:s0)		iTemp129 [k152 lr181:182 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l123:s182:k209:d0:s0)		iTemp130 [k153 lr182:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp124 [k147 lr174:182 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp129 [k152 lr181:182 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l124:s183:k210:d0:s0)		iTemp131 [k154 lr183:184 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l124:s184:k211:d0:s0)		iTemp132 [k155 lr184:185 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp131 [k154 lr183:184 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l124:s185:k212:d0:s0)		iTemp133 [k156 lr185:186 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp132 [k155 lr184:185 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l124:s186:k213:d0:s0)		iTemp134 [k157 lr186:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp133 [k156 lr185:186 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l124:s187:k214:d0:s0)		_sys_temp_min [k142 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed} = iTemp130 [k153 lr182:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp134 [k157 lr186:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l125:s188:k217:d0:s0)		 goto _swBrk_0($27)
check.c(l126:s189:k218:d0:s0)	 _case_0_55($22) :
check.c(l127:s190:k219:d0:s0)		iTemp137 [k161 lr190:191 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l127:s191:k220:d0:s0)		iTemp138 [k162 lr191:192 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp137 [k161 lr190:191 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l127:s192:k221:d0:s0)		iTemp139 [k163 lr192:193 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp138 [k162 lr191:192 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l127:s193:k222:d0:s0)		iTemp140 [k164 lr193:195 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp139 [k163 lr192:193 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l127:s194:k317:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l127:s195:k318:d0:s0)		send iTemp140 [k164 lr193:195 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l127:s196:k319:d0:s0)		iTemp141 [k165 lr196:204 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l127:s197:k224:d0:s0)		iTemp142 [k166 lr197:198 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l127:s198:k225:d0:s0)		iTemp143 [k167 lr198:199 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp142 [k166 lr197:198 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l127:s199:k226:d0:s0)		iTemp144 [k168 lr199:200 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp143 [k167 lr198:199 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l127:s200:k227:d0:s0)		iTemp145 [k169 lr200:202 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp144 [k168 lr199:200 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l127:s201:k320:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l127:s202:k321:d0:s0)		send iTemp145 [k169 lr200:202 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l127:s203:k322:d0:s0)		iTemp146 [k170 lr203:204 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l127:s204:k229:d0:s0)		iTemp147 [k171 lr204:209 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp141 [k165 lr196:204 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp146 [k170 lr203:204 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l128:s205:k230:d0:s0)		iTemp148 [k172 lr205:206 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l128:s206:k231:d0:s0)		iTemp149 [k173 lr206:207 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp148 [k172 lr205:206 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l128:s207:k232:d0:s0)		iTemp150 [k174 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp149 [k173 lr206:207 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l128:s208:k233:d0:s0)		iTemp151 [k175 lr208:209 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp150 [k174 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l128:s209:k234:d0:s0)		_sys_temp_max [k160 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed} = iTemp147 [k171 lr204:209 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp151 [k175 lr208:209 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l129:s210:k237:d0:s0)		 goto _swBrk_0($27)
check.c(l130:s211:k238:d0:s0)	 _case_0_56($23) :
check.c(l131:s212:k239:d0:s0)		iTemp154 [k179 lr212:213 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l131:s213:k240:d0:s0)		iTemp155 [k180 lr213:214 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp154 [k179 lr212:213 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l131:s214:k241:d0:s0)		iTemp156 [k181 lr214:215 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp155 [k180 lr213:214 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l131:s215:k242:d0:s0)		iTemp157 [k182 lr215:217 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp156 [k181 lr214:215 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l131:s216:k323:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l131:s217:k324:d0:s0)		send iTemp157 [k182 lr215:217 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l131:s218:k325:d0:s0)		iTemp158 [k183 lr218:226 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l131:s219:k244:d0:s0)		iTemp159 [k184 lr219:220 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l131:s220:k245:d0:s0)		iTemp160 [k185 lr220:221 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp159 [k184 lr219:220 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l131:s221:k246:d0:s0)		iTemp161 [k186 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp160 [k185 lr220:221 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l131:s222:k247:d0:s0)		iTemp162 [k187 lr222:224 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp161 [k186 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l131:s223:k326:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l131:s224:k327:d0:s0)		send iTemp162 [k187 lr222:224 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l131:s225:k328:d0:s0)		iTemp163 [k188 lr225:226 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l131:s226:k249:d0:s0)		iTemp164 [k189 lr226:231 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp158 [k183 lr218:226 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp163 [k188 lr225:226 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l132:s227:k250:d0:s0)		iTemp165 [k190 lr227:228 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l132:s228:k251:d0:s0)		iTemp166 [k191 lr228:229 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp165 [k190 lr227:228 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l132:s229:k252:d0:s0)		iTemp167 [k192 lr229:230 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp166 [k191 lr228:229 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l132:s230:k253:d0:s0)		iTemp168 [k193 lr230:231 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp167 [k192 lr229:230 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l132:s231:k254:d0:s0)		_sys_lumi_min [k178 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed} = iTemp164 [k189 lr226:231 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp168 [k193 lr230:231 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l133:s232:k257:d0:s0)		 goto _swBrk_0($27)
check.c(l134:s233:k258:d0:s0)	 _case_0_57($24) :
check.c(l135:s234:k259:d0:s0)		iTemp171 [k196 lr234:235 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l135:s235:k260:d0:s0)		iTemp172 [k197 lr235:236 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp171 [k196 lr234:235 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l135:s236:k261:d0:s0)		iTemp173 [k198 lr236:237 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp172 [k197 lr235:236 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l135:s237:k262:d0:s0)		iTemp174 [k199 lr237:239 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp173 [k198 lr236:237 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l135:s238:k329:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l135:s239:k330:d0:s0)		send iTemp174 [k199 lr237:239 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l135:s240:k331:d0:s0)		iTemp175 [k200 lr240:248 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l135:s241:k264:d0:s0)		iTemp176 [k201 lr241:242 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l135:s242:k265:d0:s0)		iTemp177 [k202 lr242:243 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp176 [k201 lr241:242 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l135:s243:k266:d0:s0)		iTemp178 [k203 lr243:244 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp177 [k202 lr242:243 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l135:s244:k267:d0:s0)		iTemp179 [k204 lr244:246 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp178 [k203 lr243:244 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l135:s245:k332:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l135:s246:k333:d0:s0)		send iTemp179 [k204 lr244:246 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l135:s247:k334:d0:s0)		iTemp180 [k205 lr247:248 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l135:s248:k269:d0:s0)		iTemp181 [k206 lr248:253 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp175 [k200 lr240:248 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp180 [k205 lr247:248 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l136:s249:k270:d0:s0)		iTemp182 [k207 lr249:250 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x00 r0x01 r0x02 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l136:s250:k271:d0:s0)		iTemp183 [k208 lr250:251 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x00 ] = @[iTemp182 [k207 lr249:250 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x00 r0x01 r0x02 ] + 0x0 {const-unsigned-char literal}]
check.c(l136:s251:k272:d0:s0)		iTemp184 [k209 lr251:252 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x00 r0x01 ] = (int fixed)iTemp183 [k208 lr250:251 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x00 ]
check.c(l136:s252:k273:d0:s0)		iTemp185 [k210 lr252:253 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x00 r0x01 ] = iTemp184 [k209 lr251:252 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x00 r0x01 ] - 0x30 {int literal}
check.c(l136:s253:k274:d0:s0)		_sys_temp_max [k160 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed} = iTemp181 [k206 lr248:253 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp185 [k210 lr252:253 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x00 r0x01 ]
check.c(l137:s254:k277:d0:s0)		 goto _swBrk_0($27)
check.c(l138:s255:k278:d0:s0)	 _case_0_82($25) :
check.c(l139:s256:k279:d0:s0)		iTemp1 [k4 lr4:258 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _check_comando_ret_1_74}[r0x03 ] := 0x0 {const-char literal}
check.c(l143:s257:k283:d0:s0)	 _swBrk_0($27) :
check.c(l145:s258:k284:d0:s0)		ret iTemp1 [k4 lr4:258 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _check_comando_ret_1_74}[r0x03 ]
check.c(l145:s259:k285:d0:s0)	 _return($32) :
check.c(l145:s260:k286:d0:s0)		eproc _check_comando [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char function ( char generic* fixed) fixed}

----------------------------------------------------------------
Basic Block _case_0_52 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 18 : bbnum = 25 1st iCode = 112 , last iCode = 118
visited 0 : hasFcall = 0

defines bitVector :bitvector Size = 299 bSize = 38
Bits on { (140) (141) (142) (143) (144) }

local defines bitVector :bitvector Size = 299 bSize = 38
Bits on { (140) (141) (142) (143) (144) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (3) (5) (6) (8) (10) (12) }

outDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (3) (5) (6) (8) (10) (12) (140) (141) (142) (143) (144) }

usesDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (140) (141) (142) (143) (144) }

----------------------------------------------------------------
check.c(l111:s112:k139:d0:s0)	 _case_0_52($14) :
check.c(l112:s113:k140:d0:s0)		iTemp78 [k98 lr113:114 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l112:s114:k141:d0:s0)		iTemp79 [k99 lr114:115 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp78 [k98 lr113:114 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l112:s115:k142:d0:s0)		iTemp80 [k100 lr115:116 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp79 [k99 lr114:115 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l112:s116:k143:d0:s0)		iTemp81 [k101 lr116:122 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp80 [k100 lr115:116 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l112:s117:k144:d0:s0)		iTemp82 [k102 lr117:118 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp81 [k101 lr116:122 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] == 0x1 {int literal}
check.c(l112:s118:k145:d0:s0)		if iTemp82 [k102 lr117:118 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} == 0 goto _iffalse_7($18)
check.c(l113:s119:k149:d0:s0)		_hab_sensor [k103 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed} := 0x0 {const-unsigned-char literal}
check.c(l113:s120:k150:d0:s0)		 goto _swBrk_0($27)
check.c(l113:s121:k151:d0:s0)	 _iffalse_7($18) :
check.c(l114:s122:k156:d0:s0)		if iTemp81 [k101 lr116:122 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] != 0 goto _swBrk_0($27)
check.c(l115:s123:k160:d0:s0)		_hab_sensor [k103 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed} := 0x2 {const-unsigned-char literal}
check.c(l116:s124:k163:d0:s0)		 goto _swBrk_0($27)
check.c(l117:s125:k164:d0:s0)	 _case_0_53($20) :
check.c(l118:s126:k165:d0:s0)		iTemp89 [k111 lr126:127 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{unsigned-long-int near* fixed}[remat] = &[_sys_timer_pool [k110 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int [2] fixed}]
check.c(l118:s127:k166:d0:s0)		iTemp90 [k112 lr127:165 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{unsigned-long-int near* fixed}[remat] = iTemp89 [k111 lr126:127 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{unsigned-long-int near* fixed}[remat] + 0x4 {unsigned-char literal}
check.c(l118:s128:k167:d0:s0)		iTemp91 [k113 lr128:129 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l118:s129:k168:d0:s0)		iTemp92 [k114 lr129:130 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp91 [k113 lr128:129 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l118:s130:k169:d0:s0)		iTemp93 [k115 lr130:131 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp92 [k114 lr129:130 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l118:s131:k170:d0:s0)		iTemp94 [k116 lr131:133 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp93 [k115 lr130:131 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l118:s132:k299:d0:s0)		send 0x2710 {const-int literal}{argreg = 1}
check.c(l118:s133:k300:d0:s0)		send iTemp94 [k116 lr131:133 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l118:s134:k301:d0:s0)		iTemp95 [k117 lr134:142 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l118:s135:k172:d0:s0)		iTemp96 [k118 lr135:136 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l118:s136:k173:d0:s0)		iTemp97 [k119 lr136:137 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp96 [k118 lr135:136 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l118:s137:k174:d0:s0)		iTemp98 [k120 lr137:138 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp97 [k119 lr136:137 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l118:s138:k175:d0:s0)		iTemp99 [k121 lr138:140 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp98 [k120 lr137:138 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l118:s139:k302:d0:s0)		send 0x3e8 {const-int literal}{argreg = 1}
check.c(l118:s140:k303:d0:s0)		send iTemp99 [k121 lr138:140 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l118:s141:k304:d0:s0)		iTemp100 [k122 lr141:142 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l118:s142:k177:d0:s0)		iTemp101 [k123 lr142:150 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp95 [k117 lr134:142 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp100 [k122 lr141:142 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l119:s143:k178:d0:s0)		iTemp102 [k124 lr143:144 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l119:s144:k179:d0:s0)		iTemp103 [k125 lr144:145 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp102 [k124 lr143:144 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l119:s145:k180:d0:s0)		iTemp104 [k126 lr145:146 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp103 [k125 lr144:145 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l119:s146:k181:d0:s0)		iTemp105 [k127 lr146:148 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp104 [k126 lr145:146 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l119:s147:k305:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l119:s148:k306:d0:s0)		send iTemp105 [k127 lr146:148 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l119:s149:k307:d0:s0)		iTemp106 [k128 lr149:150 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l119:s150:k183:d0:s0)		iTemp107 [k129 lr150:158 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp101 [k123 lr142:150 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp106 [k128 lr149:150 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l119:s151:k184:d0:s0)		iTemp108 [k130 lr151:152 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x4 {const-unsigned-char literal}
check.c(l119:s152:k185:d0:s0)		iTemp109 [k131 lr152:153 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp108 [k130 lr151:152 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l119:s153:k186:d0:s0)		iTemp110 [k132 lr153:154 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp109 [k131 lr152:153 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l119:s154:k187:d0:s0)		iTemp111 [k133 lr154:156 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp110 [k132 lr153:154 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l119:s155:k308:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l119:s156:k309:d0:s0)		send iTemp111 [k133 lr154:156 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l119:s157:k310:d0:s0)		iTemp112 [k134 lr157:158 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l119:s158:k189:d0:s0)		iTemp113 [k135 lr158:162 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp107 [k129 lr150:158 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp112 [k134 lr157:158 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l120:s159:k190:d0:s0)		iTemp114 [k136 lr159:160 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x5 {const-unsigned-char literal}
check.c(l120:s160:k191:d0:s0)		iTemp115 [k137 lr160:161 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp114 [k136 lr159:160 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l120:s161:k192:d0:s0)		iTemp116 [k138 lr161:162 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp115 [k137 lr160:161 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l120:s162:k193:d0:s0)		iTemp117 [k139 lr162:163 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = iTemp113 [k135 lr158:162 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp116 [k138 lr161:162 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ]
check.c(l120:s163:k194:d0:s0)		iTemp118 [k140 lr163:164 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp117 [k139 lr162:163 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l120:s164:k195:d0:s0)		iTemp119 [k141 lr164:165 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x04 r0x05 r0x06 r0x07 ] = (unsigned-long-int fixed)iTemp118 [k140 lr163:164 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]
check.c(l120:s165:k196:d0:s0)		*(iTemp90 [k112 lr127:165 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{unsigned-long-int near* fixed}[remat]) := iTemp119 [k141 lr164:165 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x04 r0x05 r0x06 r0x07 ]
check.c(l121:s166:k197:d0:s0)		 goto _swBrk_0($27)
check.c(l122:s167:k198:d0:s0)	 _case_0_54($21) :
check.c(l123:s168:k199:d0:s0)		iTemp120 [k143 lr168:169 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l123:s169:k200:d0:s0)		iTemp121 [k144 lr169:170 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp120 [k143 lr168:169 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l123:s170:k201:d0:s0)		iTemp122 [k145 lr170:171 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp121 [k144 lr169:170 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l123:s171:k202:d0:s0)		iTemp123 [k146 lr171:173 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp122 [k145 lr170:171 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l123:s172:k311:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l123:s173:k312:d0:s0)		send iTemp123 [k146 lr171:173 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l123:s174:k313:d0:s0)		iTemp124 [k147 lr174:182 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l123:s175:k204:d0:s0)		iTemp125 [k148 lr175:176 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l123:s176:k205:d0:s0)		iTemp126 [k149 lr176:177 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp125 [k148 lr175:176 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l123:s177:k206:d0:s0)		iTemp127 [k150 lr177:178 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp126 [k149 lr176:177 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l123:s178:k207:d0:s0)		iTemp128 [k151 lr178:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp127 [k150 lr177:178 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l123:s179:k314:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l123:s180:k315:d0:s0)		send iTemp128 [k151 lr178:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l123:s181:k316:d0:s0)		iTemp129 [k152 lr181:182 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l123:s182:k209:d0:s0)		iTemp130 [k153 lr182:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp124 [k147 lr174:182 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp129 [k152 lr181:182 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l124:s183:k210:d0:s0)		iTemp131 [k154 lr183:184 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l124:s184:k211:d0:s0)		iTemp132 [k155 lr184:185 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp131 [k154 lr183:184 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l124:s185:k212:d0:s0)		iTemp133 [k156 lr185:186 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp132 [k155 lr184:185 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l124:s186:k213:d0:s0)		iTemp134 [k157 lr186:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp133 [k156 lr185:186 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l124:s187:k214:d0:s0)		_sys_temp_min [k142 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed} = iTemp130 [k153 lr182:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp134 [k157 lr186:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l125:s188:k217:d0:s0)		 goto _swBrk_0($27)
check.c(l126:s189:k218:d0:s0)	 _case_0_55($22) :
check.c(l127:s190:k219:d0:s0)		iTemp137 [k161 lr190:191 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l127:s191:k220:d0:s0)		iTemp138 [k162 lr191:192 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp137 [k161 lr190:191 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l127:s192:k221:d0:s0)		iTemp139 [k163 lr192:193 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp138 [k162 lr191:192 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l127:s193:k222:d0:s0)		iTemp140 [k164 lr193:195 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp139 [k163 lr192:193 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l127:s194:k317:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l127:s195:k318:d0:s0)		send iTemp140 [k164 lr193:195 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l127:s196:k319:d0:s0)		iTemp141 [k165 lr196:204 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l127:s197:k224:d0:s0)		iTemp142 [k166 lr197:198 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l127:s198:k225:d0:s0)		iTemp143 [k167 lr198:199 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp142 [k166 lr197:198 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l127:s199:k226:d0:s0)		iTemp144 [k168 lr199:200 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp143 [k167 lr198:199 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l127:s200:k227:d0:s0)		iTemp145 [k169 lr200:202 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp144 [k168 lr199:200 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l127:s201:k320:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l127:s202:k321:d0:s0)		send iTemp145 [k169 lr200:202 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l127:s203:k322:d0:s0)		iTemp146 [k170 lr203:204 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l127:s204:k229:d0:s0)		iTemp147 [k171 lr204:209 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp141 [k165 lr196:204 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp146 [k170 lr203:204 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l128:s205:k230:d0:s0)		iTemp148 [k172 lr205:206 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l128:s206:k231:d0:s0)		iTemp149 [k173 lr206:207 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp148 [k172 lr205:206 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l128:s207:k232:d0:s0)		iTemp150 [k174 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp149 [k173 lr206:207 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l128:s208:k233:d0:s0)		iTemp151 [k175 lr208:209 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp150 [k174 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l128:s209:k234:d0:s0)		_sys_temp_max [k160 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed} = iTemp147 [k171 lr204:209 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp151 [k175 lr208:209 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l129:s210:k237:d0:s0)		 goto _swBrk_0($27)
check.c(l130:s211:k238:d0:s0)	 _case_0_56($23) :
check.c(l131:s212:k239:d0:s0)		iTemp154 [k179 lr212:213 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l131:s213:k240:d0:s0)		iTemp155 [k180 lr213:214 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp154 [k179 lr212:213 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l131:s214:k241:d0:s0)		iTemp156 [k181 lr214:215 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp155 [k180 lr213:214 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l131:s215:k242:d0:s0)		iTemp157 [k182 lr215:217 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp156 [k181 lr214:215 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l131:s216:k323:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l131:s217:k324:d0:s0)		send iTemp157 [k182 lr215:217 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l131:s218:k325:d0:s0)		iTemp158 [k183 lr218:226 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l131:s219:k244:d0:s0)		iTemp159 [k184 lr219:220 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l131:s220:k245:d0:s0)		iTemp160 [k185 lr220:221 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp159 [k184 lr219:220 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l131:s221:k246:d0:s0)		iTemp161 [k186 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp160 [k185 lr220:221 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l131:s222:k247:d0:s0)		iTemp162 [k187 lr222:224 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp161 [k186 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l131:s223:k326:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l131:s224:k327:d0:s0)		send iTemp162 [k187 lr222:224 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l131:s225:k328:d0:s0)		iTemp163 [k188 lr225:226 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l131:s226:k249:d0:s0)		iTemp164 [k189 lr226:231 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp158 [k183 lr218:226 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp163 [k188 lr225:226 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l132:s227:k250:d0:s0)		iTemp165 [k190 lr227:228 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l132:s228:k251:d0:s0)		iTemp166 [k191 lr228:229 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp165 [k190 lr227:228 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l132:s229:k252:d0:s0)		iTemp167 [k192 lr229:230 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp166 [k191 lr228:229 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l132:s230:k253:d0:s0)		iTemp168 [k193 lr230:231 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp167 [k192 lr229:230 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l132:s231:k254:d0:s0)		_sys_lumi_min [k178 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed} = iTemp164 [k189 lr226:231 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp168 [k193 lr230:231 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l133:s232:k257:d0:s0)		 goto _swBrk_0($27)
check.c(l134:s233:k258:d0:s0)	 _case_0_57($24) :
check.c(l135:s234:k259:d0:s0)		iTemp171 [k196 lr234:235 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l135:s235:k260:d0:s0)		iTemp172 [k197 lr235:236 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp171 [k196 lr234:235 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l135:s236:k261:d0:s0)		iTemp173 [k198 lr236:237 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp172 [k197 lr235:236 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l135:s237:k262:d0:s0)		iTemp174 [k199 lr237:239 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp173 [k198 lr236:237 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l135:s238:k329:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l135:s239:k330:d0:s0)		send iTemp174 [k199 lr237:239 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l135:s240:k331:d0:s0)		iTemp175 [k200 lr240:248 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l135:s241:k264:d0:s0)		iTemp176 [k201 lr241:242 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l135:s242:k265:d0:s0)		iTemp177 [k202 lr242:243 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp176 [k201 lr241:242 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l135:s243:k266:d0:s0)		iTemp178 [k203 lr243:244 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp177 [k202 lr242:243 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l135:s244:k267:d0:s0)		iTemp179 [k204 lr244:246 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp178 [k203 lr243:244 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l135:s245:k332:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l135:s246:k333:d0:s0)		send iTemp179 [k204 lr244:246 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l135:s247:k334:d0:s0)		iTemp180 [k205 lr247:248 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l135:s248:k269:d0:s0)		iTemp181 [k206 lr248:253 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp175 [k200 lr240:248 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp180 [k205 lr247:248 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l136:s249:k270:d0:s0)		iTemp182 [k207 lr249:250 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x00 r0x01 r0x02 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l136:s250:k271:d0:s0)		iTemp183 [k208 lr250:251 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x00 ] = @[iTemp182 [k207 lr249:250 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x00 r0x01 r0x02 ] + 0x0 {const-unsigned-char literal}]
check.c(l136:s251:k272:d0:s0)		iTemp184 [k209 lr251:252 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x00 r0x01 ] = (int fixed)iTemp183 [k208 lr250:251 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x00 ]
check.c(l136:s252:k273:d0:s0)		iTemp185 [k210 lr252:253 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x00 r0x01 ] = iTemp184 [k209 lr251:252 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x00 r0x01 ] - 0x30 {int literal}
check.c(l136:s253:k274:d0:s0)		_sys_temp_max [k160 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed} = iTemp181 [k206 lr248:253 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp185 [k210 lr252:253 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x00 r0x01 ]
check.c(l137:s254:k277:d0:s0)		 goto _swBrk_0($27)
check.c(l138:s255:k278:d0:s0)	 _case_0_82($25) :
check.c(l139:s256:k279:d0:s0)		iTemp1 [k4 lr4:258 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _check_comando_ret_1_74}[r0x03 ] := 0x0 {const-char literal}
check.c(l143:s257:k283:d0:s0)	 _swBrk_0($27) :
check.c(l145:s258:k284:d0:s0)		ret iTemp1 [k4 lr4:258 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _check_comando_ret_1_74}[r0x03 ]
check.c(l145:s259:k285:d0:s0)	 _return($32) :
check.c(l145:s260:k286:d0:s0)		eproc _check_comando [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char function ( char generic* fixed) fixed}

----------------------------------------------------------------
Basic Block _eBBlock49 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 19 : bbnum = 26 1st iCode = 119 , last iCode = 120
visited 0 : hasFcall = 0

defines bitVector :bitvector Size = 299 bSize = 38
Bits on { (149) }

local defines bitVector :bitvector Size = 299 bSize = 38
Bits on { (149) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (3) (5) (6) (8) (10) (12) (140) (141) (142) (143) (144) }

outDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (3) (5) (6) (8) (10) (12) (140) (141) (142) (143) (144) (149) }

usesDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { }

----------------------------------------------------------------
check.c(l113:s119:k149:d0:s0)		_hab_sensor [k103 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed} := 0x0 {const-unsigned-char literal}
check.c(l113:s120:k150:d0:s0)		 goto _swBrk_0($27)
check.c(l113:s121:k151:d0:s0)	 _iffalse_7($18) :
check.c(l114:s122:k156:d0:s0)		if iTemp81 [k101 lr116:122 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] != 0 goto _swBrk_0($27)
check.c(l115:s123:k160:d0:s0)		_hab_sensor [k103 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed} := 0x2 {const-unsigned-char literal}
check.c(l116:s124:k163:d0:s0)		 goto _swBrk_0($27)
check.c(l117:s125:k164:d0:s0)	 _case_0_53($20) :
check.c(l118:s126:k165:d0:s0)		iTemp89 [k111 lr126:127 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{unsigned-long-int near* fixed}[remat] = &[_sys_timer_pool [k110 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int [2] fixed}]
check.c(l118:s127:k166:d0:s0)		iTemp90 [k112 lr127:165 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{unsigned-long-int near* fixed}[remat] = iTemp89 [k111 lr126:127 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{unsigned-long-int near* fixed}[remat] + 0x4 {unsigned-char literal}
check.c(l118:s128:k167:d0:s0)		iTemp91 [k113 lr128:129 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l118:s129:k168:d0:s0)		iTemp92 [k114 lr129:130 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp91 [k113 lr128:129 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l118:s130:k169:d0:s0)		iTemp93 [k115 lr130:131 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp92 [k114 lr129:130 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l118:s131:k170:d0:s0)		iTemp94 [k116 lr131:133 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp93 [k115 lr130:131 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l118:s132:k299:d0:s0)		send 0x2710 {const-int literal}{argreg = 1}
check.c(l118:s133:k300:d0:s0)		send iTemp94 [k116 lr131:133 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l118:s134:k301:d0:s0)		iTemp95 [k117 lr134:142 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l118:s135:k172:d0:s0)		iTemp96 [k118 lr135:136 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l118:s136:k173:d0:s0)		iTemp97 [k119 lr136:137 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp96 [k118 lr135:136 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l118:s137:k174:d0:s0)		iTemp98 [k120 lr137:138 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp97 [k119 lr136:137 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l118:s138:k175:d0:s0)		iTemp99 [k121 lr138:140 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp98 [k120 lr137:138 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l118:s139:k302:d0:s0)		send 0x3e8 {const-int literal}{argreg = 1}
check.c(l118:s140:k303:d0:s0)		send iTemp99 [k121 lr138:140 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l118:s141:k304:d0:s0)		iTemp100 [k122 lr141:142 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l118:s142:k177:d0:s0)		iTemp101 [k123 lr142:150 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp95 [k117 lr134:142 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp100 [k122 lr141:142 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l119:s143:k178:d0:s0)		iTemp102 [k124 lr143:144 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l119:s144:k179:d0:s0)		iTemp103 [k125 lr144:145 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp102 [k124 lr143:144 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l119:s145:k180:d0:s0)		iTemp104 [k126 lr145:146 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp103 [k125 lr144:145 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l119:s146:k181:d0:s0)		iTemp105 [k127 lr146:148 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp104 [k126 lr145:146 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l119:s147:k305:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l119:s148:k306:d0:s0)		send iTemp105 [k127 lr146:148 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l119:s149:k307:d0:s0)		iTemp106 [k128 lr149:150 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l119:s150:k183:d0:s0)		iTemp107 [k129 lr150:158 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp101 [k123 lr142:150 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp106 [k128 lr149:150 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l119:s151:k184:d0:s0)		iTemp108 [k130 lr151:152 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x4 {const-unsigned-char literal}
check.c(l119:s152:k185:d0:s0)		iTemp109 [k131 lr152:153 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp108 [k130 lr151:152 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l119:s153:k186:d0:s0)		iTemp110 [k132 lr153:154 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp109 [k131 lr152:153 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l119:s154:k187:d0:s0)		iTemp111 [k133 lr154:156 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp110 [k132 lr153:154 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l119:s155:k308:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l119:s156:k309:d0:s0)		send iTemp111 [k133 lr154:156 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l119:s157:k310:d0:s0)		iTemp112 [k134 lr157:158 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l119:s158:k189:d0:s0)		iTemp113 [k135 lr158:162 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp107 [k129 lr150:158 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp112 [k134 lr157:158 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l120:s159:k190:d0:s0)		iTemp114 [k136 lr159:160 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x5 {const-unsigned-char literal}
check.c(l120:s160:k191:d0:s0)		iTemp115 [k137 lr160:161 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp114 [k136 lr159:160 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l120:s161:k192:d0:s0)		iTemp116 [k138 lr161:162 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp115 [k137 lr160:161 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l120:s162:k193:d0:s0)		iTemp117 [k139 lr162:163 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = iTemp113 [k135 lr158:162 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp116 [k138 lr161:162 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ]
check.c(l120:s163:k194:d0:s0)		iTemp118 [k140 lr163:164 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp117 [k139 lr162:163 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l120:s164:k195:d0:s0)		iTemp119 [k141 lr164:165 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x04 r0x05 r0x06 r0x07 ] = (unsigned-long-int fixed)iTemp118 [k140 lr163:164 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]
check.c(l120:s165:k196:d0:s0)		*(iTemp90 [k112 lr127:165 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{unsigned-long-int near* fixed}[remat]) := iTemp119 [k141 lr164:165 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x04 r0x05 r0x06 r0x07 ]
check.c(l121:s166:k197:d0:s0)		 goto _swBrk_0($27)
check.c(l122:s167:k198:d0:s0)	 _case_0_54($21) :
check.c(l123:s168:k199:d0:s0)		iTemp120 [k143 lr168:169 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l123:s169:k200:d0:s0)		iTemp121 [k144 lr169:170 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp120 [k143 lr168:169 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l123:s170:k201:d0:s0)		iTemp122 [k145 lr170:171 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp121 [k144 lr169:170 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l123:s171:k202:d0:s0)		iTemp123 [k146 lr171:173 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp122 [k145 lr170:171 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l123:s172:k311:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l123:s173:k312:d0:s0)		send iTemp123 [k146 lr171:173 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l123:s174:k313:d0:s0)		iTemp124 [k147 lr174:182 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l123:s175:k204:d0:s0)		iTemp125 [k148 lr175:176 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l123:s176:k205:d0:s0)		iTemp126 [k149 lr176:177 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp125 [k148 lr175:176 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l123:s177:k206:d0:s0)		iTemp127 [k150 lr177:178 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp126 [k149 lr176:177 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l123:s178:k207:d0:s0)		iTemp128 [k151 lr178:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp127 [k150 lr177:178 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l123:s179:k314:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l123:s180:k315:d0:s0)		send iTemp128 [k151 lr178:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l123:s181:k316:d0:s0)		iTemp129 [k152 lr181:182 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l123:s182:k209:d0:s0)		iTemp130 [k153 lr182:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp124 [k147 lr174:182 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp129 [k152 lr181:182 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l124:s183:k210:d0:s0)		iTemp131 [k154 lr183:184 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l124:s184:k211:d0:s0)		iTemp132 [k155 lr184:185 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp131 [k154 lr183:184 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l124:s185:k212:d0:s0)		iTemp133 [k156 lr185:186 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp132 [k155 lr184:185 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l124:s186:k213:d0:s0)		iTemp134 [k157 lr186:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp133 [k156 lr185:186 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l124:s187:k214:d0:s0)		_sys_temp_min [k142 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed} = iTemp130 [k153 lr182:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp134 [k157 lr186:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l125:s188:k217:d0:s0)		 goto _swBrk_0($27)
check.c(l126:s189:k218:d0:s0)	 _case_0_55($22) :
check.c(l127:s190:k219:d0:s0)		iTemp137 [k161 lr190:191 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l127:s191:k220:d0:s0)		iTemp138 [k162 lr191:192 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp137 [k161 lr190:191 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l127:s192:k221:d0:s0)		iTemp139 [k163 lr192:193 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp138 [k162 lr191:192 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l127:s193:k222:d0:s0)		iTemp140 [k164 lr193:195 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp139 [k163 lr192:193 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l127:s194:k317:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l127:s195:k318:d0:s0)		send iTemp140 [k164 lr193:195 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l127:s196:k319:d0:s0)		iTemp141 [k165 lr196:204 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l127:s197:k224:d0:s0)		iTemp142 [k166 lr197:198 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l127:s198:k225:d0:s0)		iTemp143 [k167 lr198:199 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp142 [k166 lr197:198 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l127:s199:k226:d0:s0)		iTemp144 [k168 lr199:200 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp143 [k167 lr198:199 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l127:s200:k227:d0:s0)		iTemp145 [k169 lr200:202 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp144 [k168 lr199:200 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l127:s201:k320:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l127:s202:k321:d0:s0)		send iTemp145 [k169 lr200:202 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l127:s203:k322:d0:s0)		iTemp146 [k170 lr203:204 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l127:s204:k229:d0:s0)		iTemp147 [k171 lr204:209 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp141 [k165 lr196:204 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp146 [k170 lr203:204 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l128:s205:k230:d0:s0)		iTemp148 [k172 lr205:206 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l128:s206:k231:d0:s0)		iTemp149 [k173 lr206:207 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp148 [k172 lr205:206 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l128:s207:k232:d0:s0)		iTemp150 [k174 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp149 [k173 lr206:207 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l128:s208:k233:d0:s0)		iTemp151 [k175 lr208:209 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp150 [k174 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l128:s209:k234:d0:s0)		_sys_temp_max [k160 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed} = iTemp147 [k171 lr204:209 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp151 [k175 lr208:209 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l129:s210:k237:d0:s0)		 goto _swBrk_0($27)
check.c(l130:s211:k238:d0:s0)	 _case_0_56($23) :
check.c(l131:s212:k239:d0:s0)		iTemp154 [k179 lr212:213 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l131:s213:k240:d0:s0)		iTemp155 [k180 lr213:214 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp154 [k179 lr212:213 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l131:s214:k241:d0:s0)		iTemp156 [k181 lr214:215 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp155 [k180 lr213:214 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l131:s215:k242:d0:s0)		iTemp157 [k182 lr215:217 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp156 [k181 lr214:215 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l131:s216:k323:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l131:s217:k324:d0:s0)		send iTemp157 [k182 lr215:217 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l131:s218:k325:d0:s0)		iTemp158 [k183 lr218:226 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l131:s219:k244:d0:s0)		iTemp159 [k184 lr219:220 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l131:s220:k245:d0:s0)		iTemp160 [k185 lr220:221 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp159 [k184 lr219:220 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l131:s221:k246:d0:s0)		iTemp161 [k186 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp160 [k185 lr220:221 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l131:s222:k247:d0:s0)		iTemp162 [k187 lr222:224 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp161 [k186 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l131:s223:k326:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l131:s224:k327:d0:s0)		send iTemp162 [k187 lr222:224 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l131:s225:k328:d0:s0)		iTemp163 [k188 lr225:226 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l131:s226:k249:d0:s0)		iTemp164 [k189 lr226:231 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp158 [k183 lr218:226 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp163 [k188 lr225:226 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l132:s227:k250:d0:s0)		iTemp165 [k190 lr227:228 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l132:s228:k251:d0:s0)		iTemp166 [k191 lr228:229 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp165 [k190 lr227:228 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l132:s229:k252:d0:s0)		iTemp167 [k192 lr229:230 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp166 [k191 lr228:229 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l132:s230:k253:d0:s0)		iTemp168 [k193 lr230:231 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp167 [k192 lr229:230 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l132:s231:k254:d0:s0)		_sys_lumi_min [k178 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed} = iTemp164 [k189 lr226:231 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp168 [k193 lr230:231 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l133:s232:k257:d0:s0)		 goto _swBrk_0($27)
check.c(l134:s233:k258:d0:s0)	 _case_0_57($24) :
check.c(l135:s234:k259:d0:s0)		iTemp171 [k196 lr234:235 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l135:s235:k260:d0:s0)		iTemp172 [k197 lr235:236 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp171 [k196 lr234:235 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l135:s236:k261:d0:s0)		iTemp173 [k198 lr236:237 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp172 [k197 lr235:236 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l135:s237:k262:d0:s0)		iTemp174 [k199 lr237:239 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp173 [k198 lr236:237 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l135:s238:k329:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l135:s239:k330:d0:s0)		send iTemp174 [k199 lr237:239 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l135:s240:k331:d0:s0)		iTemp175 [k200 lr240:248 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l135:s241:k264:d0:s0)		iTemp176 [k201 lr241:242 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l135:s242:k265:d0:s0)		iTemp177 [k202 lr242:243 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp176 [k201 lr241:242 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l135:s243:k266:d0:s0)		iTemp178 [k203 lr243:244 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp177 [k202 lr242:243 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l135:s244:k267:d0:s0)		iTemp179 [k204 lr244:246 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp178 [k203 lr243:244 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l135:s245:k332:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l135:s246:k333:d0:s0)		send iTemp179 [k204 lr244:246 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l135:s247:k334:d0:s0)		iTemp180 [k205 lr247:248 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l135:s248:k269:d0:s0)		iTemp181 [k206 lr248:253 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp175 [k200 lr240:248 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp180 [k205 lr247:248 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l136:s249:k270:d0:s0)		iTemp182 [k207 lr249:250 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x00 r0x01 r0x02 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l136:s250:k271:d0:s0)		iTemp183 [k208 lr250:251 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x00 ] = @[iTemp182 [k207 lr249:250 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x00 r0x01 r0x02 ] + 0x0 {const-unsigned-char literal}]
check.c(l136:s251:k272:d0:s0)		iTemp184 [k209 lr251:252 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x00 r0x01 ] = (int fixed)iTemp183 [k208 lr250:251 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x00 ]
check.c(l136:s252:k273:d0:s0)		iTemp185 [k210 lr252:253 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x00 r0x01 ] = iTemp184 [k209 lr251:252 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x00 r0x01 ] - 0x30 {int literal}
check.c(l136:s253:k274:d0:s0)		_sys_temp_max [k160 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed} = iTemp181 [k206 lr248:253 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp185 [k210 lr252:253 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x00 r0x01 ]
check.c(l137:s254:k277:d0:s0)		 goto _swBrk_0($27)
check.c(l138:s255:k278:d0:s0)	 _case_0_82($25) :
check.c(l139:s256:k279:d0:s0)		iTemp1 [k4 lr4:258 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _check_comando_ret_1_74}[r0x03 ] := 0x0 {const-char literal}
check.c(l143:s257:k283:d0:s0)	 _swBrk_0($27) :
check.c(l145:s258:k284:d0:s0)		ret iTemp1 [k4 lr4:258 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _check_comando_ret_1_74}[r0x03 ]
check.c(l145:s259:k285:d0:s0)	 _return($32) :
check.c(l145:s260:k286:d0:s0)		eproc _check_comando [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char function ( char generic* fixed) fixed}

----------------------------------------------------------------
Basic Block _iffalse_7 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 20 : bbnum = 27 1st iCode = 121 , last iCode = 122
visited 0 : hasFcall = 0

defines bitVector :bitvector Size = 299 bSize = 38
Bits on { }

local defines bitVector :
pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (3) (5) (6) (8) (10) (12) (140) (141) (142) (143) (144) }

outDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (3) (5) (6) (8) (10) (12) (140) (141) (142) (143) (144) }

usesDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (143) }

----------------------------------------------------------------
check.c(l113:s121:k151:d0:s0)	 _iffalse_7($18) :
check.c(l114:s122:k156:d0:s0)		if iTemp81 [k101 lr116:122 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] != 0 goto _swBrk_0($27)
check.c(l115:s123:k160:d0:s0)		_hab_sensor [k103 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed} := 0x2 {const-unsigned-char literal}
check.c(l116:s124:k163:d0:s0)		 goto _swBrk_0($27)
check.c(l117:s125:k164:d0:s0)	 _case_0_53($20) :
check.c(l118:s126:k165:d0:s0)		iTemp89 [k111 lr126:127 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{unsigned-long-int near* fixed}[remat] = &[_sys_timer_pool [k110 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int [2] fixed}]
check.c(l118:s127:k166:d0:s0)		iTemp90 [k112 lr127:165 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{unsigned-long-int near* fixed}[remat] = iTemp89 [k111 lr126:127 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{unsigned-long-int near* fixed}[remat] + 0x4 {unsigned-char literal}
check.c(l118:s128:k167:d0:s0)		iTemp91 [k113 lr128:129 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l118:s129:k168:d0:s0)		iTemp92 [k114 lr129:130 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp91 [k113 lr128:129 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l118:s130:k169:d0:s0)		iTemp93 [k115 lr130:131 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp92 [k114 lr129:130 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l118:s131:k170:d0:s0)		iTemp94 [k116 lr131:133 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp93 [k115 lr130:131 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l118:s132:k299:d0:s0)		send 0x2710 {const-int literal}{argreg = 1}
check.c(l118:s133:k300:d0:s0)		send iTemp94 [k116 lr131:133 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l118:s134:k301:d0:s0)		iTemp95 [k117 lr134:142 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l118:s135:k172:d0:s0)		iTemp96 [k118 lr135:136 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l118:s136:k173:d0:s0)		iTemp97 [k119 lr136:137 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp96 [k118 lr135:136 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l118:s137:k174:d0:s0)		iTemp98 [k120 lr137:138 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp97 [k119 lr136:137 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l118:s138:k175:d0:s0)		iTemp99 [k121 lr138:140 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp98 [k120 lr137:138 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l118:s139:k302:d0:s0)		send 0x3e8 {const-int literal}{argreg = 1}
check.c(l118:s140:k303:d0:s0)		send iTemp99 [k121 lr138:140 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l118:s141:k304:d0:s0)		iTemp100 [k122 lr141:142 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l118:s142:k177:d0:s0)		iTemp101 [k123 lr142:150 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp95 [k117 lr134:142 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp100 [k122 lr141:142 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l119:s143:k178:d0:s0)		iTemp102 [k124 lr143:144 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l119:s144:k179:d0:s0)		iTemp103 [k125 lr144:145 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp102 [k124 lr143:144 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l119:s145:k180:d0:s0)		iTemp104 [k126 lr145:146 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp103 [k125 lr144:145 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l119:s146:k181:d0:s0)		iTemp105 [k127 lr146:148 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp104 [k126 lr145:146 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l119:s147:k305:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l119:s148:k306:d0:s0)		send iTemp105 [k127 lr146:148 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l119:s149:k307:d0:s0)		iTemp106 [k128 lr149:150 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l119:s150:k183:d0:s0)		iTemp107 [k129 lr150:158 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp101 [k123 lr142:150 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp106 [k128 lr149:150 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l119:s151:k184:d0:s0)		iTemp108 [k130 lr151:152 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x4 {const-unsigned-char literal}
check.c(l119:s152:k185:d0:s0)		iTemp109 [k131 lr152:153 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp108 [k130 lr151:152 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l119:s153:k186:d0:s0)		iTemp110 [k132 lr153:154 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp109 [k131 lr152:153 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l119:s154:k187:d0:s0)		iTemp111 [k133 lr154:156 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp110 [k132 lr153:154 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l119:s155:k308:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l119:s156:k309:d0:s0)		send iTemp111 [k133 lr154:156 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l119:s157:k310:d0:s0)		iTemp112 [k134 lr157:158 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l119:s158:k189:d0:s0)		iTemp113 [k135 lr158:162 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp107 [k129 lr150:158 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp112 [k134 lr157:158 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l120:s159:k190:d0:s0)		iTemp114 [k136 lr159:160 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x5 {const-unsigned-char literal}
check.c(l120:s160:k191:d0:s0)		iTemp115 [k137 lr160:161 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp114 [k136 lr159:160 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l120:s161:k192:d0:s0)		iTemp116 [k138 lr161:162 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp115 [k137 lr160:161 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l120:s162:k193:d0:s0)		iTemp117 [k139 lr162:163 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = iTemp113 [k135 lr158:162 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp116 [k138 lr161:162 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ]
check.c(l120:s163:k194:d0:s0)		iTemp118 [k140 lr163:164 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp117 [k139 lr162:163 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l120:s164:k195:d0:s0)		iTemp119 [k141 lr164:165 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x04 r0x05 r0x06 r0x07 ] = (unsigned-long-int fixed)iTemp118 [k140 lr163:164 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]
check.c(l120:s165:k196:d0:s0)		*(iTemp90 [k112 lr127:165 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{unsigned-long-int near* fixed}[remat]) := iTemp119 [k141 lr164:165 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x04 r0x05 r0x06 r0x07 ]
check.c(l121:s166:k197:d0:s0)		 goto _swBrk_0($27)
check.c(l122:s167:k198:d0:s0)	 _case_0_54($21) :
check.c(l123:s168:k199:d0:s0)		iTemp120 [k143 lr168:169 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l123:s169:k200:d0:s0)		iTemp121 [k144 lr169:170 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp120 [k143 lr168:169 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l123:s170:k201:d0:s0)		iTemp122 [k145 lr170:171 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp121 [k144 lr169:170 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l123:s171:k202:d0:s0)		iTemp123 [k146 lr171:173 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp122 [k145 lr170:171 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l123:s172:k311:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l123:s173:k312:d0:s0)		send iTemp123 [k146 lr171:173 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l123:s174:k313:d0:s0)		iTemp124 [k147 lr174:182 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l123:s175:k204:d0:s0)		iTemp125 [k148 lr175:176 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l123:s176:k205:d0:s0)		iTemp126 [k149 lr176:177 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp125 [k148 lr175:176 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l123:s177:k206:d0:s0)		iTemp127 [k150 lr177:178 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp126 [k149 lr176:177 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l123:s178:k207:d0:s0)		iTemp128 [k151 lr178:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp127 [k150 lr177:178 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l123:s179:k314:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l123:s180:k315:d0:s0)		send iTemp128 [k151 lr178:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l123:s181:k316:d0:s0)		iTemp129 [k152 lr181:182 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l123:s182:k209:d0:s0)		iTemp130 [k153 lr182:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp124 [k147 lr174:182 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp129 [k152 lr181:182 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l124:s183:k210:d0:s0)		iTemp131 [k154 lr183:184 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l124:s184:k211:d0:s0)		iTemp132 [k155 lr184:185 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp131 [k154 lr183:184 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l124:s185:k212:d0:s0)		iTemp133 [k156 lr185:186 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp132 [k155 lr184:185 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l124:s186:k213:d0:s0)		iTemp134 [k157 lr186:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp133 [k156 lr185:186 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l124:s187:k214:d0:s0)		_sys_temp_min [k142 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed} = iTemp130 [k153 lr182:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp134 [k157 lr186:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l125:s188:k217:d0:s0)		 goto _swBrk_0($27)
check.c(l126:s189:k218:d0:s0)	 _case_0_55($22) :
check.c(l127:s190:k219:d0:s0)		iTemp137 [k161 lr190:191 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l127:s191:k220:d0:s0)		iTemp138 [k162 lr191:192 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp137 [k161 lr190:191 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l127:s192:k221:d0:s0)		iTemp139 [k163 lr192:193 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp138 [k162 lr191:192 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l127:s193:k222:d0:s0)		iTemp140 [k164 lr193:195 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp139 [k163 lr192:193 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l127:s194:k317:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l127:s195:k318:d0:s0)		send iTemp140 [k164 lr193:195 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l127:s196:k319:d0:s0)		iTemp141 [k165 lr196:204 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l127:s197:k224:d0:s0)		iTemp142 [k166 lr197:198 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l127:s198:k225:d0:s0)		iTemp143 [k167 lr198:199 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp142 [k166 lr197:198 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l127:s199:k226:d0:s0)		iTemp144 [k168 lr199:200 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp143 [k167 lr198:199 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l127:s200:k227:d0:s0)		iTemp145 [k169 lr200:202 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp144 [k168 lr199:200 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l127:s201:k320:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l127:s202:k321:d0:s0)		send iTemp145 [k169 lr200:202 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l127:s203:k322:d0:s0)		iTemp146 [k170 lr203:204 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l127:s204:k229:d0:s0)		iTemp147 [k171 lr204:209 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp141 [k165 lr196:204 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp146 [k170 lr203:204 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l128:s205:k230:d0:s0)		iTemp148 [k172 lr205:206 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l128:s206:k231:d0:s0)		iTemp149 [k173 lr206:207 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp148 [k172 lr205:206 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l128:s207:k232:d0:s0)		iTemp150 [k174 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp149 [k173 lr206:207 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l128:s208:k233:d0:s0)		iTemp151 [k175 lr208:209 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp150 [k174 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l128:s209:k234:d0:s0)		_sys_temp_max [k160 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed} = iTemp147 [k171 lr204:209 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp151 [k175 lr208:209 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l129:s210:k237:d0:s0)		 goto _swBrk_0($27)
check.c(l130:s211:k238:d0:s0)	 _case_0_56($23) :
check.c(l131:s212:k239:d0:s0)		iTemp154 [k179 lr212:213 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l131:s213:k240:d0:s0)		iTemp155 [k180 lr213:214 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp154 [k179 lr212:213 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l131:s214:k241:d0:s0)		iTemp156 [k181 lr214:215 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp155 [k180 lr213:214 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l131:s215:k242:d0:s0)		iTemp157 [k182 lr215:217 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp156 [k181 lr214:215 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l131:s216:k323:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l131:s217:k324:d0:s0)		send iTemp157 [k182 lr215:217 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l131:s218:k325:d0:s0)		iTemp158 [k183 lr218:226 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l131:s219:k244:d0:s0)		iTemp159 [k184 lr219:220 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l131:s220:k245:d0:s0)		iTemp160 [k185 lr220:221 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp159 [k184 lr219:220 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l131:s221:k246:d0:s0)		iTemp161 [k186 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp160 [k185 lr220:221 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l131:s222:k247:d0:s0)		iTemp162 [k187 lr222:224 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp161 [k186 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l131:s223:k326:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l131:s224:k327:d0:s0)		send iTemp162 [k187 lr222:224 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l131:s225:k328:d0:s0)		iTemp163 [k188 lr225:226 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l131:s226:k249:d0:s0)		iTemp164 [k189 lr226:231 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp158 [k183 lr218:226 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp163 [k188 lr225:226 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l132:s227:k250:d0:s0)		iTemp165 [k190 lr227:228 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l132:s228:k251:d0:s0)		iTemp166 [k191 lr228:229 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp165 [k190 lr227:228 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l132:s229:k252:d0:s0)		iTemp167 [k192 lr229:230 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp166 [k191 lr228:229 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l132:s230:k253:d0:s0)		iTemp168 [k193 lr230:231 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp167 [k192 lr229:230 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l132:s231:k254:d0:s0)		_sys_lumi_min [k178 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed} = iTemp164 [k189 lr226:231 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp168 [k193 lr230:231 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l133:s232:k257:d0:s0)		 goto _swBrk_0($27)
check.c(l134:s233:k258:d0:s0)	 _case_0_57($24) :
check.c(l135:s234:k259:d0:s0)		iTemp171 [k196 lr234:235 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l135:s235:k260:d0:s0)		iTemp172 [k197 lr235:236 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp171 [k196 lr234:235 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l135:s236:k261:d0:s0)		iTemp173 [k198 lr236:237 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp172 [k197 lr235:236 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l135:s237:k262:d0:s0)		iTemp174 [k199 lr237:239 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp173 [k198 lr236:237 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l135:s238:k329:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l135:s239:k330:d0:s0)		send iTemp174 [k199 lr237:239 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l135:s240:k331:d0:s0)		iTemp175 [k200 lr240:248 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l135:s241:k264:d0:s0)		iTemp176 [k201 lr241:242 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l135:s242:k265:d0:s0)		iTemp177 [k202 lr242:243 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp176 [k201 lr241:242 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l135:s243:k266:d0:s0)		iTemp178 [k203 lr243:244 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp177 [k202 lr242:243 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l135:s244:k267:d0:s0)		iTemp179 [k204 lr244:246 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp178 [k203 lr243:244 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l135:s245:k332:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l135:s246:k333:d0:s0)		send iTemp179 [k204 lr244:246 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l135:s247:k334:d0:s0)		iTemp180 [k205 lr247:248 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l135:s248:k269:d0:s0)		iTemp181 [k206 lr248:253 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp175 [k200 lr240:248 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp180 [k205 lr247:248 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l136:s249:k270:d0:s0)		iTemp182 [k207 lr249:250 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x00 r0x01 r0x02 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l136:s250:k271:d0:s0)		iTemp183 [k208 lr250:251 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x00 ] = @[iTemp182 [k207 lr249:250 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x00 r0x01 r0x02 ] + 0x0 {const-unsigned-char literal}]
check.c(l136:s251:k272:d0:s0)		iTemp184 [k209 lr251:252 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x00 r0x01 ] = (int fixed)iTemp183 [k208 lr250:251 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x00 ]
check.c(l136:s252:k273:d0:s0)		iTemp185 [k210 lr252:253 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x00 r0x01 ] = iTemp184 [k209 lr251:252 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x00 r0x01 ] - 0x30 {int literal}
check.c(l136:s253:k274:d0:s0)		_sys_temp_max [k160 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed} = iTemp181 [k206 lr248:253 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp185 [k210 lr252:253 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x00 r0x01 ]
check.c(l137:s254:k277:d0:s0)		 goto _swBrk_0($27)
check.c(l138:s255:k278:d0:s0)	 _case_0_82($25) :
check.c(l139:s256:k279:d0:s0)		iTemp1 [k4 lr4:258 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _check_comando_ret_1_74}[r0x03 ] := 0x0 {const-char literal}
check.c(l143:s257:k283:d0:s0)	 _swBrk_0($27) :
check.c(l145:s258:k284:d0:s0)		ret iTemp1 [k4 lr4:258 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _check_comando_ret_1_74}[r0x03 ]
check.c(l145:s259:k285:d0:s0)	 _return($32) :
check.c(l145:s260:k286:d0:s0)		eproc _check_comando [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char function ( char generic* fixed) fixed}

----------------------------------------------------------------
Basic Block _eBBlock50 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 21 : bbnum = 28 1st iCode = 123 , last iCode = 124
visited 0 : hasFcall = 0

defines bitVector :bitvector Size = 299 bSize = 38
Bits on { (160) }

local defines bitVector :bitvector Size = 299 bSize = 38
Bits on { (160) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (3) (5) (6) (8) (10) (12) (140) (141) (142) (143) (144) }

outDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (3) (5) (6) (8) (10) (12) (140) (141) (142) (143) (144) (160) }

usesDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { }

----------------------------------------------------------------
check.c(l115:s123:k160:d0:s0)		_hab_sensor [k103 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed} := 0x2 {const-unsigned-char literal}
check.c(l116:s124:k163:d0:s0)		 goto _swBrk_0($27)
check.c(l117:s125:k164:d0:s0)	 _case_0_53($20) :
check.c(l118:s126:k165:d0:s0)		iTemp89 [k111 lr126:127 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{unsigned-long-int near* fixed}[remat] = &[_sys_timer_pool [k110 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int [2] fixed}]
check.c(l118:s127:k166:d0:s0)		iTemp90 [k112 lr127:165 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{unsigned-long-int near* fixed}[remat] = iTemp89 [k111 lr126:127 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{unsigned-long-int near* fixed}[remat] + 0x4 {unsigned-char literal}
check.c(l118:s128:k167:d0:s0)		iTemp91 [k113 lr128:129 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l118:s129:k168:d0:s0)		iTemp92 [k114 lr129:130 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp91 [k113 lr128:129 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l118:s130:k169:d0:s0)		iTemp93 [k115 lr130:131 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp92 [k114 lr129:130 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l118:s131:k170:d0:s0)		iTemp94 [k116 lr131:133 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp93 [k115 lr130:131 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l118:s132:k299:d0:s0)		send 0x2710 {const-int literal}{argreg = 1}
check.c(l118:s133:k300:d0:s0)		send iTemp94 [k116 lr131:133 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l118:s134:k301:d0:s0)		iTemp95 [k117 lr134:142 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l118:s135:k172:d0:s0)		iTemp96 [k118 lr135:136 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l118:s136:k173:d0:s0)		iTemp97 [k119 lr136:137 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp96 [k118 lr135:136 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l118:s137:k174:d0:s0)		iTemp98 [k120 lr137:138 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp97 [k119 lr136:137 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l118:s138:k175:d0:s0)		iTemp99 [k121 lr138:140 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp98 [k120 lr137:138 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l118:s139:k302:d0:s0)		send 0x3e8 {const-int literal}{argreg = 1}
check.c(l118:s140:k303:d0:s0)		send iTemp99 [k121 lr138:140 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l118:s141:k304:d0:s0)		iTemp100 [k122 lr141:142 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l118:s142:k177:d0:s0)		iTemp101 [k123 lr142:150 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp95 [k117 lr134:142 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp100 [k122 lr141:142 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l119:s143:k178:d0:s0)		iTemp102 [k124 lr143:144 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l119:s144:k179:d0:s0)		iTemp103 [k125 lr144:145 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp102 [k124 lr143:144 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l119:s145:k180:d0:s0)		iTemp104 [k126 lr145:146 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp103 [k125 lr144:145 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l119:s146:k181:d0:s0)		iTemp105 [k127 lr146:148 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp104 [k126 lr145:146 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l119:s147:k305:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l119:s148:k306:d0:s0)		send iTemp105 [k127 lr146:148 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l119:s149:k307:d0:s0)		iTemp106 [k128 lr149:150 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l119:s150:k183:d0:s0)		iTemp107 [k129 lr150:158 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp101 [k123 lr142:150 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp106 [k128 lr149:150 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l119:s151:k184:d0:s0)		iTemp108 [k130 lr151:152 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x4 {const-unsigned-char literal}
check.c(l119:s152:k185:d0:s0)		iTemp109 [k131 lr152:153 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp108 [k130 lr151:152 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l119:s153:k186:d0:s0)		iTemp110 [k132 lr153:154 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp109 [k131 lr152:153 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l119:s154:k187:d0:s0)		iTemp111 [k133 lr154:156 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp110 [k132 lr153:154 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l119:s155:k308:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l119:s156:k309:d0:s0)		send iTemp111 [k133 lr154:156 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l119:s157:k310:d0:s0)		iTemp112 [k134 lr157:158 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l119:s158:k189:d0:s0)		iTemp113 [k135 lr158:162 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp107 [k129 lr150:158 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp112 [k134 lr157:158 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l120:s159:k190:d0:s0)		iTemp114 [k136 lr159:160 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x5 {const-unsigned-char literal}
check.c(l120:s160:k191:d0:s0)		iTemp115 [k137 lr160:161 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp114 [k136 lr159:160 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l120:s161:k192:d0:s0)		iTemp116 [k138 lr161:162 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp115 [k137 lr160:161 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l120:s162:k193:d0:s0)		iTemp117 [k139 lr162:163 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = iTemp113 [k135 lr158:162 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp116 [k138 lr161:162 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ]
check.c(l120:s163:k194:d0:s0)		iTemp118 [k140 lr163:164 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp117 [k139 lr162:163 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l120:s164:k195:d0:s0)		iTemp119 [k141 lr164:165 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x04 r0x05 r0x06 r0x07 ] = (unsigned-long-int fixed)iTemp118 [k140 lr163:164 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]
check.c(l120:s165:k196:d0:s0)		*(iTemp90 [k112 lr127:165 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{unsigned-long-int near* fixed}[remat]) := iTemp119 [k141 lr164:165 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x04 r0x05 r0x06 r0x07 ]
check.c(l121:s166:k197:d0:s0)		 goto _swBrk_0($27)
check.c(l122:s167:k198:d0:s0)	 _case_0_54($21) :
check.c(l123:s168:k199:d0:s0)		iTemp120 [k143 lr168:169 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l123:s169:k200:d0:s0)		iTemp121 [k144 lr169:170 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp120 [k143 lr168:169 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l123:s170:k201:d0:s0)		iTemp122 [k145 lr170:171 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp121 [k144 lr169:170 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l123:s171:k202:d0:s0)		iTemp123 [k146 lr171:173 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp122 [k145 lr170:171 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l123:s172:k311:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l123:s173:k312:d0:s0)		send iTemp123 [k146 lr171:173 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l123:s174:k313:d0:s0)		iTemp124 [k147 lr174:182 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l123:s175:k204:d0:s0)		iTemp125 [k148 lr175:176 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l123:s176:k205:d0:s0)		iTemp126 [k149 lr176:177 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp125 [k148 lr175:176 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l123:s177:k206:d0:s0)		iTemp127 [k150 lr177:178 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp126 [k149 lr176:177 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l123:s178:k207:d0:s0)		iTemp128 [k151 lr178:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp127 [k150 lr177:178 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l123:s179:k314:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l123:s180:k315:d0:s0)		send iTemp128 [k151 lr178:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l123:s181:k316:d0:s0)		iTemp129 [k152 lr181:182 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l123:s182:k209:d0:s0)		iTemp130 [k153 lr182:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp124 [k147 lr174:182 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp129 [k152 lr181:182 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l124:s183:k210:d0:s0)		iTemp131 [k154 lr183:184 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l124:s184:k211:d0:s0)		iTemp132 [k155 lr184:185 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp131 [k154 lr183:184 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l124:s185:k212:d0:s0)		iTemp133 [k156 lr185:186 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp132 [k155 lr184:185 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l124:s186:k213:d0:s0)		iTemp134 [k157 lr186:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp133 [k156 lr185:186 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l124:s187:k214:d0:s0)		_sys_temp_min [k142 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed} = iTemp130 [k153 lr182:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp134 [k157 lr186:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l125:s188:k217:d0:s0)		 goto _swBrk_0($27)
check.c(l126:s189:k218:d0:s0)	 _case_0_55($22) :
check.c(l127:s190:k219:d0:s0)		iTemp137 [k161 lr190:191 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l127:s191:k220:d0:s0)		iTemp138 [k162 lr191:192 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp137 [k161 lr190:191 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l127:s192:k221:d0:s0)		iTemp139 [k163 lr192:193 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp138 [k162 lr191:192 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l127:s193:k222:d0:s0)		iTemp140 [k164 lr193:195 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp139 [k163 lr192:193 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l127:s194:k317:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l127:s195:k318:d0:s0)		send iTemp140 [k164 lr193:195 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l127:s196:k319:d0:s0)		iTemp141 [k165 lr196:204 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l127:s197:k224:d0:s0)		iTemp142 [k166 lr197:198 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l127:s198:k225:d0:s0)		iTemp143 [k167 lr198:199 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp142 [k166 lr197:198 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l127:s199:k226:d0:s0)		iTemp144 [k168 lr199:200 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp143 [k167 lr198:199 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l127:s200:k227:d0:s0)		iTemp145 [k169 lr200:202 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp144 [k168 lr199:200 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l127:s201:k320:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l127:s202:k321:d0:s0)		send iTemp145 [k169 lr200:202 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l127:s203:k322:d0:s0)		iTemp146 [k170 lr203:204 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l127:s204:k229:d0:s0)		iTemp147 [k171 lr204:209 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp141 [k165 lr196:204 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp146 [k170 lr203:204 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l128:s205:k230:d0:s0)		iTemp148 [k172 lr205:206 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l128:s206:k231:d0:s0)		iTemp149 [k173 lr206:207 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp148 [k172 lr205:206 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l128:s207:k232:d0:s0)		iTemp150 [k174 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp149 [k173 lr206:207 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l128:s208:k233:d0:s0)		iTemp151 [k175 lr208:209 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp150 [k174 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l128:s209:k234:d0:s0)		_sys_temp_max [k160 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed} = iTemp147 [k171 lr204:209 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp151 [k175 lr208:209 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l129:s210:k237:d0:s0)		 goto _swBrk_0($27)
check.c(l130:s211:k238:d0:s0)	 _case_0_56($23) :
check.c(l131:s212:k239:d0:s0)		iTemp154 [k179 lr212:213 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l131:s213:k240:d0:s0)		iTemp155 [k180 lr213:214 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp154 [k179 lr212:213 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l131:s214:k241:d0:s0)		iTemp156 [k181 lr214:215 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp155 [k180 lr213:214 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l131:s215:k242:d0:s0)		iTemp157 [k182 lr215:217 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp156 [k181 lr214:215 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l131:s216:k323:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l131:s217:k324:d0:s0)		send iTemp157 [k182 lr215:217 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l131:s218:k325:d0:s0)		iTemp158 [k183 lr218:226 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l131:s219:k244:d0:s0)		iTemp159 [k184 lr219:220 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l131:s220:k245:d0:s0)		iTemp160 [k185 lr220:221 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp159 [k184 lr219:220 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l131:s221:k246:d0:s0)		iTemp161 [k186 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp160 [k185 lr220:221 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l131:s222:k247:d0:s0)		iTemp162 [k187 lr222:224 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp161 [k186 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l131:s223:k326:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l131:s224:k327:d0:s0)		send iTemp162 [k187 lr222:224 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l131:s225:k328:d0:s0)		iTemp163 [k188 lr225:226 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l131:s226:k249:d0:s0)		iTemp164 [k189 lr226:231 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp158 [k183 lr218:226 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp163 [k188 lr225:226 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l132:s227:k250:d0:s0)		iTemp165 [k190 lr227:228 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l132:s228:k251:d0:s0)		iTemp166 [k191 lr228:229 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp165 [k190 lr227:228 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l132:s229:k252:d0:s0)		iTemp167 [k192 lr229:230 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp166 [k191 lr228:229 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l132:s230:k253:d0:s0)		iTemp168 [k193 lr230:231 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp167 [k192 lr229:230 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l132:s231:k254:d0:s0)		_sys_lumi_min [k178 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed} = iTemp164 [k189 lr226:231 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp168 [k193 lr230:231 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l133:s232:k257:d0:s0)		 goto _swBrk_0($27)
check.c(l134:s233:k258:d0:s0)	 _case_0_57($24) :
check.c(l135:s234:k259:d0:s0)		iTemp171 [k196 lr234:235 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l135:s235:k260:d0:s0)		iTemp172 [k197 lr235:236 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp171 [k196 lr234:235 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l135:s236:k261:d0:s0)		iTemp173 [k198 lr236:237 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp172 [k197 lr235:236 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l135:s237:k262:d0:s0)		iTemp174 [k199 lr237:239 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp173 [k198 lr236:237 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l135:s238:k329:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l135:s239:k330:d0:s0)		send iTemp174 [k199 lr237:239 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l135:s240:k331:d0:s0)		iTemp175 [k200 lr240:248 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l135:s241:k264:d0:s0)		iTemp176 [k201 lr241:242 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l135:s242:k265:d0:s0)		iTemp177 [k202 lr242:243 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp176 [k201 lr241:242 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l135:s243:k266:d0:s0)		iTemp178 [k203 lr243:244 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp177 [k202 lr242:243 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l135:s244:k267:d0:s0)		iTemp179 [k204 lr244:246 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp178 [k203 lr243:244 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l135:s245:k332:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l135:s246:k333:d0:s0)		send iTemp179 [k204 lr244:246 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l135:s247:k334:d0:s0)		iTemp180 [k205 lr247:248 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l135:s248:k269:d0:s0)		iTemp181 [k206 lr248:253 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp175 [k200 lr240:248 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp180 [k205 lr247:248 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l136:s249:k270:d0:s0)		iTemp182 [k207 lr249:250 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x00 r0x01 r0x02 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l136:s250:k271:d0:s0)		iTemp183 [k208 lr250:251 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x00 ] = @[iTemp182 [k207 lr249:250 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x00 r0x01 r0x02 ] + 0x0 {const-unsigned-char literal}]
check.c(l136:s251:k272:d0:s0)		iTemp184 [k209 lr251:252 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x00 r0x01 ] = (int fixed)iTemp183 [k208 lr250:251 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x00 ]
check.c(l136:s252:k273:d0:s0)		iTemp185 [k210 lr252:253 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x00 r0x01 ] = iTemp184 [k209 lr251:252 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x00 r0x01 ] - 0x30 {int literal}
check.c(l136:s253:k274:d0:s0)		_sys_temp_max [k160 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed} = iTemp181 [k206 lr248:253 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp185 [k210 lr252:253 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x00 r0x01 ]
check.c(l137:s254:k277:d0:s0)		 goto _swBrk_0($27)
check.c(l138:s255:k278:d0:s0)	 _case_0_82($25) :
check.c(l139:s256:k279:d0:s0)		iTemp1 [k4 lr4:258 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _check_comando_ret_1_74}[r0x03 ] := 0x0 {const-char literal}
check.c(l143:s257:k283:d0:s0)	 _swBrk_0($27) :
check.c(l145:s258:k284:d0:s0)		ret iTemp1 [k4 lr4:258 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _check_comando_ret_1_74}[r0x03 ]
check.c(l145:s259:k285:d0:s0)	 _return($32) :
check.c(l145:s260:k286:d0:s0)		eproc _check_comando [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char function ( char generic* fixed) fixed}

----------------------------------------------------------------
Basic Block _case_0_53 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 17 : bbnum = 29 1st iCode = 125 , last iCode = 166
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 299 bSize = 38
Bits on { (165) (166) (167) (168) (169) (170) (171) (172) (173) (174) (175) (176) (177) (178) (179) (180) (181) (182) (183) (184) (185) (186) (187) (188) (189) (190) (191) (192) (193) (194) (195) }

local defines bitVector :bitvector Size = 299 bSize = 38
Bits on { (165) (166) (167) (168) (169) (170) (171) (172) (173) (174) (175) (176) (177) (178) (179) (180) (181) (182) (183) (184) (185) (186) (187) (188) (189) (190) (191) (192) (193) (194) (195) }

pointers Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (112) }

in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (3) (5) (6) (8) (10) (12) (14) }

outDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (3) (5) (6) (8) (10) (12) (14) (165) (166) (167) (168) (169) (170) (171) (172) (173) (174) (175) (176) (177) (178) (179) (180) (181) (182) (183) (184) (185) (186) (187) (188) (189) (190) (191) (192) (193) (194) (195) }

usesDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (165) (166) (167) (168) (169) (170) (171) (172) (173) (174) (175) (176) (177) (178) (179) (180) (181) (182) (183) (184) (185) (186) (187) (188) (189) (190) (191) (192) (193) (194) (195) }

----------------------------------------------------------------
check.c(l117:s125:k164:d0:s0)	 _case_0_53($20) :
check.c(l118:s126:k165:d0:s0)		iTemp89 [k111 lr126:127 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{unsigned-long-int near* fixed}[remat] = &[_sys_timer_pool [k110 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int [2] fixed}]
check.c(l118:s127:k166:d0:s0)		iTemp90 [k112 lr127:165 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{unsigned-long-int near* fixed}[remat] = iTemp89 [k111 lr126:127 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{unsigned-long-int near* fixed}[remat] + 0x4 {unsigned-char literal}
check.c(l118:s128:k167:d0:s0)		iTemp91 [k113 lr128:129 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l118:s129:k168:d0:s0)		iTemp92 [k114 lr129:130 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp91 [k113 lr128:129 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l118:s130:k169:d0:s0)		iTemp93 [k115 lr130:131 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp92 [k114 lr129:130 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l118:s131:k170:d0:s0)		iTemp94 [k116 lr131:133 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp93 [k115 lr130:131 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l118:s132:k299:d0:s0)		send 0x2710 {const-int literal}{argreg = 1}
check.c(l118:s133:k300:d0:s0)		send iTemp94 [k116 lr131:133 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l118:s134:k301:d0:s0)		iTemp95 [k117 lr134:142 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l118:s135:k172:d0:s0)		iTemp96 [k118 lr135:136 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l118:s136:k173:d0:s0)		iTemp97 [k119 lr136:137 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp96 [k118 lr135:136 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l118:s137:k174:d0:s0)		iTemp98 [k120 lr137:138 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp97 [k119 lr136:137 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l118:s138:k175:d0:s0)		iTemp99 [k121 lr138:140 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp98 [k120 lr137:138 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l118:s139:k302:d0:s0)		send 0x3e8 {const-int literal}{argreg = 1}
check.c(l118:s140:k303:d0:s0)		send iTemp99 [k121 lr138:140 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l118:s141:k304:d0:s0)		iTemp100 [k122 lr141:142 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l118:s142:k177:d0:s0)		iTemp101 [k123 lr142:150 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp95 [k117 lr134:142 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp100 [k122 lr141:142 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l119:s143:k178:d0:s0)		iTemp102 [k124 lr143:144 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l119:s144:k179:d0:s0)		iTemp103 [k125 lr144:145 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp102 [k124 lr143:144 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l119:s145:k180:d0:s0)		iTemp104 [k126 lr145:146 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp103 [k125 lr144:145 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l119:s146:k181:d0:s0)		iTemp105 [k127 lr146:148 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp104 [k126 lr145:146 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l119:s147:k305:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l119:s148:k306:d0:s0)		send iTemp105 [k127 lr146:148 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l119:s149:k307:d0:s0)		iTemp106 [k128 lr149:150 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l119:s150:k183:d0:s0)		iTemp107 [k129 lr150:158 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp101 [k123 lr142:150 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp106 [k128 lr149:150 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l119:s151:k184:d0:s0)		iTemp108 [k130 lr151:152 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x4 {const-unsigned-char literal}
check.c(l119:s152:k185:d0:s0)		iTemp109 [k131 lr152:153 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp108 [k130 lr151:152 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l119:s153:k186:d0:s0)		iTemp110 [k132 lr153:154 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp109 [k131 lr152:153 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l119:s154:k187:d0:s0)		iTemp111 [k133 lr154:156 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp110 [k132 lr153:154 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l119:s155:k308:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l119:s156:k309:d0:s0)		send iTemp111 [k133 lr154:156 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l119:s157:k310:d0:s0)		iTemp112 [k134 lr157:158 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l119:s158:k189:d0:s0)		iTemp113 [k135 lr158:162 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp107 [k129 lr150:158 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp112 [k134 lr157:158 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l120:s159:k190:d0:s0)		iTemp114 [k136 lr159:160 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x5 {const-unsigned-char literal}
check.c(l120:s160:k191:d0:s0)		iTemp115 [k137 lr160:161 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp114 [k136 lr159:160 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l120:s161:k192:d0:s0)		iTemp116 [k138 lr161:162 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp115 [k137 lr160:161 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l120:s162:k193:d0:s0)		iTemp117 [k139 lr162:163 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = iTemp113 [k135 lr158:162 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp116 [k138 lr161:162 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ]
check.c(l120:s163:k194:d0:s0)		iTemp118 [k140 lr163:164 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp117 [k139 lr162:163 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l120:s164:k195:d0:s0)		iTemp119 [k141 lr164:165 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x04 r0x05 r0x06 r0x07 ] = (unsigned-long-int fixed)iTemp118 [k140 lr163:164 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]
check.c(l120:s165:k196:d0:s0)		*(iTemp90 [k112 lr127:165 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{unsigned-long-int near* fixed}[remat]) := iTemp119 [k141 lr164:165 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int fixed}[r0x04 r0x05 r0x06 r0x07 ]
check.c(l121:s166:k197:d0:s0)		 goto _swBrk_0($27)
check.c(l122:s167:k198:d0:s0)	 _case_0_54($21) :
check.c(l123:s168:k199:d0:s0)		iTemp120 [k143 lr168:169 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l123:s169:k200:d0:s0)		iTemp121 [k144 lr169:170 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp120 [k143 lr168:169 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l123:s170:k201:d0:s0)		iTemp122 [k145 lr170:171 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp121 [k144 lr169:170 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l123:s171:k202:d0:s0)		iTemp123 [k146 lr171:173 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp122 [k145 lr170:171 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l123:s172:k311:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l123:s173:k312:d0:s0)		send iTemp123 [k146 lr171:173 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l123:s174:k313:d0:s0)		iTemp124 [k147 lr174:182 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l123:s175:k204:d0:s0)		iTemp125 [k148 lr175:176 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l123:s176:k205:d0:s0)		iTemp126 [k149 lr176:177 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp125 [k148 lr175:176 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l123:s177:k206:d0:s0)		iTemp127 [k150 lr177:178 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp126 [k149 lr176:177 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l123:s178:k207:d0:s0)		iTemp128 [k151 lr178:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp127 [k150 lr177:178 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l123:s179:k314:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l123:s180:k315:d0:s0)		send iTemp128 [k151 lr178:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l123:s181:k316:d0:s0)		iTemp129 [k152 lr181:182 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l123:s182:k209:d0:s0)		iTemp130 [k153 lr182:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp124 [k147 lr174:182 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp129 [k152 lr181:182 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l124:s183:k210:d0:s0)		iTemp131 [k154 lr183:184 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l124:s184:k211:d0:s0)		iTemp132 [k155 lr184:185 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp131 [k154 lr183:184 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l124:s185:k212:d0:s0)		iTemp133 [k156 lr185:186 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp132 [k155 lr184:185 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l124:s186:k213:d0:s0)		iTemp134 [k157 lr186:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp133 [k156 lr185:186 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l124:s187:k214:d0:s0)		_sys_temp_min [k142 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed} = iTemp130 [k153 lr182:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp134 [k157 lr186:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l125:s188:k217:d0:s0)		 goto _swBrk_0($27)
check.c(l126:s189:k218:d0:s0)	 _case_0_55($22) :
check.c(l127:s190:k219:d0:s0)		iTemp137 [k161 lr190:191 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l127:s191:k220:d0:s0)		iTemp138 [k162 lr191:192 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp137 [k161 lr190:191 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l127:s192:k221:d0:s0)		iTemp139 [k163 lr192:193 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp138 [k162 lr191:192 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l127:s193:k222:d0:s0)		iTemp140 [k164 lr193:195 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp139 [k163 lr192:193 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l127:s194:k317:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l127:s195:k318:d0:s0)		send iTemp140 [k164 lr193:195 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l127:s196:k319:d0:s0)		iTemp141 [k165 lr196:204 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l127:s197:k224:d0:s0)		iTemp142 [k166 lr197:198 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l127:s198:k225:d0:s0)		iTemp143 [k167 lr198:199 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp142 [k166 lr197:198 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l127:s199:k226:d0:s0)		iTemp144 [k168 lr199:200 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp143 [k167 lr198:199 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l127:s200:k227:d0:s0)		iTemp145 [k169 lr200:202 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp144 [k168 lr199:200 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l127:s201:k320:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l127:s202:k321:d0:s0)		send iTemp145 [k169 lr200:202 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l127:s203:k322:d0:s0)		iTemp146 [k170 lr203:204 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l127:s204:k229:d0:s0)		iTemp147 [k171 lr204:209 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp141 [k165 lr196:204 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp146 [k170 lr203:204 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l128:s205:k230:d0:s0)		iTemp148 [k172 lr205:206 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l128:s206:k231:d0:s0)		iTemp149 [k173 lr206:207 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp148 [k172 lr205:206 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l128:s207:k232:d0:s0)		iTemp150 [k174 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp149 [k173 lr206:207 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l128:s208:k233:d0:s0)		iTemp151 [k175 lr208:209 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp150 [k174 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l128:s209:k234:d0:s0)		_sys_temp_max [k160 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed} = iTemp147 [k171 lr204:209 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp151 [k175 lr208:209 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l129:s210:k237:d0:s0)		 goto _swBrk_0($27)
check.c(l130:s211:k238:d0:s0)	 _case_0_56($23) :
check.c(l131:s212:k239:d0:s0)		iTemp154 [k179 lr212:213 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l131:s213:k240:d0:s0)		iTemp155 [k180 lr213:214 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp154 [k179 lr212:213 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l131:s214:k241:d0:s0)		iTemp156 [k181 lr214:215 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp155 [k180 lr213:214 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l131:s215:k242:d0:s0)		iTemp157 [k182 lr215:217 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp156 [k181 lr214:215 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l131:s216:k323:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l131:s217:k324:d0:s0)		send iTemp157 [k182 lr215:217 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l131:s218:k325:d0:s0)		iTemp158 [k183 lr218:226 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l131:s219:k244:d0:s0)		iTemp159 [k184 lr219:220 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l131:s220:k245:d0:s0)		iTemp160 [k185 lr220:221 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp159 [k184 lr219:220 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l131:s221:k246:d0:s0)		iTemp161 [k186 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp160 [k185 lr220:221 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l131:s222:k247:d0:s0)		iTemp162 [k187 lr222:224 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp161 [k186 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l131:s223:k326:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l131:s224:k327:d0:s0)		send iTemp162 [k187 lr222:224 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l131:s225:k328:d0:s0)		iTemp163 [k188 lr225:226 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l131:s226:k249:d0:s0)		iTemp164 [k189 lr226:231 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp158 [k183 lr218:226 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp163 [k188 lr225:226 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l132:s227:k250:d0:s0)		iTemp165 [k190 lr227:228 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l132:s228:k251:d0:s0)		iTemp166 [k191 lr228:229 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp165 [k190 lr227:228 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l132:s229:k252:d0:s0)		iTemp167 [k192 lr229:230 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp166 [k191 lr228:229 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l132:s230:k253:d0:s0)		iTemp168 [k193 lr230:231 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp167 [k192 lr229:230 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l132:s231:k254:d0:s0)		_sys_lumi_min [k178 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed} = iTemp164 [k189 lr226:231 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp168 [k193 lr230:231 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l133:s232:k257:d0:s0)		 goto _swBrk_0($27)
check.c(l134:s233:k258:d0:s0)	 _case_0_57($24) :
check.c(l135:s234:k259:d0:s0)		iTemp171 [k196 lr234:235 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l135:s235:k260:d0:s0)		iTemp172 [k197 lr235:236 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp171 [k196 lr234:235 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l135:s236:k261:d0:s0)		iTemp173 [k198 lr236:237 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp172 [k197 lr235:236 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l135:s237:k262:d0:s0)		iTemp174 [k199 lr237:239 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp173 [k198 lr236:237 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l135:s238:k329:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l135:s239:k330:d0:s0)		send iTemp174 [k199 lr237:239 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l135:s240:k331:d0:s0)		iTemp175 [k200 lr240:248 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l135:s241:k264:d0:s0)		iTemp176 [k201 lr241:242 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l135:s242:k265:d0:s0)		iTemp177 [k202 lr242:243 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp176 [k201 lr241:242 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l135:s243:k266:d0:s0)		iTemp178 [k203 lr243:244 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp177 [k202 lr242:243 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l135:s244:k267:d0:s0)		iTemp179 [k204 lr244:246 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp178 [k203 lr243:244 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l135:s245:k332:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l135:s246:k333:d0:s0)		send iTemp179 [k204 lr244:246 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l135:s247:k334:d0:s0)		iTemp180 [k205 lr247:248 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l135:s248:k269:d0:s0)		iTemp181 [k206 lr248:253 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp175 [k200 lr240:248 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp180 [k205 lr247:248 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l136:s249:k270:d0:s0)		iTemp182 [k207 lr249:250 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x00 r0x01 r0x02 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l136:s250:k271:d0:s0)		iTemp183 [k208 lr250:251 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x00 ] = @[iTemp182 [k207 lr249:250 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x00 r0x01 r0x02 ] + 0x0 {const-unsigned-char literal}]
check.c(l136:s251:k272:d0:s0)		iTemp184 [k209 lr251:252 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x00 r0x01 ] = (int fixed)iTemp183 [k208 lr250:251 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x00 ]
check.c(l136:s252:k273:d0:s0)		iTemp185 [k210 lr252:253 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x00 r0x01 ] = iTemp184 [k209 lr251:252 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x00 r0x01 ] - 0x30 {int literal}
check.c(l136:s253:k274:d0:s0)		_sys_temp_max [k160 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed} = iTemp181 [k206 lr248:253 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp185 [k210 lr252:253 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x00 r0x01 ]
check.c(l137:s254:k277:d0:s0)		 goto _swBrk_0($27)
check.c(l138:s255:k278:d0:s0)	 _case_0_82($25) :
check.c(l139:s256:k279:d0:s0)		iTemp1 [k4 lr4:258 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _check_comando_ret_1_74}[r0x03 ] := 0x0 {const-char literal}
check.c(l143:s257:k283:d0:s0)	 _swBrk_0($27) :
check.c(l145:s258:k284:d0:s0)		ret iTemp1 [k4 lr4:258 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _check_comando_ret_1_74}[r0x03 ]
check.c(l145:s259:k285:d0:s0)	 _return($32) :
check.c(l145:s260:k286:d0:s0)		eproc _check_comando [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char function ( char generic* fixed) fixed}

----------------------------------------------------------------
Basic Block _case_0_54 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 16 : bbnum = 30 1st iCode = 167 , last iCode = 188
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 299 bSize = 38
Bits on { (199) (200) (201) (202) (203) (204) (205) (206) (207) (208) (209) (210) (211) (212) (213) (214) (216) }

local defines bitVector :bitvector Size = 299 bSize = 38
Bits on { (199) (200) (201) (202) (203) (204) (205) (206) (207) (208) (209) (210) (211) (212) (213) (214) (216) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (3) (5) (6) (8) (10) (12) (14) (16) }

outDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (3) (5) (6) (8) (10) (12) (14) (16) (199) (200) (201) (202) (203) (204) (205) (206) (207) (208) (209) (210) (211) (212) (213) (214) (216) }

usesDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (199) (200) (201) (202) (203) (204) (205) (206) (207) (208) (209) (210) (211) (212) (213) (214) }

----------------------------------------------------------------
check.c(l122:s167:k198:d0:s0)	 _case_0_54($21) :
check.c(l123:s168:k199:d0:s0)		iTemp120 [k143 lr168:169 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l123:s169:k200:d0:s0)		iTemp121 [k144 lr169:170 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp120 [k143 lr168:169 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l123:s170:k201:d0:s0)		iTemp122 [k145 lr170:171 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp121 [k144 lr169:170 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l123:s171:k202:d0:s0)		iTemp123 [k146 lr171:173 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp122 [k145 lr170:171 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l123:s172:k311:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l123:s173:k312:d0:s0)		send iTemp123 [k146 lr171:173 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l123:s174:k313:d0:s0)		iTemp124 [k147 lr174:182 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l123:s175:k204:d0:s0)		iTemp125 [k148 lr175:176 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l123:s176:k205:d0:s0)		iTemp126 [k149 lr176:177 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp125 [k148 lr175:176 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l123:s177:k206:d0:s0)		iTemp127 [k150 lr177:178 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp126 [k149 lr176:177 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l123:s178:k207:d0:s0)		iTemp128 [k151 lr178:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp127 [k150 lr177:178 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l123:s179:k314:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l123:s180:k315:d0:s0)		send iTemp128 [k151 lr178:180 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l123:s181:k316:d0:s0)		iTemp129 [k152 lr181:182 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l123:s182:k209:d0:s0)		iTemp130 [k153 lr182:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp124 [k147 lr174:182 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp129 [k152 lr181:182 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l124:s183:k210:d0:s0)		iTemp131 [k154 lr183:184 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l124:s184:k211:d0:s0)		iTemp132 [k155 lr184:185 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp131 [k154 lr183:184 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l124:s185:k212:d0:s0)		iTemp133 [k156 lr185:186 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp132 [k155 lr184:185 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l124:s186:k213:d0:s0)		iTemp134 [k157 lr186:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp133 [k156 lr185:186 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l124:s187:k214:d0:s0)		_sys_temp_min [k142 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed} = iTemp130 [k153 lr182:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp134 [k157 lr186:187 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l125:s188:k217:d0:s0)		 goto _swBrk_0($27)
check.c(l126:s189:k218:d0:s0)	 _case_0_55($22) :
check.c(l127:s190:k219:d0:s0)		iTemp137 [k161 lr190:191 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l127:s191:k220:d0:s0)		iTemp138 [k162 lr191:192 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp137 [k161 lr190:191 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l127:s192:k221:d0:s0)		iTemp139 [k163 lr192:193 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp138 [k162 lr191:192 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l127:s193:k222:d0:s0)		iTemp140 [k164 lr193:195 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp139 [k163 lr192:193 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l127:s194:k317:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l127:s195:k318:d0:s0)		send iTemp140 [k164 lr193:195 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l127:s196:k319:d0:s0)		iTemp141 [k165 lr196:204 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l127:s197:k224:d0:s0)		iTemp142 [k166 lr197:198 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l127:s198:k225:d0:s0)		iTemp143 [k167 lr198:199 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp142 [k166 lr197:198 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l127:s199:k226:d0:s0)		iTemp144 [k168 lr199:200 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp143 [k167 lr198:199 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l127:s200:k227:d0:s0)		iTemp145 [k169 lr200:202 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp144 [k168 lr199:200 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l127:s201:k320:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l127:s202:k321:d0:s0)		send iTemp145 [k169 lr200:202 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l127:s203:k322:d0:s0)		iTemp146 [k170 lr203:204 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l127:s204:k229:d0:s0)		iTemp147 [k171 lr204:209 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp141 [k165 lr196:204 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp146 [k170 lr203:204 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l128:s205:k230:d0:s0)		iTemp148 [k172 lr205:206 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l128:s206:k231:d0:s0)		iTemp149 [k173 lr206:207 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp148 [k172 lr205:206 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l128:s207:k232:d0:s0)		iTemp150 [k174 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp149 [k173 lr206:207 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l128:s208:k233:d0:s0)		iTemp151 [k175 lr208:209 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp150 [k174 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l128:s209:k234:d0:s0)		_sys_temp_max [k160 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed} = iTemp147 [k171 lr204:209 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp151 [k175 lr208:209 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l129:s210:k237:d0:s0)		 goto _swBrk_0($27)
check.c(l130:s211:k238:d0:s0)	 _case_0_56($23) :
check.c(l131:s212:k239:d0:s0)		iTemp154 [k179 lr212:213 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l131:s213:k240:d0:s0)		iTemp155 [k180 lr213:214 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp154 [k179 lr212:213 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l131:s214:k241:d0:s0)		iTemp156 [k181 lr214:215 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp155 [k180 lr213:214 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l131:s215:k242:d0:s0)		iTemp157 [k182 lr215:217 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp156 [k181 lr214:215 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l131:s216:k323:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l131:s217:k324:d0:s0)		send iTemp157 [k182 lr215:217 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l131:s218:k325:d0:s0)		iTemp158 [k183 lr218:226 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l131:s219:k244:d0:s0)		iTemp159 [k184 lr219:220 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l131:s220:k245:d0:s0)		iTemp160 [k185 lr220:221 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp159 [k184 lr219:220 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l131:s221:k246:d0:s0)		iTemp161 [k186 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp160 [k185 lr220:221 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l131:s222:k247:d0:s0)		iTemp162 [k187 lr222:224 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp161 [k186 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l131:s223:k326:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l131:s224:k327:d0:s0)		send iTemp162 [k187 lr222:224 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l131:s225:k328:d0:s0)		iTemp163 [k188 lr225:226 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l131:s226:k249:d0:s0)		iTemp164 [k189 lr226:231 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp158 [k183 lr218:226 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp163 [k188 lr225:226 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l132:s227:k250:d0:s0)		iTemp165 [k190 lr227:228 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l132:s228:k251:d0:s0)		iTemp166 [k191 lr228:229 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp165 [k190 lr227:228 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l132:s229:k252:d0:s0)		iTemp167 [k192 lr229:230 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp166 [k191 lr228:229 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l132:s230:k253:d0:s0)		iTemp168 [k193 lr230:231 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp167 [k192 lr229:230 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l132:s231:k254:d0:s0)		_sys_lumi_min [k178 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed} = iTemp164 [k189 lr226:231 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp168 [k193 lr230:231 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l133:s232:k257:d0:s0)		 goto _swBrk_0($27)
check.c(l134:s233:k258:d0:s0)	 _case_0_57($24) :
check.c(l135:s234:k259:d0:s0)		iTemp171 [k196 lr234:235 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l135:s235:k260:d0:s0)		iTemp172 [k197 lr235:236 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp171 [k196 lr234:235 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l135:s236:k261:d0:s0)		iTemp173 [k198 lr236:237 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp172 [k197 lr235:236 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l135:s237:k262:d0:s0)		iTemp174 [k199 lr237:239 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp173 [k198 lr236:237 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l135:s238:k329:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l135:s239:k330:d0:s0)		send iTemp174 [k199 lr237:239 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l135:s240:k331:d0:s0)		iTemp175 [k200 lr240:248 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l135:s241:k264:d0:s0)		iTemp176 [k201 lr241:242 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l135:s242:k265:d0:s0)		iTemp177 [k202 lr242:243 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp176 [k201 lr241:242 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l135:s243:k266:d0:s0)		iTemp178 [k203 lr243:244 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp177 [k202 lr242:243 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l135:s244:k267:d0:s0)		iTemp179 [k204 lr244:246 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp178 [k203 lr243:244 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l135:s245:k332:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l135:s246:k333:d0:s0)		send iTemp179 [k204 lr244:246 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l135:s247:k334:d0:s0)		iTemp180 [k205 lr247:248 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l135:s248:k269:d0:s0)		iTemp181 [k206 lr248:253 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp175 [k200 lr240:248 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp180 [k205 lr247:248 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l136:s249:k270:d0:s0)		iTemp182 [k207 lr249:250 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x00 r0x01 r0x02 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l136:s250:k271:d0:s0)		iTemp183 [k208 lr250:251 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x00 ] = @[iTemp182 [k207 lr249:250 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x00 r0x01 r0x02 ] + 0x0 {const-unsigned-char literal}]
check.c(l136:s251:k272:d0:s0)		iTemp184 [k209 lr251:252 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x00 r0x01 ] = (int fixed)iTemp183 [k208 lr250:251 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x00 ]
check.c(l136:s252:k273:d0:s0)		iTemp185 [k210 lr252:253 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x00 r0x01 ] = iTemp184 [k209 lr251:252 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x00 r0x01 ] - 0x30 {int literal}
check.c(l136:s253:k274:d0:s0)		_sys_temp_max [k160 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed} = iTemp181 [k206 lr248:253 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp185 [k210 lr252:253 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x00 r0x01 ]
check.c(l137:s254:k277:d0:s0)		 goto _swBrk_0($27)
check.c(l138:s255:k278:d0:s0)	 _case_0_82($25) :
check.c(l139:s256:k279:d0:s0)		iTemp1 [k4 lr4:258 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _check_comando_ret_1_74}[r0x03 ] := 0x0 {const-char literal}
check.c(l143:s257:k283:d0:s0)	 _swBrk_0($27) :
check.c(l145:s258:k284:d0:s0)		ret iTemp1 [k4 lr4:258 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _check_comando_ret_1_74}[r0x03 ]
check.c(l145:s259:k285:d0:s0)	 _return($32) :
check.c(l145:s260:k286:d0:s0)		eproc _check_comando [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char function ( char generic* fixed) fixed}

----------------------------------------------------------------
Basic Block _case_0_55 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 15 : bbnum = 31 1st iCode = 189 , last iCode = 210
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 299 bSize = 38
Bits on { (219) (220) (221) (222) (223) (224) (225) (226) (227) (228) (229) (230) (231) (232) (233) (234) (236) }

local defines bitVector :bitvector Size = 299 bSize = 38
Bits on { (219) (220) (221) (222) (223) (224) (225) (226) (227) (228) (229) (230) (231) (232) (233) (234) (236) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (3) (5) (6) (8) (10) (12) (14) (16) (18) }

outDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (3) (5) (6) (8) (10) (12) (14) (16) (18) (219) (220) (221) (222) (223) (224) (225) (226) (227) (228) (229) (230) (231) (232) (233) (234) (236) }

usesDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (219) (220) (221) (222) (223) (224) (225) (226) (227) (228) (229) (230) (231) (232) (233) (234) }

----------------------------------------------------------------
check.c(l126:s189:k218:d0:s0)	 _case_0_55($22) :
check.c(l127:s190:k219:d0:s0)		iTemp137 [k161 lr190:191 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l127:s191:k220:d0:s0)		iTemp138 [k162 lr191:192 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp137 [k161 lr190:191 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l127:s192:k221:d0:s0)		iTemp139 [k163 lr192:193 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp138 [k162 lr191:192 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l127:s193:k222:d0:s0)		iTemp140 [k164 lr193:195 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp139 [k163 lr192:193 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l127:s194:k317:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l127:s195:k318:d0:s0)		send iTemp140 [k164 lr193:195 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l127:s196:k319:d0:s0)		iTemp141 [k165 lr196:204 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l127:s197:k224:d0:s0)		iTemp142 [k166 lr197:198 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l127:s198:k225:d0:s0)		iTemp143 [k167 lr198:199 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp142 [k166 lr197:198 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l127:s199:k226:d0:s0)		iTemp144 [k168 lr199:200 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp143 [k167 lr198:199 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l127:s200:k227:d0:s0)		iTemp145 [k169 lr200:202 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp144 [k168 lr199:200 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l127:s201:k320:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l127:s202:k321:d0:s0)		send iTemp145 [k169 lr200:202 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l127:s203:k322:d0:s0)		iTemp146 [k170 lr203:204 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l127:s204:k229:d0:s0)		iTemp147 [k171 lr204:209 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp141 [k165 lr196:204 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp146 [k170 lr203:204 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l128:s205:k230:d0:s0)		iTemp148 [k172 lr205:206 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l128:s206:k231:d0:s0)		iTemp149 [k173 lr206:207 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp148 [k172 lr205:206 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l128:s207:k232:d0:s0)		iTemp150 [k174 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp149 [k173 lr206:207 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l128:s208:k233:d0:s0)		iTemp151 [k175 lr208:209 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp150 [k174 lr207:208 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l128:s209:k234:d0:s0)		_sys_temp_max [k160 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed} = iTemp147 [k171 lr204:209 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp151 [k175 lr208:209 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l129:s210:k237:d0:s0)		 goto _swBrk_0($27)
check.c(l130:s211:k238:d0:s0)	 _case_0_56($23) :
check.c(l131:s212:k239:d0:s0)		iTemp154 [k179 lr212:213 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l131:s213:k240:d0:s0)		iTemp155 [k180 lr213:214 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp154 [k179 lr212:213 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l131:s214:k241:d0:s0)		iTemp156 [k181 lr214:215 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp155 [k180 lr213:214 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l131:s215:k242:d0:s0)		iTemp157 [k182 lr215:217 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp156 [k181 lr214:215 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l131:s216:k323:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l131:s217:k324:d0:s0)		send iTemp157 [k182 lr215:217 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l131:s218:k325:d0:s0)		iTemp158 [k183 lr218:226 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l131:s219:k244:d0:s0)		iTemp159 [k184 lr219:220 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l131:s220:k245:d0:s0)		iTemp160 [k185 lr220:221 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp159 [k184 lr219:220 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l131:s221:k246:d0:s0)		iTemp161 [k186 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp160 [k185 lr220:221 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l131:s222:k247:d0:s0)		iTemp162 [k187 lr222:224 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp161 [k186 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l131:s223:k326:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l131:s224:k327:d0:s0)		send iTemp162 [k187 lr222:224 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l131:s225:k328:d0:s0)		iTemp163 [k188 lr225:226 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l131:s226:k249:d0:s0)		iTemp164 [k189 lr226:231 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp158 [k183 lr218:226 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp163 [k188 lr225:226 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l132:s227:k250:d0:s0)		iTemp165 [k190 lr227:228 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l132:s228:k251:d0:s0)		iTemp166 [k191 lr228:229 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp165 [k190 lr227:228 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l132:s229:k252:d0:s0)		iTemp167 [k192 lr229:230 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp166 [k191 lr228:229 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l132:s230:k253:d0:s0)		iTemp168 [k193 lr230:231 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp167 [k192 lr229:230 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l132:s231:k254:d0:s0)		_sys_lumi_min [k178 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed} = iTemp164 [k189 lr226:231 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp168 [k193 lr230:231 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l133:s232:k257:d0:s0)		 goto _swBrk_0($27)
check.c(l134:s233:k258:d0:s0)	 _case_0_57($24) :
check.c(l135:s234:k259:d0:s0)		iTemp171 [k196 lr234:235 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l135:s235:k260:d0:s0)		iTemp172 [k197 lr235:236 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp171 [k196 lr234:235 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l135:s236:k261:d0:s0)		iTemp173 [k198 lr236:237 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp172 [k197 lr235:236 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l135:s237:k262:d0:s0)		iTemp174 [k199 lr237:239 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp173 [k198 lr236:237 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l135:s238:k329:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l135:s239:k330:d0:s0)		send iTemp174 [k199 lr237:239 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l135:s240:k331:d0:s0)		iTemp175 [k200 lr240:248 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l135:s241:k264:d0:s0)		iTemp176 [k201 lr241:242 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l135:s242:k265:d0:s0)		iTemp177 [k202 lr242:243 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp176 [k201 lr241:242 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l135:s243:k266:d0:s0)		iTemp178 [k203 lr243:244 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp177 [k202 lr242:243 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l135:s244:k267:d0:s0)		iTemp179 [k204 lr244:246 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp178 [k203 lr243:244 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l135:s245:k332:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l135:s246:k333:d0:s0)		send iTemp179 [k204 lr244:246 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l135:s247:k334:d0:s0)		iTemp180 [k205 lr247:248 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l135:s248:k269:d0:s0)		iTemp181 [k206 lr248:253 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp175 [k200 lr240:248 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp180 [k205 lr247:248 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l136:s249:k270:d0:s0)		iTemp182 [k207 lr249:250 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x00 r0x01 r0x02 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l136:s250:k271:d0:s0)		iTemp183 [k208 lr250:251 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x00 ] = @[iTemp182 [k207 lr249:250 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x00 r0x01 r0x02 ] + 0x0 {const-unsigned-char literal}]
check.c(l136:s251:k272:d0:s0)		iTemp184 [k209 lr251:252 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x00 r0x01 ] = (int fixed)iTemp183 [k208 lr250:251 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x00 ]
check.c(l136:s252:k273:d0:s0)		iTemp185 [k210 lr252:253 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x00 r0x01 ] = iTemp184 [k209 lr251:252 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x00 r0x01 ] - 0x30 {int literal}
check.c(l136:s253:k274:d0:s0)		_sys_temp_max [k160 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed} = iTemp181 [k206 lr248:253 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp185 [k210 lr252:253 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x00 r0x01 ]
check.c(l137:s254:k277:d0:s0)		 goto _swBrk_0($27)
check.c(l138:s255:k278:d0:s0)	 _case_0_82($25) :
check.c(l139:s256:k279:d0:s0)		iTemp1 [k4 lr4:258 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _check_comando_ret_1_74}[r0x03 ] := 0x0 {const-char literal}
check.c(l143:s257:k283:d0:s0)	 _swBrk_0($27) :
check.c(l145:s258:k284:d0:s0)		ret iTemp1 [k4 lr4:258 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _check_comando_ret_1_74}[r0x03 ]
check.c(l145:s259:k285:d0:s0)	 _return($32) :
check.c(l145:s260:k286:d0:s0)		eproc _check_comando [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char function ( char generic* fixed) fixed}

----------------------------------------------------------------
Basic Block _case_0_56 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 14 : bbnum = 32 1st iCode = 211 , last iCode = 232
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 299 bSize = 38
Bits on { (239) (240) (241) (242) (243) (244) (245) (246) (247) (248) (249) (250) (251) (252) (253) (254) (256) }

local defines bitVector :bitvector Size = 299 bSize = 38
Bits on { (239) (240) (241) (242) (243) (244) (245) (246) (247) (248) (249) (250) (251) (252) (253) (254) (256) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (3) (5) (6) (8) (10) (12) (14) (16) (18) (20) }

outDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (3) (5) (6) (8) (10) (12) (14) (16) (18) (20) (239) (240) (241) (242) (243) (244) (245) (246) (247) (248) (249) (250) (251) (252) (253) (254) (256) }

usesDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (239) (240) (241) (242) (243) (244) (245) (246) (247) (248) (249) (250) (251) (252) (253) (254) }

----------------------------------------------------------------
check.c(l130:s211:k238:d0:s0)	 _case_0_56($23) :
check.c(l131:s212:k239:d0:s0)		iTemp154 [k179 lr212:213 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l131:s213:k240:d0:s0)		iTemp155 [k180 lr213:214 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp154 [k179 lr212:213 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l131:s214:k241:d0:s0)		iTemp156 [k181 lr214:215 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp155 [k180 lr213:214 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l131:s215:k242:d0:s0)		iTemp157 [k182 lr215:217 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp156 [k181 lr214:215 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l131:s216:k323:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l131:s217:k324:d0:s0)		send iTemp157 [k182 lr215:217 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l131:s218:k325:d0:s0)		iTemp158 [k183 lr218:226 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l131:s219:k244:d0:s0)		iTemp159 [k184 lr219:220 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l131:s220:k245:d0:s0)		iTemp160 [k185 lr220:221 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp159 [k184 lr219:220 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l131:s221:k246:d0:s0)		iTemp161 [k186 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp160 [k185 lr220:221 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l131:s222:k247:d0:s0)		iTemp162 [k187 lr222:224 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp161 [k186 lr221:222 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l131:s223:k326:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l131:s224:k327:d0:s0)		send iTemp162 [k187 lr222:224 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l131:s225:k328:d0:s0)		iTemp163 [k188 lr225:226 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l131:s226:k249:d0:s0)		iTemp164 [k189 lr226:231 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp158 [k183 lr218:226 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp163 [k188 lr225:226 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l132:s227:k250:d0:s0)		iTemp165 [k190 lr227:228 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l132:s228:k251:d0:s0)		iTemp166 [k191 lr228:229 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp165 [k190 lr227:228 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l132:s229:k252:d0:s0)		iTemp167 [k192 lr229:230 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp166 [k191 lr228:229 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l132:s230:k253:d0:s0)		iTemp168 [k193 lr230:231 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp167 [k192 lr229:230 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l132:s231:k254:d0:s0)		_sys_lumi_min [k178 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed} = iTemp164 [k189 lr226:231 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp168 [k193 lr230:231 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l133:s232:k257:d0:s0)		 goto _swBrk_0($27)
check.c(l134:s233:k258:d0:s0)	 _case_0_57($24) :
check.c(l135:s234:k259:d0:s0)		iTemp171 [k196 lr234:235 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l135:s235:k260:d0:s0)		iTemp172 [k197 lr235:236 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp171 [k196 lr234:235 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l135:s236:k261:d0:s0)		iTemp173 [k198 lr236:237 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp172 [k197 lr235:236 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l135:s237:k262:d0:s0)		iTemp174 [k199 lr237:239 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp173 [k198 lr236:237 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l135:s238:k329:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l135:s239:k330:d0:s0)		send iTemp174 [k199 lr237:239 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l135:s240:k331:d0:s0)		iTemp175 [k200 lr240:248 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l135:s241:k264:d0:s0)		iTemp176 [k201 lr241:242 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l135:s242:k265:d0:s0)		iTemp177 [k202 lr242:243 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp176 [k201 lr241:242 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l135:s243:k266:d0:s0)		iTemp178 [k203 lr243:244 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp177 [k202 lr242:243 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l135:s244:k267:d0:s0)		iTemp179 [k204 lr244:246 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp178 [k203 lr243:244 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l135:s245:k332:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l135:s246:k333:d0:s0)		send iTemp179 [k204 lr244:246 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l135:s247:k334:d0:s0)		iTemp180 [k205 lr247:248 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l135:s248:k269:d0:s0)		iTemp181 [k206 lr248:253 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp175 [k200 lr240:248 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp180 [k205 lr247:248 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l136:s249:k270:d0:s0)		iTemp182 [k207 lr249:250 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x00 r0x01 r0x02 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l136:s250:k271:d0:s0)		iTemp183 [k208 lr250:251 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x00 ] = @[iTemp182 [k207 lr249:250 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x00 r0x01 r0x02 ] + 0x0 {const-unsigned-char literal}]
check.c(l136:s251:k272:d0:s0)		iTemp184 [k209 lr251:252 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x00 r0x01 ] = (int fixed)iTemp183 [k208 lr250:251 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x00 ]
check.c(l136:s252:k273:d0:s0)		iTemp185 [k210 lr252:253 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x00 r0x01 ] = iTemp184 [k209 lr251:252 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x00 r0x01 ] - 0x30 {int literal}
check.c(l136:s253:k274:d0:s0)		_sys_temp_max [k160 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed} = iTemp181 [k206 lr248:253 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp185 [k210 lr252:253 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x00 r0x01 ]
check.c(l137:s254:k277:d0:s0)		 goto _swBrk_0($27)
check.c(l138:s255:k278:d0:s0)	 _case_0_82($25) :
check.c(l139:s256:k279:d0:s0)		iTemp1 [k4 lr4:258 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _check_comando_ret_1_74}[r0x03 ] := 0x0 {const-char literal}
check.c(l143:s257:k283:d0:s0)	 _swBrk_0($27) :
check.c(l145:s258:k284:d0:s0)		ret iTemp1 [k4 lr4:258 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _check_comando_ret_1_74}[r0x03 ]
check.c(l145:s259:k285:d0:s0)	 _return($32) :
check.c(l145:s260:k286:d0:s0)		eproc _check_comando [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char function ( char generic* fixed) fixed}

----------------------------------------------------------------
Basic Block _case_0_57 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 13 : bbnum = 33 1st iCode = 233 , last iCode = 254
visited 0 : hasFcall = 1

defines bitVector :bitvector Size = 299 bSize = 38
Bits on { (259) (260) (261) (262) (263) (264) (265) (266) (267) (268) (269) (270) (271) (272) (273) (274) (276) }

local defines bitVector :bitvector Size = 299 bSize = 38
Bits on { (259) (260) (261) (262) (263) (264) (265) (266) (267) (268) (269) (270) (271) (272) (273) (274) (276) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (3) (5) (6) (8) (10) (12) (14) (16) (18) (20) (22) }

outDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (3) (5) (6) (8) (10) (12) (14) (16) (18) (20) (22) (259) (260) (261) (262) (263) (264) (265) (266) (267) (268) (269) (270) (271) (272) (273) (274) (276) }

usesDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (259) (260) (261) (262) (263) (264) (265) (266) (267) (268) (269) (270) (271) (272) (273) (274) }

----------------------------------------------------------------
check.c(l134:s233:k258:d0:s0)	 _case_0_57($24) :
check.c(l135:s234:k259:d0:s0)		iTemp171 [k196 lr234:235 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x1 {const-unsigned-char literal}
check.c(l135:s235:k260:d0:s0)		iTemp172 [k197 lr235:236 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ] = @[iTemp171 [k196 lr234:235 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x04 r0x05 r0x06 ] + 0x0 {const-unsigned-char literal}]
check.c(l135:s236:k261:d0:s0)		iTemp173 [k198 lr236:237 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] = (int fixed)iTemp172 [k197 lr235:236 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x04 ]
check.c(l135:s237:k262:d0:s0)		iTemp174 [k199 lr237:239 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp173 [k198 lr236:237 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x04 r0x05 ] - 0x30 {int literal}
check.c(l135:s238:k329:d0:s0)		send 0x64 {int literal}{argreg = 1}
check.c(l135:s239:k330:d0:s0)		send iTemp174 [k199 lr237:239 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ]{argreg = 2}
check.c(l135:s240:k331:d0:s0)		iTemp175 [k200 lr240:248 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l135:s241:k264:d0:s0)		iTemp176 [k201 lr241:242 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x2 {const-unsigned-char literal}
check.c(l135:s242:k265:d0:s0)		iTemp177 [k202 lr242:243 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ] = @[iTemp176 [k201 lr241:242 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x06 r0x07 r0x08 ] + 0x0 {const-unsigned-char literal}]
check.c(l135:s243:k266:d0:s0)		iTemp178 [k203 lr243:244 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] = (int fixed)iTemp177 [k202 lr242:243 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x06 ]
check.c(l135:s244:k267:d0:s0)		iTemp179 [k204 lr244:246 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = iTemp178 [k203 lr243:244 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x06 r0x07 ] - 0x30 {int literal}
check.c(l135:s245:k332:d0:s0)		send 0xa {int literal}{argreg = 1}
check.c(l135:s246:k333:d0:s0)		send iTemp179 [k204 lr244:246 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]{argreg = 2}
check.c(l135:s247:k334:d0:s0)		iTemp180 [k205 lr247:248 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ] = call __mulint [k213 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int function ( int fixed, int fixed) fixed}
check.c(l135:s248:k269:d0:s0)		iTemp181 [k206 lr248:253 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] = iTemp175 [k200 lr240:248 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp180 [k205 lr247:248 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x06 r0x07 ]
check.c(l136:s249:k270:d0:s0)		iTemp182 [k207 lr249:250 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x00 r0x01 r0x02 ] = iTemp0 [k2 lr3:249 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{char generic* fixed}{ sir@ _check_comando_comando_1_73}[r0x00 r0x01 r0x02 ] + 0x3 {const-unsigned-char literal}
check.c(l136:s250:k271:d0:s0)		iTemp183 [k208 lr250:251 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x00 ] = @[iTemp182 [k207 lr249:250 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char generic* fixed}[r0x00 r0x01 r0x02 ] + 0x0 {const-unsigned-char literal}]
check.c(l136:s251:k272:d0:s0)		iTemp184 [k209 lr251:252 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x00 r0x01 ] = (int fixed)iTemp183 [k208 lr250:251 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char register}[r0x00 ]
check.c(l136:s252:k273:d0:s0)		iTemp185 [k210 lr252:253 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x00 r0x01 ] = iTemp184 [k209 lr251:252 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int fixed}[r0x00 r0x01 ] - 0x30 {int literal}
check.c(l136:s253:k274:d0:s0)		_sys_temp_max [k160 lr0:0 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed} = iTemp181 [k206 lr248:253 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x04 r0x05 ] + iTemp185 [k210 lr252:253 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{int register}[r0x00 r0x01 ]
check.c(l137:s254:k277:d0:s0)		 goto _swBrk_0($27)
check.c(l138:s255:k278:d0:s0)	 _case_0_82($25) :
check.c(l139:s256:k279:d0:s0)		iTemp1 [k4 lr4:258 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _check_comando_ret_1_74}[r0x03 ] := 0x0 {const-char literal}
check.c(l143:s257:k283:d0:s0)	 _swBrk_0($27) :
check.c(l145:s258:k284:d0:s0)		ret iTemp1 [k4 lr4:258 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _check_comando_ret_1_74}[r0x03 ]
check.c(l145:s259:k285:d0:s0)	 _return($32) :
check.c(l145:s260:k286:d0:s0)		eproc _check_comando [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char function ( char generic* fixed) fixed}

----------------------------------------------------------------
Basic Block _case_0_82 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 12 : bbnum = 34 1st iCode = 255 , last iCode = 256
visited 0 : hasFcall = 0

defines bitVector :bitvector Size = 299 bSize = 38
Bits on { (279) }

local defines bitVector :bitvector Size = 299 bSize = 38
Bits on { (279) }

pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (3) (5) (6) (8) (10) (12) (14) (16) (18) (20) (22) (24) }

outDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (5) (6) (8) (10) (12) (14) (16) (18) (20) (22) (24) (279) }

usesDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { }

----------------------------------------------------------------
check.c(l138:s255:k278:d0:s0)	 _case_0_82($25) :
check.c(l139:s256:k279:d0:s0)		iTemp1 [k4 lr4:258 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _check_comando_ret_1_74}[r0x03 ] := 0x0 {const-char literal}
check.c(l143:s257:k283:d0:s0)	 _swBrk_0($27) :
check.c(l145:s258:k284:d0:s0)		ret iTemp1 [k4 lr4:258 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _check_comando_ret_1_74}[r0x03 ]
check.c(l145:s259:k285:d0:s0)	 _return($32) :
check.c(l145:s260:k286:d0:s0)		eproc _check_comando [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char function ( char generic* fixed) fixed}

----------------------------------------------------------------
Basic Block _swBrk_0 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 36 : bbnum = 35 1st iCode = 257 , last iCode = 258
visited 0 : hasFcall = 0

defines bitVector :bitvector Size = 299 bSize = 38
Bits on { }

local defines bitVector :
pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (3) (5) (6) (8) (10) (12) (14) (16) (18) (20) (22) (24) (28) (29) (30) (31) (35) (36) (37) (40) (43) (44) (45) (46) (47) (48) (49) (50) (51) (52) (53) (54) (55) (56) (57) (60) (64) (65) (66) (68) (69) (74) (75) (76) (77) (81) (83) (90) (91) (92) (93) (97) (99) (103) (104) (106) (107) (108) (109) (111) (112) (115) (116) (117) (118) (119) (124) (135) (140) (141) (142) (143) (144) (149) (160) (165) (166) (167) (168) (169) (170) (171) (172) (173) (174) (175) (176) (177) (178) (179) (180) (181) (182) (183) (184) (185) (186) (187) (188) (189) (190) (191) (192) (193) (194) (195) (199) (200) (201) (202) (203) (204) (205) (206) (207) (208) (209) (210) (211) (212) (213) (214) (216) (219) (220) (221) (222) (223) (224) (225) (226) (227) (228) (229) (230) (231) (232) (233) (234) (236) (239) (240) (241) (242) (243) (244) (245) (246) (247) (248) (249) (250) (251) (252) (253) (254) (256) (259) (260) (261) (262) (263) (264) (265) (266) (267) (268) (269) (270) (271) (272) (273) (274) (276) (279) }

outDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (3) (5) (6) (8) (10) (12) (14) (16) (18) (20) (22) (24) (28) (29) (30) (31) (35) (36) (37) (40) (43) (44) (45) (46) (47) (48) (49) (50) (51) (52) (53) (54) (55) (56) (57) (60) (64) (65) (66) (68) (69) (74) (75) (76) (77) (81) (83) (90) (91) (92) (93) (97) (99) (103) (104) (106) (107) (108) (109) (111) (112) (115) (116) (117) (118) (119) (124) (135) (140) (141) (142) (143) (144) (149) (160) (165) (166) (167) (168) (169) (170) (171) (172) (173) (174) (175) (176) (177) (178) (179) (180) (181) (182) (183) (184) (185) (186) (187) (188) (189) (190) (191) (192) (193) (194) (195) (199) (200) (201) (202) (203) (204) (205) (206) (207) (208) (209) (210) (211) (212) (213) (214) (216) (219) (220) (221) (222) (223) (224) (225) (226) (227) (228) (229) (230) (231) (232) (233) (234) (236) (239) (240) (241) (242) (243) (244) (245) (246) (247) (248) (249) (250) (251) (252) (253) (254) (256) (259) (260) (261) (262) (263) (264) (265) (266) (267) (268) (269) (270) (271) (272) (273) (274) (276) (279) }

usesDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (3) (112) (279) }

----------------------------------------------------------------
check.c(l143:s257:k283:d0:s0)	 _swBrk_0($27) :
check.c(l145:s258:k284:d0:s0)		ret iTemp1 [k4 lr4:258 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _check_comando_ret_1_74}[r0x03 ]
check.c(l145:s259:k285:d0:s0)	 _return($32) :
check.c(l145:s260:k286:d0:s0)		eproc _check_comando [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char function ( char generic* fixed) fixed}

----------------------------------------------------------------
Basic Block _return : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 37 : bbnum = 36 1st iCode = 259 , last iCode = 260
visited 1 : hasFcall = 0

defines bitVector :bitvector Size = 299 bSize = 38
Bits on { }

local defines bitVector :
pointers Set bitvector :
in pointers Set bitvector :
inDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (3) (5) (6) (8) (10) (12) (14) (16) (18) (20) (22) (24) (28) (29) (30) (31) (35) (36) (37) (40) (43) (44) (45) (46) (47) (48) (49) (50) (51) (52) (53) (54) (55) (56) (57) (60) (64) (65) (66) (68) (69) (74) (75) (76) (77) (81) (83) (90) (91) (92) (93) (97) (99) (103) (104) (106) (107) (108) (109) (111) (112) (115) (116) (117) (118) (119) (124) (135) (140) (141) (142) (143) (144) (149) (160) (165) (166) (167) (168) (169) (170) (171) (172) (173) (174) (175) (176) (177) (178) (179) (180) (181) (182) (183) (184) (185) (186) (187) (188) (189) (190) (191) (192) (193) (194) (195) (199) (200) (201) (202) (203) (204) (205) (206) (207) (208) (209) (210) (211) (212) (213) (214) (216) (219) (220) (221) (222) (223) (224) (225) (226) (227) (228) (229) (230) (231) (232) (233) (234) (236) (239) (240) (241) (242) (243) (244) (245) (246) (247) (248) (249) (250) (251) (252) (253) (254) (256) (259) (260) (261) (262) (263) (264) (265) (266) (267) (268) (269) (270) (271) (272) (273) (274) (276) (279) }

outDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { (2) (3) (5) (6) (8) (10) (12) (14) (16) (18) (20) (22) (24) (28) (29) (30) (31) (35) (36) (37) (40) (43) (44) (45) (46) (47) (48) (49) (50) (51) (52) (53) (54) (55) (56) (57) (60) (64) (65) (66) (68) (69) (74) (75) (76) (77) (81) (83) (90) (91) (92) (93) (97) (99) (103) (104) (106) (107) (108) (109) (111) (112) (115) (116) (117) (118) (119) (124) (135) (140) (141) (142) (143) (144) (149) (160) (165) (166) (167) (168) (169) (170) (171) (172) (173) (174) (175) (176) (177) (178) (179) (180) (181) (182) (183) (184) (185) (186) (187) (188) (189) (190) (191) (192) (193) (194) (195) (199) (200) (201) (202) (203) (204) (205) (206) (207) (208) (209) (210) (211) (212) (213) (214) (216) (219) (220) (221) (222) (223) (224) (225) (226) (227) (228) (229) (230) (231) (232) (233) (234) (236) (239) (240) (241) (242) (243) (244) (245) (246) (247) (248) (249) (250) (251) (252) (253) (254) (256) (259) (260) (261) (262) (263) (264) (265) (266) (267) (268) (269) (270) (271) (272) (273) (274) (276) (279) }

usesDefs Set bitvector :bitvector Size = 299 bSize = 38
Bits on { }

----------------------------------------------------------------
check.c(l145:s259:k285:d0:s0)	 _return($32) :
check.c(l145:s260:k286:d0:s0)		eproc _check_comando [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char function ( char generic* fixed) fixed}
pic16_typeRegWithIdx - requesting index = 0x0
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x0
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x1
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x1
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x2
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x2
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x3
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x3
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x8
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x8
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x9
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x9
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x0
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x1
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x2
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x3
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x0
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x1
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x2
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x0
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x1
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x2
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x0
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x1
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x2
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x0
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x1
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x2
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x0
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x1
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x2
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x8
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x8
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x0
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x1
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x2
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x8
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x8
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocDirReg:815 symbol name _check_comando_linha_1_1_74
  827  storage class 0 
 832  integral
 838  specifier
_check_comando_linha_1_1_74 [k52 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [17] fixed}
pic16_allocDirReg:815 symbol name _check_comando_linha_2_1_74
  827  storage class 0 
 832  integral
 838  specifier
_check_comando_linha_2_1_74 [k55 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [17] fixed}
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocDirReg:815 symbol name _check_comando_linha_1_1_74
  827  storage class 0 
 832  integral
 838  specifier
_check_comando_linha_1_1_74 [k52 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [17] fixed}
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x0
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x1
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x8
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x2
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x9
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x8
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x9
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocDirReg:815 symbol name _check_comando_linha_2_1_74
  827  storage class 0 
 832  integral
 838  specifier
_check_comando_linha_2_1_74 [k55 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [17] fixed}
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x0
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x1
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x8
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x2
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x9
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x8
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x9
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocDirReg:815 symbol name _check_comando_linha_1_1_74
  827  storage class 0 
 832  integral
 838  specifier
_check_comando_linha_1_1_74 [k52 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [17] fixed}
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocDirReg:815 symbol name _check_comando_linha_2_1_74
  827  storage class 0 
 832  integral
 838  specifier
_check_comando_linha_2_1_74 [k55 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [17] fixed}
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x3
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x0
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x1
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x2
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocDirReg BAD, op is NULL
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocDirReg BAD, op is NULL
pic16_allocWithIdx - allocating with index = 0x0
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x1
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x2
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocDirReg BAD, op is NULL
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocDirReg BAD, op is NULL
pic16_allocWithIdx - allocating with index = 0x0
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x1
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x2
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x0
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x1
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x2
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x8
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x8
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x0
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x1
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x2
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x8
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x8
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x0
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x1
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x2
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x8
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x8
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x0
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x1
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x2
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x8
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x8
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocDirReg:815 symbol name _sys_timer_pool
  827  storage class 0 
 832  integral
 838  specifier
_sys_timer_pool [k110 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-long-int [2] fixed}
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x0
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x1
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x2
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x0
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x1
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x2
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x8
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x8
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x0
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x1
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x2
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x8
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x8
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x0
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x1
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x2
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x0
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x1
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x2
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x8
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x8
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x0
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x1
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x2
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x8
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x8
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x0
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x1
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x2
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x0
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x1
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x2
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x8
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x8
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x0
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x1
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x2
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x8
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x8
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x0
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x1
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x2
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x0
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x1
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x2
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x8
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x8
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x0
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x1
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x2
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x0
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x1
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x2
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x0
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x1
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x1
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x0
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x1
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x0
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x1
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x3
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x3
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x9
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x8
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x3
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x2
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x1
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x0
Found a Dynamic Register!
pic16_freeAllRegs
leaving
<><><><><><><><><><><><><><><><><>
pic16_typeRegWithIdx - requesting index = 0x0
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x1
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x2
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x3
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x8
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x9
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x0
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x1
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x2
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x3
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x0
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x1
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x2
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x0
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x1
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x2
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x0
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x1
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x2
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x0
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x1
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x2
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x0
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x1
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x2
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x8
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x8
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x0
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x1
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x2
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x8
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x8
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x0
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x1
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x8
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x2
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x9
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x8
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x9
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x0
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x1
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x8
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x2
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x9
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x8
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x9
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x3
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x0
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x1
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x2
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x0
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x1
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x2
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x0
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x1
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x2
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x0
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x1
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x2
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x8
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x8
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x0
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x1
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x2
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x8
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x8
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x0
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x1
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x2
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x8
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x8
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x0
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x1
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x2
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x8
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x8
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x0
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x1
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x2
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x0
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x1
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x2
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x8
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x8
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x0
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x1
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x2
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x8
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x8
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x0
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x1
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x2
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x0
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x1
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x2
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x8
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x8
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x0
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x1
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x2
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x8
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x8
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x0
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x1
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x2
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x0
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x1
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x2
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x8
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x8
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x0
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x1
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x2
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x8
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x8
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x0
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x1
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x2
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x0
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x1
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x2
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x8
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x8
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x0
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x1
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x2
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x0
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x1
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x2
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x0
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x1
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x1
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x0
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x1
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x0
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x1
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x3
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x3
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x9
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x8
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x3
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x2
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x1
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x0
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x0
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x1
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x2
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x3
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x8
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x9
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x0
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x1
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x2
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x3
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x0
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x1
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x2
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x0
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x1
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x2
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x8
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x8
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x0
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x1
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x2
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x8
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x8
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x0
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x1
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x8
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x2
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x9
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x8
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x9
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x3
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x3
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x9
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x8
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x3
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x2
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x1
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x0
Found a Dynamic Register!
