<><><><><><><><><><><><><><><><><>
starting	/home/sdcc-builder/build/sdcc-build/orig/sdcc/src/pic16/ralloc.c:pic16_assignRegisters
ebbs before optimizing:

----------------------------------------------------------------
Basic Block _entry : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 1 : bbnum = 0 1st iCode = 1 , last iCode = 400
visited 0 : hasFcall = 0

defines bitVector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (1050) }

local defines bitVector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (1050) }

pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

in pointers Set bitvector :
inDefs Set bitvector :
outDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (1050) }

usesDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) }

----------------------------------------------------------------
intro.c(l5:s1:k0:d0:s0)	 _entry($47) :
intro.c(l5:s2:k1:d0:s0)		proc _intro [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( ) fixed}
intro.c(l7:s3:k2:d0:s0)		iTemp0 [k3 lr3:4 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} = &[_intro_letra_a_1_15 [k2 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}]
intro.c(l7:s4:k4:d0:s0)		*(iTemp0 [k3 lr3:4 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}) := 0x0 {const-unsigned-char literal}
intro.c(l7:s5:k5:d0:s0)		iTemp2 [k5 lr5:18 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] fixed} = &[_intro_letra_a_1_15 [k2 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}]
intro.c(l7:s6:k6:d0:s0)		iTemp3 [k6 lr6:7 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed} = iTemp2 [k5 lr5:18 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] fixed} + 0x1 {unsigned-_Bool literal}
intro.c(l7:s7:k7:d0:s0)		*(iTemp3 [k6 lr6:7 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}) := 0x0 {const-unsigned-char literal}
intro.c(l7:s8:k9:d0:s0)		iTemp5 [k8 lr8:9 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed} = iTemp2 [k5 lr5:18 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] fixed} + 0x2 {unsigned-char literal}
intro.c(l7:s9:k10:d0:s0)		*(iTemp5 [k8 lr8:9 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}) := 0x0 {const-unsigned-char literal}
intro.c(l7:s10:k12:d0:s0)		iTemp7 [k10 lr10:11 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed} = iTemp2 [k5 lr5:18 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] fixed} + 0x3 {unsigned-char literal}
intro.c(l7:s11:k13:d0:s0)		*(iTemp7 [k10 lr10:11 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}) := 0x0 {const-unsigned-char literal}
intro.c(l7:s12:k15:d0:s0)		iTemp9 [k12 lr12:13 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed} = iTemp2 [k5 lr5:18 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] fixed} + 0x4 {unsigned-char literal}
intro.c(l7:s13:k16:d0:s0)		*(iTemp9 [k12 lr12:13 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}) := 0x0 {const-unsigned-char literal}
intro.c(l7:s14:k18:d0:s0)		iTemp11 [k14 lr14:15 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed} = iTemp2 [k5 lr5:18 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] fixed} + 0x5 {unsigned-char literal}
intro.c(l7:s15:k19:d0:s0)		*(iTemp11 [k14 lr14:15 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}) := 0x1 {const-unsigned-char literal}
intro.c(l7:s16:k21:d0:s0)		iTemp13 [k16 lr16:17 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed} = iTemp2 [k5 lr5:18 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] fixed} + 0x6 {unsigned-char literal}
intro.c(l7:s17:k22:d0:s0)		*(iTemp13 [k16 lr16:17 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}) := 0x1 {const-unsigned-char literal}
intro.c(l7:s18:k24:d0:s0)		iTemp15 [k18 lr18:19 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed} = iTemp2 [k5 lr5:18 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] fixed} + 0x7 {unsigned-char literal}
intro.c(l7:s19:k25:d0:s0)		*(iTemp15 [k18 lr18:19 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}) := 0x3 {const-unsigned-char literal}
intro.c(l7:s20:k26:d0:s0)		iTemp16 [k19 lr20:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} = &[_intro_letra_a_1_15 [k2 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}]
intro.c(l7:s21:k27:d0:s0)		iTemp17 [k20 lr21:22 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} = iTemp16 [k19 lr20:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} + 0x8 {unsigned-char literal}
intro.c(l7:s22:k29:d0:s0)		*(iTemp17 [k20 lr21:22 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}) := 0x7 {const-unsigned-char literal}
intro.c(l7:s23:k32:d0:s0)		iTemp21 [k24 lr23:24 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed} = iTemp16 [k19 lr20:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} + 0x9 {const-unsigned-char literal}
intro.c(l7:s24:k33:d0:s0)		*(iTemp21 [k24 lr23:24 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}) := 0xb {const-unsigned-char literal}
intro.c(l7:s25:k36:d0:s0)		iTemp24 [k27 lr25:26 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed} = iTemp16 [k19 lr20:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} + 0xa {const-unsigned-char literal}
intro.c(l7:s26:k37:d0:s0)		*(iTemp24 [k27 lr25:26 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}) := 0xb {const-unsigned-char literal}
intro.c(l7:s27:k40:d0:s0)		iTemp27 [k30 lr27:28 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed} = iTemp16 [k19 lr20:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} + 0xb {const-unsigned-char literal}
intro.c(l7:s28:k41:d0:s0)		*(iTemp27 [k30 lr27:28 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}) := 0x1b {const-unsigned-char literal}
intro.c(l7:s29:k44:d0:s0)		iTemp30 [k33 lr29:30 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed} = iTemp16 [k19 lr20:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} + 0xc {const-unsigned-char literal}
intro.c(l7:s30:k45:d0:s0)		*(iTemp30 [k33 lr29:30 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}) := 0x13 {const-unsigned-char literal}
intro.c(l7:s31:k48:d0:s0)		iTemp33 [k36 lr31:32 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed} = iTemp16 [k19 lr20:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} + 0xd {const-unsigned-char literal}
intro.c(l7:s32:k49:d0:s0)		*(iTemp33 [k36 lr31:32 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}) := 0x13 {const-unsigned-char literal}
intro.c(l7:s33:k52:d0:s0)		iTemp36 [k39 lr33:34 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed} = iTemp16 [k19 lr20:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} + 0xe {const-unsigned-char literal}
intro.c(l7:s34:k53:d0:s0)		*(iTemp36 [k39 lr33:34 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}) := 0x3 {const-unsigned-char literal}
intro.c(l7:s35:k56:d0:s0)		iTemp39 [k42 lr35:36 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed} = iTemp16 [k19 lr20:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} + 0xf {const-unsigned-char literal}
intro.c(l7:s36:k57:d0:s0)		*(iTemp39 [k42 lr35:36 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}) := 0x3 {const-unsigned-char literal}
intro.c(l7:s37:k59:d0:s0)		iTemp41 [k44 lr37:38 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} = iTemp16 [k19 lr20:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} + 0x10 {unsigned-char literal}
intro.c(l7:s38:k61:d0:s0)		*(iTemp41 [k44 lr37:38 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}) := 0x3 {const-unsigned-char literal}
intro.c(l7:s39:k64:d0:s0)		iTemp45 [k48 lr39:40 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed} = iTemp16 [k19 lr20:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} + 0x11 {const-unsigned-char literal}
intro.c(l7:s40:k65:d0:s0)		*(iTemp45 [k48 lr39:40 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}) := 0x7 {const-unsigned-char literal}
intro.c(l7:s41:k68:d0:s0)		iTemp48 [k51 lr41:42 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed} = iTemp16 [k19 lr20:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} + 0x12 {const-unsigned-char literal}
intro.c(l7:s42:k69:d0:s0)		*(iTemp48 [k51 lr41:42 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}) := 0x4 {const-unsigned-char literal}
intro.c(l7:s43:k72:d0:s0)		iTemp51 [k54 lr43:44 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed} = iTemp16 [k19 lr20:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} + 0x13 {const-unsigned-char literal}
intro.c(l7:s44:k73:d0:s0)		*(iTemp51 [k54 lr43:44 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}) := 0xc {const-unsigned-char literal}
intro.c(l7:s45:k76:d0:s0)		iTemp54 [k57 lr45:46 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed} = iTemp16 [k19 lr20:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} + 0x14 {const-unsigned-char literal}
intro.c(l7:s46:k77:d0:s0)		*(iTemp54 [k57 lr45:46 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}) := 0x8 {const-unsigned-char literal}
intro.c(l7:s47:k80:d0:s0)		iTemp57 [k60 lr47:48 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed} = iTemp16 [k19 lr20:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} + 0x15 {const-unsigned-char literal}
intro.c(l7:s48:k81:d0:s0)		*(iTemp57 [k60 lr47:48 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}) := 0x8 {const-unsigned-char literal}
intro.c(l7:s49:k84:d0:s0)		iTemp60 [k63 lr49:50 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed} = iTemp16 [k19 lr20:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} + 0x16 {const-unsigned-char literal}
intro.c(l7:s50:k85:d0:s0)		*(iTemp60 [k63 lr49:50 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}) := 0x18 {const-unsigned-char literal}
intro.c(l7:s51:k88:d0:s0)		iTemp63 [k66 lr51:52 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed} = iTemp16 [k19 lr20:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} + 0x17 {const-unsigned-char literal}
intro.c(l7:s52:k89:d0:s0)		*(iTemp63 [k66 lr51:52 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}) := 0x10 {const-unsigned-char literal}
intro.c(l7:s53:k91:d0:s0)		iTemp65 [k68 lr53:54 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} = iTemp16 [k19 lr20:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} + 0x18 {unsigned-char literal}
intro.c(l7:s54:k93:d0:s0)		*(iTemp65 [k68 lr53:54 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}) := 0x1f {const-unsigned-char literal}
intro.c(l7:s55:k96:d0:s0)		iTemp69 [k72 lr55:56 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed} = iTemp16 [k19 lr20:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} + 0x19 {const-unsigned-char literal}
intro.c(l7:s56:k97:d0:s0)		*(iTemp69 [k72 lr55:56 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}) := 0x1f {const-unsigned-char literal}
intro.c(l7:s57:k100:d0:s0)		iTemp72 [k75 lr57:58 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed} = iTemp16 [k19 lr20:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} + 0x1a {const-unsigned-char literal}
intro.c(l7:s58:k101:d0:s0)		*(iTemp72 [k75 lr57:58 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}) := 0x3 {const-unsigned-char literal}
intro.c(l7:s59:k104:d0:s0)		iTemp75 [k78 lr59:60 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed} = iTemp16 [k19 lr20:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} + 0x1b {const-unsigned-char literal}
intro.c(l7:s60:k105:d0:s0)		*(iTemp75 [k78 lr59:60 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}) := 0x3 {const-unsigned-char literal}
intro.c(l7:s61:k108:d0:s0)		iTemp78 [k81 lr61:62 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed} = iTemp16 [k19 lr20:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} + 0x1c {const-unsigned-char literal}
intro.c(l7:s62:k109:d0:s0)		*(iTemp78 [k81 lr61:62 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}) := 0x3 {const-unsigned-char literal}
intro.c(l7:s63:k112:d0:s0)		iTemp81 [k84 lr63:64 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed} = iTemp16 [k19 lr20:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} + 0x1d {const-unsigned-char literal}
intro.c(l7:s64:k113:d0:s0)		*(iTemp81 [k84 lr63:64 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}) := 0x3 {const-unsigned-char literal}
intro.c(l7:s65:k116:d0:s0)		iTemp84 [k87 lr65:66 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed} = iTemp16 [k19 lr20:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} + 0x1e {const-unsigned-char literal}
intro.c(l7:s66:k117:d0:s0)		*(iTemp84 [k87 lr65:66 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}) := 0x3 {const-unsigned-char literal}
intro.c(l7:s67:k120:d0:s0)		iTemp87 [k90 lr67:68 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed} = iTemp16 [k19 lr20:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} + 0x1f {const-unsigned-char literal}
intro.c(l7:s68:k121:d0:s0)		*(iTemp87 [k90 lr67:68 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}) := 0x3 {const-unsigned-char literal}
intro.c(l16:s69:k122:d0:s0)		iTemp88 [k92 lr69:70 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} = &[_intro_letra_l_1_15 [k91 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}]
intro.c(l16:s70:k124:d0:s0)		*(iTemp88 [k92 lr69:70 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}) := 0x18 {const-unsigned-char literal}
intro.c(l16:s71:k125:d0:s0)		iTemp90 [k94 lr71:84 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] fixed} = &[_intro_letra_l_1_15 [k91 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}]
intro.c(l16:s72:k126:d0:s0)		iTemp91 [k95 lr72:73 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed} = iTemp90 [k94 lr71:84 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] fixed} + 0x1 {unsigned-_Bool literal}
intro.c(l16:s73:k127:d0:s0)		*(iTemp91 [k95 lr72:73 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}) := 0x18 {const-unsigned-char literal}
intro.c(l16:s74:k129:d0:s0)		iTemp93 [k97 lr74:75 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed} = iTemp90 [k94 lr71:84 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] fixed} + 0x2 {unsigned-char literal}
intro.c(l16:s75:k130:d0:s0)		*(iTemp93 [k97 lr74:75 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}) := 0x18 {const-unsigned-char literal}
intro.c(l16:s76:k132:d0:s0)		iTemp95 [k99 lr76:77 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed} = iTemp90 [k94 lr71:84 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] fixed} + 0x3 {unsigned-char literal}
intro.c(l16:s77:k133:d0:s0)		*(iTemp95 [k99 lr76:77 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}) := 0x18 {const-unsigned-char literal}
intro.c(l16:s78:k135:d0:s0)		iTemp97 [k101 lr78:79 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed} = iTemp90 [k94 lr71:84 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] fixed} + 0x4 {unsigned-char literal}
intro.c(l16:s79:k136:d0:s0)		*(iTemp97 [k101 lr78:79 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}) := 0x18 {const-unsigned-char literal}
intro.c(l16:s80:k138:d0:s0)		iTemp99 [k103 lr80:81 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed} = iTemp90 [k94 lr71:84 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] fixed} + 0x5 {unsigned-char literal}
intro.c(l16:s81:k139:d0:s0)		*(iTemp99 [k103 lr80:81 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}) := 0x18 {const-unsigned-char literal}
intro.c(l16:s82:k141:d0:s0)		iTemp101 [k105 lr82:83 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed} = iTemp90 [k94 lr71:84 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] fixed} + 0x6 {unsigned-char literal}
intro.c(l16:s83:k142:d0:s0)		*(iTemp101 [k105 lr82:83 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}) := 0x18 {const-unsigned-char literal}
intro.c(l16:s84:k144:d0:s0)		iTemp103 [k107 lr84:85 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed} = iTemp90 [k94 lr71:84 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] fixed} + 0x7 {unsigned-char literal}
intro.c(l16:s85:k145:d0:s0)		*(iTemp103 [k107 lr84:85 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}) := 0x18 {const-unsigned-char literal}
intro.c(l16:s86:k146:d0:s0)		iTemp104 [k108 lr86:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} = &[_intro_letra_l_1_15 [k91 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}]
intro.c(l16:s87:k147:d0:s0)		iTemp105 [k109 lr87:88 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} = iTemp104 [k108 lr86:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} + 0x8 {unsigned-char literal}
intro.c(l16:s88:k149:d0:s0)		*(iTemp105 [k109 lr87:88 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}) := 0x0 {const-unsigned-char literal}
intro.c(l16:s89:k152:d0:s0)		iTemp109 [k113 lr89:90 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed} = iTemp104 [k108 lr86:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} + 0x9 {const-unsigned-char literal}
intro.c(l16:s90:k153:d0:s0)		*(iTemp109 [k113 lr89:90 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}) := 0x0 {const-unsigned-char literal}
intro.c(l16:s91:k156:d0:s0)		iTemp112 [k116 lr91:92 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed} = iTemp104 [k108 lr86:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} + 0xa {const-unsigned-char literal}
intro.c(l16:s92:k157:d0:s0)		*(iTemp112 [k116 lr91:92 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}) := 0x0 {const-unsigned-char literal}
intro.c(l16:s93:k160:d0:s0)		iTemp115 [k119 lr93:94 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed} = iTemp104 [k108 lr86:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} + 0xb {const-unsigned-char literal}
intro.c(l16:s94:k161:d0:s0)		*(iTemp115 [k119 lr93:94 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}) := 0x0 {const-unsigned-char literal}
intro.c(l16:s95:k164:d0:s0)		iTemp118 [k122 lr95:96 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed} = iTemp104 [k108 lr86:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} + 0xc {const-unsigned-char literal}
intro.c(l16:s96:k165:d0:s0)		*(iTemp118 [k122 lr95:96 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}) := 0x0 {const-unsigned-char literal}
intro.c(l16:s97:k168:d0:s0)		iTemp121 [k125 lr97:98 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed} = iTemp104 [k108 lr86:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} + 0xd {const-unsigned-char literal}
intro.c(l16:s98:k169:d0:s0)		*(iTemp121 [k125 lr97:98 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}) := 0x0 {const-unsigned-char literal}
intro.c(l16:s99:k172:d0:s0)		iTemp124 [k128 lr99:100 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed} = iTemp104 [k108 lr86:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} + 0xe {const-unsigned-char literal}
intro.c(l16:s100:k173:d0:s0)		*(iTemp124 [k128 lr99:100 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}) := 0x0 {const-unsigned-char literal}
intro.c(l16:s101:k176:d0:s0)		iTemp127 [k131 lr101:102 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed} = iTemp104 [k108 lr86:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} + 0xf {const-unsigned-char literal}
intro.c(l16:s102:k177:d0:s0)		*(iTemp127 [k131 lr101:102 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}) := 0x0 {const-unsigned-char literal}
intro.c(l16:s103:k179:d0:s0)		iTemp129 [k133 lr103:104 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} = iTemp104 [k108 lr86:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} + 0x10 {unsigned-char literal}
intro.c(l16:s104:k181:d0:s0)		*(iTemp129 [k133 lr103:104 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}) := 0x18 {const-unsigned-char literal}
intro.c(l16:s105:k184:d0:s0)		iTemp133 [k137 lr105:106 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed} = iTemp104 [k108 lr86:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} + 0x11 {const-unsigned-char literal}
intro.c(l16:s106:k185:d0:s0)		*(iTemp133 [k137 lr105:106 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}) := 0x18 {const-unsigned-char literal}
intro.c(l16:s107:k188:d0:s0)		iTemp136 [k140 lr107:108 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed} = iTemp104 [k108 lr86:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} + 0x12 {const-unsigned-char literal}
intro.c(l16:s108:k189:d0:s0)		*(iTemp136 [k140 lr107:108 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}) := 0x18 {const-unsigned-char literal}
intro.c(l16:s109:k192:d0:s0)		iTemp139 [k143 lr109:110 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed} = iTemp104 [k108 lr86:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} + 0x13 {const-unsigned-char literal}
intro.c(l16:s110:k193:d0:s0)		*(iTemp139 [k143 lr109:110 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}) := 0x18 {const-unsigned-char literal}
intro.c(l16:s111:k196:d0:s0)		iTemp142 [k146 lr111:112 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed} = iTemp104 [k108 lr86:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} + 0x14 {const-unsigned-char literal}
intro.c(l16:s112:k197:d0:s0)		*(iTemp142 [k146 lr111:112 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}) := 0x18 {const-unsigned-char literal}
intro.c(l16:s113:k200:d0:s0)		iTemp145 [k149 lr113:114 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed} = iTemp104 [k108 lr86:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} + 0x15 {const-unsigned-char literal}
intro.c(l16:s114:k201:d0:s0)		*(iTemp145 [k149 lr113:114 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}) := 0x18 {const-unsigned-char literal}
intro.c(l16:s115:k204:d0:s0)		iTemp148 [k152 lr115:116 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed} = iTemp104 [k108 lr86:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} + 0x16 {const-unsigned-char literal}
intro.c(l16:s116:k205:d0:s0)		*(iTemp148 [k152 lr115:116 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}) := 0x1f {const-unsigned-char literal}
intro.c(l16:s117:k208:d0:s0)		iTemp151 [k155 lr117:118 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed} = iTemp104 [k108 lr86:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} + 0x17 {const-unsigned-char literal}
intro.c(l16:s118:k209:d0:s0)		*(iTemp151 [k155 lr117:118 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}) := 0x1f {const-unsigned-char literal}
intro.c(l16:s119:k211:d0:s0)		iTemp153 [k157 lr119:120 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} = iTemp104 [k108 lr86:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} + 0x18 {unsigned-char literal}
intro.c(l16:s120:k213:d0:s0)		*(iTemp153 [k157 lr119:120 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}) := 0x0 {const-unsigned-char literal}
intro.c(l16:s121:k216:d0:s0)		iTemp157 [k161 lr121:122 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed} = iTemp104 [k108 lr86:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} + 0x19 {const-unsigned-char literal}
intro.c(l16:s122:k217:d0:s0)		*(iTemp157 [k161 lr121:122 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}) := 0x0 {const-unsigned-char literal}
intro.c(l16:s123:k220:d0:s0)		iTemp160 [k164 lr123:124 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed} = iTemp104 [k108 lr86:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} + 0x1a {const-unsigned-char literal}
intro.c(l16:s124:k221:d0:s0)		*(iTemp160 [k164 lr123:124 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}) := 0x0 {const-unsigned-char literal}
intro.c(l16:s125:k224:d0:s0)		iTemp163 [k167 lr125:126 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed} = iTemp104 [k108 lr86:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} + 0x1b {const-unsigned-char literal}
intro.c(l16:s126:k225:d0:s0)		*(iTemp163 [k167 lr125:126 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}) := 0x0 {const-unsigned-char literal}
intro.c(l16:s127:k228:d0:s0)		iTemp166 [k170 lr127:128 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed} = iTemp104 [k108 lr86:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} + 0x1c {const-unsigned-char literal}
intro.c(l16:s128:k229:d0:s0)		*(iTemp166 [k170 lr127:128 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}) := 0x0 {const-unsigned-char literal}
intro.c(l16:s129:k232:d0:s0)		iTemp169 [k173 lr129:130 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed} = iTemp104 [k108 lr86:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} + 0x1d {const-unsigned-char literal}
intro.c(l16:s130:k233:d0:s0)		*(iTemp169 [k173 lr129:130 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}) := 0x0 {const-unsigned-char literal}
intro.c(l16:s131:k236:d0:s0)		iTemp172 [k176 lr131:132 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed} = iTemp104 [k108 lr86:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} + 0x1e {const-unsigned-char literal}
intro.c(l16:s132:k237:d0:s0)		*(iTemp172 [k176 lr131:132 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}) := 0x1f {const-unsigned-char literal}
intro.c(l16:s133:k240:d0:s0)		iTemp175 [k179 lr133:134 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed} = iTemp104 [k108 lr86:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} + 0x1f {const-unsigned-char literal}
intro.c(l16:s134:k241:d0:s0)		*(iTemp175 [k179 lr133:134 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}) := 0x1f {const-unsigned-char literal}
intro.c(l25:s135:k242:d0:s0)		iTemp176 [k181 lr135:136 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} = &[_intro_letra_r_1_15 [k180 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}]
intro.c(l25:s136:k244:d0:s0)		*(iTemp176 [k181 lr135:136 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}) := 0x1f {const-unsigned-char literal}
intro.c(l25:s137:k245:d0:s0)		iTemp178 [k183 lr137:150 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] fixed} = &[_intro_letra_r_1_15 [k180 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}]
intro.c(l25:s138:k246:d0:s0)		iTemp179 [k184 lr138:139 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed} = iTemp178 [k183 lr137:150 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] fixed} + 0x1 {unsigned-_Bool literal}
intro.c(l25:s139:k247:d0:s0)		*(iTemp179 [k184 lr138:139 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}) := 0x18 {const-unsigned-char literal}
intro.c(l25:s140:k249:d0:s0)		iTemp181 [k186 lr140:141 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed} = iTemp178 [k183 lr137:150 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] fixed} + 0x2 {unsigned-char literal}
intro.c(l25:s141:k250:d0:s0)		*(iTemp181 [k186 lr140:141 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}) := 0x18 {const-unsigned-char literal}
intro.c(l25:s142:k252:d0:s0)		iTemp183 [k188 lr142:143 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed} = iTemp178 [k183 lr137:150 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] fixed} + 0x3 {unsigned-char literal}
intro.c(l25:s143:k253:d0:s0)		*(iTemp183 [k188 lr142:143 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}) := 0x18 {const-unsigned-char literal}
intro.c(l25:s144:k255:d0:s0)		iTemp185 [k190 lr144:145 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed} = iTemp178 [k183 lr137:150 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] fixed} + 0x4 {unsigned-char literal}
intro.c(l25:s145:k256:d0:s0)		*(iTemp185 [k190 lr144:145 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}) := 0x18 {const-unsigned-char literal}
intro.c(l25:s146:k258:d0:s0)		iTemp187 [k192 lr146:147 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed} = iTemp178 [k183 lr137:150 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] fixed} + 0x5 {unsigned-char literal}
intro.c(l25:s147:k259:d0:s0)		*(iTemp187 [k192 lr146:147 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}) := 0x18 {const-unsigned-char literal}
intro.c(l25:s148:k261:d0:s0)		iTemp189 [k194 lr148:149 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed} = iTemp178 [k183 lr137:150 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] fixed} + 0x6 {unsigned-char literal}
intro.c(l25:s149:k262:d0:s0)		*(iTemp189 [k194 lr148:149 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}) := 0x18 {const-unsigned-char literal}
intro.c(l25:s150:k264:d0:s0)		iTemp191 [k196 lr150:151 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed} = iTemp178 [k183 lr137:150 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] fixed} + 0x7 {unsigned-char literal}
intro.c(l25:s151:k265:d0:s0)		*(iTemp191 [k196 lr150:151 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}) := 0x18 {const-unsigned-char literal}
intro.c(l25:s152:k266:d0:s0)		iTemp192 [k197 lr152:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} = &[_intro_letra_r_1_15 [k180 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}]
intro.c(l25:s153:k267:d0:s0)		iTemp193 [k198 lr153:154 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} = iTemp192 [k197 lr152:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} + 0x8 {unsigned-char literal}
intro.c(l25:s154:k269:d0:s0)		*(iTemp193 [k198 lr153:154 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}) := 0x1c {const-unsigned-char literal}
intro.c(l25:s155:k272:d0:s0)		iTemp197 [k202 lr155:156 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed} = iTemp192 [k197 lr152:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} + 0x9 {const-unsigned-char literal}
intro.c(l25:s156:k273:d0:s0)		*(iTemp197 [k202 lr155:156 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}) := 0x2 {const-unsigned-char literal}
intro.c(l25:s157:k276:d0:s0)		iTemp200 [k205 lr157:158 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed} = iTemp192 [k197 lr152:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} + 0xa {const-unsigned-char literal}
intro.c(l25:s158:k277:d0:s0)		*(iTemp200 [k205 lr157:158 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}) := 0x1 {const-unsigned-char literal}
intro.c(l25:s159:k280:d0:s0)		iTemp203 [k208 lr159:160 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed} = iTemp192 [k197 lr152:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} + 0xb {const-unsigned-char literal}
intro.c(l25:s160:k281:d0:s0)		*(iTemp203 [k208 lr159:160 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}) := 0x1 {const-unsigned-char literal}
intro.c(l25:s161:k284:d0:s0)		iTemp206 [k211 lr161:162 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed} = iTemp192 [k197 lr152:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} + 0xc {const-unsigned-char literal}
intro.c(l25:s162:k285:d0:s0)		*(iTemp206 [k211 lr161:162 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}) := 0x1 {const-unsigned-char literal}
intro.c(l25:s163:k288:d0:s0)		iTemp209 [k214 lr163:164 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed} = iTemp192 [k197 lr152:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} + 0xd {const-unsigned-char literal}
intro.c(l25:s164:k289:d0:s0)		*(iTemp209 [k214 lr163:164 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}) := 0x2 {const-unsigned-char literal}
intro.c(l25:s165:k292:d0:s0)		iTemp212 [k217 lr165:166 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed} = iTemp192 [k197 lr152:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} + 0xe {const-unsigned-char literal}
intro.c(l25:s166:k293:d0:s0)		*(iTemp212 [k217 lr165:166 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}) := 0x4 {const-unsigned-char literal}
intro.c(l25:s167:k296:d0:s0)		iTemp215 [k220 lr167:168 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed} = iTemp192 [k197 lr152:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} + 0xf {const-unsigned-char literal}
intro.c(l25:s168:k297:d0:s0)		*(iTemp215 [k220 lr167:168 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}) := 0x18 {const-unsigned-char literal}
intro.c(l25:s169:k299:d0:s0)		iTemp217 [k222 lr169:170 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} = iTemp192 [k197 lr152:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} + 0x10 {unsigned-char literal}
intro.c(l25:s170:k301:d0:s0)		*(iTemp217 [k222 lr169:170 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}) := 0x18 {const-unsigned-char literal}
intro.c(l25:s171:k304:d0:s0)		iTemp221 [k226 lr171:172 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed} = iTemp192 [k197 lr152:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} + 0x11 {const-unsigned-char literal}
intro.c(l25:s172:k305:d0:s0)		*(iTemp221 [k226 lr171:172 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}) := 0x18 {const-unsigned-char literal}
intro.c(l25:s173:k308:d0:s0)		iTemp224 [k229 lr173:174 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed} = iTemp192 [k197 lr152:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} + 0x12 {const-unsigned-char literal}
intro.c(l25:s174:k309:d0:s0)		*(iTemp224 [k229 lr173:174 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}) := 0x18 {const-unsigned-char literal}
intro.c(l25:s175:k312:d0:s0)		iTemp227 [k232 lr175:176 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed} = iTemp192 [k197 lr152:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} + 0x13 {const-unsigned-char literal}
intro.c(l25:s176:k313:d0:s0)		*(iTemp227 [k232 lr175:176 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}) := 0x18 {const-unsigned-char literal}
intro.c(l25:s177:k316:d0:s0)		iTemp230 [k235 lr177:178 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed} = iTemp192 [k197 lr152:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} + 0x14 {const-unsigned-char literal}
intro.c(l25:s178:k317:d0:s0)		*(iTemp230 [k235 lr177:178 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}) := 0x18 {const-unsigned-char literal}
intro.c(l25:s179:k320:d0:s0)		iTemp233 [k238 lr179:180 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed} = iTemp192 [k197 lr152:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} + 0x15 {const-unsigned-char literal}
intro.c(l25:s180:k321:d0:s0)		*(iTemp233 [k238 lr179:180 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}) := 0x18 {const-unsigned-char literal}
intro.c(l25:s181:k324:d0:s0)		iTemp236 [k241 lr181:182 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed} = iTemp192 [k197 lr152:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} + 0x16 {const-unsigned-char literal}
intro.c(l25:s182:k325:d0:s0)		*(iTemp236 [k241 lr181:182 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}) := 0x18 {const-unsigned-char literal}
intro.c(l25:s183:k328:d0:s0)		iTemp239 [k244 lr183:184 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed} = iTemp192 [k197 lr152:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} + 0x17 {const-unsigned-char literal}
intro.c(l25:s184:k329:d0:s0)		*(iTemp239 [k244 lr183:184 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}) := 0x18 {const-unsigned-char literal}
intro.c(l25:s185:k331:d0:s0)		iTemp241 [k246 lr185:186 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} = iTemp192 [k197 lr152:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} + 0x18 {unsigned-char literal}
intro.c(l25:s186:k333:d0:s0)		*(iTemp241 [k246 lr185:186 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}) := 0x10 {const-unsigned-char literal}
intro.c(l25:s187:k336:d0:s0)		iTemp245 [k250 lr187:188 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed} = iTemp192 [k197 lr152:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} + 0x19 {const-unsigned-char literal}
intro.c(l25:s188:k337:d0:s0)		*(iTemp245 [k250 lr187:188 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}) := 0x18 {const-unsigned-char literal}
intro.c(l25:s189:k340:d0:s0)		iTemp248 [k253 lr189:190 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed} = iTemp192 [k197 lr152:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} + 0x1a {const-unsigned-char literal}
intro.c(l25:s190:k341:d0:s0)		*(iTemp248 [k253 lr189:190 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}) := 0xc {const-unsigned-char literal}
intro.c(l25:s191:k344:d0:s0)		iTemp251 [k256 lr191:192 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed} = iTemp192 [k197 lr152:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} + 0x1b {const-unsigned-char literal}
intro.c(l25:s192:k345:d0:s0)		*(iTemp251 [k256 lr191:192 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}) := 0x4 {const-unsigned-char literal}
intro.c(l25:s193:k348:d0:s0)		iTemp254 [k259 lr193:194 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed} = iTemp192 [k197 lr152:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} + 0x1c {const-unsigned-char literal}
intro.c(l25:s194:k349:d0:s0)		*(iTemp254 [k259 lr193:194 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}) := 0x6 {const-unsigned-char literal}
intro.c(l25:s195:k352:d0:s0)		iTemp257 [k262 lr195:196 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed} = iTemp192 [k197 lr152:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} + 0x1d {const-unsigned-char literal}
intro.c(l25:s196:k353:d0:s0)		*(iTemp257 [k262 lr195:196 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}) := 0x2 {const-unsigned-char literal}
intro.c(l25:s197:k356:d0:s0)		iTemp260 [k265 lr197:198 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed} = iTemp192 [k197 lr152:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} + 0x1e {const-unsigned-char literal}
intro.c(l25:s198:k357:d0:s0)		*(iTemp260 [k265 lr197:198 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}) := 0x2 {const-unsigned-char literal}
intro.c(l25:s199:k360:d0:s0)		iTemp263 [k268 lr199:200 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed} = iTemp192 [k197 lr152:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} + 0x1f {const-unsigned-char literal}
intro.c(l25:s200:k361:d0:s0)		*(iTemp263 [k268 lr199:200 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}) := 0x1 {const-unsigned-char literal}
intro.c(l34:s201:k362:d0:s0)		iTemp264 [k270 lr201:202 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} = &[_intro_letra_3_1_15 [k269 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}]
intro.c(l34:s202:k364:d0:s0)		*(iTemp264 [k270 lr201:202 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}) := 0x1f {const-unsigned-char literal}
intro.c(l34:s203:k365:d0:s0)		iTemp266 [k272 lr203:216 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] fixed} = &[_intro_letra_3_1_15 [k269 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}]
intro.c(l34:s204:k366:d0:s0)		iTemp267 [k273 lr204:205 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed} = iTemp266 [k272 lr203:216 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] fixed} + 0x1 {unsigned-_Bool literal}
intro.c(l34:s205:k367:d0:s0)		*(iTemp267 [k273 lr204:205 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}) := 0x1f {const-unsigned-char literal}
intro.c(l34:s206:k369:d0:s0)		iTemp269 [k275 lr206:207 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed} = iTemp266 [k272 lr203:216 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] fixed} + 0x2 {unsigned-char literal}
intro.c(l34:s207:k370:d0:s0)		*(iTemp269 [k275 lr206:207 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}) := 0x0 {const-unsigned-char literal}
intro.c(l34:s208:k372:d0:s0)		iTemp271 [k277 lr208:209 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed} = iTemp266 [k272 lr203:216 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] fixed} + 0x3 {unsigned-char literal}
intro.c(l34:s209:k373:d0:s0)		*(iTemp271 [k277 lr208:209 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}) := 0x0 {const-unsigned-char literal}
intro.c(l34:s210:k375:d0:s0)		iTemp273 [k279 lr210:211 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed} = iTemp266 [k272 lr203:216 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] fixed} + 0x4 {unsigned-char literal}
intro.c(l34:s211:k376:d0:s0)		*(iTemp273 [k279 lr210:211 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}) := 0x0 {const-unsigned-char literal}
intro.c(l34:s212:k378:d0:s0)		iTemp275 [k281 lr212:213 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed} = iTemp266 [k272 lr203:216 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] fixed} + 0x5 {unsigned-char literal}
intro.c(l34:s213:k379:d0:s0)		*(iTemp275 [k281 lr212:213 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}) := 0x0 {const-unsigned-char literal}
intro.c(l34:s214:k381:d0:s0)		iTemp277 [k283 lr214:215 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed} = iTemp266 [k272 lr203:216 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] fixed} + 0x6 {unsigned-char literal}
intro.c(l34:s215:k382:d0:s0)		*(iTemp277 [k283 lr214:215 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}) := 0x0 {const-unsigned-char literal}
intro.c(l34:s216:k384:d0:s0)		iTemp279 [k285 lr216:217 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed} = iTemp266 [k272 lr203:216 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] fixed} + 0x7 {unsigned-char literal}
intro.c(l34:s217:k385:d0:s0)		*(iTemp279 [k285 lr216:217 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}) := 0x0 {const-unsigned-char literal}
intro.c(l34:s218:k386:d0:s0)		iTemp280 [k286 lr218:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} = &[_intro_letra_3_1_15 [k269 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}]
intro.c(l34:s219:k387:d0:s0)		iTemp281 [k287 lr219:220 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} = iTemp280 [k286 lr218:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} + 0x8 {unsigned-char literal}
intro.c(l34:s220:k389:d0:s0)		*(iTemp281 [k287 lr219:220 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}) := 0x1f {const-unsigned-char literal}
intro.c(l34:s221:k392:d0:s0)		iTemp285 [k291 lr221:222 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed} = iTemp280 [k286 lr218:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} + 0x9 {const-unsigned-char literal}
intro.c(l34:s222:k393:d0:s0)		*(iTemp285 [k291 lr221:222 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}) := 0x1f {const-unsigned-char literal}
intro.c(l34:s223:k396:d0:s0)		iTemp288 [k294 lr223:224 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed} = iTemp280 [k286 lr218:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} + 0xa {const-unsigned-char literal}
intro.c(l34:s224:k397:d0:s0)		*(iTemp288 [k294 lr223:224 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}) := 0x3 {const-unsigned-char literal}
intro.c(l34:s225:k400:d0:s0)		iTemp291 [k297 lr225:226 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed} = iTemp280 [k286 lr218:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} + 0xb {const-unsigned-char literal}
intro.c(l34:s226:k401:d0:s0)		*(iTemp291 [k297 lr225:226 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}) := 0x6 {const-unsigned-char literal}
intro.c(l34:s227:k404:d0:s0)		iTemp294 [k300 lr227:228 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed} = iTemp280 [k286 lr218:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} + 0xc {const-unsigned-char literal}
intro.c(l34:s228:k405:d0:s0)		*(iTemp294 [k300 lr227:228 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}) := 0x4 {const-unsigned-char literal}
intro.c(l34:s229:k408:d0:s0)		iTemp297 [k303 lr229:230 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed} = iTemp280 [k286 lr218:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} + 0xd {const-unsigned-char literal}
intro.c(l34:s230:k409:d0:s0)		*(iTemp297 [k303 lr229:230 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}) := 0xc {const-unsigned-char literal}
intro.c(l34:s231:k412:d0:s0)		iTemp300 [k306 lr231:232 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed} = iTemp280 [k286 lr218:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} + 0xe {const-unsigned-char literal}
intro.c(l34:s232:k413:d0:s0)		*(iTemp300 [k306 lr231:232 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}) := 0x8 {const-unsigned-char literal}
intro.c(l34:s233:k416:d0:s0)		iTemp303 [k309 lr233:234 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed} = iTemp280 [k286 lr218:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} + 0xf {const-unsigned-char literal}
intro.c(l34:s234:k417:d0:s0)		*(iTemp303 [k309 lr233:234 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}) := 0x10 {const-unsigned-char literal}
intro.c(l34:s235:k419:d0:s0)		iTemp305 [k311 lr235:236 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} = iTemp280 [k286 lr218:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} + 0x10 {unsigned-char literal}
intro.c(l34:s236:k421:d0:s0)		*(iTemp305 [k311 lr235:236 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}) := 0x0 {const-unsigned-char literal}
intro.c(l34:s237:k424:d0:s0)		iTemp309 [k315 lr237:238 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed} = iTemp280 [k286 lr218:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} + 0x11 {const-unsigned-char literal}
intro.c(l34:s238:k425:d0:s0)		*(iTemp309 [k315 lr237:238 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}) := 0x0 {const-unsigned-char literal}
intro.c(l34:s239:k428:d0:s0)		iTemp312 [k318 lr239:240 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed} = iTemp280 [k286 lr218:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} + 0x12 {const-unsigned-char literal}
intro.c(l34:s240:k429:d0:s0)		*(iTemp312 [k318 lr239:240 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}) := 0x0 {const-unsigned-char literal}
intro.c(l34:s241:k432:d0:s0)		iTemp315 [k321 lr241:242 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed} = iTemp280 [k286 lr218:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} + 0x13 {const-unsigned-char literal}
intro.c(l34:s242:k433:d0:s0)		*(iTemp315 [k321 lr241:242 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}) := 0x0 {const-unsigned-char literal}
intro.c(l34:s243:k436:d0:s0)		iTemp318 [k324 lr243:244 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed} = iTemp280 [k286 lr218:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} + 0x14 {const-unsigned-char literal}
intro.c(l34:s244:k437:d0:s0)		*(iTemp318 [k324 lr243:244 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}) := 0x0 {const-unsigned-char literal}
intro.c(l34:s245:k440:d0:s0)		iTemp321 [k327 lr245:246 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed} = iTemp280 [k286 lr218:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} + 0x15 {const-unsigned-char literal}
intro.c(l34:s246:k441:d0:s0)		*(iTemp321 [k327 lr245:246 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}) := 0x8 {const-unsigned-char literal}
intro.c(l34:s247:k444:d0:s0)		iTemp324 [k330 lr247:248 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed} = iTemp280 [k286 lr218:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} + 0x16 {const-unsigned-char literal}
intro.c(l34:s248:k445:d0:s0)		*(iTemp324 [k330 lr247:248 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}) := 0x8 {const-unsigned-char literal}
intro.c(l34:s249:k448:d0:s0)		iTemp327 [k333 lr249:250 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed} = iTemp280 [k286 lr218:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} + 0x17 {const-unsigned-char literal}
intro.c(l34:s250:k449:d0:s0)		*(iTemp327 [k333 lr249:250 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}) := 0x7 {const-unsigned-char literal}
intro.c(l34:s251:k451:d0:s0)		iTemp329 [k335 lr251:252 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} = iTemp280 [k286 lr218:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} + 0x18 {unsigned-char literal}
intro.c(l34:s252:k453:d0:s0)		*(iTemp329 [k335 lr251:252 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}) := 0x18 {const-unsigned-char literal}
intro.c(l34:s253:k456:d0:s0)		iTemp333 [k339 lr253:254 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed} = iTemp280 [k286 lr218:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} + 0x19 {const-unsigned-char literal}
intro.c(l34:s254:k457:d0:s0)		*(iTemp333 [k339 lr253:254 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}) := 0xc {const-unsigned-char literal}
intro.c(l34:s255:k460:d0:s0)		iTemp336 [k342 lr255:256 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed} = iTemp280 [k286 lr218:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} + 0x1a {const-unsigned-char literal}
intro.c(l34:s256:k461:d0:s0)		*(iTemp336 [k342 lr255:256 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}) := 0x3 {const-unsigned-char literal}
intro.c(l34:s257:k464:d0:s0)		iTemp339 [k345 lr257:258 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed} = iTemp280 [k286 lr218:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} + 0x1b {const-unsigned-char literal}
intro.c(l34:s258:k465:d0:s0)		*(iTemp339 [k345 lr257:258 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}) := 0x3 {const-unsigned-char literal}
intro.c(l34:s259:k468:d0:s0)		iTemp342 [k348 lr259:260 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed} = iTemp280 [k286 lr218:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} + 0x1c {const-unsigned-char literal}
intro.c(l34:s260:k469:d0:s0)		*(iTemp342 [k348 lr259:260 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}) := 0x1 {const-unsigned-char literal}
intro.c(l34:s261:k472:d0:s0)		iTemp345 [k351 lr261:262 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed} = iTemp280 [k286 lr218:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} + 0x1d {const-unsigned-char literal}
intro.c(l34:s262:k473:d0:s0)		*(iTemp345 [k351 lr261:262 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}) := 0x2 {const-unsigned-char literal}
intro.c(l34:s263:k476:d0:s0)		iTemp348 [k354 lr263:264 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed} = iTemp280 [k286 lr218:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} + 0x1e {const-unsigned-char literal}
intro.c(l34:s264:k477:d0:s0)		*(iTemp348 [k354 lr263:264 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}) := 0xc {const-unsigned-char literal}
intro.c(l34:s265:k480:d0:s0)		iTemp351 [k357 lr265:266 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed} = iTemp280 [k286 lr218:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} + 0x1f {const-unsigned-char literal}
intro.c(l34:s266:k481:d0:s0)		*(iTemp351 [k357 lr265:266 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}) := 0x18 {const-unsigned-char literal}
intro.c(l43:s267:k482:d0:s0)		iTemp352 [k359 lr267:268 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} = &[_intro_letra_0_1_15 [k358 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}]
intro.c(l43:s268:k484:d0:s0)		*(iTemp352 [k359 lr267:268 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}) := 0x0 {const-unsigned-char literal}
intro.c(l43:s269:k485:d0:s0)		iTemp354 [k361 lr269:282 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] fixed} = &[_intro_letra_0_1_15 [k358 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}]
intro.c(l43:s270:k486:d0:s0)		iTemp355 [k362 lr270:271 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed} = iTemp354 [k361 lr269:282 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] fixed} + 0x1 {unsigned-_Bool literal}
intro.c(l43:s271:k487:d0:s0)		*(iTemp355 [k362 lr270:271 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}) := 0x1 {const-unsigned-char literal}
intro.c(l43:s272:k489:d0:s0)		iTemp357 [k364 lr272:273 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed} = iTemp354 [k361 lr269:282 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] fixed} + 0x2 {unsigned-char literal}
intro.c(l43:s273:k490:d0:s0)		*(iTemp357 [k364 lr272:273 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}) := 0x3 {const-unsigned-char literal}
intro.c(l43:s274:k492:d0:s0)		iTemp359 [k366 lr274:275 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed} = iTemp354 [k361 lr269:282 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] fixed} + 0x3 {unsigned-char literal}
intro.c(l43:s275:k493:d0:s0)		*(iTemp359 [k366 lr274:275 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}) := 0x2 {const-unsigned-char literal}
intro.c(l43:s276:k495:d0:s0)		iTemp361 [k368 lr276:277 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed} = iTemp354 [k361 lr269:282 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] fixed} + 0x4 {unsigned-char literal}
intro.c(l43:s277:k496:d0:s0)		*(iTemp361 [k368 lr276:277 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}) := 0x6 {const-unsigned-char literal}
intro.c(l43:s278:k498:d0:s0)		iTemp363 [k370 lr278:279 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed} = iTemp354 [k361 lr269:282 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] fixed} + 0x5 {unsigned-char literal}
intro.c(l43:s279:k499:d0:s0)		*(iTemp363 [k370 lr278:279 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}) := 0x4 {const-unsigned-char literal}
intro.c(l43:s280:k501:d0:s0)		iTemp365 [k372 lr280:281 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed} = iTemp354 [k361 lr269:282 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] fixed} + 0x6 {unsigned-char literal}
intro.c(l43:s281:k502:d0:s0)		*(iTemp365 [k372 lr280:281 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}) := 0x4 {const-unsigned-char literal}
intro.c(l43:s282:k504:d0:s0)		iTemp367 [k374 lr282:283 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed} = iTemp354 [k361 lr269:282 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] fixed} + 0x7 {unsigned-char literal}
intro.c(l43:s283:k505:d0:s0)		*(iTemp367 [k374 lr282:283 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}) := 0x4 {const-unsigned-char literal}
intro.c(l43:s284:k506:d0:s0)		iTemp368 [k375 lr284:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} = &[_intro_letra_0_1_15 [k358 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}]
intro.c(l43:s285:k507:d0:s0)		iTemp369 [k376 lr285:286 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} = iTemp368 [k375 lr284:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} + 0x8 {unsigned-char literal}
intro.c(l43:s286:k509:d0:s0)		*(iTemp369 [k376 lr285:286 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}) := 0x0 {const-unsigned-char literal}
intro.c(l43:s287:k512:d0:s0)		iTemp373 [k380 lr287:288 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed} = iTemp368 [k375 lr284:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} + 0x9 {const-unsigned-char literal}
intro.c(l43:s288:k513:d0:s0)		*(iTemp373 [k380 lr287:288 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}) := 0x18 {const-unsigned-char literal}
intro.c(l43:s289:k516:d0:s0)		iTemp376 [k383 lr289:290 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed} = iTemp368 [k375 lr284:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} + 0xa {const-unsigned-char literal}
intro.c(l43:s290:k517:d0:s0)		*(iTemp376 [k383 lr289:290 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}) := 0xe {const-unsigned-char literal}
intro.c(l43:s291:k520:d0:s0)		iTemp379 [k386 lr291:292 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed} = iTemp368 [k375 lr284:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} + 0xb {const-unsigned-char literal}
intro.c(l43:s292:k521:d0:s0)		*(iTemp379 [k386 lr291:292 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}) := 0x6 {const-unsigned-char literal}
intro.c(l43:s293:k524:d0:s0)		iTemp382 [k389 lr293:294 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed} = iTemp368 [k375 lr284:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} + 0xc {const-unsigned-char literal}
intro.c(l43:s294:k525:d0:s0)		*(iTemp382 [k389 lr293:294 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}) := 0x6 {const-unsigned-char literal}
intro.c(l43:s295:k528:d0:s0)		iTemp385 [k392 lr295:296 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed} = iTemp368 [k375 lr284:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} + 0xd {const-unsigned-char literal}
intro.c(l43:s296:k529:d0:s0)		*(iTemp385 [k392 lr295:296 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}) := 0x6 {const-unsigned-char literal}
intro.c(l43:s297:k532:d0:s0)		iTemp388 [k395 lr297:298 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed} = iTemp368 [k375 lr284:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} + 0xe {const-unsigned-char literal}
intro.c(l43:s298:k533:d0:s0)		*(iTemp388 [k395 lr297:298 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}) := 0x6 {const-unsigned-char literal}
intro.c(l43:s299:k536:d0:s0)		iTemp391 [k398 lr299:300 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed} = iTemp368 [k375 lr284:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} + 0xf {const-unsigned-char literal}
intro.c(l43:s300:k537:d0:s0)		*(iTemp391 [k398 lr299:300 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}) := 0x6 {const-unsigned-char literal}
intro.c(l43:s301:k539:d0:s0)		iTemp393 [k400 lr301:302 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} = iTemp368 [k375 lr284:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} + 0x10 {unsigned-char literal}
intro.c(l43:s302:k541:d0:s0)		*(iTemp393 [k400 lr301:302 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}) := 0x4 {const-unsigned-char literal}
intro.c(l43:s303:k544:d0:s0)		iTemp397 [k404 lr303:304 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed} = iTemp368 [k375 lr284:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} + 0x11 {const-unsigned-char literal}
intro.c(l43:s304:k545:d0:s0)		*(iTemp397 [k404 lr303:304 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}) := 0x4 {const-unsigned-char literal}
intro.c(l43:s305:k548:d0:s0)		iTemp400 [k407 lr305:306 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed} = iTemp368 [k375 lr284:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} + 0x12 {const-unsigned-char literal}
intro.c(l43:s306:k549:d0:s0)		*(iTemp400 [k407 lr305:306 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}) := 0x4 {const-unsigned-char literal}
intro.c(l43:s307:k552:d0:s0)		iTemp403 [k410 lr307:308 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed} = iTemp368 [k375 lr284:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} + 0x13 {const-unsigned-char literal}
intro.c(l43:s308:k553:d0:s0)		*(iTemp403 [k410 lr307:308 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}) := 0x4 {const-unsigned-char literal}
intro.c(l43:s309:k556:d0:s0)		iTemp406 [k413 lr309:310 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed} = iTemp368 [k375 lr284:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} + 0x14 {const-unsigned-char literal}
intro.c(l43:s310:k557:d0:s0)		*(iTemp406 [k413 lr309:310 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}) := 0x4 {const-unsigned-char literal}
intro.c(l43:s311:k560:d0:s0)		iTemp409 [k416 lr311:312 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed} = iTemp368 [k375 lr284:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} + 0x15 {const-unsigned-char literal}
intro.c(l43:s312:k561:d0:s0)		*(iTemp409 [k416 lr311:312 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}) := 0x6 {const-unsigned-char literal}
intro.c(l43:s313:k564:d0:s0)		iTemp412 [k419 lr313:314 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed} = iTemp368 [k375 lr284:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} + 0x16 {const-unsigned-char literal}
intro.c(l43:s314:k565:d0:s0)		*(iTemp412 [k419 lr313:314 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}) := 0x3 {const-unsigned-char literal}
intro.c(l43:s315:k568:d0:s0)		iTemp415 [k422 lr315:316 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed} = iTemp368 [k375 lr284:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} + 0x17 {const-unsigned-char literal}
intro.c(l43:s316:k569:d0:s0)		*(iTemp415 [k422 lr315:316 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}) := 0x0 {const-unsigned-char literal}
intro.c(l43:s317:k571:d0:s0)		iTemp417 [k424 lr317:318 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} = iTemp368 [k375 lr284:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} + 0x18 {unsigned-char literal}
intro.c(l43:s318:k573:d0:s0)		*(iTemp417 [k424 lr317:318 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}) := 0x6 {const-unsigned-char literal}
intro.c(l43:s319:k576:d0:s0)		iTemp421 [k428 lr319:320 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed} = iTemp368 [k375 lr284:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} + 0x19 {const-unsigned-char literal}
intro.c(l43:s320:k577:d0:s0)		*(iTemp421 [k428 lr319:320 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}) := 0x6 {const-unsigned-char literal}
intro.c(l43:s321:k580:d0:s0)		iTemp424 [k431 lr321:322 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed} = iTemp368 [k375 lr284:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} + 0x1a {const-unsigned-char literal}
intro.c(l43:s322:k581:d0:s0)		*(iTemp424 [k431 lr321:322 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}) := 0x6 {const-unsigned-char literal}
intro.c(l43:s323:k584:d0:s0)		iTemp427 [k434 lr323:324 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed} = iTemp368 [k375 lr284:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} + 0x1b {const-unsigned-char literal}
intro.c(l43:s324:k585:d0:s0)		*(iTemp427 [k434 lr323:324 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}) := 0x6 {const-unsigned-char literal}
intro.c(l43:s325:k588:d0:s0)		iTemp430 [k437 lr325:326 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed} = iTemp368 [k375 lr284:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} + 0x1c {const-unsigned-char literal}
intro.c(l43:s326:k589:d0:s0)		*(iTemp430 [k437 lr325:326 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}) := 0xc {const-unsigned-char literal}
intro.c(l43:s327:k592:d0:s0)		iTemp433 [k440 lr327:328 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed} = iTemp368 [k375 lr284:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} + 0x1d {const-unsigned-char literal}
intro.c(l43:s328:k593:d0:s0)		*(iTemp433 [k440 lr327:328 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}) := 0xc {const-unsigned-char literal}
intro.c(l43:s329:k596:d0:s0)		iTemp436 [k443 lr329:330 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed} = iTemp368 [k375 lr284:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} + 0x1e {const-unsigned-char literal}
intro.c(l43:s330:k597:d0:s0)		*(iTemp436 [k443 lr329:330 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}) := 0x1c {const-unsigned-char literal}
intro.c(l43:s331:k600:d0:s0)		iTemp439 [k446 lr331:332 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed} = iTemp368 [k375 lr284:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} + 0x1f {const-unsigned-char literal}
intro.c(l43:s332:k601:d0:s0)		*(iTemp439 [k446 lr331:332 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}) := 0x0 {const-unsigned-char literal}
intro.c(l52:s333:k602:d0:s0)		iTemp440 [k448 lr333:334 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} = &[_intro_letra_z_1_15 [k447 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}]
intro.c(l52:s334:k604:d0:s0)		*(iTemp440 [k448 lr333:334 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}) := 0x0 {const-unsigned-char literal}
intro.c(l52:s335:k605:d0:s0)		iTemp442 [k450 lr335:348 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] fixed} = &[_intro_letra_z_1_15 [k447 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}]
intro.c(l52:s336:k606:d0:s0)		iTemp443 [k451 lr336:337 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed} = iTemp442 [k450 lr335:348 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] fixed} + 0x1 {unsigned-_Bool literal}
intro.c(l52:s337:k607:d0:s0)		*(iTemp443 [k451 lr336:337 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}) := 0xf {const-unsigned-char literal}
intro.c(l52:s338:k609:d0:s0)		iTemp445 [k453 lr338:339 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed} = iTemp442 [k450 lr335:348 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] fixed} + 0x2 {unsigned-char literal}
intro.c(l52:s339:k610:d0:s0)		*(iTemp445 [k453 lr338:339 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}) := 0xf {const-unsigned-char literal}
intro.c(l52:s340:k612:d0:s0)		iTemp447 [k455 lr340:341 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed} = iTemp442 [k450 lr335:348 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] fixed} + 0x3 {unsigned-char literal}
intro.c(l52:s341:k613:d0:s0)		*(iTemp447 [k455 lr340:341 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}) := 0x0 {const-unsigned-char literal}
intro.c(l52:s342:k615:d0:s0)		iTemp449 [k457 lr342:343 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed} = iTemp442 [k450 lr335:348 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] fixed} + 0x4 {unsigned-char literal}
intro.c(l52:s343:k616:d0:s0)		*(iTemp449 [k457 lr342:343 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}) := 0x0 {const-unsigned-char literal}
intro.c(l52:s344:k618:d0:s0)		iTemp451 [k459 lr344:345 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed} = iTemp442 [k450 lr335:348 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] fixed} + 0x5 {unsigned-char literal}
intro.c(l52:s345:k619:d0:s0)		*(iTemp451 [k459 lr344:345 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}) := 0x0 {const-unsigned-char literal}
intro.c(l52:s346:k621:d0:s0)		iTemp453 [k461 lr346:347 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed} = iTemp442 [k450 lr335:348 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] fixed} + 0x6 {unsigned-char literal}
intro.c(l52:s347:k622:d0:s0)		*(iTemp453 [k461 lr346:347 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}) := 0x0 {const-unsigned-char literal}
intro.c(l52:s348:k624:d0:s0)		iTemp455 [k463 lr348:349 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed} = iTemp442 [k450 lr335:348 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] fixed} + 0x7 {unsigned-char literal}
intro.c(l52:s349:k625:d0:s0)		*(iTemp455 [k463 lr348:349 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}) := 0x0 {const-unsigned-char literal}
intro.c(l52:s350:k626:d0:s0)		iTemp456 [k464 lr350:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} = &[_intro_letra_z_1_15 [k447 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}]
intro.c(l52:s351:k627:d0:s0)		iTemp457 [k465 lr351:352 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} = iTemp456 [k464 lr350:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} + 0x8 {unsigned-char literal}
intro.c(l52:s352:k629:d0:s0)		*(iTemp457 [k465 lr351:352 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}) := 0x0 {const-unsigned-char literal}
intro.c(l52:s353:k632:d0:s0)		iTemp461 [k469 lr353:354 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed} = iTemp456 [k464 lr350:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} + 0x9 {const-unsigned-char literal}
intro.c(l52:s354:k633:d0:s0)		*(iTemp461 [k469 lr353:354 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}) := 0xf {const-unsigned-char literal}
intro.c(l52:s355:k636:d0:s0)		iTemp464 [k472 lr355:356 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed} = iTemp456 [k464 lr350:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} + 0xa {const-unsigned-char literal}
intro.c(l52:s356:k637:d0:s0)		*(iTemp464 [k472 lr355:356 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}) := 0xf {const-unsigned-char literal}
intro.c(l52:s357:k640:d0:s0)		iTemp467 [k475 lr357:358 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed} = iTemp456 [k464 lr350:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} + 0xb {const-unsigned-char literal}
intro.c(l52:s358:k641:d0:s0)		*(iTemp467 [k475 lr357:358 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}) := 0x3 {const-unsigned-char literal}
intro.c(l52:s359:k644:d0:s0)		iTemp470 [k478 lr359:360 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed} = iTemp456 [k464 lr350:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} + 0xc {const-unsigned-char literal}
intro.c(l52:s360:k645:d0:s0)		*(iTemp470 [k478 lr359:360 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}) := 0x6 {const-unsigned-char literal}
intro.c(l52:s361:k648:d0:s0)		iTemp473 [k481 lr361:362 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed} = iTemp456 [k464 lr350:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} + 0xd {const-unsigned-char literal}
intro.c(l52:s362:k649:d0:s0)		*(iTemp473 [k481 lr361:362 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}) := 0xc {const-unsigned-char literal}
intro.c(l52:s363:k652:d0:s0)		iTemp476 [k484 lr363:364 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed} = iTemp456 [k464 lr350:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} + 0xe {const-unsigned-char literal}
intro.c(l52:s364:k653:d0:s0)		*(iTemp476 [k484 lr363:364 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}) := 0x18 {const-unsigned-char literal}
intro.c(l52:s365:k656:d0:s0)		iTemp479 [k487 lr365:366 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed} = iTemp456 [k464 lr350:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} + 0xf {const-unsigned-char literal}
intro.c(l52:s366:k657:d0:s0)		*(iTemp479 [k487 lr365:366 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}) := 0x10 {const-unsigned-char literal}
intro.c(l52:s367:k659:d0:s0)		iTemp481 [k489 lr367:368 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} = iTemp456 [k464 lr350:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} + 0x10 {unsigned-char literal}
intro.c(l52:s368:k661:d0:s0)		*(iTemp481 [k489 lr367:368 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}) := 0x3 {const-unsigned-char literal}
intro.c(l52:s369:k664:d0:s0)		iTemp485 [k493 lr369:370 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed} = iTemp456 [k464 lr350:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} + 0x11 {const-unsigned-char literal}
intro.c(l52:s370:k665:d0:s0)		*(iTemp485 [k493 lr369:370 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}) := 0x2 {const-unsigned-char literal}
intro.c(l52:s371:k668:d0:s0)		iTemp488 [k496 lr371:372 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed} = iTemp456 [k464 lr350:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} + 0x12 {const-unsigned-char literal}
intro.c(l52:s372:k669:d0:s0)		*(iTemp488 [k496 lr371:372 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}) := 0x6 {const-unsigned-char literal}
intro.c(l52:s373:k672:d0:s0)		iTemp491 [k499 lr373:374 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed} = iTemp456 [k464 lr350:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} + 0x13 {const-unsigned-char literal}
intro.c(l52:s374:k673:d0:s0)		*(iTemp491 [k499 lr373:374 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}) := 0xc {const-unsigned-char literal}
intro.c(l52:s375:k676:d0:s0)		iTemp494 [k502 lr375:376 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed} = iTemp456 [k464 lr350:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} + 0x14 {const-unsigned-char literal}
intro.c(l52:s376:k677:d0:s0)		*(iTemp494 [k502 lr375:376 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}) := 0xc {const-unsigned-char literal}
intro.c(l52:s377:k680:d0:s0)		iTemp497 [k505 lr377:378 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed} = iTemp456 [k464 lr350:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} + 0x15 {const-unsigned-char literal}
intro.c(l52:s378:k681:d0:s0)		*(iTemp497 [k505 lr377:378 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}) := 0x18 {const-unsigned-char literal}
intro.c(l52:s379:k684:d0:s0)		iTemp500 [k508 lr379:380 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed} = iTemp456 [k464 lr350:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} + 0x16 {const-unsigned-char literal}
intro.c(l52:s380:k685:d0:s0)		*(iTemp500 [k508 lr379:380 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}) := 0x1f {const-unsigned-char literal}
intro.c(l52:s381:k688:d0:s0)		iTemp503 [k511 lr381:382 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed} = iTemp456 [k464 lr350:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} + 0x17 {const-unsigned-char literal}
intro.c(l52:s382:k689:d0:s0)		*(iTemp503 [k511 lr381:382 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}) := 0x1f {const-unsigned-char literal}
intro.c(l52:s383:k691:d0:s0)		iTemp505 [k513 lr383:384 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} = iTemp456 [k464 lr350:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} + 0x18 {unsigned-char literal}
intro.c(l52:s384:k693:d0:s0)		*(iTemp505 [k513 lr383:384 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}) := 0x0 {const-unsigned-char literal}
intro.c(l52:s385:k696:d0:s0)		iTemp509 [k517 lr385:386 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed} = iTemp456 [k464 lr350:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} + 0x19 {const-unsigned-char literal}
intro.c(l52:s386:k697:d0:s0)		*(iTemp509 [k517 lr385:386 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}) := 0x0 {const-unsigned-char literal}
intro.c(l52:s387:k700:d0:s0)		iTemp512 [k520 lr387:388 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed} = iTemp456 [k464 lr350:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} + 0x1a {const-unsigned-char literal}
intro.c(l52:s388:k701:d0:s0)		*(iTemp512 [k520 lr387:388 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}) := 0x0 {const-unsigned-char literal}
intro.c(l52:s389:k704:d0:s0)		iTemp515 [k523 lr389:390 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed} = iTemp456 [k464 lr350:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} + 0x1b {const-unsigned-char literal}
intro.c(l52:s390:k705:d0:s0)		*(iTemp515 [k523 lr389:390 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}) := 0x0 {const-unsigned-char literal}
intro.c(l52:s391:k708:d0:s0)		iTemp518 [k526 lr391:392 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed} = iTemp456 [k464 lr350:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} + 0x1c {const-unsigned-char literal}
intro.c(l52:s392:k709:d0:s0)		*(iTemp518 [k526 lr391:392 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}) := 0x0 {const-unsigned-char literal}
intro.c(l52:s393:k712:d0:s0)		iTemp521 [k529 lr393:394 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed} = iTemp456 [k464 lr350:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} + 0x1d {const-unsigned-char literal}
intro.c(l52:s394:k713:d0:s0)		*(iTemp521 [k529 lr393:394 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}) := 0x0 {const-unsigned-char literal}
intro.c(l52:s395:k716:d0:s0)		iTemp524 [k532 lr395:396 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed} = iTemp456 [k464 lr350:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} + 0x1e {const-unsigned-char literal}
intro.c(l52:s396:k717:d0:s0)		*(iTemp524 [k532 lr395:396 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}) := 0x1f {const-unsigned-char literal}
intro.c(l52:s397:k720:d0:s0)		iTemp527 [k535 lr397:398 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed} = iTemp456 [k464 lr350:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} + 0x1f {const-unsigned-char literal}
intro.c(l52:s398:k721:d0:s0)		*(iTemp527 [k535 lr397:398 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}) := 0x1f {const-unsigned-char literal}
intro.c(l61:s399:k722:d0:s0)		iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15} := 0x0 {unsigned-int literal}
intro.c(l67:s400:k1050:d0:s0)		iTemp657 [k675 lr400:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_x_1_15} := 0x0 {const-unsigned-char literal}

----------------------------------------------------------------
Basic Block preHeaderLbl39 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 2 : bbnum = 1 1st iCode = 401 , last iCode = 401
visited 0 : hasFcall = 0

defines bitVector :bitvector Size = 1073 bSize = 135
Bits on { }

local defines bitVector :
pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

in pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

inDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (1050) }

outDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (1050) }

usesDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { }

----------------------------------------------------------------
intro.c(l68:s401:k1072:d0:s0)	 preHeaderLbl39($126) :

----------------------------------------------------------------
Basic Block preHeaderLbl0 : loop Depth = 1 noPath = 0 , lastinLoop = 0
depth 1st num 3 : bbnum = 2 1st iCode = 402 , last iCode = 403
visited 1 : hasFcall = 0

defines bitVector :bitvector Size = 1073 bSize = 135
Bits on { (1015) }

local defines bitVector :bitvector Size = 1073 bSize = 135
Bits on { (1015) }

pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

in pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

inDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1034) (1039) (1044) (1049) (1050) }

outDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1015) (1034) (1039) (1044) (1049) (1050) }

usesDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { }

----------------------------------------------------------------
intro.c(l68:s402:k1005:d1:s0)	 preHeaderLbl0($48) :
intro.c(l68:s403:k1015:d1:s0)		iTemp531 [k542 lr403:407 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_delay_1_15} := 0x4e20 {unsigned-int literal}

----------------------------------------------------------------
Basic Block preHeaderLbl30 : loop Depth = 1 noPath = 0 , lastinLoop = 0
depth 1st num 4 : bbnum = 3 1st iCode = 404 , last iCode = 404
visited 1 : hasFcall = 0

defines bitVector :bitvector Size = 1073 bSize = 135
Bits on { }

local defines bitVector :
pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

in pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

inDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1015) (1034) (1039) (1044) (1049) (1050) }

outDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1015) (1034) (1039) (1044) (1049) (1050) }

usesDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { }

----------------------------------------------------------------
intro.c(l68:s404:k1063:d1:s0)	 preHeaderLbl30($104) :

----------------------------------------------------------------
Basic Block _forcontinue_1 : loop Depth = 14 noPath = 0 , lastinLoop = 0
depth 1st num 5 : bbnum = 4 1st iCode = 405 , last iCode = 407
visited 1 : hasFcall = 0

defines bitVector :bitvector Size = 1073 bSize = 135
Bits on { (727) }

local defines bitVector :bitvector Size = 1073 bSize = 135
Bits on { (727) }

pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

in pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

inDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1015) (1034) (1039) (1044) (1049) (1050) }

outDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1034) (1039) (1044) (1049) (1050) }

usesDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (727) (1015) }

----------------------------------------------------------------
intro.c(l68:s405:k726:d14:s0)	 _forcontinue_1($27) :
intro.c(l68:s406:k727:d14:s0)		iTemp531 [k542 lr403:407 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_delay_1_15} = iTemp531 [k542 lr403:407 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_delay_1_15} - 0x1 {unsigned-int literal}
intro.c(l68:s407:k729:d14:s0)		if iTemp531 [k542 lr403:407 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_delay_1_15} != 0 goto _forcontinue_1($27)

----------------------------------------------------------------
Basic Block _eBBlock26 : loop Depth = 1 noPath = 0 , lastinLoop = 0
depth 1st num 6 : bbnum = 5 1st iCode = 408 , last iCode = 412
visited 1 : hasFcall = 1

defines bitVector :bitvector Size = 1073 bSize = 135
Bits on { (739) }

local defines bitVector :bitvector Size = 1073 bSize = 135
Bits on { (736) (738) (739) }

pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

in pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

inDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1034) (1039) (1044) (1049) (1050) }

outDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1034) (1039) (1044) (1049) (1050) }

usesDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (722) (736) (738) (739) (807) (874) (925) (992) }

----------------------------------------------------------------
intro.c(l69:s408:k736:d1:s0)		iTemp532 [k544 lr408:408 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _limpa_lcd [k543 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( ) fixed}
intro.c(l70:s409:k737:d1:s0)		send 0x40 {const-unsigned-char literal}{argreg = 1}
intro.c(l70:s410:k738:d1:s0)		iTemp533 [k547 lr410:410 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l71:s411:k739:d1:s0)		iTemp534 [k548 lr411:412 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15} > 0x3 {unsigned-int literal}
intro.c(l71:s412:k740:d1:s0)		if iTemp534 [k548 lr411:412 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forcontinue_0($45)

----------------------------------------------------------------
Basic Block _eBBlock27 : loop Depth = 1 noPath = 0 , lastinLoop = 0
depth 1st num 7 : bbnum = 6 1st iCode = 413 , last iCode = 413
visited 1 : hasFcall = 0

defines bitVector :bitvector Size = 1073 bSize = 135
Bits on { }

local defines bitVector :
pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

in pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

inDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1034) (1039) (1044) (1049) (1050) }

outDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1034) (1039) (1044) (1049) (1050) }

usesDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (722) (807) (874) (925) (992) }

----------------------------------------------------------------
intro.c(l71:s413:k741:d1:s0)		jtab	iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15}; _case_0_0; _case_0_1; _case_0_2; _case_0_3

----------------------------------------------------------------
Basic Block _case_0_0 : loop Depth = 1 noPath = 0 , lastinLoop = 0
depth 1st num 8 : bbnum = 7 1st iCode = 414 , last iCode = 416
visited 1 : hasFcall = 0

defines bitVector :bitvector Size = 1073 bSize = 135
Bits on { (1030) (1033) }

local defines bitVector :bitvector Size = 1073 bSize = 135
Bits on { (1030) (1033) }

pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

in pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

inDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1034) (1039) (1044) (1049) (1050) }

outDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1030) (1033) (1039) (1044) (1049) (1050) }

usesDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { }

----------------------------------------------------------------
intro.c(l72:s414:k742:d1:s0)	 _case_0_0($2) :
intro.c(l73:s415:k1030:d1:s0)		iTemp557 [k575 lr415:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15} := 0x0 {const-unsigned-char literal}
intro.c(l73:s416:k1033:d1:s0)		iTemp539 [k556 lr416:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register} := 0x0 {unsigned-int literal}

----------------------------------------------------------------
Basic Block preHeaderLbl32 : loop Depth = 1 noPath = 0 , lastinLoop = 0
depth 1st num 9 : bbnum = 8 1st iCode = 417 , last iCode = 417
visited 1 : hasFcall = 0

defines bitVector :bitvector Size = 1073 bSize = 135
Bits on { }

local defines bitVector :
pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

in pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

inDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1030) (1033) (1039) (1044) (1049) (1050) }

outDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1030) (1033) (1039) (1044) (1049) (1050) }

usesDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { }

----------------------------------------------------------------
intro.c(l74:s417:k1065:d1:s0)	 preHeaderLbl32($110) :

----------------------------------------------------------------
Basic Block preHeaderLbl1 : loop Depth = 13 noPath = 0 , lastinLoop = 0
depth 1st num 10 : bbnum = 9 1st iCode = 418 , last iCode = 424
visited 1 : hasFcall = 0

defines bitVector :bitvector Size = 1073 bSize = 135
Bits on { (747) (753) (762) (763) (764) (1018) }

local defines bitVector :bitvector Size = 1073 bSize = 135
Bits on { (747) (753) (762) (763) (764) (1018) }

pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

in pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

inDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1030) (1033) (1034) (1039) (1044) (1049) (1050) }

outDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1018) (1030) (1033) (1034) (1039) (1044) (1049) (1050) }

usesDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (26) (146) (762) (763) (781) (1030) (1033) (1034) }

----------------------------------------------------------------
intro.c(l74:s418:k1006:d13:s0)	 preHeaderLbl1($52) :
intro.c(l74:s419:k762:d13:s0)		iTemp546 [k564 lr419:420 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register} = iTemp557 [k575 lr415:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15} - 0x4 {const-unsigned-char literal}
intro.c(l74:s420:k763:d13:s0)		iTemp547 [k565 lr420:421 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register} = iTemp546 [k564 lr419:420 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register} * 0x8 {const-unsigned-char literal}
intro.c(l74:s421:k764:d13:s0)		iTemp548 [k566 lr421:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] fixed} = iTemp104 [k108 lr86:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} + iTemp547 [k565 lr420:421 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}
intro.c(l74:s422:k753:d13:s0)		iTemp540 [k557 lr422:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] fixed} = iTemp16 [k19 lr20:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} + iTemp539 [k556 lr416:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}
intro.c(l74:s423:k747:d13:s0)		iTemp537 [k553 lr423:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp557 [k575 lr415:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15} < 0x4 {const-unsigned-char literal}
intro.c(l74:s424:k1018:d13:s0)		iTemp554 [k572 lr424:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15} := 0x0 {const-unsigned-char literal}

----------------------------------------------------------------
Basic Block preHeaderLbl31 : loop Depth = 13 noPath = 0 , lastinLoop = 0
depth 1st num 11 : bbnum = 10 1st iCode = 425 , last iCode = 425
visited 1 : hasFcall = 0

defines bitVector :bitvector Size = 1073 bSize = 135
Bits on { }

local defines bitVector :
pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

in pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

inDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1018) (1030) (1033) (1034) (1039) (1044) (1049) (1050) }

outDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1018) (1030) (1033) (1034) (1039) (1044) (1049) (1050) }

usesDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { }

----------------------------------------------------------------
intro.c(l74:s425:k1064:d13:s0)	 preHeaderLbl31($108) :

----------------------------------------------------------------
Basic Block _forbody_3 : loop Depth = 14 noPath = 0 , lastinLoop = 0
depth 1st num 12 : bbnum = 11 1st iCode = 426 , last iCode = 427
visited 1 : hasFcall = 0

defines bitVector :bitvector Size = 1073 bSize = 135
Bits on { }

local defines bitVector :
pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

in pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

inDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1018) (1030) (1033) (1034) (1039) (1044) (1049) (1050) }

outDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1018) (1030) (1033) (1034) (1039) (1044) (1049) (1050) }

usesDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (747) }

----------------------------------------------------------------
intro.c(l74:s426:k746:d14:s0)	 _forbody_3($28) :
intro.c(l75:s427:k748:d14:s0)		if iTemp537 [k553 lr423:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} == 0 goto _iffalse_0($4)

----------------------------------------------------------------
Basic Block _eBBlock28 : loop Depth = 14 noPath = 0 , lastinLoop = 0
depth 1st num 13 : bbnum = 12 1st iCode = 428 , last iCode = 432
visited 1 : hasFcall = 1

defines bitVector :bitvector Size = 1073 bSize = 135
Bits on { (755) (756) }

local defines bitVector :bitvector Size = 1073 bSize = 135
Bits on { (755) (756) (758) }

pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

in pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

inDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1018) (1030) (1033) (1034) (1039) (1044) (1049) (1050) }

outDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1018) (1030) (1033) (1034) (1039) (1044) (1049) (1050) }

usesDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (753) (755) (756) (758) (773) (1018) }

----------------------------------------------------------------
intro.c(l76:s428:k755:d14:s0)		iTemp542 [k559 lr428:429 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed} = iTemp540 [k557 lr422:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] fixed} + iTemp554 [k572 lr424:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}
intro.c(l76:s429:k756:d14:s0)		iTemp543 [k560 lr429:430 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = @[iTemp542 [k559 lr428:429 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed} + 0x0 {const-unsigned-char literal}]
intro.c(l76:s430:k757:d14:s0)		send iTemp543 [k560 lr429:430 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{argreg = 1}
intro.c(l76:s431:k758:d14:s0)		iTemp544 [k562 lr431:431 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l76:s432:k759:d14:s0)		 goto _forcontinue_3($29)

----------------------------------------------------------------
Basic Block _iffalse_0 : loop Depth = 14 noPath = 0 , lastinLoop = 0
depth 1st num 14 : bbnum = 13 1st iCode = 433 , last iCode = 437
visited 1 : hasFcall = 1

defines bitVector :bitvector Size = 1073 bSize = 135
Bits on { (766) (767) }

local defines bitVector :bitvector Size = 1073 bSize = 135
Bits on { (766) (767) (769) }

pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

in pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

inDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1018) (1030) (1033) (1034) (1039) (1044) (1049) (1050) }

outDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1018) (1030) (1033) (1034) (1039) (1044) (1049) (1050) }

usesDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (764) (766) (767) (769) (773) (1018) }

----------------------------------------------------------------
intro.c(l76:s433:k760:d14:s0)	 _iffalse_0($4) :
intro.c(l78:s434:k766:d14:s0)		iTemp550 [k568 lr434:435 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed} = iTemp548 [k566 lr421:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] fixed} + iTemp554 [k572 lr424:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}
intro.c(l78:s435:k767:d14:s0)		iTemp551 [k569 lr435:436 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = @[iTemp550 [k568 lr434:435 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed} + 0x0 {const-unsigned-char literal}]
intro.c(l78:s436:k768:d14:s0)		send iTemp551 [k569 lr435:436 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{argreg = 1}
intro.c(l78:s437:k769:d14:s0)		iTemp552 [k570 lr437:437 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}

----------------------------------------------------------------
Basic Block _forcontinue_3 : loop Depth = 14 noPath = 0 , lastinLoop = 0
depth 1st num 15 : bbnum = 14 1st iCode = 438 , last iCode = 441
visited 1 : hasFcall = 0

defines bitVector :bitvector Size = 1073 bSize = 135
Bits on { (773) (775) }

local defines bitVector :bitvector Size = 1073 bSize = 135
Bits on { (773) (775) }

pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

in pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

inDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1018) (1030) (1033) (1034) (1039) (1044) (1049) (1050) }

outDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1030) (1033) (1034) (1039) (1044) (1049) (1050) }

usesDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (773) (775) (1018) }

----------------------------------------------------------------
intro.c(l78:s438:k771:d14:s0)	 _forcontinue_3($29) :
intro.c(l74:s439:k773:d14:s0)		iTemp554 [k572 lr424:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15} = iTemp554 [k572 lr424:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15} + 0x1 {const-unsigned-char literal}
intro.c(l74:s440:k775:d14:s0)		iTemp555 [k573 lr440:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp554 [k572 lr424:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15} < 0x8 {const-unsigned-char literal}
intro.c(l74:s441:k776:d14:s0)		if iTemp555 [k573 lr440:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forbody_3($28)

----------------------------------------------------------------
Basic Block _eBBlock29 : loop Depth = 13 noPath = 0 , lastinLoop = 0
depth 1st num 16 : bbnum = 15 1st iCode = 442 , last iCode = 445
visited 1 : hasFcall = 0

defines bitVector :bitvector Size = 1073 bSize = 135
Bits on { (781) (783) (1034) }

local defines bitVector :bitvector Size = 1073 bSize = 135
Bits on { (781) (783) (1034) }

pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

in pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

inDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1030) (1033) (1034) (1039) (1044) (1049) (1050) }

outDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1034) (1039) (1044) (1049) (1050) }

usesDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (781) (783) (1030) (1033) }

----------------------------------------------------------------
intro.c(l73:s442:k1034:d13:s0)		iTemp539 [k556 lr416:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register} = iTemp539 [k556 lr416:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register} + 0x8 {const-unsigned-char literal}
intro.c(l73:s443:k781:d13:s0)		iTemp557 [k575 lr415:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15} = iTemp557 [k575 lr415:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15} + 0x1 {const-unsigned-char literal}
intro.c(l73:s444:k783:d13:s0)		iTemp558 [k576 lr444:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp557 [k575 lr415:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15} < 0x8 {const-unsigned-char literal}
intro.c(l73:s445:k784:d13:s0)		if iTemp558 [k576 lr444:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl1($52)

----------------------------------------------------------------
Basic Block _eBBlock30 : loop Depth = 1 noPath = 0 , lastinLoop = 0
depth 1st num 17 : bbnum = 16 1st iCode = 446 , last iCode = 467
visited 1 : hasFcall = 1

defines bitVector :bitvector Size = 1073 bSize = 135
Bits on { (807) }

local defines bitVector :bitvector Size = 1073 bSize = 135
Bits on { (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) }

pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

in pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

inDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1034) (1039) (1044) (1049) (1050) }

outDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (997) (999) (1034) (1039) (1044) (1049) (1050) }

usesDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) }

----------------------------------------------------------------
intro.c(l81:s446:k787:d1:s0)		send 0x80 {const-unsigned-char literal}{argreg = 1}
intro.c(l81:s447:k788:d1:s0)		iTemp559 [k577 lr447:447 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l82:s448:k789:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l82:s449:k790:d1:s0)		iTemp560 [k578 lr449:449 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l83:s450:k791:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l83:s451:k792:d1:s0)		iTemp561 [k579 lr451:451 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l84:s452:k793:d1:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
intro.c(l84:s453:k794:d1:s0)		iTemp562 [k580 lr453:453 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l85:s454:k795:d1:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
intro.c(l85:s455:k796:d1:s0)		iTemp563 [k581 lr455:455 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l86:s456:k797:d1:s0)		send 0xc0 {const-unsigned-char literal}{argreg = 1}
intro.c(l86:s457:k798:d1:s0)		iTemp564 [k582 lr457:457 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l87:s458:k799:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l87:s459:k800:d1:s0)		iTemp565 [k583 lr459:459 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l88:s460:k801:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l88:s461:k802:d1:s0)		iTemp566 [k584 lr461:461 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l89:s462:k803:d1:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
intro.c(l89:s463:k804:d1:s0)		iTemp567 [k585 lr463:463 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l90:s464:k805:d1:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
intro.c(l90:s465:k806:d1:s0)		iTemp568 [k586 lr465:465 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l91:s466:k807:d1:s0)		iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15} := 0x1 {unsigned-int literal}
intro.c(l92:s467:k808:d1:s0)		 goto _forcontinue_0($45)

----------------------------------------------------------------
Basic Block _case_0_1 : loop Depth = 1 noPath = 0 , lastinLoop = 0
depth 1st num 18 : bbnum = 17 1st iCode = 468 , last iCode = 470
visited 1 : hasFcall = 0

defines bitVector :bitvector Size = 1073 bSize = 135
Bits on { (1035) (1038) }

local defines bitVector :bitvector Size = 1073 bSize = 135
Bits on { (1035) (1038) }

pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

in pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

inDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1034) (1039) (1044) (1049) (1050) }

outDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1034) (1035) (1038) (1044) (1049) (1050) }

usesDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { }

----------------------------------------------------------------
intro.c(l93:s468:k809:d1:s0)	 _case_0_1($8) :
intro.c(l94:s469:k1035:d1:s0)		iTemp589 [k607 lr469:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15} := 0x0 {const-unsigned-char literal}
intro.c(l94:s470:k1038:d1:s0)		iTemp571 [k589 lr470:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register} := 0x0 {unsigned-int literal}

----------------------------------------------------------------
Basic Block preHeaderLbl34 : loop Depth = 1 noPath = 0 , lastinLoop = 0
depth 1st num 19 : bbnum = 18 1st iCode = 471 , last iCode = 471
visited 1 : hasFcall = 0

defines bitVector :bitvector Size = 1073 bSize = 135
Bits on { }

local defines bitVector :
pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

in pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

inDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1034) (1035) (1038) (1044) (1049) (1050) }

outDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1034) (1035) (1038) (1044) (1049) (1050) }

usesDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { }

----------------------------------------------------------------
intro.c(l95:s471:k1067:d1:s0)	 preHeaderLbl34($115) :

----------------------------------------------------------------
Basic Block preHeaderLbl3 : loop Depth = 13 noPath = 0 , lastinLoop = 0
depth 1st num 20 : bbnum = 19 1st iCode = 472 , last iCode = 478
visited 1 : hasFcall = 0

defines bitVector :bitvector Size = 1073 bSize = 135
Bits on { (814) (820) (829) (830) (831) (1021) }

local defines bitVector :bitvector Size = 1073 bSize = 135
Bits on { (814) (820) (829) (830) (831) (1021) }

pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

in pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

inDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1034) (1035) (1038) (1039) (1044) (1049) (1050) }

outDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1021) (1034) (1035) (1038) (1039) (1044) (1049) (1050) }

usesDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (266) (386) (829) (830) (848) (1035) (1038) (1039) }

----------------------------------------------------------------
intro.c(l95:s472:k1008:d13:s0)	 preHeaderLbl3($57) :
intro.c(l95:s473:k829:d13:s0)		iTemp578 [k596 lr473:474 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register} = iTemp589 [k607 lr469:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15} - 0x4 {const-unsigned-char literal}
intro.c(l95:s474:k830:d13:s0)		iTemp579 [k597 lr474:475 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register} = iTemp578 [k596 lr473:474 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register} * 0x8 {const-unsigned-char literal}
intro.c(l95:s475:k831:d13:s0)		iTemp580 [k598 lr475:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] fixed} = iTemp280 [k286 lr218:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} + iTemp579 [k597 lr474:475 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}
intro.c(l95:s476:k820:d13:s0)		iTemp572 [k590 lr476:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] fixed} = iTemp192 [k197 lr152:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} + iTemp571 [k589 lr470:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}
intro.c(l95:s477:k814:d13:s0)		iTemp569 [k587 lr477:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp589 [k607 lr469:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15} < 0x4 {const-unsigned-char literal}
intro.c(l95:s478:k1021:d13:s0)		iTemp586 [k604 lr478:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15} := 0x0 {const-unsigned-char literal}

----------------------------------------------------------------
Basic Block preHeaderLbl33 : loop Depth = 13 noPath = 0 , lastinLoop = 0
depth 1st num 21 : bbnum = 20 1st iCode = 479 , last iCode = 479
visited 1 : hasFcall = 0

defines bitVector :bitvector Size = 1073 bSize = 135
Bits on { }

local defines bitVector :
pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

in pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

inDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1021) (1034) (1035) (1038) (1039) (1044) (1049) (1050) }

outDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1021) (1034) (1035) (1038) (1039) (1044) (1049) (1050) }

usesDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { }

----------------------------------------------------------------
intro.c(l95:s479:k1066:d13:s0)	 preHeaderLbl33($113) :

----------------------------------------------------------------
Basic Block _forbody_5 : loop Depth = 14 noPath = 0 , lastinLoop = 0
depth 1st num 22 : bbnum = 21 1st iCode = 480 , last iCode = 481
visited 1 : hasFcall = 0

defines bitVector :bitvector Size = 1073 bSize = 135
Bits on { }

local defines bitVector :
pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

in pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

inDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1021) (1034) (1035) (1038) (1039) (1044) (1049) (1050) }

outDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1021) (1034) (1035) (1038) (1039) (1044) (1049) (1050) }

usesDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (814) }

----------------------------------------------------------------
intro.c(l95:s480:k813:d14:s0)	 _forbody_5($32) :
intro.c(l96:s481:k815:d14:s0)		if iTemp569 [k587 lr477:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} == 0 goto _iffalse_1($10)

----------------------------------------------------------------
Basic Block _eBBlock31 : loop Depth = 14 noPath = 0 , lastinLoop = 0
depth 1st num 23 : bbnum = 22 1st iCode = 482 , last iCode = 486
visited 1 : hasFcall = 1

defines bitVector :bitvector Size = 1073 bSize = 135
Bits on { (822) (823) }

local defines bitVector :bitvector Size = 1073 bSize = 135
Bits on { (822) (823) (825) }

pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

in pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

inDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1021) (1034) (1035) (1038) (1039) (1044) (1049) (1050) }

outDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1021) (1034) (1035) (1038) (1039) (1044) (1049) (1050) }

usesDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (820) (822) (823) (825) (840) (1021) }

----------------------------------------------------------------
intro.c(l97:s482:k822:d14:s0)		iTemp574 [k592 lr482:483 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed} = iTemp572 [k590 lr476:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] fixed} + iTemp586 [k604 lr478:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}
intro.c(l97:s483:k823:d14:s0)		iTemp575 [k593 lr483:484 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = @[iTemp574 [k592 lr482:483 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed} + 0x0 {const-unsigned-char literal}]
intro.c(l97:s484:k824:d14:s0)		send iTemp575 [k593 lr483:484 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{argreg = 1}
intro.c(l97:s485:k825:d14:s0)		iTemp576 [k594 lr485:485 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l97:s486:k826:d14:s0)		 goto _forcontinue_5($33)

----------------------------------------------------------------
Basic Block _iffalse_1 : loop Depth = 14 noPath = 0 , lastinLoop = 0
depth 1st num 24 : bbnum = 23 1st iCode = 487 , last iCode = 491
visited 1 : hasFcall = 1

defines bitVector :bitvector Size = 1073 bSize = 135
Bits on { (833) (834) }

local defines bitVector :bitvector Size = 1073 bSize = 135
Bits on { (833) (834) (836) }

pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

in pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

inDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1021) (1034) (1035) (1038) (1039) (1044) (1049) (1050) }

outDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1021) (1034) (1035) (1038) (1039) (1044) (1049) (1050) }

usesDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (831) (833) (834) (836) (840) (1021) }

----------------------------------------------------------------
intro.c(l97:s487:k827:d14:s0)	 _iffalse_1($10) :
intro.c(l99:s488:k833:d14:s0)		iTemp582 [k600 lr488:489 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed} = iTemp580 [k598 lr475:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] fixed} + iTemp586 [k604 lr478:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}
intro.c(l99:s489:k834:d14:s0)		iTemp583 [k601 lr489:490 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = @[iTemp582 [k600 lr488:489 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed} + 0x0 {const-unsigned-char literal}]
intro.c(l99:s490:k835:d14:s0)		send iTemp583 [k601 lr489:490 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{argreg = 1}
intro.c(l99:s491:k836:d14:s0)		iTemp584 [k602 lr491:491 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}

----------------------------------------------------------------
Basic Block _forcontinue_5 : loop Depth = 14 noPath = 0 , lastinLoop = 0
depth 1st num 25 : bbnum = 24 1st iCode = 492 , last iCode = 495
visited 1 : hasFcall = 0

defines bitVector :bitvector Size = 1073 bSize = 135
Bits on { (840) (842) }

local defines bitVector :bitvector Size = 1073 bSize = 135
Bits on { (840) (842) }

pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

in pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

inDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1021) (1034) (1035) (1038) (1039) (1044) (1049) (1050) }

outDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1034) (1035) (1038) (1039) (1044) (1049) (1050) }

usesDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (840) (842) (1021) }

----------------------------------------------------------------
intro.c(l99:s492:k838:d14:s0)	 _forcontinue_5($33) :
intro.c(l95:s493:k840:d14:s0)		iTemp586 [k604 lr478:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15} = iTemp586 [k604 lr478:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15} + 0x1 {const-unsigned-char literal}
intro.c(l95:s494:k842:d14:s0)		iTemp587 [k605 lr494:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp586 [k604 lr478:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15} < 0x8 {const-unsigned-char literal}
intro.c(l95:s495:k843:d14:s0)		if iTemp587 [k605 lr494:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forbody_5($32)

----------------------------------------------------------------
Basic Block _eBBlock32 : loop Depth = 13 noPath = 0 , lastinLoop = 0
depth 1st num 26 : bbnum = 25 1st iCode = 496 , last iCode = 499
visited 1 : hasFcall = 0

defines bitVector :bitvector Size = 1073 bSize = 135
Bits on { (848) (850) (1039) }

local defines bitVector :bitvector Size = 1073 bSize = 135
Bits on { (848) (850) (1039) }

pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

in pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

inDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1034) (1035) (1038) (1039) (1044) (1049) (1050) }

outDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1034) (1039) (1044) (1049) (1050) }

usesDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (848) (850) (1035) (1038) }

----------------------------------------------------------------
intro.c(l94:s496:k1039:d13:s0)		iTemp571 [k589 lr470:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register} = iTemp571 [k589 lr470:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register} + 0x8 {const-unsigned-char literal}
intro.c(l94:s497:k848:d13:s0)		iTemp589 [k607 lr469:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15} = iTemp589 [k607 lr469:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15} + 0x1 {const-unsigned-char literal}
intro.c(l94:s498:k850:d13:s0)		iTemp590 [k608 lr498:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp589 [k607 lr469:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15} < 0x8 {const-unsigned-char literal}
intro.c(l94:s499:k851:d13:s0)		if iTemp590 [k608 lr498:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl3($57)

----------------------------------------------------------------
Basic Block _eBBlock33 : loop Depth = 1 noPath = 0 , lastinLoop = 0
depth 1st num 27 : bbnum = 26 1st iCode = 500 , last iCode = 521
visited 1 : hasFcall = 1

defines bitVector :bitvector Size = 1073 bSize = 135
Bits on { (874) }

local defines bitVector :bitvector Size = 1073 bSize = 135
Bits on { (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) }

pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

in pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

inDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1034) (1039) (1044) (1049) (1050) }

outDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (997) (999) (1034) (1039) (1044) (1049) (1050) }

usesDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) }

----------------------------------------------------------------
intro.c(l102:s500:k854:d1:s0)		send 0x84 {const-unsigned-char literal}{argreg = 1}
intro.c(l102:s501:k855:d1:s0)		iTemp591 [k609 lr501:501 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l103:s502:k856:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l103:s503:k857:d1:s0)		iTemp592 [k610 lr503:503 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l104:s504:k858:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l104:s505:k859:d1:s0)		iTemp593 [k611 lr505:505 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l105:s506:k860:d1:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
intro.c(l105:s507:k861:d1:s0)		iTemp594 [k612 lr507:507 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l106:s508:k862:d1:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
intro.c(l106:s509:k863:d1:s0)		iTemp595 [k613 lr509:509 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l107:s510:k864:d1:s0)		send 0xc4 {const-unsigned-char literal}{argreg = 1}
intro.c(l107:s511:k865:d1:s0)		iTemp596 [k614 lr511:511 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l108:s512:k866:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l108:s513:k867:d1:s0)		iTemp597 [k615 lr513:513 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l109:s514:k868:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l109:s515:k869:d1:s0)		iTemp598 [k616 lr515:515 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l110:s516:k870:d1:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
intro.c(l110:s517:k871:d1:s0)		iTemp599 [k617 lr517:517 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l111:s518:k872:d1:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
intro.c(l111:s519:k873:d1:s0)		iTemp600 [k618 lr519:519 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l112:s520:k874:d1:s0)		iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15} := 0x2 {unsigned-int literal}
intro.c(l113:s521:k875:d1:s0)		 goto _forcontinue_0($45)

----------------------------------------------------------------
Basic Block _case_0_2 : loop Depth = 1 noPath = 0 , lastinLoop = 0
depth 1st num 28 : bbnum = 27 1st iCode = 522 , last iCode = 524
visited 1 : hasFcall = 0

defines bitVector :bitvector Size = 1073 bSize = 135
Bits on { (1040) (1043) }

local defines bitVector :bitvector Size = 1073 bSize = 135
Bits on { (1040) (1043) }

pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

in pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

inDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1034) (1039) (1044) (1049) (1050) }

outDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1034) (1039) (1040) (1043) (1049) (1050) }

usesDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { }

----------------------------------------------------------------
intro.c(l114:s522:k876:d1:s0)	 _case_0_2($14) :
intro.c(l115:s523:k1040:d1:s0)		iTemp612 [k630 lr523:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15} := 0x0 {const-unsigned-char literal}
intro.c(l115:s524:k1043:d1:s0)		iTemp602 [k620 lr524:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register} := 0x0 {unsigned-int literal}

----------------------------------------------------------------
Basic Block preHeaderLbl36 : loop Depth = 1 noPath = 0 , lastinLoop = 0
depth 1st num 29 : bbnum = 28 1st iCode = 525 , last iCode = 525
visited 1 : hasFcall = 0

defines bitVector :bitvector Size = 1073 bSize = 135
Bits on { }

local defines bitVector :
pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

in pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

inDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1034) (1039) (1040) (1043) (1049) (1050) }

outDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1034) (1039) (1040) (1043) (1049) (1050) }

usesDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { }

----------------------------------------------------------------
intro.c(l116:s525:k1069:d1:s0)	 preHeaderLbl36($119) :

----------------------------------------------------------------
Basic Block preHeaderLbl5 : loop Depth = 13 noPath = 0 , lastinLoop = 0
depth 1st num 30 : bbnum = 29 1st iCode = 526 , last iCode = 528
visited 1 : hasFcall = 0

defines bitVector :bitvector Size = 1073 bSize = 135
Bits on { (883) (1024) }

local defines bitVector :bitvector Size = 1073 bSize = 135
Bits on { (883) (1024) }

pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

in pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

inDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1034) (1039) (1040) (1043) (1044) (1049) (1050) }

outDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1024) (1034) (1039) (1040) (1043) (1044) (1049) (1050) }

usesDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (506) (1043) (1044) }

----------------------------------------------------------------
intro.c(l116:s526:k1010:d13:s0)	 preHeaderLbl5($61) :
intro.c(l116:s527:k883:d13:s0)		iTemp603 [k621 lr527:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] fixed} = iTemp368 [k375 lr284:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} + iTemp602 [k620 lr524:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}
intro.c(l116:s528:k1024:d13:s0)		iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15} := 0x0 {const-unsigned-char literal}

----------------------------------------------------------------
Basic Block preHeaderLbl35 : loop Depth = 13 noPath = 0 , lastinLoop = 0
depth 1st num 31 : bbnum = 30 1st iCode = 529 , last iCode = 529
visited 1 : hasFcall = 0

defines bitVector :bitvector Size = 1073 bSize = 135
Bits on { }

local defines bitVector :
pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

in pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

inDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1024) (1034) (1039) (1040) (1043) (1044) (1049) (1050) }

outDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1024) (1034) (1039) (1040) (1043) (1044) (1049) (1050) }

usesDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { }

----------------------------------------------------------------
intro.c(l116:s529:k1068:d13:s0)	 preHeaderLbl35($117) :

----------------------------------------------------------------
Basic Block _forbody_7 : loop Depth = 14 noPath = 0 , lastinLoop = 0
depth 1st num 32 : bbnum = 31 1st iCode = 530 , last iCode = 537
visited 1 : hasFcall = 1

defines bitVector :bitvector Size = 1073 bSize = 135
Bits on { (885) (886) (891) (893) }

local defines bitVector :bitvector Size = 1073 bSize = 135
Bits on { (885) (886) (888) (891) (893) }

pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

in pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

inDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1024) (1034) (1039) (1040) (1043) (1044) (1049) (1050) }

outDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1034) (1039) (1040) (1043) (1044) (1049) (1050) }

usesDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (883) (885) (886) (888) (891) (893) (1024) }

----------------------------------------------------------------
intro.c(l116:s530:k880:d14:s0)	 _forbody_7($36) :
intro.c(l117:s531:k885:d14:s0)		iTemp605 [k623 lr531:532 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed} = iTemp603 [k621 lr527:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] fixed} + iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}
intro.c(l117:s532:k886:d14:s0)		iTemp606 [k624 lr532:533 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = @[iTemp605 [k623 lr531:532 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed} + 0x0 {const-unsigned-char literal}]
intro.c(l117:s533:k887:d14:s0)		send iTemp606 [k624 lr532:533 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{argreg = 1}
intro.c(l117:s534:k888:d14:s0)		iTemp607 [k625 lr534:534 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l116:s535:k891:d14:s0)		iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15} = iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15} + 0x1 {const-unsigned-char literal}
intro.c(l116:s536:k893:d14:s0)		iTemp610 [k628 lr536:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15} < 0x8 {const-unsigned-char literal}
intro.c(l116:s537:k894:d14:s0)		if iTemp610 [k628 lr536:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forbody_7($36)

----------------------------------------------------------------
Basic Block _eBBlock34 : loop Depth = 13 noPath = 0 , lastinLoop = 0
depth 1st num 33 : bbnum = 32 1st iCode = 538 , last iCode = 541
visited 1 : hasFcall = 0

defines bitVector :bitvector Size = 1073 bSize = 135
Bits on { (899) (901) (1044) }

local defines bitVector :bitvector Size = 1073 bSize = 135
Bits on { (899) (901) (1044) }

pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

in pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

inDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1034) (1039) (1040) (1043) (1044) (1049) (1050) }

outDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1034) (1039) (1044) (1049) (1050) }

usesDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (899) (901) (1040) (1043) }

----------------------------------------------------------------
intro.c(l115:s538:k1044:d13:s0)		iTemp602 [k620 lr524:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register} = iTemp602 [k620 lr524:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register} + 0x8 {const-unsigned-char literal}
intro.c(l115:s539:k899:d13:s0)		iTemp612 [k630 lr523:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15} = iTemp612 [k630 lr523:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15} + 0x1 {const-unsigned-char literal}
intro.c(l115:s540:k901:d13:s0)		iTemp613 [k631 lr540:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp612 [k630 lr523:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15} < 0x4 {const-unsigned-char literal}
intro.c(l115:s541:k902:d13:s0)		if iTemp613 [k631 lr540:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl5($61)

----------------------------------------------------------------
Basic Block _eBBlock35 : loop Depth = 1 noPath = 0 , lastinLoop = 0
depth 1st num 34 : bbnum = 33 1st iCode = 542 , last iCode = 563
visited 1 : hasFcall = 1

defines bitVector :bitvector Size = 1073 bSize = 135
Bits on { (925) }

local defines bitVector :bitvector Size = 1073 bSize = 135
Bits on { (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) }

pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

in pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

inDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1034) (1039) (1044) (1049) (1050) }

outDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (997) (999) (1034) (1039) (1044) (1049) (1050) }

usesDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) }

----------------------------------------------------------------
intro.c(l120:s542:k905:d1:s0)		send 0x88 {const-unsigned-char literal}{argreg = 1}
intro.c(l120:s543:k906:d1:s0)		iTemp614 [k632 lr543:543 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l121:s544:k907:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l121:s545:k908:d1:s0)		iTemp615 [k633 lr545:545 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l122:s546:k909:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l122:s547:k910:d1:s0)		iTemp616 [k634 lr547:547 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l123:s548:k911:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l123:s549:k912:d1:s0)		iTemp617 [k635 lr549:549 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l124:s550:k913:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l124:s551:k914:d1:s0)		iTemp618 [k636 lr551:551 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l125:s552:k915:d1:s0)		send 0xc8 {const-unsigned-char literal}{argreg = 1}
intro.c(l125:s553:k916:d1:s0)		iTemp619 [k637 lr553:553 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l126:s554:k917:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l126:s555:k918:d1:s0)		iTemp620 [k638 lr555:555 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l127:s556:k919:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l127:s557:k920:d1:s0)		iTemp621 [k639 lr557:557 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l128:s558:k921:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l128:s559:k922:d1:s0)		iTemp622 [k640 lr559:559 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l129:s560:k923:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l129:s561:k924:d1:s0)		iTemp623 [k641 lr561:561 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l130:s562:k925:d1:s0)		iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15} := 0x3 {unsigned-int literal}
intro.c(l131:s563:k926:d1:s0)		 goto _forcontinue_0($45)

----------------------------------------------------------------
Basic Block _case_0_3 : loop Depth = 1 noPath = 0 , lastinLoop = 0
depth 1st num 35 : bbnum = 34 1st iCode = 564 , last iCode = 566
visited 1 : hasFcall = 0

defines bitVector :bitvector Size = 1073 bSize = 135
Bits on { (1045) (1048) }

local defines bitVector :bitvector Size = 1073 bSize = 135
Bits on { (1045) (1048) }

pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

in pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

inDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1034) (1039) (1044) (1049) (1050) }

outDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1034) (1039) (1044) (1045) (1048) (1050) }

usesDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { }

----------------------------------------------------------------
intro.c(l132:s564:k927:d1:s0)	 _case_0_3($17) :
intro.c(l133:s565:k1045:d1:s0)		iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15} := 0x0 {const-unsigned-char literal}
intro.c(l133:s566:k1048:d1:s0)		iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register} := 0x0 {unsigned-int literal}

----------------------------------------------------------------
Basic Block preHeaderLbl38 : loop Depth = 1 noPath = 0 , lastinLoop = 0
depth 1st num 36 : bbnum = 35 1st iCode = 567 , last iCode = 567
visited 1 : hasFcall = 0

defines bitVector :bitvector Size = 1073 bSize = 135
Bits on { }

local defines bitVector :
pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

in pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

inDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1034) (1039) (1044) (1045) (1048) (1050) }

outDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1034) (1039) (1044) (1045) (1048) (1050) }

usesDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { }

----------------------------------------------------------------
intro.c(l134:s567:k1071:d1:s0)	 preHeaderLbl38($124) :

----------------------------------------------------------------
Basic Block preHeaderLbl7 : loop Depth = 13 noPath = 0 , lastinLoop = 0
depth 1st num 37 : bbnum = 36 1st iCode = 568 , last iCode = 574
visited 1 : hasFcall = 0

defines bitVector :bitvector Size = 1073 bSize = 135
Bits on { (932) (938) (947) (948) (949) (1027) }

local defines bitVector :bitvector Size = 1073 bSize = 135
Bits on { (932) (938) (947) (948) (949) (1027) }

pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

in pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

inDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1034) (1039) (1044) (1045) (1048) (1049) (1050) }

outDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1027) (1034) (1039) (1044) (1045) (1048) (1049) (1050) }

usesDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (506) (626) (947) (948) (966) (1045) (1048) (1049) }

----------------------------------------------------------------
intro.c(l134:s568:k1012:d13:s0)	 preHeaderLbl7($66) :
intro.c(l134:s569:k947:d13:s0)		iTemp633 [k651 lr569:570 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register} = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15} - 0x4 {const-unsigned-char literal}
intro.c(l134:s570:k948:d13:s0)		iTemp634 [k652 lr570:571 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register} = iTemp633 [k651 lr569:570 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register} * 0x8 {const-unsigned-char literal}
intro.c(l134:s571:k949:d13:s0)		iTemp635 [k653 lr571:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] fixed} = iTemp456 [k464 lr350:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} + iTemp634 [k652 lr570:571 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}
intro.c(l134:s572:k938:d13:s0)		iTemp627 [k645 lr572:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] fixed} = iTemp368 [k375 lr284:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed} + iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}
intro.c(l134:s573:k932:d13:s0)		iTemp624 [k642 lr573:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15} < 0x4 {const-unsigned-char literal}
intro.c(l134:s574:k1027:d13:s0)		iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15} := 0x0 {const-unsigned-char literal}

----------------------------------------------------------------
Basic Block preHeaderLbl37 : loop Depth = 13 noPath = 0 , lastinLoop = 0
depth 1st num 38 : bbnum = 37 1st iCode = 575 , last iCode = 575
visited 1 : hasFcall = 0

defines bitVector :bitvector Size = 1073 bSize = 135
Bits on { }

local defines bitVector :
pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

in pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

inDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1027) (1034) (1039) (1044) (1045) (1048) (1049) (1050) }

outDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1027) (1034) (1039) (1044) (1045) (1048) (1049) (1050) }

usesDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { }

----------------------------------------------------------------
intro.c(l134:s575:k1070:d13:s0)	 preHeaderLbl37($122) :

----------------------------------------------------------------
Basic Block _forbody_9 : loop Depth = 14 noPath = 0 , lastinLoop = 0
depth 1st num 39 : bbnum = 38 1st iCode = 576 , last iCode = 577
visited 1 : hasFcall = 0

defines bitVector :bitvector Size = 1073 bSize = 135
Bits on { }

local defines bitVector :
pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

in pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

inDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1027) (1034) (1039) (1044) (1045) (1048) (1049) (1050) }

outDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1027) (1034) (1039) (1044) (1045) (1048) (1049) (1050) }

usesDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (932) }

----------------------------------------------------------------
intro.c(l134:s576:k931:d14:s0)	 _forbody_9($40) :
intro.c(l135:s577:k933:d14:s0)		if iTemp624 [k642 lr573:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} == 0 goto _iffalse_2($19)

----------------------------------------------------------------
Basic Block _eBBlock36 : loop Depth = 14 noPath = 0 , lastinLoop = 0
depth 1st num 40 : bbnum = 39 1st iCode = 578 , last iCode = 582
visited 1 : hasFcall = 1

defines bitVector :bitvector Size = 1073 bSize = 135
Bits on { (940) (941) }

local defines bitVector :bitvector Size = 1073 bSize = 135
Bits on { (940) (941) (943) }

pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

in pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

inDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1027) (1034) (1039) (1044) (1045) (1048) (1049) (1050) }

outDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1027) (1034) (1039) (1044) (1045) (1048) (1049) (1050) }

usesDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (938) (940) (941) (943) (958) (1027) }

----------------------------------------------------------------
intro.c(l136:s578:k940:d14:s0)		iTemp629 [k647 lr578:579 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed} = iTemp627 [k645 lr572:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] fixed} + iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}
intro.c(l136:s579:k941:d14:s0)		iTemp630 [k648 lr579:580 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = @[iTemp629 [k647 lr578:579 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed} + 0x0 {const-unsigned-char literal}]
intro.c(l136:s580:k942:d14:s0)		send iTemp630 [k648 lr579:580 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{argreg = 1}
intro.c(l136:s581:k943:d14:s0)		iTemp631 [k649 lr581:581 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l136:s582:k944:d14:s0)		 goto _forcontinue_9($41)

----------------------------------------------------------------
Basic Block _iffalse_2 : loop Depth = 14 noPath = 0 , lastinLoop = 0
depth 1st num 41 : bbnum = 40 1st iCode = 583 , last iCode = 587
visited 1 : hasFcall = 1

defines bitVector :bitvector Size = 1073 bSize = 135
Bits on { (951) (952) }

local defines bitVector :bitvector Size = 1073 bSize = 135
Bits on { (951) (952) (954) }

pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

in pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

inDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1027) (1034) (1039) (1044) (1045) (1048) (1049) (1050) }

outDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1027) (1034) (1039) (1044) (1045) (1048) (1049) (1050) }

usesDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (949) (951) (952) (954) (958) (1027) }

----------------------------------------------------------------
intro.c(l136:s583:k945:d14:s0)	 _iffalse_2($19) :
intro.c(l138:s584:k951:d14:s0)		iTemp637 [k655 lr584:585 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed} = iTemp635 [k653 lr571:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] fixed} + iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}
intro.c(l138:s585:k952:d14:s0)		iTemp638 [k656 lr585:586 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = @[iTemp637 [k655 lr584:585 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed} + 0x0 {const-unsigned-char literal}]
intro.c(l138:s586:k953:d14:s0)		send iTemp638 [k656 lr585:586 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}{argreg = 1}
intro.c(l138:s587:k954:d14:s0)		iTemp639 [k657 lr587:587 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}

----------------------------------------------------------------
Basic Block _forcontinue_9 : loop Depth = 14 noPath = 0 , lastinLoop = 0
depth 1st num 42 : bbnum = 41 1st iCode = 588 , last iCode = 591
visited 1 : hasFcall = 0

defines bitVector :bitvector Size = 1073 bSize = 135
Bits on { (958) (960) }

local defines bitVector :bitvector Size = 1073 bSize = 135
Bits on { (958) (960) }

pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

in pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

inDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1027) (1034) (1039) (1044) (1045) (1048) (1049) (1050) }

outDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1034) (1039) (1044) (1045) (1048) (1049) (1050) }

usesDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (958) (960) (1027) }

----------------------------------------------------------------
intro.c(l138:s588:k956:d14:s0)	 _forcontinue_9($41) :
intro.c(l134:s589:k958:d14:s0)		iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15} = iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15} + 0x1 {const-unsigned-char literal}
intro.c(l134:s590:k960:d14:s0)		iTemp642 [k660 lr590:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15} < 0x8 {const-unsigned-char literal}
intro.c(l134:s591:k961:d14:s0)		if iTemp642 [k660 lr590:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forbody_9($40)

----------------------------------------------------------------
Basic Block _eBBlock37 : loop Depth = 13 noPath = 0 , lastinLoop = 0
depth 1st num 43 : bbnum = 42 1st iCode = 592 , last iCode = 595
visited 1 : hasFcall = 0

defines bitVector :bitvector Size = 1073 bSize = 135
Bits on { (966) (968) (1049) }

local defines bitVector :bitvector Size = 1073 bSize = 135
Bits on { (966) (968) (1049) }

pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

in pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

inDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1034) (1039) (1044) (1045) (1048) (1049) (1050) }

outDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1034) (1039) (1044) (1049) (1050) }

usesDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (966) (968) (1045) (1048) }

----------------------------------------------------------------
intro.c(l133:s592:k1049:d13:s0)		iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register} = iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register} + 0x8 {const-unsigned-char literal}
intro.c(l133:s593:k966:d13:s0)		iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15} = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15} + 0x1 {const-unsigned-char literal}
intro.c(l133:s594:k968:d13:s0)		iTemp645 [k663 lr594:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15} < 0x8 {const-unsigned-char literal}
intro.c(l133:s595:k969:d13:s0)		if iTemp645 [k663 lr594:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl7($66)

----------------------------------------------------------------
Basic Block _eBBlock38 : loop Depth = 1 noPath = 0 , lastinLoop = 0
depth 1st num 44 : bbnum = 43 1st iCode = 596 , last iCode = 616
visited 1 : hasFcall = 1

defines bitVector :bitvector Size = 1073 bSize = 135
Bits on { (992) }

local defines bitVector :bitvector Size = 1073 bSize = 135
Bits on { (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) }

pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

in pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

inDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1034) (1039) (1044) (1049) (1050) }

outDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1034) (1039) (1044) (1049) (1050) }

usesDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) }

----------------------------------------------------------------
intro.c(l141:s596:k972:d1:s0)		send 0x8c {const-unsigned-char literal}{argreg = 1}
intro.c(l141:s597:k973:d1:s0)		iTemp646 [k664 lr597:597 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l142:s598:k974:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l142:s599:k975:d1:s0)		iTemp647 [k665 lr599:599 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l143:s600:k976:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l143:s601:k977:d1:s0)		iTemp648 [k666 lr601:601 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l144:s602:k978:d1:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
intro.c(l144:s603:k979:d1:s0)		iTemp649 [k667 lr603:603 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l145:s604:k980:d1:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
intro.c(l145:s605:k981:d1:s0)		iTemp650 [k668 lr605:605 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l146:s606:k982:d1:s0)		send 0xcc {const-unsigned-char literal}{argreg = 1}
intro.c(l146:s607:k983:d1:s0)		iTemp651 [k669 lr607:607 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l147:s608:k984:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l147:s609:k985:d1:s0)		iTemp652 [k670 lr609:609 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l148:s610:k986:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l148:s611:k987:d1:s0)		iTemp653 [k671 lr611:611 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l149:s612:k988:d1:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
intro.c(l149:s613:k989:d1:s0)		iTemp654 [k672 lr613:613 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l150:s614:k990:d1:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
intro.c(l150:s615:k991:d1:s0)		iTemp655 [k673 lr615:615 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l151:s616:k992:d1:s0)		iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15} := 0x0 {unsigned-int literal}

----------------------------------------------------------------
Basic Block _forcontinue_0 : loop Depth = 1 noPath = 0 , lastinLoop = 0
depth 1st num 45 : bbnum = 44 1st iCode = 617 , last iCode = 620
visited 1 : hasFcall = 0

defines bitVector :bitvector Size = 1073 bSize = 135
Bits on { (997) (999) }

local defines bitVector :bitvector Size = 1073 bSize = 135
Bits on { (997) (999) }

pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

in pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

inDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1034) (1039) (1044) (1049) (1050) }

outDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1034) (1039) (1044) (1049) }

usesDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (997) (999) (1050) }

----------------------------------------------------------------
intro.c(l153:s617:k995:d1:s0)	 _forcontinue_0($45) :
intro.c(l67:s618:k997:d1:s0)		iTemp657 [k675 lr400:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_x_1_15} = iTemp657 [k675 lr400:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_x_1_15} + 0x1 {const-unsigned-char literal}
intro.c(l67:s619:k999:d1:s0)		iTemp658 [k676 lr619:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp657 [k675 lr400:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_x_1_15} < 0x64 {const-unsigned-char literal}
intro.c(l67:s620:k1000:d1:s0)		if iTemp658 [k676 lr619:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl0($48)

----------------------------------------------------------------
Basic Block _return : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 46 : bbnum = 45 1st iCode = 621 , last iCode = 622
visited 1 : hasFcall = 0

defines bitVector :bitvector Size = 1073 bSize = 135
Bits on { }

local defines bitVector :
pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

in pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

inDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1034) (1039) (1044) (1049) }

outDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1034) (1039) (1044) (1049) }

usesDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { }

----------------------------------------------------------------
intro.c(l67:s621:k1003:d0:s0)	 _return($46) :
intro.c(l67:s622:k1004:d0:s0)		eproc _intro [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( ) fixed}
pic16_freeAllRegs
pic16_packRegisters
pointer is set
  result:iTemp0 [k3 lr3:4 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}
  left:
  right:0x0 {const-unsigned-char literal}
pointer is set
  result:iTemp3 [k6 lr6:7 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}
  left:
  right:0x0 {const-unsigned-char literal}
pointer is set
  result:iTemp5 [k8 lr8:9 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}
  left:
  right:0x0 {const-unsigned-char literal}
pointer is set
  result:iTemp7 [k10 lr10:11 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}
  left:
  right:0x0 {const-unsigned-char literal}
pointer is set
  result:iTemp9 [k12 lr12:13 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}
  left:
  right:0x0 {const-unsigned-char literal}
pointer is set
  result:iTemp11 [k14 lr14:15 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}
  left:
  right:0x1 {const-unsigned-char literal}
pointer is set
  result:iTemp13 [k16 lr16:17 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}
  left:
  right:0x1 {const-unsigned-char literal}
pointer is set
  result:iTemp15 [k18 lr18:19 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}
  left:
  right:0x3 {const-unsigned-char literal}
pointer is set
  result:iTemp17 [k20 lr21:22 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}
  left:
  right:0x7 {const-unsigned-char literal}
pointer is set
  result:iTemp21 [k24 lr23:24 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
  left:
  right:0xb {const-unsigned-char literal}
pointer is set
  result:iTemp24 [k27 lr25:26 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
  left:
  right:0xb {const-unsigned-char literal}
pointer is set
  result:iTemp27 [k30 lr27:28 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
  left:
  right:0x1b {const-unsigned-char literal}
pointer is set
  result:iTemp30 [k33 lr29:30 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
  left:
  right:0x13 {const-unsigned-char literal}
pointer is set
  result:iTemp33 [k36 lr31:32 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
  left:
  right:0x13 {const-unsigned-char literal}
pointer is set
  result:iTemp36 [k39 lr33:34 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
  left:
  right:0x3 {const-unsigned-char literal}
pointer is set
  result:iTemp39 [k42 lr35:36 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
  left:
  right:0x3 {const-unsigned-char literal}
pointer is set
  result:iTemp41 [k44 lr37:38 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}
  left:
  right:0x3 {const-unsigned-char literal}
pointer is set
  result:iTemp45 [k48 lr39:40 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
  left:
  right:0x7 {const-unsigned-char literal}
pointer is set
  result:iTemp48 [k51 lr41:42 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
  left:
  right:0x4 {const-unsigned-char literal}
pointer is set
  result:iTemp51 [k54 lr43:44 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
  left:
  right:0xc {const-unsigned-char literal}
pointer is set
  result:iTemp54 [k57 lr45:46 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
  left:
  right:0x8 {const-unsigned-char literal}
pointer is set
  result:iTemp57 [k60 lr47:48 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
  left:
  right:0x8 {const-unsigned-char literal}
pointer is set
  result:iTemp60 [k63 lr49:50 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
  left:
  right:0x18 {const-unsigned-char literal}
pointer is set
  result:iTemp63 [k66 lr51:52 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
  left:
  right:0x10 {const-unsigned-char literal}
pointer is set
  result:iTemp65 [k68 lr53:54 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}
  left:
  right:0x1f {const-unsigned-char literal}
pointer is set
  result:iTemp69 [k72 lr55:56 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
  left:
  right:0x1f {const-unsigned-char literal}
pointer is set
  result:iTemp72 [k75 lr57:58 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
  left:
  right:0x3 {const-unsigned-char literal}
pointer is set
  result:iTemp75 [k78 lr59:60 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
  left:
  right:0x3 {const-unsigned-char literal}
pointer is set
  result:iTemp78 [k81 lr61:62 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
  left:
  right:0x3 {const-unsigned-char literal}
pointer is set
  result:iTemp81 [k84 lr63:64 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
  left:
  right:0x3 {const-unsigned-char literal}
pointer is set
  result:iTemp84 [k87 lr65:66 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
  left:
  right:0x3 {const-unsigned-char literal}
pointer is set
  result:iTemp87 [k90 lr67:68 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
  left:
  right:0x3 {const-unsigned-char literal}
pointer is set
  result:iTemp88 [k92 lr69:70 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}
  left:
  right:0x18 {const-unsigned-char literal}
pointer is set
  result:iTemp91 [k95 lr72:73 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}
  left:
  right:0x18 {const-unsigned-char literal}
pointer is set
  result:iTemp93 [k97 lr74:75 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}
  left:
  right:0x18 {const-unsigned-char literal}
pointer is set
  result:iTemp95 [k99 lr76:77 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}
  left:
  right:0x18 {const-unsigned-char literal}
pointer is set
  result:iTemp97 [k101 lr78:79 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}
  left:
  right:0x18 {const-unsigned-char literal}
pointer is set
  result:iTemp99 [k103 lr80:81 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}
  left:
  right:0x18 {const-unsigned-char literal}
pointer is set
  result:iTemp101 [k105 lr82:83 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}
  left:
  right:0x18 {const-unsigned-char literal}
pointer is set
  result:iTemp103 [k107 lr84:85 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}
  left:
  right:0x18 {const-unsigned-char literal}
pointer is set
  result:iTemp105 [k109 lr87:88 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}
  left:
  right:0x0 {const-unsigned-char literal}
pointer is set
  result:iTemp109 [k113 lr89:90 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
  left:
  right:0x0 {const-unsigned-char literal}
pointer is set
  result:iTemp112 [k116 lr91:92 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
  left:
  right:0x0 {const-unsigned-char literal}
pointer is set
  result:iTemp115 [k119 lr93:94 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
  left:
  right:0x0 {const-unsigned-char literal}
pointer is set
  result:iTemp118 [k122 lr95:96 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
  left:
  right:0x0 {const-unsigned-char literal}
pointer is set
  result:iTemp121 [k125 lr97:98 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
  left:
  right:0x0 {const-unsigned-char literal}
pointer is set
  result:iTemp124 [k128 lr99:100 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
  left:
  right:0x0 {const-unsigned-char literal}
pointer is set
  result:iTemp127 [k131 lr101:102 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
  left:
  right:0x0 {const-unsigned-char literal}
pointer is set
  result:iTemp129 [k133 lr103:104 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}
  left:
  right:0x18 {const-unsigned-char literal}
pointer is set
  result:iTemp133 [k137 lr105:106 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
  left:
  right:0x18 {const-unsigned-char literal}
pointer is set
  result:iTemp136 [k140 lr107:108 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
  left:
  right:0x18 {const-unsigned-char literal}
pointer is set
  result:iTemp139 [k143 lr109:110 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
  left:
  right:0x18 {const-unsigned-char literal}
pointer is set
  result:iTemp142 [k146 lr111:112 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
  left:
  right:0x18 {const-unsigned-char literal}
pointer is set
  result:iTemp145 [k149 lr113:114 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
  left:
  right:0x18 {const-unsigned-char literal}
pointer is set
  result:iTemp148 [k152 lr115:116 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
  left:
  right:0x1f {const-unsigned-char literal}
pointer is set
  result:iTemp151 [k155 lr117:118 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
  left:
  right:0x1f {const-unsigned-char literal}
pointer is set
  result:iTemp153 [k157 lr119:120 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}
  left:
  right:0x0 {const-unsigned-char literal}
pointer is set
  result:iTemp157 [k161 lr121:122 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
  left:
  right:0x0 {const-unsigned-char literal}
pointer is set
  result:iTemp160 [k164 lr123:124 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
  left:
  right:0x0 {const-unsigned-char literal}
pointer is set
  result:iTemp163 [k167 lr125:126 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
  left:
  right:0x0 {const-unsigned-char literal}
pointer is set
  result:iTemp166 [k170 lr127:128 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
  left:
  right:0x0 {const-unsigned-char literal}
pointer is set
  result:iTemp169 [k173 lr129:130 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
  left:
  right:0x0 {const-unsigned-char literal}
pointer is set
  result:iTemp172 [k176 lr131:132 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
  left:
  right:0x1f {const-unsigned-char literal}
pointer is set
  result:iTemp175 [k179 lr133:134 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
  left:
  right:0x1f {const-unsigned-char literal}
pointer is set
  result:iTemp176 [k181 lr135:136 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}
  left:
  right:0x1f {const-unsigned-char literal}
pointer is set
  result:iTemp179 [k184 lr138:139 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}
  left:
  right:0x18 {const-unsigned-char literal}
pointer is set
  result:iTemp181 [k186 lr140:141 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}
  left:
  right:0x18 {const-unsigned-char literal}
pointer is set
  result:iTemp183 [k188 lr142:143 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}
  left:
  right:0x18 {const-unsigned-char literal}
pointer is set
  result:iTemp185 [k190 lr144:145 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}
  left:
  right:0x18 {const-unsigned-char literal}
pointer is set
  result:iTemp187 [k192 lr146:147 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}
  left:
  right:0x18 {const-unsigned-char literal}
pointer is set
  result:iTemp189 [k194 lr148:149 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}
  left:
  right:0x18 {const-unsigned-char literal}
pointer is set
  result:iTemp191 [k196 lr150:151 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}
  left:
  right:0x18 {const-unsigned-char literal}
pointer is set
  result:iTemp193 [k198 lr153:154 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}
  left:
  right:0x1c {const-unsigned-char literal}
pointer is set
  result:iTemp197 [k202 lr155:156 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
  left:
  right:0x2 {const-unsigned-char literal}
pointer is set
  result:iTemp200 [k205 lr157:158 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
  left:
  right:0x1 {const-unsigned-char literal}
pointer is set
  result:iTemp203 [k208 lr159:160 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
  left:
  right:0x1 {const-unsigned-char literal}
pointer is set
  result:iTemp206 [k211 lr161:162 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
  left:
  right:0x1 {const-unsigned-char literal}
pointer is set
  result:iTemp209 [k214 lr163:164 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
  left:
  right:0x2 {const-unsigned-char literal}
pointer is set
  result:iTemp212 [k217 lr165:166 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
  left:
  right:0x4 {const-unsigned-char literal}
pointer is set
  result:iTemp215 [k220 lr167:168 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
  left:
  right:0x18 {const-unsigned-char literal}
pointer is set
  result:iTemp217 [k222 lr169:170 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}
  left:
  right:0x18 {const-unsigned-char literal}
pointer is set
  result:iTemp221 [k226 lr171:172 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
  left:
  right:0x18 {const-unsigned-char literal}
pointer is set
  result:iTemp224 [k229 lr173:174 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
  left:
  right:0x18 {const-unsigned-char literal}
pointer is set
  result:iTemp227 [k232 lr175:176 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
  left:
  right:0x18 {const-unsigned-char literal}
pointer is set
  result:iTemp230 [k235 lr177:178 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
  left:
  right:0x18 {const-unsigned-char literal}
pointer is set
  result:iTemp233 [k238 lr179:180 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
  left:
  right:0x18 {const-unsigned-char literal}
pointer is set
  result:iTemp236 [k241 lr181:182 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
  left:
  right:0x18 {const-unsigned-char literal}
pointer is set
  result:iTemp239 [k244 lr183:184 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
  left:
  right:0x18 {const-unsigned-char literal}
pointer is set
  result:iTemp241 [k246 lr185:186 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}
  left:
  right:0x10 {const-unsigned-char literal}
pointer is set
  result:iTemp245 [k250 lr187:188 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
  left:
  right:0x18 {const-unsigned-char literal}
pointer is set
  result:iTemp248 [k253 lr189:190 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
  left:
  right:0xc {const-unsigned-char literal}
pointer is set
  result:iTemp251 [k256 lr191:192 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
  left:
  right:0x4 {const-unsigned-char literal}
pointer is set
  result:iTemp254 [k259 lr193:194 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
  left:
  right:0x6 {const-unsigned-char literal}
pointer is set
  result:iTemp257 [k262 lr195:196 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
  left:
  right:0x2 {const-unsigned-char literal}
pointer is set
  result:iTemp260 [k265 lr197:198 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
  left:
  right:0x2 {const-unsigned-char literal}
pointer is set
  result:iTemp263 [k268 lr199:200 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
  left:
  right:0x1 {const-unsigned-char literal}
pointer is set
  result:iTemp264 [k270 lr201:202 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}
  left:
  right:0x1f {const-unsigned-char literal}
pointer is set
  result:iTemp267 [k273 lr204:205 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}
  left:
  right:0x1f {const-unsigned-char literal}
pointer is set
  result:iTemp269 [k275 lr206:207 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}
  left:
  right:0x0 {const-unsigned-char literal}
pointer is set
  result:iTemp271 [k277 lr208:209 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}
  left:
  right:0x0 {const-unsigned-char literal}
pointer is set
  result:iTemp273 [k279 lr210:211 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}
  left:
  right:0x0 {const-unsigned-char literal}
pointer is set
  result:iTemp275 [k281 lr212:213 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}
  left:
  right:0x0 {const-unsigned-char literal}
pointer is set
  result:iTemp277 [k283 lr214:215 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}
  left:
  right:0x0 {const-unsigned-char literal}
pointer is set
  result:iTemp279 [k285 lr216:217 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}
  left:
  right:0x0 {const-unsigned-char literal}
pointer is set
  result:iTemp281 [k287 lr219:220 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}
  left:
  right:0x1f {const-unsigned-char literal}
pointer is set
  result:iTemp285 [k291 lr221:222 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
  left:
  right:0x1f {const-unsigned-char literal}
pointer is set
  result:iTemp288 [k294 lr223:224 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
  left:
  right:0x3 {const-unsigned-char literal}
pointer is set
  result:iTemp291 [k297 lr225:226 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
  left:
  right:0x6 {const-unsigned-char literal}
pointer is set
  result:iTemp294 [k300 lr227:228 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
  left:
  right:0x4 {const-unsigned-char literal}
pointer is set
  result:iTemp297 [k303 lr229:230 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
  left:
  right:0xc {const-unsigned-char literal}
pointer is set
  result:iTemp300 [k306 lr231:232 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
  left:
  right:0x8 {const-unsigned-char literal}
pointer is set
  result:iTemp303 [k309 lr233:234 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
  left:
  right:0x10 {const-unsigned-char literal}
pointer is set
  result:iTemp305 [k311 lr235:236 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}
  left:
  right:0x0 {const-unsigned-char literal}
pointer is set
  result:iTemp309 [k315 lr237:238 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
  left:
  right:0x0 {const-unsigned-char literal}
pointer is set
  result:iTemp312 [k318 lr239:240 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
  left:
  right:0x0 {const-unsigned-char literal}
pointer is set
  result:iTemp315 [k321 lr241:242 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
  left:
  right:0x0 {const-unsigned-char literal}
pointer is set
  result:iTemp318 [k324 lr243:244 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
  left:
  right:0x0 {const-unsigned-char literal}
pointer is set
  result:iTemp321 [k327 lr245:246 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
  left:
  right:0x8 {const-unsigned-char literal}
pointer is set
  result:iTemp324 [k330 lr247:248 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
  left:
  right:0x8 {const-unsigned-char literal}
pointer is set
  result:iTemp327 [k333 lr249:250 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
  left:
  right:0x7 {const-unsigned-char literal}
pointer is set
  result:iTemp329 [k335 lr251:252 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}
  left:
  right:0x18 {const-unsigned-char literal}
pointer is set
  result:iTemp333 [k339 lr253:254 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
  left:
  right:0xc {const-unsigned-char literal}
pointer is set
  result:iTemp336 [k342 lr255:256 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
  left:
  right:0x3 {const-unsigned-char literal}
pointer is set
  result:iTemp339 [k345 lr257:258 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
  left:
  right:0x3 {const-unsigned-char literal}
pointer is set
  result:iTemp342 [k348 lr259:260 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
  left:
  right:0x1 {const-unsigned-char literal}
pointer is set
  result:iTemp345 [k351 lr261:262 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
  left:
  right:0x2 {const-unsigned-char literal}
pointer is set
  result:iTemp348 [k354 lr263:264 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
  left:
  right:0xc {const-unsigned-char literal}
pointer is set
  result:iTemp351 [k357 lr265:266 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
  left:
  right:0x18 {const-unsigned-char literal}
pointer is set
  result:iTemp352 [k359 lr267:268 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}
  left:
  right:0x0 {const-unsigned-char literal}
pointer is set
  result:iTemp355 [k362 lr270:271 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}
  left:
  right:0x1 {const-unsigned-char literal}
pointer is set
  result:iTemp357 [k364 lr272:273 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}
  left:
  right:0x3 {const-unsigned-char literal}
pointer is set
  result:iTemp359 [k366 lr274:275 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}
  left:
  right:0x2 {const-unsigned-char literal}
pointer is set
  result:iTemp361 [k368 lr276:277 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}
  left:
  right:0x6 {const-unsigned-char literal}
pointer is set
  result:iTemp363 [k370 lr278:279 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}
  left:
  right:0x4 {const-unsigned-char literal}
pointer is set
  result:iTemp365 [k372 lr280:281 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}
  left:
  right:0x4 {const-unsigned-char literal}
pointer is set
  result:iTemp367 [k374 lr282:283 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}
  left:
  right:0x4 {const-unsigned-char literal}
pointer is set
  result:iTemp369 [k376 lr285:286 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}
  left:
  right:0x0 {const-unsigned-char literal}
pointer is set
  result:iTemp373 [k380 lr287:288 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
  left:
  right:0x18 {const-unsigned-char literal}
pointer is set
  result:iTemp376 [k383 lr289:290 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
  left:
  right:0xe {const-unsigned-char literal}
pointer is set
  result:iTemp379 [k386 lr291:292 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
  left:
  right:0x6 {const-unsigned-char literal}
pointer is set
  result:iTemp382 [k389 lr293:294 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
  left:
  right:0x6 {const-unsigned-char literal}
pointer is set
  result:iTemp385 [k392 lr295:296 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
  left:
  right:0x6 {const-unsigned-char literal}
pointer is set
  result:iTemp388 [k395 lr297:298 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
  left:
  right:0x6 {const-unsigned-char literal}
pointer is set
  result:iTemp391 [k398 lr299:300 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
  left:
  right:0x6 {const-unsigned-char literal}
pointer is set
  result:iTemp393 [k400 lr301:302 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}
  left:
  right:0x4 {const-unsigned-char literal}
pointer is set
  result:iTemp397 [k404 lr303:304 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
  left:
  right:0x4 {const-unsigned-char literal}
pointer is set
  result:iTemp400 [k407 lr305:306 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
  left:
  right:0x4 {const-unsigned-char literal}
pointer is set
  result:iTemp403 [k410 lr307:308 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
  left:
  right:0x4 {const-unsigned-char literal}
pointer is set
  result:iTemp406 [k413 lr309:310 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
  left:
  right:0x4 {const-unsigned-char literal}
pointer is set
  result:iTemp409 [k416 lr311:312 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
  left:
  right:0x6 {const-unsigned-char literal}
pointer is set
  result:iTemp412 [k419 lr313:314 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
  left:
  right:0x3 {const-unsigned-char literal}
pointer is set
  result:iTemp415 [k422 lr315:316 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
  left:
  right:0x0 {const-unsigned-char literal}
pointer is set
  result:iTemp417 [k424 lr317:318 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}
  left:
  right:0x6 {const-unsigned-char literal}
pointer is set
  result:iTemp421 [k428 lr319:320 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
  left:
  right:0x6 {const-unsigned-char literal}
pointer is set
  result:iTemp424 [k431 lr321:322 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
  left:
  right:0x6 {const-unsigned-char literal}
pointer is set
  result:iTemp427 [k434 lr323:324 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
  left:
  right:0x6 {const-unsigned-char literal}
pointer is set
  result:iTemp430 [k437 lr325:326 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
  left:
  right:0xc {const-unsigned-char literal}
pointer is set
  result:iTemp433 [k440 lr327:328 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
  left:
  right:0xc {const-unsigned-char literal}
pointer is set
  result:iTemp436 [k443 lr329:330 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
  left:
  right:0x1c {const-unsigned-char literal}
pointer is set
  result:iTemp439 [k446 lr331:332 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
  left:
  right:0x0 {const-unsigned-char literal}
pointer is set
  result:iTemp440 [k448 lr333:334 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}
  left:
  right:0x0 {const-unsigned-char literal}
pointer is set
  result:iTemp443 [k451 lr336:337 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}
  left:
  right:0xf {const-unsigned-char literal}
pointer is set
  result:iTemp445 [k453 lr338:339 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}
  left:
  right:0xf {const-unsigned-char literal}
pointer is set
  result:iTemp447 [k455 lr340:341 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}
  left:
  right:0x0 {const-unsigned-char literal}
pointer is set
  result:iTemp449 [k457 lr342:343 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}
  left:
  right:0x0 {const-unsigned-char literal}
pointer is set
  result:iTemp451 [k459 lr344:345 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}
  left:
  right:0x0 {const-unsigned-char literal}
pointer is set
  result:iTemp453 [k461 lr346:347 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}
  left:
  right:0x0 {const-unsigned-char literal}
pointer is set
  result:iTemp455 [k463 lr348:349 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}
  left:
  right:0x0 {const-unsigned-char literal}
pointer is set
  result:iTemp457 [k465 lr351:352 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}
  left:
  right:0x0 {const-unsigned-char literal}
pointer is set
  result:iTemp461 [k469 lr353:354 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
  left:
  right:0xf {const-unsigned-char literal}
pointer is set
  result:iTemp464 [k472 lr355:356 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
  left:
  right:0xf {const-unsigned-char literal}
pointer is set
  result:iTemp467 [k475 lr357:358 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
  left:
  right:0x3 {const-unsigned-char literal}
pointer is set
  result:iTemp470 [k478 lr359:360 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
  left:
  right:0x6 {const-unsigned-char literal}
pointer is set
  result:iTemp473 [k481 lr361:362 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
  left:
  right:0xc {const-unsigned-char literal}
pointer is set
  result:iTemp476 [k484 lr363:364 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
  left:
  right:0x18 {const-unsigned-char literal}
pointer is set
  result:iTemp479 [k487 lr365:366 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
  left:
  right:0x10 {const-unsigned-char literal}
pointer is set
  result:iTemp481 [k489 lr367:368 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}
  left:
  right:0x3 {const-unsigned-char literal}
pointer is set
  result:iTemp485 [k493 lr369:370 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
  left:
  right:0x2 {const-unsigned-char literal}
pointer is set
  result:iTemp488 [k496 lr371:372 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
  left:
  right:0x6 {const-unsigned-char literal}
pointer is set
  result:iTemp491 [k499 lr373:374 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
  left:
  right:0xc {const-unsigned-char literal}
pointer is set
  result:iTemp494 [k502 lr375:376 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
  left:
  right:0xc {const-unsigned-char literal}
pointer is set
  result:iTemp497 [k505 lr377:378 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
  left:
  right:0x18 {const-unsigned-char literal}
pointer is set
  result:iTemp500 [k508 lr379:380 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
  left:
  right:0x1f {const-unsigned-char literal}
pointer is set
  result:iTemp503 [k511 lr381:382 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
  left:
  right:0x1f {const-unsigned-char literal}
pointer is set
  result:iTemp505 [k513 lr383:384 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}
  left:
  right:0x0 {const-unsigned-char literal}
pointer is set
  result:iTemp509 [k517 lr385:386 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
  left:
  right:0x0 {const-unsigned-char literal}
pointer is set
  result:iTemp512 [k520 lr387:388 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
  left:
  right:0x0 {const-unsigned-char literal}
pointer is set
  result:iTemp515 [k523 lr389:390 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
  left:
  right:0x0 {const-unsigned-char literal}
pointer is set
  result:iTemp518 [k526 lr391:392 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
  left:
  right:0x0 {const-unsigned-char literal}
pointer is set
  result:iTemp521 [k529 lr393:394 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
  left:
  right:0x0 {const-unsigned-char literal}
pointer is set
  result:iTemp524 [k532 lr395:396 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
  left:
  right:0x1f {const-unsigned-char literal}
pointer is set
  result:iTemp527 [k535 lr397:398 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
  left:
  right:0x1f {const-unsigned-char literal}
3007	packRegsForAssign
ic->op = =
  result:iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15}
  left:
  right:0x0 {unsigned-int literal}
 3015 - actuall processing
  3027 - not packing - right is not temp
pic16_allocDirReg BAD, op is NULL
  result:iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15}
  left:
  right:0x0 {unsigned-int literal}
3007	packRegsForAssign
ic->op = =
  result:iTemp657 [k675 lr400:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_x_1_15}
  left:
  right:0x0 {const-unsigned-char literal}
 3015 - actuall processing
  3027 - not packing - right is not temp
pic16_allocDirReg BAD, op is NULL
  result:iTemp657 [k675 lr400:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_x_1_15}
  left:
  right:0x0 {const-unsigned-char literal}
 4213
x  left:_intro [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( ) fixed}
    c   Symbol type: void function ( ) fixed
 4213
x  left:_intro_letra_a_1_15 [k2 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
    c   Symbol type: char [8] [4] fixed
  result:iTemp0 [k3 lr3:4 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}
          Symbol type: char [8] near* fixed
  4062 - pic16_packRegisters. result is rematerializable
  4191 - pointer reg req = 0
 4213
  result:iTemp0 [k3 lr3:4 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
          Symbol type: char [8] near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp0 [k3 lr3:4 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:_intro_letra_a_1_15 [k2 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
    c   Symbol type: char [8] [4] fixed
  result:iTemp2 [k5 lr5:18 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] fixed}
          Symbol type: char [8] fixed
  4062 - pic16_packRegisters. result is rematerializable
  4191 - pointer reg req = 0
 4213
x  left:iTemp2 [k5 lr5:18 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] fixed}
    c   Symbol type: char [8] fixed
  result:iTemp3 [k6 lr6:7 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp3 [k6 lr6:7 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp3 [k6 lr6:7 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp2 [k5 lr5:18 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] fixed}
    c   Symbol type: char [8] fixed
  result:iTemp5 [k8 lr8:9 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp5 [k8 lr8:9 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp5 [k8 lr8:9 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp2 [k5 lr5:18 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] fixed}
    c   Symbol type: char [8] fixed
  result:iTemp7 [k10 lr10:11 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp7 [k10 lr10:11 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp7 [k10 lr10:11 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp2 [k5 lr5:18 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] fixed}
    c   Symbol type: char [8] fixed
  result:iTemp9 [k12 lr12:13 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp9 [k12 lr12:13 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp9 [k12 lr12:13 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp2 [k5 lr5:18 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] fixed}
    c   Symbol type: char [8] fixed
  result:iTemp11 [k14 lr14:15 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp11 [k14 lr14:15 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp11 [k14 lr14:15 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp2 [k5 lr5:18 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] fixed}
    c   Symbol type: char [8] fixed
  result:iTemp13 [k16 lr16:17 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp13 [k16 lr16:17 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp13 [k16 lr16:17 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp2 [k5 lr5:18 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] fixed}
    c   Symbol type: char [8] fixed
  result:iTemp15 [k18 lr18:19 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp15 [k18 lr18:19 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp15 [k18 lr18:19 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:_intro_letra_a_1_15 [k2 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
    c   Symbol type: char [8] [4] fixed
  result:iTemp16 [k19 lr20:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}
          Symbol type: char [8] near* fixed
  4062 - pic16_packRegisters. result is rematerializable
  4191 - pointer reg req = 0
 4213
x  left:iTemp16 [k19 lr20:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
    is a ptr
    c   Symbol type: char [8] near* fixed
  result:iTemp17 [k20 lr21:22 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}
          Symbol type: char [8] near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp17 [k20 lr21:22 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
          Symbol type: char [8] near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp17 [k20 lr21:22 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp16 [k19 lr20:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
    is a ptr
    c   Symbol type: char [8] near* fixed
  result:iTemp21 [k24 lr23:24 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp21 [k24 lr23:24 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp21 [k24 lr23:24 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp16 [k19 lr20:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
    is a ptr
    c   Symbol type: char [8] near* fixed
  result:iTemp24 [k27 lr25:26 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp24 [k27 lr25:26 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp24 [k27 lr25:26 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp16 [k19 lr20:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
    is a ptr
    c   Symbol type: char [8] near* fixed
  result:iTemp27 [k30 lr27:28 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp27 [k30 lr27:28 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp27 [k30 lr27:28 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp16 [k19 lr20:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
    is a ptr
    c   Symbol type: char [8] near* fixed
  result:iTemp30 [k33 lr29:30 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp30 [k33 lr29:30 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp30 [k33 lr29:30 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp16 [k19 lr20:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
    is a ptr
    c   Symbol type: char [8] near* fixed
  result:iTemp33 [k36 lr31:32 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp33 [k36 lr31:32 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp33 [k36 lr31:32 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp16 [k19 lr20:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
    is a ptr
    c   Symbol type: char [8] near* fixed
  result:iTemp36 [k39 lr33:34 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp36 [k39 lr33:34 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp36 [k39 lr33:34 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp16 [k19 lr20:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
    is a ptr
    c   Symbol type: char [8] near* fixed
  result:iTemp39 [k42 lr35:36 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp39 [k42 lr35:36 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp39 [k42 lr35:36 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp16 [k19 lr20:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
    is a ptr
    c   Symbol type: char [8] near* fixed
  result:iTemp41 [k44 lr37:38 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}
          Symbol type: char [8] near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp41 [k44 lr37:38 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
          Symbol type: char [8] near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp41 [k44 lr37:38 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp16 [k19 lr20:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
    is a ptr
    c   Symbol type: char [8] near* fixed
  result:iTemp45 [k48 lr39:40 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp45 [k48 lr39:40 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp45 [k48 lr39:40 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp16 [k19 lr20:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
    is a ptr
    c   Symbol type: char [8] near* fixed
  result:iTemp48 [k51 lr41:42 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp48 [k51 lr41:42 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp48 [k51 lr41:42 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp16 [k19 lr20:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
    is a ptr
    c   Symbol type: char [8] near* fixed
  result:iTemp51 [k54 lr43:44 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp51 [k54 lr43:44 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp51 [k54 lr43:44 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp16 [k19 lr20:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
    is a ptr
    c   Symbol type: char [8] near* fixed
  result:iTemp54 [k57 lr45:46 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp54 [k57 lr45:46 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp54 [k57 lr45:46 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp16 [k19 lr20:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
    is a ptr
    c   Symbol type: char [8] near* fixed
  result:iTemp57 [k60 lr47:48 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp57 [k60 lr47:48 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp57 [k60 lr47:48 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp16 [k19 lr20:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
    is a ptr
    c   Symbol type: char [8] near* fixed
  result:iTemp60 [k63 lr49:50 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp60 [k63 lr49:50 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp60 [k63 lr49:50 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp16 [k19 lr20:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
    is a ptr
    c   Symbol type: char [8] near* fixed
  result:iTemp63 [k66 lr51:52 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp63 [k66 lr51:52 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp63 [k66 lr51:52 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp16 [k19 lr20:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
    is a ptr
    c   Symbol type: char [8] near* fixed
  result:iTemp65 [k68 lr53:54 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}
          Symbol type: char [8] near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp65 [k68 lr53:54 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
          Symbol type: char [8] near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp65 [k68 lr53:54 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp16 [k19 lr20:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
    is a ptr
    c   Symbol type: char [8] near* fixed
  result:iTemp69 [k72 lr55:56 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp69 [k72 lr55:56 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp69 [k72 lr55:56 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp16 [k19 lr20:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
    is a ptr
    c   Symbol type: char [8] near* fixed
  result:iTemp72 [k75 lr57:58 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp72 [k75 lr57:58 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp72 [k75 lr57:58 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp16 [k19 lr20:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
    is a ptr
    c   Symbol type: char [8] near* fixed
  result:iTemp75 [k78 lr59:60 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp75 [k78 lr59:60 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp75 [k78 lr59:60 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp16 [k19 lr20:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
    is a ptr
    c   Symbol type: char [8] near* fixed
  result:iTemp78 [k81 lr61:62 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp78 [k81 lr61:62 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp78 [k81 lr61:62 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp16 [k19 lr20:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
    is a ptr
    c   Symbol type: char [8] near* fixed
  result:iTemp81 [k84 lr63:64 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp81 [k84 lr63:64 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp81 [k84 lr63:64 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp16 [k19 lr20:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
    is a ptr
    c   Symbol type: char [8] near* fixed
  result:iTemp84 [k87 lr65:66 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp84 [k87 lr65:66 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp84 [k87 lr65:66 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp16 [k19 lr20:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
    is a ptr
    c   Symbol type: char [8] near* fixed
  result:iTemp87 [k90 lr67:68 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp87 [k90 lr67:68 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp87 [k90 lr67:68 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:_intro_letra_l_1_15 [k91 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
    c   Symbol type: char [8] [4] fixed
  result:iTemp88 [k92 lr69:70 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}
          Symbol type: char [8] near* fixed
  4062 - pic16_packRegisters. result is rematerializable
  4191 - pointer reg req = 0
 4213
  result:iTemp88 [k92 lr69:70 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
          Symbol type: char [8] near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp88 [k92 lr69:70 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:_intro_letra_l_1_15 [k91 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
    c   Symbol type: char [8] [4] fixed
  result:iTemp90 [k94 lr71:84 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] fixed}
          Symbol type: char [8] fixed
  4062 - pic16_packRegisters. result is rematerializable
  4191 - pointer reg req = 0
 4213
x  left:iTemp90 [k94 lr71:84 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] fixed}
    c   Symbol type: char [8] fixed
  result:iTemp91 [k95 lr72:73 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp91 [k95 lr72:73 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp91 [k95 lr72:73 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp90 [k94 lr71:84 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] fixed}
    c   Symbol type: char [8] fixed
  result:iTemp93 [k97 lr74:75 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp93 [k97 lr74:75 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp93 [k97 lr74:75 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp90 [k94 lr71:84 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] fixed}
    c   Symbol type: char [8] fixed
  result:iTemp95 [k99 lr76:77 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp95 [k99 lr76:77 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp95 [k99 lr76:77 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp90 [k94 lr71:84 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] fixed}
    c   Symbol type: char [8] fixed
  result:iTemp97 [k101 lr78:79 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp97 [k101 lr78:79 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp97 [k101 lr78:79 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp90 [k94 lr71:84 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] fixed}
    c   Symbol type: char [8] fixed
  result:iTemp99 [k103 lr80:81 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp99 [k103 lr80:81 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp99 [k103 lr80:81 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp90 [k94 lr71:84 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] fixed}
    c   Symbol type: char [8] fixed
  result:iTemp101 [k105 lr82:83 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp101 [k105 lr82:83 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp101 [k105 lr82:83 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp90 [k94 lr71:84 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] fixed}
    c   Symbol type: char [8] fixed
  result:iTemp103 [k107 lr84:85 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp103 [k107 lr84:85 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp103 [k107 lr84:85 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:_intro_letra_l_1_15 [k91 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
    c   Symbol type: char [8] [4] fixed
  result:iTemp104 [k108 lr86:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}
          Symbol type: char [8] near* fixed
  4062 - pic16_packRegisters. result is rematerializable
  4191 - pointer reg req = 0
 4213
x  left:iTemp104 [k108 lr86:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
    is a ptr
    c   Symbol type: char [8] near* fixed
  result:iTemp105 [k109 lr87:88 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}
          Symbol type: char [8] near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp105 [k109 lr87:88 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
          Symbol type: char [8] near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp105 [k109 lr87:88 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp104 [k108 lr86:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
    is a ptr
    c   Symbol type: char [8] near* fixed
  result:iTemp109 [k113 lr89:90 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp109 [k113 lr89:90 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp109 [k113 lr89:90 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp104 [k108 lr86:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
    is a ptr
    c   Symbol type: char [8] near* fixed
  result:iTemp112 [k116 lr91:92 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp112 [k116 lr91:92 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp112 [k116 lr91:92 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp104 [k108 lr86:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
    is a ptr
    c   Symbol type: char [8] near* fixed
  result:iTemp115 [k119 lr93:94 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp115 [k119 lr93:94 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp115 [k119 lr93:94 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp104 [k108 lr86:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
    is a ptr
    c   Symbol type: char [8] near* fixed
  result:iTemp118 [k122 lr95:96 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp118 [k122 lr95:96 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp118 [k122 lr95:96 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp104 [k108 lr86:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
    is a ptr
    c   Symbol type: char [8] near* fixed
  result:iTemp121 [k125 lr97:98 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp121 [k125 lr97:98 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp121 [k125 lr97:98 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp104 [k108 lr86:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
    is a ptr
    c   Symbol type: char [8] near* fixed
  result:iTemp124 [k128 lr99:100 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp124 [k128 lr99:100 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp124 [k128 lr99:100 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp104 [k108 lr86:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
    is a ptr
    c   Symbol type: char [8] near* fixed
  result:iTemp127 [k131 lr101:102 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp127 [k131 lr101:102 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp127 [k131 lr101:102 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp104 [k108 lr86:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
    is a ptr
    c   Symbol type: char [8] near* fixed
  result:iTemp129 [k133 lr103:104 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}
          Symbol type: char [8] near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp129 [k133 lr103:104 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
          Symbol type: char [8] near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp129 [k133 lr103:104 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp104 [k108 lr86:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
    is a ptr
    c   Symbol type: char [8] near* fixed
  result:iTemp133 [k137 lr105:106 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp133 [k137 lr105:106 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp133 [k137 lr105:106 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp104 [k108 lr86:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
    is a ptr
    c   Symbol type: char [8] near* fixed
  result:iTemp136 [k140 lr107:108 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp136 [k140 lr107:108 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp136 [k140 lr107:108 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp104 [k108 lr86:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
    is a ptr
    c   Symbol type: char [8] near* fixed
  result:iTemp139 [k143 lr109:110 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp139 [k143 lr109:110 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp139 [k143 lr109:110 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp104 [k108 lr86:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
    is a ptr
    c   Symbol type: char [8] near* fixed
  result:iTemp142 [k146 lr111:112 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp142 [k146 lr111:112 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp142 [k146 lr111:112 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp104 [k108 lr86:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
    is a ptr
    c   Symbol type: char [8] near* fixed
  result:iTemp145 [k149 lr113:114 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp145 [k149 lr113:114 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp145 [k149 lr113:114 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp104 [k108 lr86:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
    is a ptr
    c   Symbol type: char [8] near* fixed
  result:iTemp148 [k152 lr115:116 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp148 [k152 lr115:116 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp148 [k152 lr115:116 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp104 [k108 lr86:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
    is a ptr
    c   Symbol type: char [8] near* fixed
  result:iTemp151 [k155 lr117:118 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp151 [k155 lr117:118 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp151 [k155 lr117:118 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp104 [k108 lr86:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
    is a ptr
    c   Symbol type: char [8] near* fixed
  result:iTemp153 [k157 lr119:120 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}
          Symbol type: char [8] near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp153 [k157 lr119:120 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
          Symbol type: char [8] near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp153 [k157 lr119:120 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp104 [k108 lr86:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
    is a ptr
    c   Symbol type: char [8] near* fixed
  result:iTemp157 [k161 lr121:122 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp157 [k161 lr121:122 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp157 [k161 lr121:122 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp104 [k108 lr86:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
    is a ptr
    c   Symbol type: char [8] near* fixed
  result:iTemp160 [k164 lr123:124 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp160 [k164 lr123:124 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp160 [k164 lr123:124 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp104 [k108 lr86:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
    is a ptr
    c   Symbol type: char [8] near* fixed
  result:iTemp163 [k167 lr125:126 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp163 [k167 lr125:126 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp163 [k167 lr125:126 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp104 [k108 lr86:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
    is a ptr
    c   Symbol type: char [8] near* fixed
  result:iTemp166 [k170 lr127:128 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp166 [k170 lr127:128 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp166 [k170 lr127:128 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp104 [k108 lr86:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
    is a ptr
    c   Symbol type: char [8] near* fixed
  result:iTemp169 [k173 lr129:130 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp169 [k173 lr129:130 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp169 [k173 lr129:130 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp104 [k108 lr86:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
    is a ptr
    c   Symbol type: char [8] near* fixed
  result:iTemp172 [k176 lr131:132 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp172 [k176 lr131:132 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp172 [k176 lr131:132 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp104 [k108 lr86:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
    is a ptr
    c   Symbol type: char [8] near* fixed
  result:iTemp175 [k179 lr133:134 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp175 [k179 lr133:134 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp175 [k179 lr133:134 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:_intro_letra_r_1_15 [k180 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
    c   Symbol type: char [8] [4] fixed
  result:iTemp176 [k181 lr135:136 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}
          Symbol type: char [8] near* fixed
  4062 - pic16_packRegisters. result is rematerializable
  4191 - pointer reg req = 0
 4213
  result:iTemp176 [k181 lr135:136 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
          Symbol type: char [8] near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp176 [k181 lr135:136 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:_intro_letra_r_1_15 [k180 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
    c   Symbol type: char [8] [4] fixed
  result:iTemp178 [k183 lr137:150 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] fixed}
          Symbol type: char [8] fixed
  4062 - pic16_packRegisters. result is rematerializable
  4191 - pointer reg req = 0
 4213
x  left:iTemp178 [k183 lr137:150 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] fixed}
    c   Symbol type: char [8] fixed
  result:iTemp179 [k184 lr138:139 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp179 [k184 lr138:139 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp179 [k184 lr138:139 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp178 [k183 lr137:150 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] fixed}
    c   Symbol type: char [8] fixed
  result:iTemp181 [k186 lr140:141 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp181 [k186 lr140:141 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp181 [k186 lr140:141 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp178 [k183 lr137:150 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] fixed}
    c   Symbol type: char [8] fixed
  result:iTemp183 [k188 lr142:143 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp183 [k188 lr142:143 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp183 [k188 lr142:143 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp178 [k183 lr137:150 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] fixed}
    c   Symbol type: char [8] fixed
  result:iTemp185 [k190 lr144:145 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp185 [k190 lr144:145 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp185 [k190 lr144:145 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp178 [k183 lr137:150 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] fixed}
    c   Symbol type: char [8] fixed
  result:iTemp187 [k192 lr146:147 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp187 [k192 lr146:147 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp187 [k192 lr146:147 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp178 [k183 lr137:150 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] fixed}
    c   Symbol type: char [8] fixed
  result:iTemp189 [k194 lr148:149 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp189 [k194 lr148:149 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp189 [k194 lr148:149 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp178 [k183 lr137:150 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] fixed}
    c   Symbol type: char [8] fixed
  result:iTemp191 [k196 lr150:151 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp191 [k196 lr150:151 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp191 [k196 lr150:151 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:_intro_letra_r_1_15 [k180 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
    c   Symbol type: char [8] [4] fixed
  result:iTemp192 [k197 lr152:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}
          Symbol type: char [8] near* fixed
  4062 - pic16_packRegisters. result is rematerializable
  4191 - pointer reg req = 0
 4213
x  left:iTemp192 [k197 lr152:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
    is a ptr
    c   Symbol type: char [8] near* fixed
  result:iTemp193 [k198 lr153:154 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}
          Symbol type: char [8] near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp193 [k198 lr153:154 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
          Symbol type: char [8] near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp193 [k198 lr153:154 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp192 [k197 lr152:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
    is a ptr
    c   Symbol type: char [8] near* fixed
  result:iTemp197 [k202 lr155:156 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp197 [k202 lr155:156 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp197 [k202 lr155:156 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp192 [k197 lr152:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
    is a ptr
    c   Symbol type: char [8] near* fixed
  result:iTemp200 [k205 lr157:158 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp200 [k205 lr157:158 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp200 [k205 lr157:158 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp192 [k197 lr152:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
    is a ptr
    c   Symbol type: char [8] near* fixed
  result:iTemp203 [k208 lr159:160 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp203 [k208 lr159:160 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp203 [k208 lr159:160 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp192 [k197 lr152:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
    is a ptr
    c   Symbol type: char [8] near* fixed
  result:iTemp206 [k211 lr161:162 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp206 [k211 lr161:162 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp206 [k211 lr161:162 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp192 [k197 lr152:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
    is a ptr
    c   Symbol type: char [8] near* fixed
  result:iTemp209 [k214 lr163:164 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp209 [k214 lr163:164 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp209 [k214 lr163:164 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp192 [k197 lr152:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
    is a ptr
    c   Symbol type: char [8] near* fixed
  result:iTemp212 [k217 lr165:166 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp212 [k217 lr165:166 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp212 [k217 lr165:166 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp192 [k197 lr152:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
    is a ptr
    c   Symbol type: char [8] near* fixed
  result:iTemp215 [k220 lr167:168 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp215 [k220 lr167:168 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp215 [k220 lr167:168 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp192 [k197 lr152:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
    is a ptr
    c   Symbol type: char [8] near* fixed
  result:iTemp217 [k222 lr169:170 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}
          Symbol type: char [8] near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp217 [k222 lr169:170 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
          Symbol type: char [8] near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp217 [k222 lr169:170 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp192 [k197 lr152:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
    is a ptr
    c   Symbol type: char [8] near* fixed
  result:iTemp221 [k226 lr171:172 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp221 [k226 lr171:172 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp221 [k226 lr171:172 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp192 [k197 lr152:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
    is a ptr
    c   Symbol type: char [8] near* fixed
  result:iTemp224 [k229 lr173:174 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp224 [k229 lr173:174 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp224 [k229 lr173:174 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp192 [k197 lr152:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
    is a ptr
    c   Symbol type: char [8] near* fixed
  result:iTemp227 [k232 lr175:176 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp227 [k232 lr175:176 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp227 [k232 lr175:176 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp192 [k197 lr152:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
    is a ptr
    c   Symbol type: char [8] near* fixed
  result:iTemp230 [k235 lr177:178 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp230 [k235 lr177:178 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp230 [k235 lr177:178 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp192 [k197 lr152:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
    is a ptr
    c   Symbol type: char [8] near* fixed
  result:iTemp233 [k238 lr179:180 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp233 [k238 lr179:180 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp233 [k238 lr179:180 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp192 [k197 lr152:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
    is a ptr
    c   Symbol type: char [8] near* fixed
  result:iTemp236 [k241 lr181:182 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp236 [k241 lr181:182 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp236 [k241 lr181:182 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp192 [k197 lr152:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
    is a ptr
    c   Symbol type: char [8] near* fixed
  result:iTemp239 [k244 lr183:184 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp239 [k244 lr183:184 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp239 [k244 lr183:184 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp192 [k197 lr152:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
    is a ptr
    c   Symbol type: char [8] near* fixed
  result:iTemp241 [k246 lr185:186 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}
          Symbol type: char [8] near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp241 [k246 lr185:186 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
          Symbol type: char [8] near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp241 [k246 lr185:186 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp192 [k197 lr152:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
    is a ptr
    c   Symbol type: char [8] near* fixed
  result:iTemp245 [k250 lr187:188 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp245 [k250 lr187:188 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp245 [k250 lr187:188 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp192 [k197 lr152:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
    is a ptr
    c   Symbol type: char [8] near* fixed
  result:iTemp248 [k253 lr189:190 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp248 [k253 lr189:190 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp248 [k253 lr189:190 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp192 [k197 lr152:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
    is a ptr
    c   Symbol type: char [8] near* fixed
  result:iTemp251 [k256 lr191:192 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp251 [k256 lr191:192 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp251 [k256 lr191:192 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp192 [k197 lr152:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
    is a ptr
    c   Symbol type: char [8] near* fixed
  result:iTemp254 [k259 lr193:194 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp254 [k259 lr193:194 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp254 [k259 lr193:194 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp192 [k197 lr152:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
    is a ptr
    c   Symbol type: char [8] near* fixed
  result:iTemp257 [k262 lr195:196 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp257 [k262 lr195:196 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp257 [k262 lr195:196 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp192 [k197 lr152:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
    is a ptr
    c   Symbol type: char [8] near* fixed
  result:iTemp260 [k265 lr197:198 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp260 [k265 lr197:198 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp260 [k265 lr197:198 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp192 [k197 lr152:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
    is a ptr
    c   Symbol type: char [8] near* fixed
  result:iTemp263 [k268 lr199:200 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp263 [k268 lr199:200 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp263 [k268 lr199:200 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:_intro_letra_3_1_15 [k269 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
    c   Symbol type: char [8] [4] fixed
  result:iTemp264 [k270 lr201:202 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}
          Symbol type: char [8] near* fixed
  4062 - pic16_packRegisters. result is rematerializable
  4191 - pointer reg req = 0
 4213
  result:iTemp264 [k270 lr201:202 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
          Symbol type: char [8] near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp264 [k270 lr201:202 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:_intro_letra_3_1_15 [k269 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
    c   Symbol type: char [8] [4] fixed
  result:iTemp266 [k272 lr203:216 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] fixed}
          Symbol type: char [8] fixed
  4062 - pic16_packRegisters. result is rematerializable
  4191 - pointer reg req = 0
 4213
x  left:iTemp266 [k272 lr203:216 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] fixed}
    c   Symbol type: char [8] fixed
  result:iTemp267 [k273 lr204:205 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp267 [k273 lr204:205 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp267 [k273 lr204:205 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp266 [k272 lr203:216 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] fixed}
    c   Symbol type: char [8] fixed
  result:iTemp269 [k275 lr206:207 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp269 [k275 lr206:207 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp269 [k275 lr206:207 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp266 [k272 lr203:216 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] fixed}
    c   Symbol type: char [8] fixed
  result:iTemp271 [k277 lr208:209 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp271 [k277 lr208:209 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp271 [k277 lr208:209 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp266 [k272 lr203:216 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] fixed}
    c   Symbol type: char [8] fixed
  result:iTemp273 [k279 lr210:211 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp273 [k279 lr210:211 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp273 [k279 lr210:211 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp266 [k272 lr203:216 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] fixed}
    c   Symbol type: char [8] fixed
  result:iTemp275 [k281 lr212:213 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp275 [k281 lr212:213 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp275 [k281 lr212:213 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp266 [k272 lr203:216 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] fixed}
    c   Symbol type: char [8] fixed
  result:iTemp277 [k283 lr214:215 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp277 [k283 lr214:215 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp277 [k283 lr214:215 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp266 [k272 lr203:216 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] fixed}
    c   Symbol type: char [8] fixed
  result:iTemp279 [k285 lr216:217 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp279 [k285 lr216:217 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp279 [k285 lr216:217 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:_intro_letra_3_1_15 [k269 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
    c   Symbol type: char [8] [4] fixed
  result:iTemp280 [k286 lr218:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}
          Symbol type: char [8] near* fixed
  4062 - pic16_packRegisters. result is rematerializable
  4191 - pointer reg req = 0
 4213
x  left:iTemp280 [k286 lr218:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
    is a ptr
    c   Symbol type: char [8] near* fixed
  result:iTemp281 [k287 lr219:220 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}
          Symbol type: char [8] near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp281 [k287 lr219:220 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
          Symbol type: char [8] near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp281 [k287 lr219:220 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp280 [k286 lr218:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
    is a ptr
    c   Symbol type: char [8] near* fixed
  result:iTemp285 [k291 lr221:222 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp285 [k291 lr221:222 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp285 [k291 lr221:222 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp280 [k286 lr218:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
    is a ptr
    c   Symbol type: char [8] near* fixed
  result:iTemp288 [k294 lr223:224 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp288 [k294 lr223:224 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp288 [k294 lr223:224 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp280 [k286 lr218:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
    is a ptr
    c   Symbol type: char [8] near* fixed
  result:iTemp291 [k297 lr225:226 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp291 [k297 lr225:226 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp291 [k297 lr225:226 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp280 [k286 lr218:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
    is a ptr
    c   Symbol type: char [8] near* fixed
  result:iTemp294 [k300 lr227:228 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp294 [k300 lr227:228 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp294 [k300 lr227:228 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp280 [k286 lr218:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
    is a ptr
    c   Symbol type: char [8] near* fixed
  result:iTemp297 [k303 lr229:230 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp297 [k303 lr229:230 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp297 [k303 lr229:230 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp280 [k286 lr218:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
    is a ptr
    c   Symbol type: char [8] near* fixed
  result:iTemp300 [k306 lr231:232 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp300 [k306 lr231:232 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp300 [k306 lr231:232 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp280 [k286 lr218:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
    is a ptr
    c   Symbol type: char [8] near* fixed
  result:iTemp303 [k309 lr233:234 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp303 [k309 lr233:234 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp303 [k309 lr233:234 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp280 [k286 lr218:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
    is a ptr
    c   Symbol type: char [8] near* fixed
  result:iTemp305 [k311 lr235:236 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}
          Symbol type: char [8] near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp305 [k311 lr235:236 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
          Symbol type: char [8] near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp305 [k311 lr235:236 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp280 [k286 lr218:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
    is a ptr
    c   Symbol type: char [8] near* fixed
  result:iTemp309 [k315 lr237:238 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp309 [k315 lr237:238 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp309 [k315 lr237:238 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp280 [k286 lr218:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
    is a ptr
    c   Symbol type: char [8] near* fixed
  result:iTemp312 [k318 lr239:240 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp312 [k318 lr239:240 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp312 [k318 lr239:240 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp280 [k286 lr218:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
    is a ptr
    c   Symbol type: char [8] near* fixed
  result:iTemp315 [k321 lr241:242 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp315 [k321 lr241:242 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp315 [k321 lr241:242 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp280 [k286 lr218:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
    is a ptr
    c   Symbol type: char [8] near* fixed
  result:iTemp318 [k324 lr243:244 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp318 [k324 lr243:244 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp318 [k324 lr243:244 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp280 [k286 lr218:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
    is a ptr
    c   Symbol type: char [8] near* fixed
  result:iTemp321 [k327 lr245:246 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp321 [k327 lr245:246 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp321 [k327 lr245:246 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp280 [k286 lr218:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
    is a ptr
    c   Symbol type: char [8] near* fixed
  result:iTemp324 [k330 lr247:248 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp324 [k330 lr247:248 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp324 [k330 lr247:248 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp280 [k286 lr218:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
    is a ptr
    c   Symbol type: char [8] near* fixed
  result:iTemp327 [k333 lr249:250 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp327 [k333 lr249:250 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp327 [k333 lr249:250 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp280 [k286 lr218:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
    is a ptr
    c   Symbol type: char [8] near* fixed
  result:iTemp329 [k335 lr251:252 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}
          Symbol type: char [8] near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp329 [k335 lr251:252 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
          Symbol type: char [8] near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp329 [k335 lr251:252 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp280 [k286 lr218:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
    is a ptr
    c   Symbol type: char [8] near* fixed
  result:iTemp333 [k339 lr253:254 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp333 [k339 lr253:254 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp333 [k339 lr253:254 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp280 [k286 lr218:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
    is a ptr
    c   Symbol type: char [8] near* fixed
  result:iTemp336 [k342 lr255:256 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp336 [k342 lr255:256 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp336 [k342 lr255:256 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp280 [k286 lr218:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
    is a ptr
    c   Symbol type: char [8] near* fixed
  result:iTemp339 [k345 lr257:258 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp339 [k345 lr257:258 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp339 [k345 lr257:258 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp280 [k286 lr218:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
    is a ptr
    c   Symbol type: char [8] near* fixed
  result:iTemp342 [k348 lr259:260 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp342 [k348 lr259:260 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp342 [k348 lr259:260 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp280 [k286 lr218:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
    is a ptr
    c   Symbol type: char [8] near* fixed
  result:iTemp345 [k351 lr261:262 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp345 [k351 lr261:262 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp345 [k351 lr261:262 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp280 [k286 lr218:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
    is a ptr
    c   Symbol type: char [8] near* fixed
  result:iTemp348 [k354 lr263:264 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp348 [k354 lr263:264 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp348 [k354 lr263:264 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp280 [k286 lr218:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
    is a ptr
    c   Symbol type: char [8] near* fixed
  result:iTemp351 [k357 lr265:266 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp351 [k357 lr265:266 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp351 [k357 lr265:266 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:_intro_letra_0_1_15 [k358 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
    c   Symbol type: char [8] [4] fixed
  result:iTemp352 [k359 lr267:268 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}
          Symbol type: char [8] near* fixed
  4062 - pic16_packRegisters. result is rematerializable
  4191 - pointer reg req = 0
 4213
  result:iTemp352 [k359 lr267:268 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
          Symbol type: char [8] near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp352 [k359 lr267:268 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:_intro_letra_0_1_15 [k358 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
    c   Symbol type: char [8] [4] fixed
  result:iTemp354 [k361 lr269:282 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] fixed}
          Symbol type: char [8] fixed
  4062 - pic16_packRegisters. result is rematerializable
  4191 - pointer reg req = 0
 4213
x  left:iTemp354 [k361 lr269:282 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] fixed}
    c   Symbol type: char [8] fixed
  result:iTemp355 [k362 lr270:271 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp355 [k362 lr270:271 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp355 [k362 lr270:271 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp354 [k361 lr269:282 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] fixed}
    c   Symbol type: char [8] fixed
  result:iTemp357 [k364 lr272:273 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp357 [k364 lr272:273 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp357 [k364 lr272:273 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp354 [k361 lr269:282 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] fixed}
    c   Symbol type: char [8] fixed
  result:iTemp359 [k366 lr274:275 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp359 [k366 lr274:275 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp359 [k366 lr274:275 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp354 [k361 lr269:282 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] fixed}
    c   Symbol type: char [8] fixed
  result:iTemp361 [k368 lr276:277 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp361 [k368 lr276:277 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp361 [k368 lr276:277 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp354 [k361 lr269:282 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] fixed}
    c   Symbol type: char [8] fixed
  result:iTemp363 [k370 lr278:279 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp363 [k370 lr278:279 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp363 [k370 lr278:279 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp354 [k361 lr269:282 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] fixed}
    c   Symbol type: char [8] fixed
  result:iTemp365 [k372 lr280:281 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp365 [k372 lr280:281 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp365 [k372 lr280:281 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp354 [k361 lr269:282 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] fixed}
    c   Symbol type: char [8] fixed
  result:iTemp367 [k374 lr282:283 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp367 [k374 lr282:283 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp367 [k374 lr282:283 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:_intro_letra_0_1_15 [k358 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
    c   Symbol type: char [8] [4] fixed
  result:iTemp368 [k375 lr284:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}
          Symbol type: char [8] near* fixed
  4062 - pic16_packRegisters. result is rematerializable
  4191 - pointer reg req = 0
 4213
x  left:iTemp368 [k375 lr284:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
    is a ptr
    c   Symbol type: char [8] near* fixed
  result:iTemp369 [k376 lr285:286 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}
          Symbol type: char [8] near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp369 [k376 lr285:286 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
          Symbol type: char [8] near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp369 [k376 lr285:286 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp368 [k375 lr284:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
    is a ptr
    c   Symbol type: char [8] near* fixed
  result:iTemp373 [k380 lr287:288 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp373 [k380 lr287:288 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp373 [k380 lr287:288 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp368 [k375 lr284:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
    is a ptr
    c   Symbol type: char [8] near* fixed
  result:iTemp376 [k383 lr289:290 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp376 [k383 lr289:290 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp376 [k383 lr289:290 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp368 [k375 lr284:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
    is a ptr
    c   Symbol type: char [8] near* fixed
  result:iTemp379 [k386 lr291:292 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp379 [k386 lr291:292 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp379 [k386 lr291:292 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp368 [k375 lr284:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
    is a ptr
    c   Symbol type: char [8] near* fixed
  result:iTemp382 [k389 lr293:294 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp382 [k389 lr293:294 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp382 [k389 lr293:294 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp368 [k375 lr284:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
    is a ptr
    c   Symbol type: char [8] near* fixed
  result:iTemp385 [k392 lr295:296 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp385 [k392 lr295:296 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp385 [k392 lr295:296 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp368 [k375 lr284:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
    is a ptr
    c   Symbol type: char [8] near* fixed
  result:iTemp388 [k395 lr297:298 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp388 [k395 lr297:298 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp388 [k395 lr297:298 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp368 [k375 lr284:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
    is a ptr
    c   Symbol type: char [8] near* fixed
  result:iTemp391 [k398 lr299:300 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp391 [k398 lr299:300 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp391 [k398 lr299:300 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp368 [k375 lr284:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
    is a ptr
    c   Symbol type: char [8] near* fixed
  result:iTemp393 [k400 lr301:302 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}
          Symbol type: char [8] near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp393 [k400 lr301:302 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
          Symbol type: char [8] near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp393 [k400 lr301:302 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp368 [k375 lr284:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
    is a ptr
    c   Symbol type: char [8] near* fixed
  result:iTemp397 [k404 lr303:304 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp397 [k404 lr303:304 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp397 [k404 lr303:304 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp368 [k375 lr284:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
    is a ptr
    c   Symbol type: char [8] near* fixed
  result:iTemp400 [k407 lr305:306 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp400 [k407 lr305:306 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp400 [k407 lr305:306 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp368 [k375 lr284:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
    is a ptr
    c   Symbol type: char [8] near* fixed
  result:iTemp403 [k410 lr307:308 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp403 [k410 lr307:308 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp403 [k410 lr307:308 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp368 [k375 lr284:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
    is a ptr
    c   Symbol type: char [8] near* fixed
  result:iTemp406 [k413 lr309:310 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp406 [k413 lr309:310 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp406 [k413 lr309:310 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp368 [k375 lr284:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
    is a ptr
    c   Symbol type: char [8] near* fixed
  result:iTemp409 [k416 lr311:312 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp409 [k416 lr311:312 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp409 [k416 lr311:312 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp368 [k375 lr284:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
    is a ptr
    c   Symbol type: char [8] near* fixed
  result:iTemp412 [k419 lr313:314 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp412 [k419 lr313:314 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp412 [k419 lr313:314 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp368 [k375 lr284:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
    is a ptr
    c   Symbol type: char [8] near* fixed
  result:iTemp415 [k422 lr315:316 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp415 [k422 lr315:316 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp415 [k422 lr315:316 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp368 [k375 lr284:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
    is a ptr
    c   Symbol type: char [8] near* fixed
  result:iTemp417 [k424 lr317:318 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}
          Symbol type: char [8] near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp417 [k424 lr317:318 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
          Symbol type: char [8] near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp417 [k424 lr317:318 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp368 [k375 lr284:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
    is a ptr
    c   Symbol type: char [8] near* fixed
  result:iTemp421 [k428 lr319:320 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp421 [k428 lr319:320 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp421 [k428 lr319:320 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp368 [k375 lr284:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
    is a ptr
    c   Symbol type: char [8] near* fixed
  result:iTemp424 [k431 lr321:322 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp424 [k431 lr321:322 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp424 [k431 lr321:322 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp368 [k375 lr284:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
    is a ptr
    c   Symbol type: char [8] near* fixed
  result:iTemp427 [k434 lr323:324 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp427 [k434 lr323:324 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp427 [k434 lr323:324 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp368 [k375 lr284:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
    is a ptr
    c   Symbol type: char [8] near* fixed
  result:iTemp430 [k437 lr325:326 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp430 [k437 lr325:326 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp430 [k437 lr325:326 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp368 [k375 lr284:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
    is a ptr
    c   Symbol type: char [8] near* fixed
  result:iTemp433 [k440 lr327:328 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp433 [k440 lr327:328 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp433 [k440 lr327:328 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp368 [k375 lr284:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
    is a ptr
    c   Symbol type: char [8] near* fixed
  result:iTemp436 [k443 lr329:330 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp436 [k443 lr329:330 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp436 [k443 lr329:330 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp368 [k375 lr284:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
    is a ptr
    c   Symbol type: char [8] near* fixed
  result:iTemp439 [k446 lr331:332 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp439 [k446 lr331:332 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp439 [k446 lr331:332 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:_intro_letra_z_1_15 [k447 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
    c   Symbol type: char [8] [4] fixed
  result:iTemp440 [k448 lr333:334 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}
          Symbol type: char [8] near* fixed
  4062 - pic16_packRegisters. result is rematerializable
  4191 - pointer reg req = 0
 4213
  result:iTemp440 [k448 lr333:334 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
          Symbol type: char [8] near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp440 [k448 lr333:334 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:_intro_letra_z_1_15 [k447 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
    c   Symbol type: char [8] [4] fixed
  result:iTemp442 [k450 lr335:348 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] fixed}
          Symbol type: char [8] fixed
  4062 - pic16_packRegisters. result is rematerializable
  4191 - pointer reg req = 0
 4213
x  left:iTemp442 [k450 lr335:348 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] fixed}
    c   Symbol type: char [8] fixed
  result:iTemp443 [k451 lr336:337 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp443 [k451 lr336:337 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp443 [k451 lr336:337 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp442 [k450 lr335:348 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] fixed}
    c   Symbol type: char [8] fixed
  result:iTemp445 [k453 lr338:339 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp445 [k453 lr338:339 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp445 [k453 lr338:339 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp442 [k450 lr335:348 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] fixed}
    c   Symbol type: char [8] fixed
  result:iTemp447 [k455 lr340:341 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp447 [k455 lr340:341 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp447 [k455 lr340:341 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp442 [k450 lr335:348 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] fixed}
    c   Symbol type: char [8] fixed
  result:iTemp449 [k457 lr342:343 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp449 [k457 lr342:343 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp449 [k457 lr342:343 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp442 [k450 lr335:348 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] fixed}
    c   Symbol type: char [8] fixed
  result:iTemp451 [k459 lr344:345 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp451 [k459 lr344:345 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp451 [k459 lr344:345 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp442 [k450 lr335:348 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] fixed}
    c   Symbol type: char [8] fixed
  result:iTemp453 [k461 lr346:347 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp453 [k461 lr346:347 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp453 [k461 lr346:347 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp442 [k450 lr335:348 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] fixed}
    c   Symbol type: char [8] fixed
  result:iTemp455 [k463 lr348:349 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp455 [k463 lr348:349 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp455 [k463 lr348:349 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:_intro_letra_z_1_15 [k447 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
    c   Symbol type: char [8] [4] fixed
  result:iTemp456 [k464 lr350:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}
          Symbol type: char [8] near* fixed
  4062 - pic16_packRegisters. result is rematerializable
  4191 - pointer reg req = 0
 4213
x  left:iTemp456 [k464 lr350:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
    is a ptr
    c   Symbol type: char [8] near* fixed
  result:iTemp457 [k465 lr351:352 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}
          Symbol type: char [8] near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp457 [k465 lr351:352 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
          Symbol type: char [8] near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp457 [k465 lr351:352 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp456 [k464 lr350:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
    is a ptr
    c   Symbol type: char [8] near* fixed
  result:iTemp461 [k469 lr353:354 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp461 [k469 lr353:354 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp461 [k469 lr353:354 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp456 [k464 lr350:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
    is a ptr
    c   Symbol type: char [8] near* fixed
  result:iTemp464 [k472 lr355:356 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp464 [k472 lr355:356 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp464 [k472 lr355:356 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp456 [k464 lr350:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
    is a ptr
    c   Symbol type: char [8] near* fixed
  result:iTemp467 [k475 lr357:358 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp467 [k475 lr357:358 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp467 [k475 lr357:358 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp456 [k464 lr350:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
    is a ptr
    c   Symbol type: char [8] near* fixed
  result:iTemp470 [k478 lr359:360 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp470 [k478 lr359:360 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp470 [k478 lr359:360 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp456 [k464 lr350:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
    is a ptr
    c   Symbol type: char [8] near* fixed
  result:iTemp473 [k481 lr361:362 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp473 [k481 lr361:362 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp473 [k481 lr361:362 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp456 [k464 lr350:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
    is a ptr
    c   Symbol type: char [8] near* fixed
  result:iTemp476 [k484 lr363:364 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp476 [k484 lr363:364 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp476 [k484 lr363:364 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp456 [k464 lr350:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
    is a ptr
    c   Symbol type: char [8] near* fixed
  result:iTemp479 [k487 lr365:366 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp479 [k487 lr365:366 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp479 [k487 lr365:366 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp456 [k464 lr350:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
    is a ptr
    c   Symbol type: char [8] near* fixed
  result:iTemp481 [k489 lr367:368 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}
          Symbol type: char [8] near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp481 [k489 lr367:368 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
          Symbol type: char [8] near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp481 [k489 lr367:368 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp456 [k464 lr350:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
    is a ptr
    c   Symbol type: char [8] near* fixed
  result:iTemp485 [k493 lr369:370 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp485 [k493 lr369:370 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp485 [k493 lr369:370 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp456 [k464 lr350:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
    is a ptr
    c   Symbol type: char [8] near* fixed
  result:iTemp488 [k496 lr371:372 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp488 [k496 lr371:372 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp488 [k496 lr371:372 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp456 [k464 lr350:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
    is a ptr
    c   Symbol type: char [8] near* fixed
  result:iTemp491 [k499 lr373:374 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp491 [k499 lr373:374 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp491 [k499 lr373:374 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp456 [k464 lr350:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
    is a ptr
    c   Symbol type: char [8] near* fixed
  result:iTemp494 [k502 lr375:376 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp494 [k502 lr375:376 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp494 [k502 lr375:376 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp456 [k464 lr350:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
    is a ptr
    c   Symbol type: char [8] near* fixed
  result:iTemp497 [k505 lr377:378 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp497 [k505 lr377:378 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp497 [k505 lr377:378 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp456 [k464 lr350:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
    is a ptr
    c   Symbol type: char [8] near* fixed
  result:iTemp500 [k508 lr379:380 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp500 [k508 lr379:380 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp500 [k508 lr379:380 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp456 [k464 lr350:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
    is a ptr
    c   Symbol type: char [8] near* fixed
  result:iTemp503 [k511 lr381:382 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp503 [k511 lr381:382 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp503 [k511 lr381:382 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp456 [k464 lr350:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
    is a ptr
    c   Symbol type: char [8] near* fixed
  result:iTemp505 [k513 lr383:384 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}
          Symbol type: char [8] near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp505 [k513 lr383:384 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
          Symbol type: char [8] near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp505 [k513 lr383:384 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp456 [k464 lr350:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
    is a ptr
    c   Symbol type: char [8] near* fixed
  result:iTemp509 [k517 lr385:386 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp509 [k517 lr385:386 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp509 [k517 lr385:386 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp456 [k464 lr350:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
    is a ptr
    c   Symbol type: char [8] near* fixed
  result:iTemp512 [k520 lr387:388 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp512 [k520 lr387:388 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp512 [k520 lr387:388 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp456 [k464 lr350:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
    is a ptr
    c   Symbol type: char [8] near* fixed
  result:iTemp515 [k523 lr389:390 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp515 [k523 lr389:390 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp515 [k523 lr389:390 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp456 [k464 lr350:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
    is a ptr
    c   Symbol type: char [8] near* fixed
  result:iTemp518 [k526 lr391:392 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp518 [k526 lr391:392 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp518 [k526 lr391:392 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp456 [k464 lr350:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
    is a ptr
    c   Symbol type: char [8] near* fixed
  result:iTemp521 [k529 lr393:394 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp521 [k529 lr393:394 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp521 [k529 lr393:394 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp456 [k464 lr350:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
    is a ptr
    c   Symbol type: char [8] near* fixed
  result:iTemp524 [k532 lr395:396 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp524 [k532 lr395:396 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp524 [k532 lr395:396 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp456 [k464 lr350:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
    is a ptr
    c   Symbol type: char [8] near* fixed
  result:iTemp527 [k535 lr397:398 so:0]{ ia1 a2p0 re0 rm0 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4095 - pic16_packRegisters. rematerializable because op is +/-
  4191 - pointer reg req = 0
 4213
  result:iTemp527 [k535 lr397:398 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4014 - Pointer set
  marking as a pointer (set) =>  result:iTemp527 [k535 lr397:398 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
  result:iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15}
          Symbol type: unsigned-int fixed
  4191 - pointer reg req = 0
 4213
  result:iTemp657 [k675 lr400:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_x_1_15}
          Symbol type: unsigned-char fixed
  4191 - pointer reg req = 0
 4213
pic16_packRegisters
 4213
pic16_packRegisters
3007	packRegsForAssign
ic->op = =
  result:iTemp531 [k542 lr403:407 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_delay_1_15}
  left:
  right:0x4e20 {unsigned-int literal}
 3015 - actuall processing
  3027 - not packing - right is not temp
pic16_allocDirReg BAD, op is NULL
  result:iTemp531 [k542 lr403:407 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_delay_1_15}
  left:
  right:0x4e20 {unsigned-int literal}
 4213
  result:iTemp531 [k542 lr403:407 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_delay_1_15}
          Symbol type: unsigned-int fixed
  4191 - pointer reg req = 0
 4213
pic16_packRegisters
 4213
pic16_packRegisters
 4213
x  left:iTemp531 [k542 lr403:407 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_delay_1_15}
    c   Symbol type: unsigned-int fixed
  result:iTemp531 [k542 lr403:407 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_delay_1_15}
          Symbol type: unsigned-int fixed
  4191 - pointer reg req = 0
 4213
x  left:iTemp531 [k542 lr403:407 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_delay_1_15}
    c   Symbol type: unsigned-int fixed
  4191 - pointer reg req = 0
 4213
pic16_packRegisters
x  left:_limpa_lcd [k543 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( ) fixed}
    c   Symbol type: void function ( ) fixed
  result:iTemp532 [k544 lr408:408 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed}
          Symbol type: void fixed
  4191 - pointer reg req = 0
 4213
  4191 - pointer reg req = 0
 4213
x  left:_envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
    c   Symbol type: void function ( const-unsigned-char fixed) fixed
  result:iTemp533 [k547 lr410:410 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed}
          Symbol type: void fixed
  4191 - pointer reg req = 0
 4213
x  left:iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15}
    c   Symbol type: unsigned-int fixed
  result:iTemp534 [k548 lr411:412 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}
          Symbol type: char fixed
  4191 - pointer reg req = 0
  4208
x  left:iTemp534 [k548 lr411:412 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}
    c   Symbol type: char fixed
  4191 - pointer reg req = 0
 4213
pic16_packRegisters
x  left:iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15}
    c   Symbol type: unsigned-int fixed
  4191 - pointer reg req = 0
 4213
pic16_packRegisters
3007	packRegsForAssign
ic->op = =
  result:iTemp557 [k575 lr415:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}
  left:
  right:0x0 {const-unsigned-char literal}
 3015 - actuall processing
  3027 - not packing - right is not temp
pic16_allocDirReg BAD, op is NULL
  result:iTemp557 [k575 lr415:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}
  left:
  right:0x0 {const-unsigned-char literal}
3007	packRegsForAssign
ic->op = =
  result:iTemp539 [k556 lr416:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}
  left:
  right:0x0 {unsigned-int literal}
 3015 - actuall processing
  3027 - not packing - right is not temp
pic16_allocDirReg BAD, op is NULL
  result:iTemp539 [k556 lr416:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}
  left:
  right:0x0 {unsigned-int literal}
 4213
  result:iTemp557 [k575 lr415:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}
          Symbol type: unsigned-char fixed
  4191 - pointer reg req = 0
 4213
  result:iTemp539 [k556 lr416:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}
          Symbol type: unsigned-int register
  4191 - pointer reg req = 0
 4213
pic16_packRegisters
 4213
pic16_packRegisters
3007	packRegsForAssign
ic->op = =
  result:iTemp554 [k572 lr424:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}
  left:
  right:0x0 {const-unsigned-char literal}
 3015 - actuall processing
  3027 - not packing - right is not temp
pic16_allocDirReg BAD, op is NULL
  result:iTemp554 [k572 lr424:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}
  left:
  right:0x0 {const-unsigned-char literal}
 4213
x  left:iTemp557 [k575 lr415:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}
    c   Symbol type: unsigned-char fixed
  result:iTemp546 [k564 lr419:420 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register}
          Symbol type: unsigned-char register
  4191 - pointer reg req = 0
 4213
x  left:iTemp546 [k564 lr419:420 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register}
    c   Symbol type: unsigned-char register
  result:iTemp547 [k565 lr420:421 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}
          Symbol type: unsigned-int register
  4191 - pointer reg req = 0
 4213
x  left:iTemp104 [k108 lr86:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
    is a ptr
    c   Symbol type: char [8] near* fixed
  right:iTemp547 [k565 lr420:421 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}
         Symbol type: unsigned-int register
  result:iTemp548 [k566 lr421:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] fixed}
          Symbol type: char [8] fixed
  4191 - pointer reg req = 0
 4213
x  left:iTemp16 [k19 lr20:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
    is a ptr
    c   Symbol type: char [8] near* fixed
  right:iTemp539 [k556 lr416:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}
         Symbol type: unsigned-int register
  result:iTemp540 [k557 lr422:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] fixed}
          Symbol type: char [8] fixed
  4191 - pointer reg req = 0
 4213
x  left:iTemp557 [k575 lr415:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}
    c   Symbol type: unsigned-char fixed
  result:iTemp537 [k553 lr423:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}
          Symbol type: char fixed
  4191 - pointer reg req = 0
 4213
  result:iTemp554 [k572 lr424:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}
          Symbol type: unsigned-char fixed
  4191 - pointer reg req = 0
 4213
pic16_packRegisters
 4213
pic16_packRegisters
 4213
x  left:iTemp537 [k553 lr423:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}
    c   Symbol type: char fixed
  4191 - pointer reg req = 0
 4213
pic16_packRegisters
x  left:iTemp540 [k557 lr422:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] fixed}
    c   Symbol type: char [8] fixed
  right:iTemp554 [k572 lr424:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}
         Symbol type: unsigned-char fixed
  result:iTemp542 [k559 lr428:429 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4191 - pointer reg req = 0
 4213
x  left:iTemp542 [k559 lr428:429 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}
    is a ptr
    c   Symbol type: char near* fixed
  result:iTemp543 [k560 lr429:430 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}
          Symbol type: char fixed
  marking as a pointer (get) =>  left:iTemp542 [k559 lr428:429 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp543 [k560 lr429:430 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}
    c   Symbol type: char fixed
  4191 - pointer reg req = 0
 4213
x  left:_envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
    c   Symbol type: void function ( const-unsigned-char fixed) fixed
  result:iTemp544 [k562 lr431:431 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed}
          Symbol type: void fixed
  4191 - pointer reg req = 0
 4213
 4213
pic16_packRegisters
 4213
x  left:iTemp548 [k566 lr421:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] fixed}
    c   Symbol type: char [8] fixed
  right:iTemp554 [k572 lr424:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}
         Symbol type: unsigned-char fixed
  result:iTemp550 [k568 lr434:435 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4191 - pointer reg req = 0
 4213
x  left:iTemp550 [k568 lr434:435 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}
    is a ptr
    c   Symbol type: char near* fixed
  result:iTemp551 [k569 lr435:436 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}
          Symbol type: char fixed
  marking as a pointer (get) =>  left:iTemp550 [k568 lr434:435 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp551 [k569 lr435:436 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}
    c   Symbol type: char fixed
  4191 - pointer reg req = 0
 4213
x  left:_envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
    c   Symbol type: void function ( const-unsigned-char fixed) fixed
  result:iTemp552 [k570 lr437:437 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed}
          Symbol type: void fixed
  4191 - pointer reg req = 0
 4213
pic16_packRegisters
 4213
x  left:iTemp554 [k572 lr424:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}
    c   Symbol type: unsigned-char fixed
  result:iTemp554 [k572 lr424:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}
          Symbol type: unsigned-char fixed
  4191 - pointer reg req = 0
 4213
x  left:iTemp554 [k572 lr424:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}
    c   Symbol type: unsigned-char fixed
  result:iTemp555 [k573 lr440:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}
          Symbol type: char fixed
  4191 - pointer reg req = 0
  4208
x  left:iTemp555 [k573 lr440:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}
    c   Symbol type: char fixed
  4191 - pointer reg req = 0
 4213
pic16_packRegisters
x  left:iTemp539 [k556 lr416:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}
    c   Symbol type: unsigned-int register
  result:iTemp539 [k556 lr416:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}
          Symbol type: unsigned-int register
  4191 - pointer reg req = 0
 4213
x  left:iTemp557 [k575 lr415:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}
    c   Symbol type: unsigned-char fixed
  result:iTemp557 [k575 lr415:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}
          Symbol type: unsigned-char fixed
  4191 - pointer reg req = 0
 4213
x  left:iTemp557 [k575 lr415:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}
    c   Symbol type: unsigned-char fixed
  result:iTemp558 [k576 lr444:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}
          Symbol type: char fixed
  4191 - pointer reg req = 0
  4208
x  left:iTemp558 [k576 lr444:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}
    c   Symbol type: char fixed
  4191 - pointer reg req = 0
 4213
pic16_packRegisters
3007	packRegsForAssign
ic->op = =
  result:iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15}
  left:
  right:0x1 {unsigned-int literal}
 3015 - actuall processing
  3027 - not packing - right is not temp
pic16_allocDirReg BAD, op is NULL
  result:iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15}
  left:
  right:0x1 {unsigned-int literal}
  4191 - pointer reg req = 0
 4213
x  left:_envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
    c   Symbol type: void function ( const-unsigned-char fixed) fixed
  result:iTemp559 [k577 lr447:447 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed}
          Symbol type: void fixed
  4191 - pointer reg req = 0
 4213
  4191 - pointer reg req = 0
 4213
x  left:_envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
    c   Symbol type: void function ( const-unsigned-char fixed) fixed
  result:iTemp560 [k578 lr449:449 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed}
          Symbol type: void fixed
  4191 - pointer reg req = 0
 4213
  4191 - pointer reg req = 0
 4213
x  left:_envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
    c   Symbol type: void function ( const-unsigned-char fixed) fixed
  result:iTemp561 [k579 lr451:451 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed}
          Symbol type: void fixed
  4191 - pointer reg req = 0
 4213
  4191 - pointer reg req = 0
 4213
x  left:_envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
    c   Symbol type: void function ( const-unsigned-char fixed) fixed
  result:iTemp562 [k580 lr453:453 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed}
          Symbol type: void fixed
  4191 - pointer reg req = 0
 4213
  4191 - pointer reg req = 0
 4213
x  left:_envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
    c   Symbol type: void function ( const-unsigned-char fixed) fixed
  result:iTemp563 [k581 lr455:455 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed}
          Symbol type: void fixed
  4191 - pointer reg req = 0
 4213
  4191 - pointer reg req = 0
 4213
x  left:_envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
    c   Symbol type: void function ( const-unsigned-char fixed) fixed
  result:iTemp564 [k582 lr457:457 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed}
          Symbol type: void fixed
  4191 - pointer reg req = 0
 4213
  4191 - pointer reg req = 0
 4213
x  left:_envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
    c   Symbol type: void function ( const-unsigned-char fixed) fixed
  result:iTemp565 [k583 lr459:459 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed}
          Symbol type: void fixed
  4191 - pointer reg req = 0
 4213
  4191 - pointer reg req = 0
 4213
x  left:_envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
    c   Symbol type: void function ( const-unsigned-char fixed) fixed
  result:iTemp566 [k584 lr461:461 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed}
          Symbol type: void fixed
  4191 - pointer reg req = 0
 4213
  4191 - pointer reg req = 0
 4213
x  left:_envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
    c   Symbol type: void function ( const-unsigned-char fixed) fixed
  result:iTemp567 [k585 lr463:463 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed}
          Symbol type: void fixed
  4191 - pointer reg req = 0
 4213
  4191 - pointer reg req = 0
 4213
x  left:_envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
    c   Symbol type: void function ( const-unsigned-char fixed) fixed
  result:iTemp568 [k586 lr465:465 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed}
          Symbol type: void fixed
  4191 - pointer reg req = 0
 4213
  result:iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15}
          Symbol type: unsigned-int fixed
  4191 - pointer reg req = 0
 4213
 4213
pic16_packRegisters
3007	packRegsForAssign
ic->op = =
  result:iTemp589 [k607 lr469:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}
  left:
  right:0x0 {const-unsigned-char literal}
 3015 - actuall processing
  3027 - not packing - right is not temp
pic16_allocDirReg BAD, op is NULL
  result:iTemp589 [k607 lr469:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}
  left:
  right:0x0 {const-unsigned-char literal}
3007	packRegsForAssign
ic->op = =
  result:iTemp571 [k589 lr470:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}
  left:
  right:0x0 {unsigned-int literal}
 3015 - actuall processing
  3027 - not packing - right is not temp
pic16_allocDirReg BAD, op is NULL
  result:iTemp571 [k589 lr470:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}
  left:
  right:0x0 {unsigned-int literal}
 4213
  result:iTemp589 [k607 lr469:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}
          Symbol type: unsigned-char fixed
  4191 - pointer reg req = 0
 4213
  result:iTemp571 [k589 lr470:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}
          Symbol type: unsigned-int register
  4191 - pointer reg req = 0
 4213
pic16_packRegisters
 4213
pic16_packRegisters
3007	packRegsForAssign
ic->op = =
  result:iTemp586 [k604 lr478:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}
  left:
  right:0x0 {const-unsigned-char literal}
 3015 - actuall processing
  3027 - not packing - right is not temp
pic16_allocDirReg BAD, op is NULL
  result:iTemp586 [k604 lr478:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}
  left:
  right:0x0 {const-unsigned-char literal}
 4213
x  left:iTemp589 [k607 lr469:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}
    c   Symbol type: unsigned-char fixed
  result:iTemp578 [k596 lr473:474 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register}
          Symbol type: unsigned-char register
  4191 - pointer reg req = 0
 4213
x  left:iTemp578 [k596 lr473:474 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register}
    c   Symbol type: unsigned-char register
  result:iTemp579 [k597 lr474:475 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}
          Symbol type: unsigned-int register
  4191 - pointer reg req = 0
 4213
x  left:iTemp280 [k286 lr218:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
    is a ptr
    c   Symbol type: char [8] near* fixed
  right:iTemp579 [k597 lr474:475 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}
         Symbol type: unsigned-int register
  result:iTemp580 [k598 lr475:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] fixed}
          Symbol type: char [8] fixed
  4191 - pointer reg req = 0
 4213
x  left:iTemp192 [k197 lr152:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
    is a ptr
    c   Symbol type: char [8] near* fixed
  right:iTemp571 [k589 lr470:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}
         Symbol type: unsigned-int register
  result:iTemp572 [k590 lr476:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] fixed}
          Symbol type: char [8] fixed
  4191 - pointer reg req = 0
 4213
x  left:iTemp589 [k607 lr469:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}
    c   Symbol type: unsigned-char fixed
  result:iTemp569 [k587 lr477:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}
          Symbol type: char fixed
  4191 - pointer reg req = 0
 4213
  result:iTemp586 [k604 lr478:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}
          Symbol type: unsigned-char fixed
  4191 - pointer reg req = 0
 4213
pic16_packRegisters
 4213
pic16_packRegisters
 4213
x  left:iTemp569 [k587 lr477:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}
    c   Symbol type: char fixed
  4191 - pointer reg req = 0
 4213
pic16_packRegisters
x  left:iTemp572 [k590 lr476:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] fixed}
    c   Symbol type: char [8] fixed
  right:iTemp586 [k604 lr478:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}
         Symbol type: unsigned-char fixed
  result:iTemp574 [k592 lr482:483 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4191 - pointer reg req = 0
 4213
x  left:iTemp574 [k592 lr482:483 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}
    is a ptr
    c   Symbol type: char near* fixed
  result:iTemp575 [k593 lr483:484 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}
          Symbol type: char fixed
  marking as a pointer (get) =>  left:iTemp574 [k592 lr482:483 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp575 [k593 lr483:484 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}
    c   Symbol type: char fixed
  4191 - pointer reg req = 0
 4213
x  left:_envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
    c   Symbol type: void function ( const-unsigned-char fixed) fixed
  result:iTemp576 [k594 lr485:485 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed}
          Symbol type: void fixed
  4191 - pointer reg req = 0
 4213
 4213
pic16_packRegisters
 4213
x  left:iTemp580 [k598 lr475:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] fixed}
    c   Symbol type: char [8] fixed
  right:iTemp586 [k604 lr478:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}
         Symbol type: unsigned-char fixed
  result:iTemp582 [k600 lr488:489 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4191 - pointer reg req = 0
 4213
x  left:iTemp582 [k600 lr488:489 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}
    is a ptr
    c   Symbol type: char near* fixed
  result:iTemp583 [k601 lr489:490 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}
          Symbol type: char fixed
  marking as a pointer (get) =>  left:iTemp582 [k600 lr488:489 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp583 [k601 lr489:490 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}
    c   Symbol type: char fixed
  4191 - pointer reg req = 0
 4213
x  left:_envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
    c   Symbol type: void function ( const-unsigned-char fixed) fixed
  result:iTemp584 [k602 lr491:491 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed}
          Symbol type: void fixed
  4191 - pointer reg req = 0
 4213
pic16_packRegisters
 4213
x  left:iTemp586 [k604 lr478:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}
    c   Symbol type: unsigned-char fixed
  result:iTemp586 [k604 lr478:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}
          Symbol type: unsigned-char fixed
  4191 - pointer reg req = 0
 4213
x  left:iTemp586 [k604 lr478:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}
    c   Symbol type: unsigned-char fixed
  result:iTemp587 [k605 lr494:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}
          Symbol type: char fixed
  4191 - pointer reg req = 0
  4208
x  left:iTemp587 [k605 lr494:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}
    c   Symbol type: char fixed
  4191 - pointer reg req = 0
 4213
pic16_packRegisters
x  left:iTemp571 [k589 lr470:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}
    c   Symbol type: unsigned-int register
  result:iTemp571 [k589 lr470:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}
          Symbol type: unsigned-int register
  4191 - pointer reg req = 0
 4213
x  left:iTemp589 [k607 lr469:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}
    c   Symbol type: unsigned-char fixed
  result:iTemp589 [k607 lr469:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}
          Symbol type: unsigned-char fixed
  4191 - pointer reg req = 0
 4213
x  left:iTemp589 [k607 lr469:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}
    c   Symbol type: unsigned-char fixed
  result:iTemp590 [k608 lr498:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}
          Symbol type: char fixed
  4191 - pointer reg req = 0
  4208
x  left:iTemp590 [k608 lr498:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}
    c   Symbol type: char fixed
  4191 - pointer reg req = 0
 4213
pic16_packRegisters
3007	packRegsForAssign
ic->op = =
  result:iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15}
  left:
  right:0x2 {unsigned-int literal}
 3015 - actuall processing
  3027 - not packing - right is not temp
pic16_allocDirReg BAD, op is NULL
  result:iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15}
  left:
  right:0x2 {unsigned-int literal}
  4191 - pointer reg req = 0
 4213
x  left:_envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
    c   Symbol type: void function ( const-unsigned-char fixed) fixed
  result:iTemp591 [k609 lr501:501 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed}
          Symbol type: void fixed
  4191 - pointer reg req = 0
 4213
  4191 - pointer reg req = 0
 4213
x  left:_envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
    c   Symbol type: void function ( const-unsigned-char fixed) fixed
  result:iTemp592 [k610 lr503:503 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed}
          Symbol type: void fixed
  4191 - pointer reg req = 0
 4213
  4191 - pointer reg req = 0
 4213
x  left:_envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
    c   Symbol type: void function ( const-unsigned-char fixed) fixed
  result:iTemp593 [k611 lr505:505 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed}
          Symbol type: void fixed
  4191 - pointer reg req = 0
 4213
  4191 - pointer reg req = 0
 4213
x  left:_envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
    c   Symbol type: void function ( const-unsigned-char fixed) fixed
  result:iTemp594 [k612 lr507:507 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed}
          Symbol type: void fixed
  4191 - pointer reg req = 0
 4213
  4191 - pointer reg req = 0
 4213
x  left:_envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
    c   Symbol type: void function ( const-unsigned-char fixed) fixed
  result:iTemp595 [k613 lr509:509 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed}
          Symbol type: void fixed
  4191 - pointer reg req = 0
 4213
  4191 - pointer reg req = 0
 4213
x  left:_envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
    c   Symbol type: void function ( const-unsigned-char fixed) fixed
  result:iTemp596 [k614 lr511:511 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed}
          Symbol type: void fixed
  4191 - pointer reg req = 0
 4213
  4191 - pointer reg req = 0
 4213
x  left:_envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
    c   Symbol type: void function ( const-unsigned-char fixed) fixed
  result:iTemp597 [k615 lr513:513 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed}
          Symbol type: void fixed
  4191 - pointer reg req = 0
 4213
  4191 - pointer reg req = 0
 4213
x  left:_envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
    c   Symbol type: void function ( const-unsigned-char fixed) fixed
  result:iTemp598 [k616 lr515:515 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed}
          Symbol type: void fixed
  4191 - pointer reg req = 0
 4213
  4191 - pointer reg req = 0
 4213
x  left:_envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
    c   Symbol type: void function ( const-unsigned-char fixed) fixed
  result:iTemp599 [k617 lr517:517 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed}
          Symbol type: void fixed
  4191 - pointer reg req = 0
 4213
  4191 - pointer reg req = 0
 4213
x  left:_envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
    c   Symbol type: void function ( const-unsigned-char fixed) fixed
  result:iTemp600 [k618 lr519:519 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed}
          Symbol type: void fixed
  4191 - pointer reg req = 0
 4213
  result:iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15}
          Symbol type: unsigned-int fixed
  4191 - pointer reg req = 0
 4213
 4213
pic16_packRegisters
3007	packRegsForAssign
ic->op = =
  result:iTemp612 [k630 lr523:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}
  left:
  right:0x0 {const-unsigned-char literal}
 3015 - actuall processing
  3027 - not packing - right is not temp
pic16_allocDirReg BAD, op is NULL
  result:iTemp612 [k630 lr523:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}
  left:
  right:0x0 {const-unsigned-char literal}
3007	packRegsForAssign
ic->op = =
  result:iTemp602 [k620 lr524:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}
  left:
  right:0x0 {unsigned-int literal}
 3015 - actuall processing
  3027 - not packing - right is not temp
pic16_allocDirReg BAD, op is NULL
  result:iTemp602 [k620 lr524:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}
  left:
  right:0x0 {unsigned-int literal}
 4213
  result:iTemp612 [k630 lr523:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}
          Symbol type: unsigned-char fixed
  4191 - pointer reg req = 0
 4213
  result:iTemp602 [k620 lr524:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}
          Symbol type: unsigned-int register
  4191 - pointer reg req = 0
 4213
pic16_packRegisters
 4213
pic16_packRegisters
3007	packRegsForAssign
ic->op = =
  result:iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}
  left:
  right:0x0 {const-unsigned-char literal}
 3015 - actuall processing
  3027 - not packing - right is not temp
pic16_allocDirReg BAD, op is NULL
  result:iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}
  left:
  right:0x0 {const-unsigned-char literal}
 4213
x  left:iTemp368 [k375 lr284:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
    is a ptr
    c   Symbol type: char [8] near* fixed
  right:iTemp602 [k620 lr524:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}
         Symbol type: unsigned-int register
  result:iTemp603 [k621 lr527:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] fixed}
          Symbol type: char [8] fixed
  4191 - pointer reg req = 0
 4213
  result:iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}
          Symbol type: unsigned-char fixed
  4191 - pointer reg req = 0
 4213
pic16_packRegisters
 4213
pic16_packRegisters
 4213
x  left:iTemp603 [k621 lr527:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] fixed}
    c   Symbol type: char [8] fixed
  right:iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}
         Symbol type: unsigned-char fixed
  result:iTemp605 [k623 lr531:532 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4191 - pointer reg req = 0
 4213
x  left:iTemp605 [k623 lr531:532 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}
    is a ptr
    c   Symbol type: char near* fixed
  result:iTemp606 [k624 lr532:533 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}
          Symbol type: char fixed
  marking as a pointer (get) =>  left:iTemp605 [k623 lr531:532 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp606 [k624 lr532:533 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}
    c   Symbol type: char fixed
  4191 - pointer reg req = 0
 4213
x  left:_envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
    c   Symbol type: void function ( const-unsigned-char fixed) fixed
  result:iTemp607 [k625 lr534:534 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed}
          Symbol type: void fixed
  4191 - pointer reg req = 0
 4213
x  left:iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}
    c   Symbol type: unsigned-char fixed
  result:iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}
          Symbol type: unsigned-char fixed
  4191 - pointer reg req = 0
 4213
x  left:iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}
    c   Symbol type: unsigned-char fixed
  result:iTemp610 [k628 lr536:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}
          Symbol type: char fixed
  4191 - pointer reg req = 0
  4208
x  left:iTemp610 [k628 lr536:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}
    c   Symbol type: char fixed
  4191 - pointer reg req = 0
 4213
pic16_packRegisters
x  left:iTemp602 [k620 lr524:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}
    c   Symbol type: unsigned-int register
  result:iTemp602 [k620 lr524:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}
          Symbol type: unsigned-int register
  4191 - pointer reg req = 0
 4213
x  left:iTemp612 [k630 lr523:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}
    c   Symbol type: unsigned-char fixed
  result:iTemp612 [k630 lr523:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}
          Symbol type: unsigned-char fixed
  4191 - pointer reg req = 0
 4213
x  left:iTemp612 [k630 lr523:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}
    c   Symbol type: unsigned-char fixed
  result:iTemp613 [k631 lr540:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}
          Symbol type: char fixed
  4191 - pointer reg req = 0
  4208
x  left:iTemp613 [k631 lr540:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}
    c   Symbol type: char fixed
  4191 - pointer reg req = 0
 4213
pic16_packRegisters
3007	packRegsForAssign
ic->op = =
  result:iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15}
  left:
  right:0x3 {unsigned-int literal}
 3015 - actuall processing
  3027 - not packing - right is not temp
pic16_allocDirReg BAD, op is NULL
  result:iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15}
  left:
  right:0x3 {unsigned-int literal}
  4191 - pointer reg req = 0
 4213
x  left:_envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
    c   Symbol type: void function ( const-unsigned-char fixed) fixed
  result:iTemp614 [k632 lr543:543 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed}
          Symbol type: void fixed
  4191 - pointer reg req = 0
 4213
  4191 - pointer reg req = 0
 4213
x  left:_envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
    c   Symbol type: void function ( const-unsigned-char fixed) fixed
  result:iTemp615 [k633 lr545:545 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed}
          Symbol type: void fixed
  4191 - pointer reg req = 0
 4213
  4191 - pointer reg req = 0
 4213
x  left:_envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
    c   Symbol type: void function ( const-unsigned-char fixed) fixed
  result:iTemp616 [k634 lr547:547 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed}
          Symbol type: void fixed
  4191 - pointer reg req = 0
 4213
  4191 - pointer reg req = 0
 4213
x  left:_envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
    c   Symbol type: void function ( const-unsigned-char fixed) fixed
  result:iTemp617 [k635 lr549:549 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed}
          Symbol type: void fixed
  4191 - pointer reg req = 0
 4213
  4191 - pointer reg req = 0
 4213
x  left:_envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
    c   Symbol type: void function ( const-unsigned-char fixed) fixed
  result:iTemp618 [k636 lr551:551 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed}
          Symbol type: void fixed
  4191 - pointer reg req = 0
 4213
  4191 - pointer reg req = 0
 4213
x  left:_envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
    c   Symbol type: void function ( const-unsigned-char fixed) fixed
  result:iTemp619 [k637 lr553:553 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed}
          Symbol type: void fixed
  4191 - pointer reg req = 0
 4213
  4191 - pointer reg req = 0
 4213
x  left:_envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
    c   Symbol type: void function ( const-unsigned-char fixed) fixed
  result:iTemp620 [k638 lr555:555 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed}
          Symbol type: void fixed
  4191 - pointer reg req = 0
 4213
  4191 - pointer reg req = 0
 4213
x  left:_envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
    c   Symbol type: void function ( const-unsigned-char fixed) fixed
  result:iTemp621 [k639 lr557:557 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed}
          Symbol type: void fixed
  4191 - pointer reg req = 0
 4213
  4191 - pointer reg req = 0
 4213
x  left:_envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
    c   Symbol type: void function ( const-unsigned-char fixed) fixed
  result:iTemp622 [k640 lr559:559 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed}
          Symbol type: void fixed
  4191 - pointer reg req = 0
 4213
  4191 - pointer reg req = 0
 4213
x  left:_envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
    c   Symbol type: void function ( const-unsigned-char fixed) fixed
  result:iTemp623 [k641 lr561:561 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed}
          Symbol type: void fixed
  4191 - pointer reg req = 0
 4213
  result:iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15}
          Symbol type: unsigned-int fixed
  4191 - pointer reg req = 0
 4213
 4213
pic16_packRegisters
3007	packRegsForAssign
ic->op = =
  result:iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}
  left:
  right:0x0 {const-unsigned-char literal}
 3015 - actuall processing
  3027 - not packing - right is not temp
pic16_allocDirReg BAD, op is NULL
  result:iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}
  left:
  right:0x0 {const-unsigned-char literal}
3007	packRegsForAssign
ic->op = =
  result:iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}
  left:
  right:0x0 {unsigned-int literal}
 3015 - actuall processing
  3027 - not packing - right is not temp
pic16_allocDirReg BAD, op is NULL
  result:iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}
  left:
  right:0x0 {unsigned-int literal}
 4213
  result:iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}
          Symbol type: unsigned-char fixed
  4191 - pointer reg req = 0
 4213
  result:iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}
          Symbol type: unsigned-int register
  4191 - pointer reg req = 0
 4213
pic16_packRegisters
 4213
pic16_packRegisters
3007	packRegsForAssign
ic->op = =
  result:iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}
  left:
  right:0x0 {const-unsigned-char literal}
 3015 - actuall processing
  3027 - not packing - right is not temp
pic16_allocDirReg BAD, op is NULL
  result:iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}
  left:
  right:0x0 {const-unsigned-char literal}
 4213
x  left:iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}
    c   Symbol type: unsigned-char fixed
  result:iTemp633 [k651 lr569:570 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register}
          Symbol type: unsigned-char register
  4191 - pointer reg req = 0
 4213
x  left:iTemp633 [k651 lr569:570 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register}
    c   Symbol type: unsigned-char register
  result:iTemp634 [k652 lr570:571 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}
          Symbol type: unsigned-int register
  4191 - pointer reg req = 0
 4213
x  left:iTemp456 [k464 lr350:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
    is a ptr
    c   Symbol type: char [8] near* fixed
  right:iTemp634 [k652 lr570:571 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}
         Symbol type: unsigned-int register
  result:iTemp635 [k653 lr571:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] fixed}
          Symbol type: char [8] fixed
  4191 - pointer reg req = 0
 4213
x  left:iTemp368 [k375 lr284:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}
    is a ptr
    c   Symbol type: char [8] near* fixed
  right:iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}
         Symbol type: unsigned-int register
  result:iTemp627 [k645 lr572:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] fixed}
          Symbol type: char [8] fixed
  4191 - pointer reg req = 0
 4213
x  left:iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}
    c   Symbol type: unsigned-char fixed
  result:iTemp624 [k642 lr573:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}
          Symbol type: char fixed
  4191 - pointer reg req = 0
 4213
  result:iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}
          Symbol type: unsigned-char fixed
  4191 - pointer reg req = 0
 4213
pic16_packRegisters
 4213
pic16_packRegisters
 4213
x  left:iTemp624 [k642 lr573:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}
    c   Symbol type: char fixed
  4191 - pointer reg req = 0
 4213
pic16_packRegisters
x  left:iTemp627 [k645 lr572:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] fixed}
    c   Symbol type: char [8] fixed
  right:iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}
         Symbol type: unsigned-char fixed
  result:iTemp629 [k647 lr578:579 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4191 - pointer reg req = 0
 4213
x  left:iTemp629 [k647 lr578:579 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}
    is a ptr
    c   Symbol type: char near* fixed
  result:iTemp630 [k648 lr579:580 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}
          Symbol type: char fixed
  marking as a pointer (get) =>  left:iTemp629 [k647 lr578:579 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp630 [k648 lr579:580 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}
    c   Symbol type: char fixed
  4191 - pointer reg req = 0
 4213
x  left:_envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
    c   Symbol type: void function ( const-unsigned-char fixed) fixed
  result:iTemp631 [k649 lr581:581 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed}
          Symbol type: void fixed
  4191 - pointer reg req = 0
 4213
 4213
pic16_packRegisters
 4213
x  left:iTemp635 [k653 lr571:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] fixed}
    c   Symbol type: char [8] fixed
  right:iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}
         Symbol type: unsigned-char fixed
  result:iTemp637 [k655 lr584:585 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}
          Symbol type: char near* fixed
  4191 - pointer reg req = 0
 4213
x  left:iTemp637 [k655 lr584:585 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}
    is a ptr
    c   Symbol type: char near* fixed
  result:iTemp638 [k656 lr585:586 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}
          Symbol type: char fixed
  marking as a pointer (get) =>  left:iTemp637 [k655 lr584:585 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}
  4191 - pointer reg req = 0
 4213
x  left:iTemp638 [k656 lr585:586 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}
    c   Symbol type: char fixed
  4191 - pointer reg req = 0
 4213
x  left:_envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
    c   Symbol type: void function ( const-unsigned-char fixed) fixed
  result:iTemp639 [k657 lr587:587 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed}
          Symbol type: void fixed
  4191 - pointer reg req = 0
 4213
pic16_packRegisters
 4213
x  left:iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}
    c   Symbol type: unsigned-char fixed
  result:iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}
          Symbol type: unsigned-char fixed
  4191 - pointer reg req = 0
 4213
x  left:iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}
    c   Symbol type: unsigned-char fixed
  result:iTemp642 [k660 lr590:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}
          Symbol type: char fixed
  4191 - pointer reg req = 0
  4208
x  left:iTemp642 [k660 lr590:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}
    c   Symbol type: char fixed
  4191 - pointer reg req = 0
 4213
pic16_packRegisters
x  left:iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}
    c   Symbol type: unsigned-int register
  result:iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}
          Symbol type: unsigned-int register
  4191 - pointer reg req = 0
 4213
x  left:iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}
    c   Symbol type: unsigned-char fixed
  result:iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}
          Symbol type: unsigned-char fixed
  4191 - pointer reg req = 0
 4213
x  left:iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}
    c   Symbol type: unsigned-char fixed
  result:iTemp645 [k663 lr594:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}
          Symbol type: char fixed
  4191 - pointer reg req = 0
  4208
x  left:iTemp645 [k663 lr594:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}
    c   Symbol type: char fixed
  4191 - pointer reg req = 0
 4213
pic16_packRegisters
3007	packRegsForAssign
ic->op = =
  result:iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15}
  left:
  right:0x0 {unsigned-int literal}
 3015 - actuall processing
  3027 - not packing - right is not temp
pic16_allocDirReg BAD, op is NULL
  result:iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15}
  left:
  right:0x0 {unsigned-int literal}
  4191 - pointer reg req = 0
 4213
x  left:_envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
    c   Symbol type: void function ( const-unsigned-char fixed) fixed
  result:iTemp646 [k664 lr597:597 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed}
          Symbol type: void fixed
  4191 - pointer reg req = 0
 4213
  4191 - pointer reg req = 0
 4213
x  left:_envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
    c   Symbol type: void function ( const-unsigned-char fixed) fixed
  result:iTemp647 [k665 lr599:599 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed}
          Symbol type: void fixed
  4191 - pointer reg req = 0
 4213
  4191 - pointer reg req = 0
 4213
x  left:_envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
    c   Symbol type: void function ( const-unsigned-char fixed) fixed
  result:iTemp648 [k666 lr601:601 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed}
          Symbol type: void fixed
  4191 - pointer reg req = 0
 4213
  4191 - pointer reg req = 0
 4213
x  left:_envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
    c   Symbol type: void function ( const-unsigned-char fixed) fixed
  result:iTemp649 [k667 lr603:603 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed}
          Symbol type: void fixed
  4191 - pointer reg req = 0
 4213
  4191 - pointer reg req = 0
 4213
x  left:_envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
    c   Symbol type: void function ( const-unsigned-char fixed) fixed
  result:iTemp650 [k668 lr605:605 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed}
          Symbol type: void fixed
  4191 - pointer reg req = 0
 4213
  4191 - pointer reg req = 0
 4213
x  left:_envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
    c   Symbol type: void function ( const-unsigned-char fixed) fixed
  result:iTemp651 [k669 lr607:607 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed}
          Symbol type: void fixed
  4191 - pointer reg req = 0
 4213
  4191 - pointer reg req = 0
 4213
x  left:_envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
    c   Symbol type: void function ( const-unsigned-char fixed) fixed
  result:iTemp652 [k670 lr609:609 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed}
          Symbol type: void fixed
  4191 - pointer reg req = 0
 4213
  4191 - pointer reg req = 0
 4213
x  left:_envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
    c   Symbol type: void function ( const-unsigned-char fixed) fixed
  result:iTemp653 [k671 lr611:611 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed}
          Symbol type: void fixed
  4191 - pointer reg req = 0
 4213
  4191 - pointer reg req = 0
 4213
x  left:_envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
    c   Symbol type: void function ( const-unsigned-char fixed) fixed
  result:iTemp654 [k672 lr613:613 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed}
          Symbol type: void fixed
  4191 - pointer reg req = 0
 4213
  4191 - pointer reg req = 0
 4213
x  left:_envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
    c   Symbol type: void function ( const-unsigned-char fixed) fixed
  result:iTemp655 [k673 lr615:615 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed}
          Symbol type: void fixed
  4191 - pointer reg req = 0
 4213
  result:iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15}
          Symbol type: unsigned-int fixed
  4191 - pointer reg req = 0
 4213
pic16_packRegisters
 4213
x  left:iTemp657 [k675 lr400:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_x_1_15}
    c   Symbol type: unsigned-char fixed
  result:iTemp657 [k675 lr400:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_x_1_15}
          Symbol type: unsigned-char fixed
  4191 - pointer reg req = 0
 4213
x  left:iTemp657 [k675 lr400:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_x_1_15}
    c   Symbol type: unsigned-char fixed
  result:iTemp658 [k676 lr619:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}
          Symbol type: char fixed
  4191 - pointer reg req = 0
  4208
x  left:iTemp658 [k676 lr619:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}
    c   Symbol type: char fixed
  4191 - pointer reg req = 0
 4213
pic16_packRegisters
 4213
x  left:_intro [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( ) fixed}
    c   Symbol type: void function ( ) fixed
 4213
regTypeNum
  2754 - iTemp0
  2765 - itemp register
  reg name iTemp0,  reg type REG_GPR
  2754 - iTemp2
  2765 - itemp register
  reg name iTemp2,  reg type REG_GPR
  2754 - iTemp3
  2765 - itemp register
  reg name iTemp3,  reg type REG_GPR
  2754 - iTemp5
  2765 - itemp register
  reg name iTemp5,  reg type REG_GPR
  2754 - iTemp7
  2765 - itemp register
  reg name iTemp7,  reg type REG_GPR
  2754 - iTemp9
  2765 - itemp register
  reg name iTemp9,  reg type REG_GPR
  2754 - iTemp11
  2765 - itemp register
  reg name iTemp11,  reg type REG_GPR
  2754 - iTemp13
  2765 - itemp register
  reg name iTemp13,  reg type REG_GPR
  2754 - iTemp15
  2765 - itemp register
  reg name iTemp15,  reg type REG_GPR
  2754 - iTemp16
  2765 - itemp register
  reg name iTemp16,  reg type REG_GPR
  2754 - iTemp17
  2765 - itemp register
  reg name iTemp17,  reg type REG_GPR
  2754 - iTemp21
  2765 - itemp register
  reg name iTemp21,  reg type REG_GPR
  2754 - iTemp24
  2765 - itemp register
  reg name iTemp24,  reg type REG_GPR
  2754 - iTemp27
  2765 - itemp register
  reg name iTemp27,  reg type REG_GPR
  2754 - iTemp30
  2765 - itemp register
  reg name iTemp30,  reg type REG_GPR
  2754 - iTemp33
  2765 - itemp register
  reg name iTemp33,  reg type REG_GPR
  2754 - iTemp36
  2765 - itemp register
  reg name iTemp36,  reg type REG_GPR
  2754 - iTemp39
  2765 - itemp register
  reg name iTemp39,  reg type REG_GPR
  2754 - iTemp41
  2765 - itemp register
  reg name iTemp41,  reg type REG_GPR
  2754 - iTemp45
  2765 - itemp register
  reg name iTemp45,  reg type REG_GPR
  2754 - iTemp48
  2765 - itemp register
  reg name iTemp48,  reg type REG_GPR
  2754 - iTemp51
  2765 - itemp register
  reg name iTemp51,  reg type REG_GPR
  2754 - iTemp54
  2765 - itemp register
  reg name iTemp54,  reg type REG_GPR
  2754 - iTemp57
  2765 - itemp register
  reg name iTemp57,  reg type REG_GPR
  2754 - iTemp60
  2765 - itemp register
  reg name iTemp60,  reg type REG_GPR
  2754 - iTemp63
  2765 - itemp register
  reg name iTemp63,  reg type REG_GPR
  2754 - iTemp65
  2765 - itemp register
  reg name iTemp65,  reg type REG_GPR
  2754 - iTemp69
  2765 - itemp register
  reg name iTemp69,  reg type REG_GPR
  2754 - iTemp72
  2765 - itemp register
  reg name iTemp72,  reg type REG_GPR
  2754 - iTemp75
  2765 - itemp register
  reg name iTemp75,  reg type REG_GPR
  2754 - iTemp78
  2765 - itemp register
  reg name iTemp78,  reg type REG_GPR
  2754 - iTemp81
  2765 - itemp register
  reg name iTemp81,  reg type REG_GPR
  2754 - iTemp84
  2765 - itemp register
  reg name iTemp84,  reg type REG_GPR
  2754 - iTemp87
  2765 - itemp register
  reg name iTemp87,  reg type REG_GPR
  2754 - iTemp88
  2765 - itemp register
  reg name iTemp88,  reg type REG_GPR
  2754 - iTemp90
  2765 - itemp register
  reg name iTemp90,  reg type REG_GPR
  2754 - iTemp91
  2765 - itemp register
  reg name iTemp91,  reg type REG_GPR
  2754 - iTemp93
  2765 - itemp register
  reg name iTemp93,  reg type REG_GPR
  2754 - iTemp95
  2765 - itemp register
  reg name iTemp95,  reg type REG_GPR
  2754 - iTemp97
  2765 - itemp register
  reg name iTemp97,  reg type REG_GPR
  2754 - iTemp99
  2765 - itemp register
  reg name iTemp99,  reg type REG_GPR
  2754 - iTemp101
  2765 - itemp register
  reg name iTemp101,  reg type REG_GPR
  2754 - iTemp103
  2765 - itemp register
  reg name iTemp103,  reg type REG_GPR
  2754 - iTemp104
  2765 - itemp register
  reg name iTemp104,  reg type REG_GPR
  2754 - iTemp105
  2765 - itemp register
  reg name iTemp105,  reg type REG_GPR
  2754 - iTemp109
  2765 - itemp register
  reg name iTemp109,  reg type REG_GPR
  2754 - iTemp112
  2765 - itemp register
  reg name iTemp112,  reg type REG_GPR
  2754 - iTemp115
  2765 - itemp register
  reg name iTemp115,  reg type REG_GPR
  2754 - iTemp118
  2765 - itemp register
  reg name iTemp118,  reg type REG_GPR
  2754 - iTemp121
  2765 - itemp register
  reg name iTemp121,  reg type REG_GPR
  2754 - iTemp124
  2765 - itemp register
  reg name iTemp124,  reg type REG_GPR
  2754 - iTemp127
  2765 - itemp register
  reg name iTemp127,  reg type REG_GPR
  2754 - iTemp129
  2765 - itemp register
  reg name iTemp129,  reg type REG_GPR
  2754 - iTemp133
  2765 - itemp register
  reg name iTemp133,  reg type REG_GPR
  2754 - iTemp136
  2765 - itemp register
  reg name iTemp136,  reg type REG_GPR
  2754 - iTemp139
  2765 - itemp register
  reg name iTemp139,  reg type REG_GPR
  2754 - iTemp142
  2765 - itemp register
  reg name iTemp142,  reg type REG_GPR
  2754 - iTemp145
  2765 - itemp register
  reg name iTemp145,  reg type REG_GPR
  2754 - iTemp148
  2765 - itemp register
  reg name iTemp148,  reg type REG_GPR
  2754 - iTemp151
  2765 - itemp register
  reg name iTemp151,  reg type REG_GPR
  2754 - iTemp153
  2765 - itemp register
  reg name iTemp153,  reg type REG_GPR
  2754 - iTemp157
  2765 - itemp register
  reg name iTemp157,  reg type REG_GPR
  2754 - iTemp160
  2765 - itemp register
  reg name iTemp160,  reg type REG_GPR
  2754 - iTemp163
  2765 - itemp register
  reg name iTemp163,  reg type REG_GPR
  2754 - iTemp166
  2765 - itemp register
  reg name iTemp166,  reg type REG_GPR
  2754 - iTemp169
  2765 - itemp register
  reg name iTemp169,  reg type REG_GPR
  2754 - iTemp172
  2765 - itemp register
  reg name iTemp172,  reg type REG_GPR
  2754 - iTemp175
  2765 - itemp register
  reg name iTemp175,  reg type REG_GPR
  2754 - iTemp176
  2765 - itemp register
  reg name iTemp176,  reg type REG_GPR
  2754 - iTemp178
  2765 - itemp register
  reg name iTemp178,  reg type REG_GPR
  2754 - iTemp179
  2765 - itemp register
  reg name iTemp179,  reg type REG_GPR
  2754 - iTemp181
  2765 - itemp register
  reg name iTemp181,  reg type REG_GPR
  2754 - iTemp183
  2765 - itemp register
  reg name iTemp183,  reg type REG_GPR
  2754 - iTemp185
  2765 - itemp register
  reg name iTemp185,  reg type REG_GPR
  2754 - iTemp187
  2765 - itemp register
  reg name iTemp187,  reg type REG_GPR
  2754 - iTemp189
  2765 - itemp register
  reg name iTemp189,  reg type REG_GPR
  2754 - iTemp191
  2765 - itemp register
  reg name iTemp191,  reg type REG_GPR
  2754 - iTemp192
  2765 - itemp register
  reg name iTemp192,  reg type REG_GPR
  2754 - iTemp193
  2765 - itemp register
  reg name iTemp193,  reg type REG_GPR
  2754 - iTemp197
  2765 - itemp register
  reg name iTemp197,  reg type REG_GPR
  2754 - iTemp200
  2765 - itemp register
  reg name iTemp200,  reg type REG_GPR
  2754 - iTemp203
  2765 - itemp register
  reg name iTemp203,  reg type REG_GPR
  2754 - iTemp206
  2765 - itemp register
  reg name iTemp206,  reg type REG_GPR
  2754 - iTemp209
  2765 - itemp register
  reg name iTemp209,  reg type REG_GPR
  2754 - iTemp212
  2765 - itemp register
  reg name iTemp212,  reg type REG_GPR
  2754 - iTemp215
  2765 - itemp register
  reg name iTemp215,  reg type REG_GPR
  2754 - iTemp217
  2765 - itemp register
  reg name iTemp217,  reg type REG_GPR
  2754 - iTemp221
  2765 - itemp register
  reg name iTemp221,  reg type REG_GPR
  2754 - iTemp224
  2765 - itemp register
  reg name iTemp224,  reg type REG_GPR
  2754 - iTemp227
  2765 - itemp register
  reg name iTemp227,  reg type REG_GPR
  2754 - iTemp230
  2765 - itemp register
  reg name iTemp230,  reg type REG_GPR
  2754 - iTemp233
  2765 - itemp register
  reg name iTemp233,  reg type REG_GPR
  2754 - iTemp236
  2765 - itemp register
  reg name iTemp236,  reg type REG_GPR
  2754 - iTemp239
  2765 - itemp register
  reg name iTemp239,  reg type REG_GPR
  2754 - iTemp241
  2765 - itemp register
  reg name iTemp241,  reg type REG_GPR
  2754 - iTemp245
  2765 - itemp register
  reg name iTemp245,  reg type REG_GPR
  2754 - iTemp248
  2765 - itemp register
  reg name iTemp248,  reg type REG_GPR
  2754 - iTemp251
  2765 - itemp register
  reg name iTemp251,  reg type REG_GPR
  2754 - iTemp254
  2765 - itemp register
  reg name iTemp254,  reg type REG_GPR
  2754 - iTemp257
  2765 - itemp register
  reg name iTemp257,  reg type REG_GPR
  2754 - iTemp260
  2765 - itemp register
  reg name iTemp260,  reg type REG_GPR
  2754 - iTemp263
  2765 - itemp register
  reg name iTemp263,  reg type REG_GPR
  2754 - iTemp264
  2765 - itemp register
  reg name iTemp264,  reg type REG_GPR
  2754 - iTemp266
  2765 - itemp register
  reg name iTemp266,  reg type REG_GPR
  2754 - iTemp267
  2765 - itemp register
  reg name iTemp267,  reg type REG_GPR
  2754 - iTemp269
  2765 - itemp register
  reg name iTemp269,  reg type REG_GPR
  2754 - iTemp271
  2765 - itemp register
  reg name iTemp271,  reg type REG_GPR
  2754 - iTemp273
  2765 - itemp register
  reg name iTemp273,  reg type REG_GPR
  2754 - iTemp275
  2765 - itemp register
  reg name iTemp275,  reg type REG_GPR
  2754 - iTemp277
  2765 - itemp register
  reg name iTemp277,  reg type REG_GPR
  2754 - iTemp279
  2765 - itemp register
  reg name iTemp279,  reg type REG_GPR
  2754 - iTemp280
  2765 - itemp register
  reg name iTemp280,  reg type REG_GPR
  2754 - iTemp281
  2765 - itemp register
  reg name iTemp281,  reg type REG_GPR
  2754 - iTemp285
  2765 - itemp register
  reg name iTemp285,  reg type REG_GPR
  2754 - iTemp288
  2765 - itemp register
  reg name iTemp288,  reg type REG_GPR
  2754 - iTemp291
  2765 - itemp register
  reg name iTemp291,  reg type REG_GPR
  2754 - iTemp294
  2765 - itemp register
  reg name iTemp294,  reg type REG_GPR
  2754 - iTemp297
  2765 - itemp register
  reg name iTemp297,  reg type REG_GPR
  2754 - iTemp300
  2765 - itemp register
  reg name iTemp300,  reg type REG_GPR
  2754 - iTemp303
  2765 - itemp register
  reg name iTemp303,  reg type REG_GPR
  2754 - iTemp305
  2765 - itemp register
  reg name iTemp305,  reg type REG_GPR
  2754 - iTemp309
  2765 - itemp register
  reg name iTemp309,  reg type REG_GPR
  2754 - iTemp312
  2765 - itemp register
  reg name iTemp312,  reg type REG_GPR
  2754 - iTemp315
  2765 - itemp register
  reg name iTemp315,  reg type REG_GPR
  2754 - iTemp318
  2765 - itemp register
  reg name iTemp318,  reg type REG_GPR
  2754 - iTemp321
  2765 - itemp register
  reg name iTemp321,  reg type REG_GPR
  2754 - iTemp324
  2765 - itemp register
  reg name iTemp324,  reg type REG_GPR
  2754 - iTemp327
  2765 - itemp register
  reg name iTemp327,  reg type REG_GPR
  2754 - iTemp329
  2765 - itemp register
  reg name iTemp329,  reg type REG_GPR
  2754 - iTemp333
  2765 - itemp register
  reg name iTemp333,  reg type REG_GPR
  2754 - iTemp336
  2765 - itemp register
  reg name iTemp336,  reg type REG_GPR
  2754 - iTemp339
  2765 - itemp register
  reg name iTemp339,  reg type REG_GPR
  2754 - iTemp342
  2765 - itemp register
  reg name iTemp342,  reg type REG_GPR
  2754 - iTemp345
  2765 - itemp register
  reg name iTemp345,  reg type REG_GPR
  2754 - iTemp348
  2765 - itemp register
  reg name iTemp348,  reg type REG_GPR
  2754 - iTemp351
  2765 - itemp register
  reg name iTemp351,  reg type REG_GPR
  2754 - iTemp352
  2765 - itemp register
  reg name iTemp352,  reg type REG_GPR
  2754 - iTemp354
  2765 - itemp register
  reg name iTemp354,  reg type REG_GPR
  2754 - iTemp355
  2765 - itemp register
  reg name iTemp355,  reg type REG_GPR
  2754 - iTemp357
  2765 - itemp register
  reg name iTemp357,  reg type REG_GPR
  2754 - iTemp359
  2765 - itemp register
  reg name iTemp359,  reg type REG_GPR
  2754 - iTemp361
  2765 - itemp register
  reg name iTemp361,  reg type REG_GPR
  2754 - iTemp363
  2765 - itemp register
  reg name iTemp363,  reg type REG_GPR
  2754 - iTemp365
  2765 - itemp register
  reg name iTemp365,  reg type REG_GPR
  2754 - iTemp367
  2765 - itemp register
  reg name iTemp367,  reg type REG_GPR
  2754 - iTemp368
  2765 - itemp register
  reg name iTemp368,  reg type REG_GPR
  2754 - iTemp369
  2765 - itemp register
  reg name iTemp369,  reg type REG_GPR
  2754 - iTemp373
  2765 - itemp register
  reg name iTemp373,  reg type REG_GPR
  2754 - iTemp376
  2765 - itemp register
  reg name iTemp376,  reg type REG_GPR
  2754 - iTemp379
  2765 - itemp register
  reg name iTemp379,  reg type REG_GPR
  2754 - iTemp382
  2765 - itemp register
  reg name iTemp382,  reg type REG_GPR
  2754 - iTemp385
  2765 - itemp register
  reg name iTemp385,  reg type REG_GPR
  2754 - iTemp388
  2765 - itemp register
  reg name iTemp388,  reg type REG_GPR
  2754 - iTemp391
  2765 - itemp register
  reg name iTemp391,  reg type REG_GPR
  2754 - iTemp393
  2765 - itemp register
  reg name iTemp393,  reg type REG_GPR
  2754 - iTemp397
  2765 - itemp register
  reg name iTemp397,  reg type REG_GPR
  2754 - iTemp400
  2765 - itemp register
  reg name iTemp400,  reg type REG_GPR
  2754 - iTemp403
  2765 - itemp register
  reg name iTemp403,  reg type REG_GPR
  2754 - iTemp406
  2765 - itemp register
  reg name iTemp406,  reg type REG_GPR
  2754 - iTemp409
  2765 - itemp register
  reg name iTemp409,  reg type REG_GPR
  2754 - iTemp412
  2765 - itemp register
  reg name iTemp412,  reg type REG_GPR
  2754 - iTemp415
  2765 - itemp register
  reg name iTemp415,  reg type REG_GPR
  2754 - iTemp417
  2765 - itemp register
  reg name iTemp417,  reg type REG_GPR
  2754 - iTemp421
  2765 - itemp register
  reg name iTemp421,  reg type REG_GPR
  2754 - iTemp424
  2765 - itemp register
  reg name iTemp424,  reg type REG_GPR
  2754 - iTemp427
  2765 - itemp register
  reg name iTemp427,  reg type REG_GPR
  2754 - iTemp430
  2765 - itemp register
  reg name iTemp430,  reg type REG_GPR
  2754 - iTemp433
  2765 - itemp register
  reg name iTemp433,  reg type REG_GPR
  2754 - iTemp436
  2765 - itemp register
  reg name iTemp436,  reg type REG_GPR
  2754 - iTemp439
  2765 - itemp register
  reg name iTemp439,  reg type REG_GPR
  2754 - iTemp440
  2765 - itemp register
  reg name iTemp440,  reg type REG_GPR
  2754 - iTemp442
  2765 - itemp register
  reg name iTemp442,  reg type REG_GPR
  2754 - iTemp443
  2765 - itemp register
  reg name iTemp443,  reg type REG_GPR
  2754 - iTemp445
  2765 - itemp register
  reg name iTemp445,  reg type REG_GPR
  2754 - iTemp447
  2765 - itemp register
  reg name iTemp447,  reg type REG_GPR
  2754 - iTemp449
  2765 - itemp register
  reg name iTemp449,  reg type REG_GPR
  2754 - iTemp451
  2765 - itemp register
  reg name iTemp451,  reg type REG_GPR
  2754 - iTemp453
  2765 - itemp register
  reg name iTemp453,  reg type REG_GPR
  2754 - iTemp455
  2765 - itemp register
  reg name iTemp455,  reg type REG_GPR
  2754 - iTemp456
  2765 - itemp register
  reg name iTemp456,  reg type REG_GPR
  2754 - iTemp457
  2765 - itemp register
  reg name iTemp457,  reg type REG_GPR
  2754 - iTemp461
  2765 - itemp register
  reg name iTemp461,  reg type REG_GPR
  2754 - iTemp464
  2765 - itemp register
  reg name iTemp464,  reg type REG_GPR
  2754 - iTemp467
  2765 - itemp register
  reg name iTemp467,  reg type REG_GPR
  2754 - iTemp470
  2765 - itemp register
  reg name iTemp470,  reg type REG_GPR
  2754 - iTemp473
  2765 - itemp register
  reg name iTemp473,  reg type REG_GPR
  2754 - iTemp476
  2765 - itemp register
  reg name iTemp476,  reg type REG_GPR
  2754 - iTemp479
  2765 - itemp register
  reg name iTemp479,  reg type REG_GPR
  2754 - iTemp481
  2765 - itemp register
  reg name iTemp481,  reg type REG_GPR
  2754 - iTemp485
  2765 - itemp register
  reg name iTemp485,  reg type REG_GPR
  2754 - iTemp488
  2765 - itemp register
  reg name iTemp488,  reg type REG_GPR
  2754 - iTemp491
  2765 - itemp register
  reg name iTemp491,  reg type REG_GPR
  2754 - iTemp494
  2765 - itemp register
  reg name iTemp494,  reg type REG_GPR
  2754 - iTemp497
  2765 - itemp register
  reg name iTemp497,  reg type REG_GPR
  2754 - iTemp500
  2765 - itemp register
  reg name iTemp500,  reg type REG_GPR
  2754 - iTemp503
  2765 - itemp register
  reg name iTemp503,  reg type REG_GPR
  2754 - iTemp505
  2765 - itemp register
  reg name iTemp505,  reg type REG_GPR
  2754 - iTemp509
  2765 - itemp register
  reg name iTemp509,  reg type REG_GPR
  2754 - iTemp512
  2765 - itemp register
  reg name iTemp512,  reg type REG_GPR
  2754 - iTemp515
  2765 - itemp register
  reg name iTemp515,  reg type REG_GPR
  2754 - iTemp518
  2765 - itemp register
  reg name iTemp518,  reg type REG_GPR
  2754 - iTemp521
  2765 - itemp register
  reg name iTemp521,  reg type REG_GPR
  2754 - iTemp524
  2765 - itemp register
  reg name iTemp524,  reg type REG_GPR
  2754 - iTemp527
  2765 - itemp register
  reg name iTemp527,  reg type REG_GPR
  2754 - iTemp528
  2765 - itemp register
  reg name iTemp528,  reg type REG_GPR
  2754 - iTemp531
  2765 - itemp register
  reg name iTemp531,  reg type REG_GPR
  2754 - iTemp532
  2754 - iTemp533
  2754 - iTemp534
  2765 - itemp register
  2754 - iTemp537
  2765 - itemp register
  reg name iTemp537,  reg type REG_GPR
  2754 - iTemp539
  2765 - itemp register
  reg name iTemp539,  reg type REG_GPR
  2754 - iTemp540
  2765 - itemp register
  reg name iTemp540,  reg type REG_GPR
  2754 - iTemp542
  2765 - itemp register
  reg name iTemp542,  reg type REG_GPR
  2754 - iTemp543
  2765 - itemp register
  reg name iTemp543,  reg type REG_GPR
  2754 - iTemp544
  2754 - iTemp546
  2765 - itemp register
  reg name iTemp546,  reg type REG_GPR
  2754 - iTemp547
  2765 - itemp register
  reg name iTemp547,  reg type REG_GPR
  2754 - iTemp548
  2765 - itemp register
  reg name iTemp548,  reg type REG_GPR
  2754 - iTemp550
  2765 - itemp register
  reg name iTemp550,  reg type REG_GPR
  2754 - iTemp551
  2765 - itemp register
  reg name iTemp551,  reg type REG_GPR
  2754 - iTemp552
  2754 - iTemp554
  2765 - itemp register
  reg name iTemp554,  reg type REG_GPR
  2754 - iTemp555
  2765 - itemp register
  2754 - iTemp557
  2765 - itemp register
  reg name iTemp557,  reg type REG_GPR
  2754 - iTemp558
  2765 - itemp register
  2754 - iTemp559
  2754 - iTemp560
  2754 - iTemp561
  2754 - iTemp562
  2754 - iTemp563
  2754 - iTemp564
  2754 - iTemp565
  2754 - iTemp566
  2754 - iTemp567
  2754 - iTemp568
  2754 - iTemp569
  2765 - itemp register
  reg name iTemp569,  reg type REG_GPR
  2754 - iTemp571
  2765 - itemp register
  reg name iTemp571,  reg type REG_GPR
  2754 - iTemp572
  2765 - itemp register
  reg name iTemp572,  reg type REG_GPR
  2754 - iTemp574
  2765 - itemp register
  reg name iTemp574,  reg type REG_GPR
  2754 - iTemp575
  2765 - itemp register
  reg name iTemp575,  reg type REG_GPR
  2754 - iTemp576
  2754 - iTemp578
  2765 - itemp register
  reg name iTemp578,  reg type REG_GPR
  2754 - iTemp579
  2765 - itemp register
  reg name iTemp579,  reg type REG_GPR
  2754 - iTemp580
  2765 - itemp register
  reg name iTemp580,  reg type REG_GPR
  2754 - iTemp582
  2765 - itemp register
  reg name iTemp582,  reg type REG_GPR
  2754 - iTemp583
  2765 - itemp register
  reg name iTemp583,  reg type REG_GPR
  2754 - iTemp584
  2754 - iTemp586
  2765 - itemp register
  reg name iTemp586,  reg type REG_GPR
  2754 - iTemp587
  2765 - itemp register
  2754 - iTemp589
  2765 - itemp register
  reg name iTemp589,  reg type REG_GPR
  2754 - iTemp590
  2765 - itemp register
  2754 - iTemp591
  2754 - iTemp592
  2754 - iTemp593
  2754 - iTemp594
  2754 - iTemp595
  2754 - iTemp596
  2754 - iTemp597
  2754 - iTemp598
  2754 - iTemp599
  2754 - iTemp600
  2754 - iTemp602
  2765 - itemp register
  reg name iTemp602,  reg type REG_GPR
  2754 - iTemp603
  2765 - itemp register
  reg name iTemp603,  reg type REG_GPR
  2754 - iTemp605
  2765 - itemp register
  reg name iTemp605,  reg type REG_GPR
  2754 - iTemp606
  2765 - itemp register
  reg name iTemp606,  reg type REG_GPR
  2754 - iTemp607
  2754 - iTemp609
  2765 - itemp register
  reg name iTemp609,  reg type REG_GPR
  2754 - iTemp610
  2765 - itemp register
  2754 - iTemp612
  2765 - itemp register
  reg name iTemp612,  reg type REG_GPR
  2754 - iTemp613
  2765 - itemp register
  2754 - iTemp614
  2754 - iTemp615
  2754 - iTemp616
  2754 - iTemp617
  2754 - iTemp618
  2754 - iTemp619
  2754 - iTemp620
  2754 - iTemp621
  2754 - iTemp622
  2754 - iTemp623
  2754 - iTemp624
  2765 - itemp register
  reg name iTemp624,  reg type REG_GPR
  2754 - iTemp626
  2765 - itemp register
  reg name iTemp626,  reg type REG_GPR
  2754 - iTemp627
  2765 - itemp register
  reg name iTemp627,  reg type REG_GPR
  2754 - iTemp629
  2765 - itemp register
  reg name iTemp629,  reg type REG_GPR
  2754 - iTemp630
  2765 - itemp register
  reg name iTemp630,  reg type REG_GPR
  2754 - iTemp631
  2754 - iTemp633
  2765 - itemp register
  reg name iTemp633,  reg type REG_GPR
  2754 - iTemp634
  2765 - itemp register
  reg name iTemp634,  reg type REG_GPR
  2754 - iTemp635
  2765 - itemp register
  reg name iTemp635,  reg type REG_GPR
  2754 - iTemp637
  2765 - itemp register
  reg name iTemp637,  reg type REG_GPR
  2754 - iTemp638
  2765 - itemp register
  reg name iTemp638,  reg type REG_GPR
  2754 - iTemp639
  2754 - iTemp641
  2765 - itemp register
  reg name iTemp641,  reg type REG_GPR
  2754 - iTemp642
  2765 - itemp register
  2754 - iTemp644
  2765 - itemp register
  reg name iTemp644,  reg type REG_GPR
  2754 - iTemp645
  2765 - itemp register
  2754 - iTemp646
  2754 - iTemp647
  2754 - iTemp648
  2754 - iTemp649
  2754 - iTemp650
  2754 - iTemp651
  2754 - iTemp652
  2754 - iTemp653
  2754 - iTemp654
  2754 - iTemp655
  2754 - iTemp657
  2765 - itemp register
  reg name iTemp657,  reg type REG_GPR
  2754 - iTemp658
  2765 - itemp register
serialRegAssign
  op: LABEL
deassignLRs
  op: FUNCTION
deassignLRs
  op: ADDRESS_OF
pic16_allocDirReg:815 symbol name _intro_letra_a_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_a_1_15 [k2 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
894  -- added _intro_letra_a_1_15 to hash, size = 32
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp0
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: ADDRESS_OF
pic16_allocDirReg:815 symbol name _intro_letra_a_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_a_1_15 [k2 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp2
isSpiltOnStack
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp3
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp5
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp7
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp9
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp11
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp13
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp15
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: ADDRESS_OF
pic16_allocDirReg:815 symbol name _intro_letra_a_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_a_1_15 [k2 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp16
isSpiltOnStack
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp17
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp21
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp24
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp27
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp30
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp33
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp36
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp39
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp41
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp45
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp48
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp51
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp54
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp57
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp60
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp63
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp65
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp69
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp72
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp75
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp78
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp81
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp84
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp87
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: ADDRESS_OF
pic16_allocDirReg:815 symbol name _intro_letra_l_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_l_1_15 [k91 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
894  -- added _intro_letra_l_1_15 to hash, size = 32
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp88
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: ADDRESS_OF
pic16_allocDirReg:815 symbol name _intro_letra_l_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_l_1_15 [k91 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp90
isSpiltOnStack
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp91
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp93
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp95
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp97
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp99
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp101
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp103
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: ADDRESS_OF
pic16_allocDirReg:815 symbol name _intro_letra_l_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_l_1_15 [k91 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp104
isSpiltOnStack
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp105
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp109
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp112
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp115
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp118
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp121
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp124
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp127
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp129
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp133
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp136
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp139
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp142
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp145
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp148
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp151
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp153
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp157
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp160
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp163
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp166
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp169
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp172
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp175
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: ADDRESS_OF
pic16_allocDirReg:815 symbol name _intro_letra_r_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_r_1_15 [k180 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
894  -- added _intro_letra_r_1_15 to hash, size = 32
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp176
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: ADDRESS_OF
pic16_allocDirReg:815 symbol name _intro_letra_r_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_r_1_15 [k180 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp178
isSpiltOnStack
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp179
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp181
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp183
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp185
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp187
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp189
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp191
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: ADDRESS_OF
pic16_allocDirReg:815 symbol name _intro_letra_r_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_r_1_15 [k180 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp192
isSpiltOnStack
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp193
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp197
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp200
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp203
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp206
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp209
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp212
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp215
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp217
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp221
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp224
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp227
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp230
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp233
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp236
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp239
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp241
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp245
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp248
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp251
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp254
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp257
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp260
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp263
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: ADDRESS_OF
pic16_allocDirReg:815 symbol name _intro_letra_3_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_3_1_15 [k269 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
894  -- added _intro_letra_3_1_15 to hash, size = 32
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp264
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: ADDRESS_OF
pic16_allocDirReg:815 symbol name _intro_letra_3_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_3_1_15 [k269 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp266
isSpiltOnStack
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp267
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp269
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp271
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp273
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp275
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp277
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp279
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: ADDRESS_OF
pic16_allocDirReg:815 symbol name _intro_letra_3_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_3_1_15 [k269 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp280
isSpiltOnStack
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp281
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp285
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp288
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp291
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp294
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp297
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp300
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp303
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp305
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp309
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp312
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp315
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp318
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp321
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp324
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp327
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp329
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp333
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp336
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp339
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp342
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp345
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp348
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp351
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: ADDRESS_OF
pic16_allocDirReg:815 symbol name _intro_letra_0_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_0_1_15 [k358 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
894  -- added _intro_letra_0_1_15 to hash, size = 32
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp352
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: ADDRESS_OF
pic16_allocDirReg:815 symbol name _intro_letra_0_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_0_1_15 [k358 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp354
isSpiltOnStack
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp355
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp357
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp359
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp361
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp363
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp365
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp367
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: ADDRESS_OF
pic16_allocDirReg:815 symbol name _intro_letra_0_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_0_1_15 [k358 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp368
isSpiltOnStack
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp369
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp373
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp376
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp379
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp382
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp385
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp388
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp391
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp393
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp397
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp400
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp403
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp406
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp409
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp412
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp415
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp417
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp421
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp424
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp427
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp430
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp433
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp436
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp439
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: ADDRESS_OF
pic16_allocDirReg:815 symbol name _intro_letra_z_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_z_1_15 [k447 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
894  -- added _intro_letra_z_1_15 to hash, size = 32
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp440
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: ADDRESS_OF
pic16_allocDirReg:815 symbol name _intro_letra_z_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_z_1_15 [k447 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp442
isSpiltOnStack
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp443
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp445
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp447
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp449
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp451
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp453
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp455
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: ADDRESS_OF
pic16_allocDirReg:815 symbol name _intro_letra_z_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_z_1_15 [k447 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp456
isSpiltOnStack
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp457
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp461
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp464
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp467
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp470
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp473
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp476
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp479
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp481
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp485
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp488
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp491
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp494
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp497
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp500
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp503
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp505
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp509
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp512
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp515
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp518
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp521
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp524
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
spillThis : iTemp527
isSpiltOnStack
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
bitvector Size = 1073 bSize = 135
Bits on { (536) }
getRegGpr
allocReg of type REG_GPR for register rIdx: 0 (0x0)
getRegGpr
allocReg of type REG_GPR for register rIdx: 1 (0x1)
  2457 - 
  2471 - 
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
bitvector Size = 1073 bSize = 135
Bits on { (536) (675) }
getRegGpr
allocReg of type REG_GPR for register rIdx: 2 (0x2)
  2457 - 
  2471 - 
  op: LABEL
deassignLRs
  op: LABEL
deassignLRs
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
bitvector Size = 1073 bSize = 135
Bits on { (536) (542) (675) }
getRegGpr
allocReg of type REG_GPR for register rIdx: 3 (0x3)
getRegGpr
allocReg of type REG_GPR for register rIdx: 4 (0x4)
  2457 - 
  2471 - 
  op: LABEL
deassignLRs
  op: LABEL
deassignLRs
  op: -
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: IFX
pic16_allocDirReg BAD, op is NULL
deassignLRs
freeReg
freeReg
  op: CALL
pic16_allocDirReg:815 symbol name _limpa_lcd
  827  storage class 0 
 838  specifier
_limpa_lcd [k543 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( ) fixed}
pic16_allocDirReg:861 sym: limpa_lcd in codespace
deassignLRs
  op: SEND
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: CALL
pic16_allocDirReg:815 symbol name _envia_comando
  827  storage class 0 
 838  specifier
_envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
pic16_allocDirReg:861 sym: envia_comando in codespace
deassignLRs
  op: >
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: IFX
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: JUMPTABLE
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: LABEL
deassignLRs
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
bitvector Size = 1073 bSize = 135
Bits on { (536) (575) (675) }
getRegGpr
allocReg of type REG_GPR for register rIdx: 4 (0x4)
  2457 - 
  2471 - 
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
bitvector Size = 1073 bSize = 135
Bits on { (536) (556) (575) (675) }
getRegGpr
allocReg of type REG_GPR for register rIdx: 4 (0x4)
getRegGpr
allocReg of type REG_GPR for register rIdx: 5 (0x5)
  2457 - 
  2471 - 
  op: LABEL
deassignLRs
  op: LABEL
deassignLRs
  op: -
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
bitvector Size = 1073 bSize = 135
Bits on { (536) (556) (564) (575) (675) }
getRegGpr
allocReg of type REG_GPR for register rIdx: 6 (0x6)
  2457 - 
positionRegs
  2471 - 
  op: *
pic16_allocDirReg BAD, op is NULL
deassignLRs
nfreeRegsType
getRegGpr
allocReg of type REG_GPR for register rIdx: 7 (0x7)
  op: +
deassignLRs
freeReg
freeReg
willCauseSpill
computeSpillable
bitvector Size = 1073 bSize = 135
Bits on { (536) (556) (566) (575) (675) }
getRegGpr
allocReg of type REG_GPR for register rIdx: 7 (0x7)
getRegGpr
allocReg of type REG_GPR for register rIdx: 7 (0x7)
  2457 - 
positionRegs
positionRegs
  2471 - 
  op: +
deassignLRs
willCauseSpill
computeSpillable
bitvector Size = 1073 bSize = 135
Bits on { (536) (556) (557) (566) (575) (675) }
getRegGpr
allocReg of type REG_GPR for register rIdx: 8 (0x8)
getRegGpr
allocReg of type REG_GPR for register rIdx: 9 (0x9)
  2457 - 
positionRegs
positionRegs
  2471 - 
  op: <
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
bitvector Size = 1073 bSize = 135
Bits on { (536) (553) (556) (557) (566) (575) (675) }
getRegGpr
allocReg of type REG_GPR for register rIdx: 10 (0xa)
  2457 - 
positionRegs
  2471 - 
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
bitvector Size = 1073 bSize = 135
Bits on { (536) (553) (556) (557) (566) (572) (575) (675) }
getRegGpr
allocReg of type REG_GPR for register rIdx: 11 (0xb)
  2457 - 
  2471 - 
  op: LABEL
deassignLRs
  op: LABEL
deassignLRs
  op: IFX
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
deassignLRs
willCauseSpill
computeSpillable
bitvector Size = 1073 bSize = 135
Bits on { (536) (553) (556) (557) (559) (566) (572) (575) (675) }
getRegGpr
allocReg of type REG_GPR for register rIdx: 12 (0xc)
getRegGpr
allocReg of type REG_GPR for register rIdx: 13 (0xd)
  2457 - 
positionRegs
positionRegs
  2471 - 
  op: GET_VALUE_AT_ADDRESS
pic16_allocDirReg BAD, op is NULL
deassignLRs
nfreeRegsType
freeReg
  op: SEND
deassignLRs
freeReg
  op: CALL
pic16_allocDirReg:815 symbol name _envia_dados
  827  storage class 0 
 838  specifier
_envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
pic16_allocDirReg:861 sym: envia_dados in codespace
deassignLRs
  op: GOTO
deassignLRs
  op: LABEL
deassignLRs
  op: +
deassignLRs
willCauseSpill
computeSpillable
bitvector Size = 1073 bSize = 135
Bits on { (536) (553) (556) (557) (566) (568) (572) (575) (675) }
getRegGpr
allocReg of type REG_GPR for register rIdx: 13 (0xd)
getRegGpr
allocReg of type REG_GPR for register rIdx: 13 (0xd)
  2457 - 
positionRegs
positionRegs
  2471 - 
  op: GET_VALUE_AT_ADDRESS
pic16_allocDirReg BAD, op is NULL
deassignLRs
nfreeRegsType
freeReg
  op: SEND
deassignLRs
freeReg
  op: CALL
pic16_allocDirReg:815 symbol name _envia_dados
  827  storage class 0 
 838  specifier
_envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
pic16_allocDirReg:861 sym: envia_dados in codespace
deassignLRs
  op: LABEL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: <
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: IFX
pic16_allocDirReg BAD, op is NULL
deassignLRs
freeReg
freeReg
freeReg
freeReg
freeReg
freeReg
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: <
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: IFX
pic16_allocDirReg BAD, op is NULL
deassignLRs
freeReg
freeReg
freeReg
  op: SEND
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: CALL
pic16_allocDirReg:815 symbol name _envia_comando
  827  storage class 0 
 838  specifier
_envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
pic16_allocDirReg:861 sym: envia_comando in codespace
deassignLRs
  op: SEND
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: CALL
pic16_allocDirReg:815 symbol name _envia_dados
  827  storage class 0 
 838  specifier
_envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
pic16_allocDirReg:861 sym: envia_dados in codespace
deassignLRs
  op: SEND
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: CALL
pic16_allocDirReg:815 symbol name _envia_dados
  827  storage class 0 
 838  specifier
_envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
pic16_allocDirReg:861 sym: envia_dados in codespace
deassignLRs
  op: SEND
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: CALL
pic16_allocDirReg:815 symbol name _envia_dados
  827  storage class 0 
 838  specifier
_envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
pic16_allocDirReg:861 sym: envia_dados in codespace
deassignLRs
  op: SEND
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: CALL
pic16_allocDirReg:815 symbol name _envia_dados
  827  storage class 0 
 838  specifier
_envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
pic16_allocDirReg:861 sym: envia_dados in codespace
deassignLRs
  op: SEND
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: CALL
pic16_allocDirReg:815 symbol name _envia_comando
  827  storage class 0 
 838  specifier
_envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
pic16_allocDirReg:861 sym: envia_comando in codespace
deassignLRs
  op: SEND
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: CALL
pic16_allocDirReg:815 symbol name _envia_dados
  827  storage class 0 
 838  specifier
_envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
pic16_allocDirReg:861 sym: envia_dados in codespace
deassignLRs
  op: SEND
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: CALL
pic16_allocDirReg:815 symbol name _envia_dados
  827  storage class 0 
 838  specifier
_envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
pic16_allocDirReg:861 sym: envia_dados in codespace
deassignLRs
  op: SEND
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: CALL
pic16_allocDirReg:815 symbol name _envia_dados
  827  storage class 0 
 838  specifier
_envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
pic16_allocDirReg:861 sym: envia_dados in codespace
deassignLRs
  op: SEND
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: CALL
pic16_allocDirReg:815 symbol name _envia_dados
  827  storage class 0 
 838  specifier
_envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
pic16_allocDirReg:861 sym: envia_dados in codespace
deassignLRs
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: GOTO
deassignLRs
  op: LABEL
deassignLRs
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
bitvector Size = 1073 bSize = 135
Bits on { (536) (607) (675) }
getRegGpr
allocReg of type REG_GPR for register rIdx: 13 (0xd)
  2457 - 
  2471 - 
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
bitvector Size = 1073 bSize = 135
Bits on { (536) (589) (607) (675) }
getRegGpr
allocReg of type REG_GPR for register rIdx: 13 (0xd)
getRegGpr
allocReg of type REG_GPR for register rIdx: 13 (0xd)
  2457 - 
  2471 - 
  op: LABEL
deassignLRs
  op: LABEL
deassignLRs
  op: -
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
bitvector Size = 1073 bSize = 135
Bits on { (536) (589) (596) (607) (675) }
getRegGpr
allocReg of type REG_GPR for register rIdx: 13 (0xd)
  2457 - 
positionRegs
  2471 - 
  op: *
pic16_allocDirReg BAD, op is NULL
deassignLRs
nfreeRegsType
getRegGpr
allocReg of type REG_GPR for register rIdx: 13 (0xd)
  op: +
deassignLRs
freeReg
freeReg
willCauseSpill
computeSpillable
bitvector Size = 1073 bSize = 135
Bits on { (536) (589) (598) (607) (675) }
getRegGpr
allocReg of type REG_GPR for register rIdx: 13 (0xd)
getRegGpr
allocReg of type REG_GPR for register rIdx: 13 (0xd)
  2457 - 
positionRegs
positionRegs
  2471 - 
  op: +
deassignLRs
willCauseSpill
computeSpillable
bitvector Size = 1073 bSize = 135
Bits on { (536) (589) (590) (598) (607) (675) }
getRegGpr
allocReg of type REG_GPR for register rIdx: 13 (0xd)
getRegGpr
allocReg of type REG_GPR for register rIdx: 13 (0xd)
  2457 - 
positionRegs
positionRegs
  2471 - 
  op: <
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
bitvector Size = 1073 bSize = 135
Bits on { (536) (587) (589) (590) (598) (607) (675) }
getRegGpr
allocReg of type REG_GPR for register rIdx: 13 (0xd)
  2457 - 
positionRegs
  2471 - 
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
bitvector Size = 1073 bSize = 135
Bits on { (536) (587) (589) (590) (598) (604) (607) (675) }
getRegGpr
allocReg of type REG_GPR for register rIdx: 13 (0xd)
  2457 - 
  2471 - 
  op: LABEL
deassignLRs
  op: LABEL
deassignLRs
  op: IFX
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
deassignLRs
willCauseSpill
computeSpillable
bitvector Size = 1073 bSize = 135
Bits on { (536) (587) (589) (590) (592) (598) (604) (607) (675) }
getRegGpr
allocReg of type REG_GPR for register rIdx: 13 (0xd)
getRegGpr
allocReg of type REG_GPR for register rIdx: 13 (0xd)
  2457 - 
positionRegs
positionRegs
  2471 - 
  op: GET_VALUE_AT_ADDRESS
pic16_allocDirReg BAD, op is NULL
deassignLRs
nfreeRegsType
freeReg
  op: SEND
deassignLRs
freeReg
  op: CALL
pic16_allocDirReg:815 symbol name _envia_dados
  827  storage class 0 
 838  specifier
_envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
pic16_allocDirReg:861 sym: envia_dados in codespace
deassignLRs
  op: GOTO
deassignLRs
  op: LABEL
deassignLRs
  op: +
deassignLRs
willCauseSpill
computeSpillable
bitvector Size = 1073 bSize = 135
Bits on { (536) (587) (589) (590) (598) (600) (604) (607) (675) }
getRegGpr
allocReg of type REG_GPR for register rIdx: 13 (0xd)
getRegGpr
allocReg of type REG_GPR for register rIdx: 13 (0xd)
  2457 - 
positionRegs
positionRegs
  2471 - 
  op: GET_VALUE_AT_ADDRESS
pic16_allocDirReg BAD, op is NULL
deassignLRs
nfreeRegsType
freeReg
  op: SEND
deassignLRs
freeReg
  op: CALL
pic16_allocDirReg:815 symbol name _envia_dados
  827  storage class 0 
 838  specifier
_envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
pic16_allocDirReg:861 sym: envia_dados in codespace
deassignLRs
  op: LABEL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: <
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: IFX
pic16_allocDirReg BAD, op is NULL
deassignLRs
freeReg
freeReg
freeReg
freeReg
freeReg
freeReg
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: <
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: IFX
pic16_allocDirReg BAD, op is NULL
deassignLRs
freeReg
freeReg
freeReg
  op: SEND
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: CALL
pic16_allocDirReg:815 symbol name _envia_comando
  827  storage class 0 
 838  specifier
_envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
pic16_allocDirReg:861 sym: envia_comando in codespace
deassignLRs
  op: SEND
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: CALL
pic16_allocDirReg:815 symbol name _envia_dados
  827  storage class 0 
 838  specifier
_envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
pic16_allocDirReg:861 sym: envia_dados in codespace
deassignLRs
  op: SEND
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: CALL
pic16_allocDirReg:815 symbol name _envia_dados
  827  storage class 0 
 838  specifier
_envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
pic16_allocDirReg:861 sym: envia_dados in codespace
deassignLRs
  op: SEND
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: CALL
pic16_allocDirReg:815 symbol name _envia_dados
  827  storage class 0 
 838  specifier
_envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
pic16_allocDirReg:861 sym: envia_dados in codespace
deassignLRs
  op: SEND
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: CALL
pic16_allocDirReg:815 symbol name _envia_dados
  827  storage class 0 
 838  specifier
_envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
pic16_allocDirReg:861 sym: envia_dados in codespace
deassignLRs
  op: SEND
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: CALL
pic16_allocDirReg:815 symbol name _envia_comando
  827  storage class 0 
 838  specifier
_envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
pic16_allocDirReg:861 sym: envia_comando in codespace
deassignLRs
  op: SEND
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: CALL
pic16_allocDirReg:815 symbol name _envia_dados
  827  storage class 0 
 838  specifier
_envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
pic16_allocDirReg:861 sym: envia_dados in codespace
deassignLRs
  op: SEND
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: CALL
pic16_allocDirReg:815 symbol name _envia_dados
  827  storage class 0 
 838  specifier
_envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
pic16_allocDirReg:861 sym: envia_dados in codespace
deassignLRs
  op: SEND
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: CALL
pic16_allocDirReg:815 symbol name _envia_dados
  827  storage class 0 
 838  specifier
_envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
pic16_allocDirReg:861 sym: envia_dados in codespace
deassignLRs
  op: SEND
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: CALL
pic16_allocDirReg:815 symbol name _envia_dados
  827  storage class 0 
 838  specifier
_envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
pic16_allocDirReg:861 sym: envia_dados in codespace
deassignLRs
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: GOTO
deassignLRs
  op: LABEL
deassignLRs
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
bitvector Size = 1073 bSize = 135
Bits on { (536) (630) (675) }
getRegGpr
allocReg of type REG_GPR for register rIdx: 13 (0xd)
  2457 - 
  2471 - 
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
bitvector Size = 1073 bSize = 135
Bits on { (536) (620) (630) (675) }
getRegGpr
allocReg of type REG_GPR for register rIdx: 13 (0xd)
getRegGpr
allocReg of type REG_GPR for register rIdx: 13 (0xd)
  2457 - 
  2471 - 
  op: LABEL
deassignLRs
  op: LABEL
deassignLRs
  op: +
deassignLRs
willCauseSpill
computeSpillable
bitvector Size = 1073 bSize = 135
Bits on { (536) (620) (621) (630) (675) }
getRegGpr
allocReg of type REG_GPR for register rIdx: 13 (0xd)
getRegGpr
allocReg of type REG_GPR for register rIdx: 13 (0xd)
  2457 - 
positionRegs
positionRegs
  2471 - 
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
bitvector Size = 1073 bSize = 135
Bits on { (536) (620) (621) (627) (630) (675) }
getRegGpr
allocReg of type REG_GPR for register rIdx: 13 (0xd)
  2457 - 
  2471 - 
  op: LABEL
deassignLRs
  op: LABEL
deassignLRs
  op: +
deassignLRs
willCauseSpill
computeSpillable
bitvector Size = 1073 bSize = 135
Bits on { (536) (620) (621) (623) (627) (630) (675) }
getRegGpr
allocReg of type REG_GPR for register rIdx: 13 (0xd)
getRegGpr
allocReg of type REG_GPR for register rIdx: 13 (0xd)
  2457 - 
positionRegs
positionRegs
  2471 - 
  op: GET_VALUE_AT_ADDRESS
pic16_allocDirReg BAD, op is NULL
deassignLRs
nfreeRegsType
freeReg
  op: SEND
deassignLRs
freeReg
  op: CALL
pic16_allocDirReg:815 symbol name _envia_dados
  827  storage class 0 
 838  specifier
_envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
pic16_allocDirReg:861 sym: envia_dados in codespace
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: <
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: IFX
pic16_allocDirReg BAD, op is NULL
deassignLRs
freeReg
freeReg
freeReg
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: <
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: IFX
pic16_allocDirReg BAD, op is NULL
deassignLRs
freeReg
freeReg
freeReg
  op: SEND
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: CALL
pic16_allocDirReg:815 symbol name _envia_comando
  827  storage class 0 
 838  specifier
_envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
pic16_allocDirReg:861 sym: envia_comando in codespace
deassignLRs
  op: SEND
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: CALL
pic16_allocDirReg:815 symbol name _envia_dados
  827  storage class 0 
 838  specifier
_envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
pic16_allocDirReg:861 sym: envia_dados in codespace
deassignLRs
  op: SEND
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: CALL
pic16_allocDirReg:815 symbol name _envia_dados
  827  storage class 0 
 838  specifier
_envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
pic16_allocDirReg:861 sym: envia_dados in codespace
deassignLRs
  op: SEND
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: CALL
pic16_allocDirReg:815 symbol name _envia_dados
  827  storage class 0 
 838  specifier
_envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
pic16_allocDirReg:861 sym: envia_dados in codespace
deassignLRs
  op: SEND
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: CALL
pic16_allocDirReg:815 symbol name _envia_dados
  827  storage class 0 
 838  specifier
_envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
pic16_allocDirReg:861 sym: envia_dados in codespace
deassignLRs
  op: SEND
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: CALL
pic16_allocDirReg:815 symbol name _envia_comando
  827  storage class 0 
 838  specifier
_envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
pic16_allocDirReg:861 sym: envia_comando in codespace
deassignLRs
  op: SEND
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: CALL
pic16_allocDirReg:815 symbol name _envia_dados
  827  storage class 0 
 838  specifier
_envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
pic16_allocDirReg:861 sym: envia_dados in codespace
deassignLRs
  op: SEND
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: CALL
pic16_allocDirReg:815 symbol name _envia_dados
  827  storage class 0 
 838  specifier
_envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
pic16_allocDirReg:861 sym: envia_dados in codespace
deassignLRs
  op: SEND
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: CALL
pic16_allocDirReg:815 symbol name _envia_dados
  827  storage class 0 
 838  specifier
_envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
pic16_allocDirReg:861 sym: envia_dados in codespace
deassignLRs
  op: SEND
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: CALL
pic16_allocDirReg:815 symbol name _envia_dados
  827  storage class 0 
 838  specifier
_envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
pic16_allocDirReg:861 sym: envia_dados in codespace
deassignLRs
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: GOTO
deassignLRs
  op: LABEL
deassignLRs
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
bitvector Size = 1073 bSize = 135
Bits on { (536) (662) (675) }
getRegGpr
allocReg of type REG_GPR for register rIdx: 13 (0xd)
  2457 - 
  2471 - 
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
bitvector Size = 1073 bSize = 135
Bits on { (536) (644) (662) (675) }
getRegGpr
allocReg of type REG_GPR for register rIdx: 13 (0xd)
getRegGpr
allocReg of type REG_GPR for register rIdx: 13 (0xd)
  2457 - 
  2471 - 
  op: LABEL
deassignLRs
  op: LABEL
deassignLRs
  op: -
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
bitvector Size = 1073 bSize = 135
Bits on { (536) (644) (651) (662) (675) }
getRegGpr
allocReg of type REG_GPR for register rIdx: 13 (0xd)
  2457 - 
positionRegs
  2471 - 
  op: *
pic16_allocDirReg BAD, op is NULL
deassignLRs
nfreeRegsType
getRegGpr
allocReg of type REG_GPR for register rIdx: 13 (0xd)
  op: +
deassignLRs
freeReg
freeReg
willCauseSpill
computeSpillable
bitvector Size = 1073 bSize = 135
Bits on { (536) (644) (653) (662) (675) }
getRegGpr
allocReg of type REG_GPR for register rIdx: 13 (0xd)
getRegGpr
allocReg of type REG_GPR for register rIdx: 13 (0xd)
  2457 - 
positionRegs
positionRegs
  2471 - 
  op: +
deassignLRs
willCauseSpill
computeSpillable
bitvector Size = 1073 bSize = 135
Bits on { (536) (644) (645) (653) (662) (675) }
getRegGpr
allocReg of type REG_GPR for register rIdx: 13 (0xd)
getRegGpr
allocReg of type REG_GPR for register rIdx: 13 (0xd)
  2457 - 
positionRegs
positionRegs
  2471 - 
  op: <
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
bitvector Size = 1073 bSize = 135
Bits on { (536) (642) (644) (645) (653) (662) (675) }
getRegGpr
allocReg of type REG_GPR for register rIdx: 13 (0xd)
  2457 - 
positionRegs
  2471 - 
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
willCauseSpill
computeSpillable
bitvector Size = 1073 bSize = 135
Bits on { (536) (642) (644) (645) (653) (659) (662) (675) }
getRegGpr
allocReg of type REG_GPR for register rIdx: 13 (0xd)
  2457 - 
  2471 - 
  op: LABEL
deassignLRs
  op: LABEL
deassignLRs
  op: IFX
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
deassignLRs
willCauseSpill
computeSpillable
bitvector Size = 1073 bSize = 135
Bits on { (536) (642) (644) (645) (647) (653) (659) (662) (675) }
getRegGpr
allocReg of type REG_GPR for register rIdx: 13 (0xd)
getRegGpr
allocReg of type REG_GPR for register rIdx: 13 (0xd)
  2457 - 
positionRegs
positionRegs
  2471 - 
  op: GET_VALUE_AT_ADDRESS
pic16_allocDirReg BAD, op is NULL
deassignLRs
nfreeRegsType
freeReg
  op: SEND
deassignLRs
freeReg
  op: CALL
pic16_allocDirReg:815 symbol name _envia_dados
  827  storage class 0 
 838  specifier
_envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
pic16_allocDirReg:861 sym: envia_dados in codespace
deassignLRs
  op: GOTO
deassignLRs
  op: LABEL
deassignLRs
  op: +
deassignLRs
willCauseSpill
computeSpillable
bitvector Size = 1073 bSize = 135
Bits on { (536) (642) (644) (645) (653) (655) (659) (662) (675) }
getRegGpr
allocReg of type REG_GPR for register rIdx: 13 (0xd)
getRegGpr
allocReg of type REG_GPR for register rIdx: 13 (0xd)
  2457 - 
positionRegs
positionRegs
  2471 - 
  op: GET_VALUE_AT_ADDRESS
pic16_allocDirReg BAD, op is NULL
deassignLRs
nfreeRegsType
freeReg
  op: SEND
deassignLRs
freeReg
  op: CALL
pic16_allocDirReg:815 symbol name _envia_dados
  827  storage class 0 
 838  specifier
_envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
pic16_allocDirReg:861 sym: envia_dados in codespace
deassignLRs
  op: LABEL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: <
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: IFX
pic16_allocDirReg BAD, op is NULL
deassignLRs
freeReg
freeReg
freeReg
freeReg
freeReg
freeReg
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: <
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: IFX
pic16_allocDirReg BAD, op is NULL
deassignLRs
freeReg
freeReg
freeReg
  op: SEND
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: CALL
pic16_allocDirReg:815 symbol name _envia_comando
  827  storage class 0 
 838  specifier
_envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
pic16_allocDirReg:861 sym: envia_comando in codespace
deassignLRs
  op: SEND
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: CALL
pic16_allocDirReg:815 symbol name _envia_dados
  827  storage class 0 
 838  specifier
_envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
pic16_allocDirReg:861 sym: envia_dados in codespace
deassignLRs
  op: SEND
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: CALL
pic16_allocDirReg:815 symbol name _envia_dados
  827  storage class 0 
 838  specifier
_envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
pic16_allocDirReg:861 sym: envia_dados in codespace
deassignLRs
  op: SEND
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: CALL
pic16_allocDirReg:815 symbol name _envia_dados
  827  storage class 0 
 838  specifier
_envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
pic16_allocDirReg:861 sym: envia_dados in codespace
deassignLRs
  op: SEND
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: CALL
pic16_allocDirReg:815 symbol name _envia_dados
  827  storage class 0 
 838  specifier
_envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
pic16_allocDirReg:861 sym: envia_dados in codespace
deassignLRs
  op: SEND
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: CALL
pic16_allocDirReg:815 symbol name _envia_comando
  827  storage class 0 
 838  specifier
_envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
pic16_allocDirReg:861 sym: envia_comando in codespace
deassignLRs
  op: SEND
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: CALL
pic16_allocDirReg:815 symbol name _envia_dados
  827  storage class 0 
 838  specifier
_envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
pic16_allocDirReg:861 sym: envia_dados in codespace
deassignLRs
  op: SEND
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: CALL
pic16_allocDirReg:815 symbol name _envia_dados
  827  storage class 0 
 838  specifier
_envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
pic16_allocDirReg:861 sym: envia_dados in codespace
deassignLRs
  op: SEND
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: CALL
pic16_allocDirReg:815 symbol name _envia_dados
  827  storage class 0 
 838  specifier
_envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
pic16_allocDirReg:861 sym: envia_dados in codespace
deassignLRs
  op: SEND
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: CALL
pic16_allocDirReg:815 symbol name _envia_dados
  827  storage class 0 
 838  specifier
_envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
pic16_allocDirReg:861 sym: envia_dados in codespace
deassignLRs
  op: =
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: LABEL
deassignLRs
  op: +
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: <
pic16_allocDirReg BAD, op is NULL
deassignLRs
  op: IFX
pic16_allocDirReg BAD, op is NULL
deassignLRs
freeReg
freeReg
freeReg
  op: LABEL
deassignLRs
  op: ENDFUNCTION
deassignLRs
createRegMask
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
rUmaskForOp
rUmaskForOp
regsUsedIniCode
rUmaskForOp
ebbs after optimizing:

----------------------------------------------------------------
Basic Block _entry : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 1 : bbnum = 0 1st iCode = 1 , last iCode = 400
visited 0 : hasFcall = 0

defines bitVector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (1050) }

local defines bitVector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (1050) }

pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

in pointers Set bitvector :
inDefs Set bitvector :
outDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (1050) }

usesDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) }

----------------------------------------------------------------
intro.c(l5:s1:k0:d0:s0)	 _entry($47) :
intro.c(l5:s2:k1:d0:s0)		proc _intro [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( ) fixed}
intro.c(l7:s3:k2:d0:s0)		iTemp0 [k3 lr3:4 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] = &[_intro_letra_a_1_15 [k2 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}]
intro.c(l7:s4:k4:d0:s0)		*(iTemp0 [k3 lr3:4 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat]) := 0x0 {const-unsigned-char literal}
intro.c(l7:s5:k5:d0:s0)		iTemp2 [k5 lr5:18 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] = &[_intro_letra_a_1_15 [k2 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}]
intro.c(l7:s6:k6:d0:s0)		iTemp3 [k6 lr6:7 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] = iTemp2 [k5 lr5:18 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0x1 {unsigned-_Bool literal}
intro.c(l7:s7:k7:d0:s0)		*(iTemp3 [k6 lr6:7 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat]) := 0x0 {const-unsigned-char literal}
intro.c(l7:s8:k9:d0:s0)		iTemp5 [k8 lr8:9 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] = iTemp2 [k5 lr5:18 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0x2 {unsigned-char literal}
intro.c(l7:s9:k10:d0:s0)		*(iTemp5 [k8 lr8:9 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat]) := 0x0 {const-unsigned-char literal}
intro.c(l7:s10:k12:d0:s0)		iTemp7 [k10 lr10:11 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] = iTemp2 [k5 lr5:18 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0x3 {unsigned-char literal}
intro.c(l7:s11:k13:d0:s0)		*(iTemp7 [k10 lr10:11 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat]) := 0x0 {const-unsigned-char literal}
intro.c(l7:s12:k15:d0:s0)		iTemp9 [k12 lr12:13 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] = iTemp2 [k5 lr5:18 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0x4 {unsigned-char literal}
intro.c(l7:s13:k16:d0:s0)		*(iTemp9 [k12 lr12:13 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat]) := 0x0 {const-unsigned-char literal}
intro.c(l7:s14:k18:d0:s0)		iTemp11 [k14 lr14:15 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] = iTemp2 [k5 lr5:18 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0x5 {unsigned-char literal}
intro.c(l7:s15:k19:d0:s0)		*(iTemp11 [k14 lr14:15 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat]) := 0x1 {const-unsigned-char literal}
intro.c(l7:s16:k21:d0:s0)		iTemp13 [k16 lr16:17 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] = iTemp2 [k5 lr5:18 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0x6 {unsigned-char literal}
intro.c(l7:s17:k22:d0:s0)		*(iTemp13 [k16 lr16:17 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat]) := 0x1 {const-unsigned-char literal}
intro.c(l7:s18:k24:d0:s0)		iTemp15 [k18 lr18:19 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] = iTemp2 [k5 lr5:18 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0x7 {unsigned-char literal}
intro.c(l7:s19:k25:d0:s0)		*(iTemp15 [k18 lr18:19 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat]) := 0x3 {const-unsigned-char literal}
intro.c(l7:s20:k26:d0:s0)		iTemp16 [k19 lr20:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] = &[_intro_letra_a_1_15 [k2 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}]
intro.c(l7:s21:k27:d0:s0)		iTemp17 [k20 lr21:22 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] = iTemp16 [k19 lr20:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0x8 {unsigned-char literal}
intro.c(l7:s22:k29:d0:s0)		*(iTemp17 [k20 lr21:22 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat]) := 0x7 {const-unsigned-char literal}
intro.c(l7:s23:k32:d0:s0)		iTemp21 [k24 lr23:24 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat] = iTemp16 [k19 lr20:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0x9 {const-unsigned-char literal}
intro.c(l7:s24:k33:d0:s0)		*(iTemp21 [k24 lr23:24 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat]) := 0xb {const-unsigned-char literal}
intro.c(l7:s25:k36:d0:s0)		iTemp24 [k27 lr25:26 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat] = iTemp16 [k19 lr20:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0xa {const-unsigned-char literal}
intro.c(l7:s26:k37:d0:s0)		*(iTemp24 [k27 lr25:26 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat]) := 0xb {const-unsigned-char literal}
intro.c(l7:s27:k40:d0:s0)		iTemp27 [k30 lr27:28 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat] = iTemp16 [k19 lr20:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0xb {const-unsigned-char literal}
intro.c(l7:s28:k41:d0:s0)		*(iTemp27 [k30 lr27:28 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat]) := 0x1b {const-unsigned-char literal}
intro.c(l7:s29:k44:d0:s0)		iTemp30 [k33 lr29:30 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat] = iTemp16 [k19 lr20:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0xc {const-unsigned-char literal}
intro.c(l7:s30:k45:d0:s0)		*(iTemp30 [k33 lr29:30 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat]) := 0x13 {const-unsigned-char literal}
intro.c(l7:s31:k48:d0:s0)		iTemp33 [k36 lr31:32 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat] = iTemp16 [k19 lr20:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0xd {const-unsigned-char literal}
intro.c(l7:s32:k49:d0:s0)		*(iTemp33 [k36 lr31:32 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat]) := 0x13 {const-unsigned-char literal}
intro.c(l7:s33:k52:d0:s0)		iTemp36 [k39 lr33:34 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat] = iTemp16 [k19 lr20:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0xe {const-unsigned-char literal}
intro.c(l7:s34:k53:d0:s0)		*(iTemp36 [k39 lr33:34 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat]) := 0x3 {const-unsigned-char literal}
intro.c(l7:s35:k56:d0:s0)		iTemp39 [k42 lr35:36 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat] = iTemp16 [k19 lr20:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0xf {const-unsigned-char literal}
intro.c(l7:s36:k57:d0:s0)		*(iTemp39 [k42 lr35:36 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat]) := 0x3 {const-unsigned-char literal}
intro.c(l7:s37:k59:d0:s0)		iTemp41 [k44 lr37:38 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] = iTemp16 [k19 lr20:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0x10 {unsigned-char literal}
intro.c(l7:s38:k61:d0:s0)		*(iTemp41 [k44 lr37:38 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat]) := 0x3 {const-unsigned-char literal}
intro.c(l7:s39:k64:d0:s0)		iTemp45 [k48 lr39:40 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat] = iTemp16 [k19 lr20:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0x11 {const-unsigned-char literal}
intro.c(l7:s40:k65:d0:s0)		*(iTemp45 [k48 lr39:40 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat]) := 0x7 {const-unsigned-char literal}
intro.c(l7:s41:k68:d0:s0)		iTemp48 [k51 lr41:42 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat] = iTemp16 [k19 lr20:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0x12 {const-unsigned-char literal}
intro.c(l7:s42:k69:d0:s0)		*(iTemp48 [k51 lr41:42 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat]) := 0x4 {const-unsigned-char literal}
intro.c(l7:s43:k72:d0:s0)		iTemp51 [k54 lr43:44 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat] = iTemp16 [k19 lr20:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0x13 {const-unsigned-char literal}
intro.c(l7:s44:k73:d0:s0)		*(iTemp51 [k54 lr43:44 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat]) := 0xc {const-unsigned-char literal}
intro.c(l7:s45:k76:d0:s0)		iTemp54 [k57 lr45:46 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat] = iTemp16 [k19 lr20:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0x14 {const-unsigned-char literal}
intro.c(l7:s46:k77:d0:s0)		*(iTemp54 [k57 lr45:46 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat]) := 0x8 {const-unsigned-char literal}
intro.c(l7:s47:k80:d0:s0)		iTemp57 [k60 lr47:48 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat] = iTemp16 [k19 lr20:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0x15 {const-unsigned-char literal}
intro.c(l7:s48:k81:d0:s0)		*(iTemp57 [k60 lr47:48 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat]) := 0x8 {const-unsigned-char literal}
intro.c(l7:s49:k84:d0:s0)		iTemp60 [k63 lr49:50 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat] = iTemp16 [k19 lr20:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0x16 {const-unsigned-char literal}
intro.c(l7:s50:k85:d0:s0)		*(iTemp60 [k63 lr49:50 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat]) := 0x18 {const-unsigned-char literal}
intro.c(l7:s51:k88:d0:s0)		iTemp63 [k66 lr51:52 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat] = iTemp16 [k19 lr20:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0x17 {const-unsigned-char literal}
intro.c(l7:s52:k89:d0:s0)		*(iTemp63 [k66 lr51:52 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat]) := 0x10 {const-unsigned-char literal}
intro.c(l7:s53:k91:d0:s0)		iTemp65 [k68 lr53:54 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] = iTemp16 [k19 lr20:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0x18 {unsigned-char literal}
intro.c(l7:s54:k93:d0:s0)		*(iTemp65 [k68 lr53:54 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat]) := 0x1f {const-unsigned-char literal}
intro.c(l7:s55:k96:d0:s0)		iTemp69 [k72 lr55:56 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat] = iTemp16 [k19 lr20:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0x19 {const-unsigned-char literal}
intro.c(l7:s56:k97:d0:s0)		*(iTemp69 [k72 lr55:56 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat]) := 0x1f {const-unsigned-char literal}
intro.c(l7:s57:k100:d0:s0)		iTemp72 [k75 lr57:58 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat] = iTemp16 [k19 lr20:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0x1a {const-unsigned-char literal}
intro.c(l7:s58:k101:d0:s0)		*(iTemp72 [k75 lr57:58 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat]) := 0x3 {const-unsigned-char literal}
intro.c(l7:s59:k104:d0:s0)		iTemp75 [k78 lr59:60 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat] = iTemp16 [k19 lr20:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0x1b {const-unsigned-char literal}
intro.c(l7:s60:k105:d0:s0)		*(iTemp75 [k78 lr59:60 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat]) := 0x3 {const-unsigned-char literal}
intro.c(l7:s61:k108:d0:s0)		iTemp78 [k81 lr61:62 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat] = iTemp16 [k19 lr20:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0x1c {const-unsigned-char literal}
intro.c(l7:s62:k109:d0:s0)		*(iTemp78 [k81 lr61:62 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat]) := 0x3 {const-unsigned-char literal}
intro.c(l7:s63:k112:d0:s0)		iTemp81 [k84 lr63:64 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat] = iTemp16 [k19 lr20:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0x1d {const-unsigned-char literal}
intro.c(l7:s64:k113:d0:s0)		*(iTemp81 [k84 lr63:64 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat]) := 0x3 {const-unsigned-char literal}
intro.c(l7:s65:k116:d0:s0)		iTemp84 [k87 lr65:66 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat] = iTemp16 [k19 lr20:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0x1e {const-unsigned-char literal}
intro.c(l7:s66:k117:d0:s0)		*(iTemp84 [k87 lr65:66 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat]) := 0x3 {const-unsigned-char literal}
intro.c(l7:s67:k120:d0:s0)		iTemp87 [k90 lr67:68 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat] = iTemp16 [k19 lr20:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0x1f {const-unsigned-char literal}
intro.c(l7:s68:k121:d0:s0)		*(iTemp87 [k90 lr67:68 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat]) := 0x3 {const-unsigned-char literal}
intro.c(l16:s69:k122:d0:s0)		iTemp88 [k92 lr69:70 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] = &[_intro_letra_l_1_15 [k91 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}]
intro.c(l16:s70:k124:d0:s0)		*(iTemp88 [k92 lr69:70 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat]) := 0x18 {const-unsigned-char literal}
intro.c(l16:s71:k125:d0:s0)		iTemp90 [k94 lr71:84 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] = &[_intro_letra_l_1_15 [k91 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}]
intro.c(l16:s72:k126:d0:s0)		iTemp91 [k95 lr72:73 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] = iTemp90 [k94 lr71:84 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0x1 {unsigned-_Bool literal}
intro.c(l16:s73:k127:d0:s0)		*(iTemp91 [k95 lr72:73 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat]) := 0x18 {const-unsigned-char literal}
intro.c(l16:s74:k129:d0:s0)		iTemp93 [k97 lr74:75 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] = iTemp90 [k94 lr71:84 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0x2 {unsigned-char literal}
intro.c(l16:s75:k130:d0:s0)		*(iTemp93 [k97 lr74:75 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat]) := 0x18 {const-unsigned-char literal}
intro.c(l16:s76:k132:d0:s0)		iTemp95 [k99 lr76:77 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] = iTemp90 [k94 lr71:84 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0x3 {unsigned-char literal}
intro.c(l16:s77:k133:d0:s0)		*(iTemp95 [k99 lr76:77 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat]) := 0x18 {const-unsigned-char literal}
intro.c(l16:s78:k135:d0:s0)		iTemp97 [k101 lr78:79 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] = iTemp90 [k94 lr71:84 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0x4 {unsigned-char literal}
intro.c(l16:s79:k136:d0:s0)		*(iTemp97 [k101 lr78:79 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat]) := 0x18 {const-unsigned-char literal}
intro.c(l16:s80:k138:d0:s0)		iTemp99 [k103 lr80:81 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] = iTemp90 [k94 lr71:84 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0x5 {unsigned-char literal}
intro.c(l16:s81:k139:d0:s0)		*(iTemp99 [k103 lr80:81 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat]) := 0x18 {const-unsigned-char literal}
intro.c(l16:s82:k141:d0:s0)		iTemp101 [k105 lr82:83 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] = iTemp90 [k94 lr71:84 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0x6 {unsigned-char literal}
intro.c(l16:s83:k142:d0:s0)		*(iTemp101 [k105 lr82:83 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat]) := 0x18 {const-unsigned-char literal}
intro.c(l16:s84:k144:d0:s0)		iTemp103 [k107 lr84:85 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] = iTemp90 [k94 lr71:84 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0x7 {unsigned-char literal}
intro.c(l16:s85:k145:d0:s0)		*(iTemp103 [k107 lr84:85 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat]) := 0x18 {const-unsigned-char literal}
intro.c(l16:s86:k146:d0:s0)		iTemp104 [k108 lr86:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] = &[_intro_letra_l_1_15 [k91 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}]
intro.c(l16:s87:k147:d0:s0)		iTemp105 [k109 lr87:88 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] = iTemp104 [k108 lr86:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0x8 {unsigned-char literal}
intro.c(l16:s88:k149:d0:s0)		*(iTemp105 [k109 lr87:88 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat]) := 0x0 {const-unsigned-char literal}
intro.c(l16:s89:k152:d0:s0)		iTemp109 [k113 lr89:90 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat] = iTemp104 [k108 lr86:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0x9 {const-unsigned-char literal}
intro.c(l16:s90:k153:d0:s0)		*(iTemp109 [k113 lr89:90 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat]) := 0x0 {const-unsigned-char literal}
intro.c(l16:s91:k156:d0:s0)		iTemp112 [k116 lr91:92 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat] = iTemp104 [k108 lr86:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0xa {const-unsigned-char literal}
intro.c(l16:s92:k157:d0:s0)		*(iTemp112 [k116 lr91:92 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat]) := 0x0 {const-unsigned-char literal}
intro.c(l16:s93:k160:d0:s0)		iTemp115 [k119 lr93:94 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat] = iTemp104 [k108 lr86:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0xb {const-unsigned-char literal}
intro.c(l16:s94:k161:d0:s0)		*(iTemp115 [k119 lr93:94 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat]) := 0x0 {const-unsigned-char literal}
intro.c(l16:s95:k164:d0:s0)		iTemp118 [k122 lr95:96 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat] = iTemp104 [k108 lr86:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0xc {const-unsigned-char literal}
intro.c(l16:s96:k165:d0:s0)		*(iTemp118 [k122 lr95:96 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat]) := 0x0 {const-unsigned-char literal}
intro.c(l16:s97:k168:d0:s0)		iTemp121 [k125 lr97:98 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat] = iTemp104 [k108 lr86:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0xd {const-unsigned-char literal}
intro.c(l16:s98:k169:d0:s0)		*(iTemp121 [k125 lr97:98 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat]) := 0x0 {const-unsigned-char literal}
intro.c(l16:s99:k172:d0:s0)		iTemp124 [k128 lr99:100 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat] = iTemp104 [k108 lr86:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0xe {const-unsigned-char literal}
intro.c(l16:s100:k173:d0:s0)		*(iTemp124 [k128 lr99:100 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat]) := 0x0 {const-unsigned-char literal}
intro.c(l16:s101:k176:d0:s0)		iTemp127 [k131 lr101:102 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat] = iTemp104 [k108 lr86:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0xf {const-unsigned-char literal}
intro.c(l16:s102:k177:d0:s0)		*(iTemp127 [k131 lr101:102 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat]) := 0x0 {const-unsigned-char literal}
intro.c(l16:s103:k179:d0:s0)		iTemp129 [k133 lr103:104 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] = iTemp104 [k108 lr86:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0x10 {unsigned-char literal}
intro.c(l16:s104:k181:d0:s0)		*(iTemp129 [k133 lr103:104 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat]) := 0x18 {const-unsigned-char literal}
intro.c(l16:s105:k184:d0:s0)		iTemp133 [k137 lr105:106 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat] = iTemp104 [k108 lr86:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0x11 {const-unsigned-char literal}
intro.c(l16:s106:k185:d0:s0)		*(iTemp133 [k137 lr105:106 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat]) := 0x18 {const-unsigned-char literal}
intro.c(l16:s107:k188:d0:s0)		iTemp136 [k140 lr107:108 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat] = iTemp104 [k108 lr86:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0x12 {const-unsigned-char literal}
intro.c(l16:s108:k189:d0:s0)		*(iTemp136 [k140 lr107:108 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat]) := 0x18 {const-unsigned-char literal}
intro.c(l16:s109:k192:d0:s0)		iTemp139 [k143 lr109:110 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat] = iTemp104 [k108 lr86:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0x13 {const-unsigned-char literal}
intro.c(l16:s110:k193:d0:s0)		*(iTemp139 [k143 lr109:110 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat]) := 0x18 {const-unsigned-char literal}
intro.c(l16:s111:k196:d0:s0)		iTemp142 [k146 lr111:112 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat] = iTemp104 [k108 lr86:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0x14 {const-unsigned-char literal}
intro.c(l16:s112:k197:d0:s0)		*(iTemp142 [k146 lr111:112 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat]) := 0x18 {const-unsigned-char literal}
intro.c(l16:s113:k200:d0:s0)		iTemp145 [k149 lr113:114 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat] = iTemp104 [k108 lr86:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0x15 {const-unsigned-char literal}
intro.c(l16:s114:k201:d0:s0)		*(iTemp145 [k149 lr113:114 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat]) := 0x18 {const-unsigned-char literal}
intro.c(l16:s115:k204:d0:s0)		iTemp148 [k152 lr115:116 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat] = iTemp104 [k108 lr86:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0x16 {const-unsigned-char literal}
intro.c(l16:s116:k205:d0:s0)		*(iTemp148 [k152 lr115:116 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat]) := 0x1f {const-unsigned-char literal}
intro.c(l16:s117:k208:d0:s0)		iTemp151 [k155 lr117:118 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat] = iTemp104 [k108 lr86:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0x17 {const-unsigned-char literal}
intro.c(l16:s118:k209:d0:s0)		*(iTemp151 [k155 lr117:118 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat]) := 0x1f {const-unsigned-char literal}
intro.c(l16:s119:k211:d0:s0)		iTemp153 [k157 lr119:120 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] = iTemp104 [k108 lr86:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0x18 {unsigned-char literal}
intro.c(l16:s120:k213:d0:s0)		*(iTemp153 [k157 lr119:120 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat]) := 0x0 {const-unsigned-char literal}
intro.c(l16:s121:k216:d0:s0)		iTemp157 [k161 lr121:122 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat] = iTemp104 [k108 lr86:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0x19 {const-unsigned-char literal}
intro.c(l16:s122:k217:d0:s0)		*(iTemp157 [k161 lr121:122 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat]) := 0x0 {const-unsigned-char literal}
intro.c(l16:s123:k220:d0:s0)		iTemp160 [k164 lr123:124 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat] = iTemp104 [k108 lr86:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0x1a {const-unsigned-char literal}
intro.c(l16:s124:k221:d0:s0)		*(iTemp160 [k164 lr123:124 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat]) := 0x0 {const-unsigned-char literal}
intro.c(l16:s125:k224:d0:s0)		iTemp163 [k167 lr125:126 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat] = iTemp104 [k108 lr86:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0x1b {const-unsigned-char literal}
intro.c(l16:s126:k225:d0:s0)		*(iTemp163 [k167 lr125:126 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat]) := 0x0 {const-unsigned-char literal}
intro.c(l16:s127:k228:d0:s0)		iTemp166 [k170 lr127:128 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat] = iTemp104 [k108 lr86:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0x1c {const-unsigned-char literal}
intro.c(l16:s128:k229:d0:s0)		*(iTemp166 [k170 lr127:128 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat]) := 0x0 {const-unsigned-char literal}
intro.c(l16:s129:k232:d0:s0)		iTemp169 [k173 lr129:130 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat] = iTemp104 [k108 lr86:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0x1d {const-unsigned-char literal}
intro.c(l16:s130:k233:d0:s0)		*(iTemp169 [k173 lr129:130 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat]) := 0x0 {const-unsigned-char literal}
intro.c(l16:s131:k236:d0:s0)		iTemp172 [k176 lr131:132 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat] = iTemp104 [k108 lr86:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0x1e {const-unsigned-char literal}
intro.c(l16:s132:k237:d0:s0)		*(iTemp172 [k176 lr131:132 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat]) := 0x1f {const-unsigned-char literal}
intro.c(l16:s133:k240:d0:s0)		iTemp175 [k179 lr133:134 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat] = iTemp104 [k108 lr86:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0x1f {const-unsigned-char literal}
intro.c(l16:s134:k241:d0:s0)		*(iTemp175 [k179 lr133:134 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat]) := 0x1f {const-unsigned-char literal}
intro.c(l25:s135:k242:d0:s0)		iTemp176 [k181 lr135:136 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] = &[_intro_letra_r_1_15 [k180 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}]
intro.c(l25:s136:k244:d0:s0)		*(iTemp176 [k181 lr135:136 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat]) := 0x1f {const-unsigned-char literal}
intro.c(l25:s137:k245:d0:s0)		iTemp178 [k183 lr137:150 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] = &[_intro_letra_r_1_15 [k180 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}]
intro.c(l25:s138:k246:d0:s0)		iTemp179 [k184 lr138:139 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] = iTemp178 [k183 lr137:150 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0x1 {unsigned-_Bool literal}
intro.c(l25:s139:k247:d0:s0)		*(iTemp179 [k184 lr138:139 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat]) := 0x18 {const-unsigned-char literal}
intro.c(l25:s140:k249:d0:s0)		iTemp181 [k186 lr140:141 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] = iTemp178 [k183 lr137:150 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0x2 {unsigned-char literal}
intro.c(l25:s141:k250:d0:s0)		*(iTemp181 [k186 lr140:141 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat]) := 0x18 {const-unsigned-char literal}
intro.c(l25:s142:k252:d0:s0)		iTemp183 [k188 lr142:143 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] = iTemp178 [k183 lr137:150 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0x3 {unsigned-char literal}
intro.c(l25:s143:k253:d0:s0)		*(iTemp183 [k188 lr142:143 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat]) := 0x18 {const-unsigned-char literal}
intro.c(l25:s144:k255:d0:s0)		iTemp185 [k190 lr144:145 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] = iTemp178 [k183 lr137:150 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0x4 {unsigned-char literal}
intro.c(l25:s145:k256:d0:s0)		*(iTemp185 [k190 lr144:145 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat]) := 0x18 {const-unsigned-char literal}
intro.c(l25:s146:k258:d0:s0)		iTemp187 [k192 lr146:147 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] = iTemp178 [k183 lr137:150 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0x5 {unsigned-char literal}
intro.c(l25:s147:k259:d0:s0)		*(iTemp187 [k192 lr146:147 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat]) := 0x18 {const-unsigned-char literal}
intro.c(l25:s148:k261:d0:s0)		iTemp189 [k194 lr148:149 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] = iTemp178 [k183 lr137:150 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0x6 {unsigned-char literal}
intro.c(l25:s149:k262:d0:s0)		*(iTemp189 [k194 lr148:149 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat]) := 0x18 {const-unsigned-char literal}
intro.c(l25:s150:k264:d0:s0)		iTemp191 [k196 lr150:151 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] = iTemp178 [k183 lr137:150 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0x7 {unsigned-char literal}
intro.c(l25:s151:k265:d0:s0)		*(iTemp191 [k196 lr150:151 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat]) := 0x18 {const-unsigned-char literal}
intro.c(l25:s152:k266:d0:s0)		iTemp192 [k197 lr152:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] = &[_intro_letra_r_1_15 [k180 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}]
intro.c(l25:s153:k267:d0:s0)		iTemp193 [k198 lr153:154 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] = iTemp192 [k197 lr152:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0x8 {unsigned-char literal}
intro.c(l25:s154:k269:d0:s0)		*(iTemp193 [k198 lr153:154 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat]) := 0x1c {const-unsigned-char literal}
intro.c(l25:s155:k272:d0:s0)		iTemp197 [k202 lr155:156 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat] = iTemp192 [k197 lr152:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0x9 {const-unsigned-char literal}
intro.c(l25:s156:k273:d0:s0)		*(iTemp197 [k202 lr155:156 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat]) := 0x2 {const-unsigned-char literal}
intro.c(l25:s157:k276:d0:s0)		iTemp200 [k205 lr157:158 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat] = iTemp192 [k197 lr152:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0xa {const-unsigned-char literal}
intro.c(l25:s158:k277:d0:s0)		*(iTemp200 [k205 lr157:158 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat]) := 0x1 {const-unsigned-char literal}
intro.c(l25:s159:k280:d0:s0)		iTemp203 [k208 lr159:160 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat] = iTemp192 [k197 lr152:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0xb {const-unsigned-char literal}
intro.c(l25:s160:k281:d0:s0)		*(iTemp203 [k208 lr159:160 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat]) := 0x1 {const-unsigned-char literal}
intro.c(l25:s161:k284:d0:s0)		iTemp206 [k211 lr161:162 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat] = iTemp192 [k197 lr152:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0xc {const-unsigned-char literal}
intro.c(l25:s162:k285:d0:s0)		*(iTemp206 [k211 lr161:162 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat]) := 0x1 {const-unsigned-char literal}
intro.c(l25:s163:k288:d0:s0)		iTemp209 [k214 lr163:164 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat] = iTemp192 [k197 lr152:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0xd {const-unsigned-char literal}
intro.c(l25:s164:k289:d0:s0)		*(iTemp209 [k214 lr163:164 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat]) := 0x2 {const-unsigned-char literal}
intro.c(l25:s165:k292:d0:s0)		iTemp212 [k217 lr165:166 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat] = iTemp192 [k197 lr152:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0xe {const-unsigned-char literal}
intro.c(l25:s166:k293:d0:s0)		*(iTemp212 [k217 lr165:166 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat]) := 0x4 {const-unsigned-char literal}
intro.c(l25:s167:k296:d0:s0)		iTemp215 [k220 lr167:168 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat] = iTemp192 [k197 lr152:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0xf {const-unsigned-char literal}
intro.c(l25:s168:k297:d0:s0)		*(iTemp215 [k220 lr167:168 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat]) := 0x18 {const-unsigned-char literal}
intro.c(l25:s169:k299:d0:s0)		iTemp217 [k222 lr169:170 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] = iTemp192 [k197 lr152:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0x10 {unsigned-char literal}
intro.c(l25:s170:k301:d0:s0)		*(iTemp217 [k222 lr169:170 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat]) := 0x18 {const-unsigned-char literal}
intro.c(l25:s171:k304:d0:s0)		iTemp221 [k226 lr171:172 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat] = iTemp192 [k197 lr152:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0x11 {const-unsigned-char literal}
intro.c(l25:s172:k305:d0:s0)		*(iTemp221 [k226 lr171:172 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat]) := 0x18 {const-unsigned-char literal}
intro.c(l25:s173:k308:d0:s0)		iTemp224 [k229 lr173:174 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat] = iTemp192 [k197 lr152:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0x12 {const-unsigned-char literal}
intro.c(l25:s174:k309:d0:s0)		*(iTemp224 [k229 lr173:174 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat]) := 0x18 {const-unsigned-char literal}
intro.c(l25:s175:k312:d0:s0)		iTemp227 [k232 lr175:176 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat] = iTemp192 [k197 lr152:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0x13 {const-unsigned-char literal}
intro.c(l25:s176:k313:d0:s0)		*(iTemp227 [k232 lr175:176 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat]) := 0x18 {const-unsigned-char literal}
intro.c(l25:s177:k316:d0:s0)		iTemp230 [k235 lr177:178 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat] = iTemp192 [k197 lr152:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0x14 {const-unsigned-char literal}
intro.c(l25:s178:k317:d0:s0)		*(iTemp230 [k235 lr177:178 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat]) := 0x18 {const-unsigned-char literal}
intro.c(l25:s179:k320:d0:s0)		iTemp233 [k238 lr179:180 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat] = iTemp192 [k197 lr152:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0x15 {const-unsigned-char literal}
intro.c(l25:s180:k321:d0:s0)		*(iTemp233 [k238 lr179:180 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat]) := 0x18 {const-unsigned-char literal}
intro.c(l25:s181:k324:d0:s0)		iTemp236 [k241 lr181:182 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat] = iTemp192 [k197 lr152:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0x16 {const-unsigned-char literal}
intro.c(l25:s182:k325:d0:s0)		*(iTemp236 [k241 lr181:182 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat]) := 0x18 {const-unsigned-char literal}
intro.c(l25:s183:k328:d0:s0)		iTemp239 [k244 lr183:184 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat] = iTemp192 [k197 lr152:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0x17 {const-unsigned-char literal}
intro.c(l25:s184:k329:d0:s0)		*(iTemp239 [k244 lr183:184 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat]) := 0x18 {const-unsigned-char literal}
intro.c(l25:s185:k331:d0:s0)		iTemp241 [k246 lr185:186 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] = iTemp192 [k197 lr152:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0x18 {unsigned-char literal}
intro.c(l25:s186:k333:d0:s0)		*(iTemp241 [k246 lr185:186 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat]) := 0x10 {const-unsigned-char literal}
intro.c(l25:s187:k336:d0:s0)		iTemp245 [k250 lr187:188 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat] = iTemp192 [k197 lr152:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0x19 {const-unsigned-char literal}
intro.c(l25:s188:k337:d0:s0)		*(iTemp245 [k250 lr187:188 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat]) := 0x18 {const-unsigned-char literal}
intro.c(l25:s189:k340:d0:s0)		iTemp248 [k253 lr189:190 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat] = iTemp192 [k197 lr152:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0x1a {const-unsigned-char literal}
intro.c(l25:s190:k341:d0:s0)		*(iTemp248 [k253 lr189:190 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat]) := 0xc {const-unsigned-char literal}
intro.c(l25:s191:k344:d0:s0)		iTemp251 [k256 lr191:192 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat] = iTemp192 [k197 lr152:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0x1b {const-unsigned-char literal}
intro.c(l25:s192:k345:d0:s0)		*(iTemp251 [k256 lr191:192 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat]) := 0x4 {const-unsigned-char literal}
intro.c(l25:s193:k348:d0:s0)		iTemp254 [k259 lr193:194 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat] = iTemp192 [k197 lr152:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0x1c {const-unsigned-char literal}
intro.c(l25:s194:k349:d0:s0)		*(iTemp254 [k259 lr193:194 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat]) := 0x6 {const-unsigned-char literal}
intro.c(l25:s195:k352:d0:s0)		iTemp257 [k262 lr195:196 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat] = iTemp192 [k197 lr152:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0x1d {const-unsigned-char literal}
intro.c(l25:s196:k353:d0:s0)		*(iTemp257 [k262 lr195:196 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat]) := 0x2 {const-unsigned-char literal}
intro.c(l25:s197:k356:d0:s0)		iTemp260 [k265 lr197:198 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat] = iTemp192 [k197 lr152:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0x1e {const-unsigned-char literal}
intro.c(l25:s198:k357:d0:s0)		*(iTemp260 [k265 lr197:198 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat]) := 0x2 {const-unsigned-char literal}
intro.c(l25:s199:k360:d0:s0)		iTemp263 [k268 lr199:200 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat] = iTemp192 [k197 lr152:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0x1f {const-unsigned-char literal}
intro.c(l25:s200:k361:d0:s0)		*(iTemp263 [k268 lr199:200 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat]) := 0x1 {const-unsigned-char literal}
intro.c(l34:s201:k362:d0:s0)		iTemp264 [k270 lr201:202 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] = &[_intro_letra_3_1_15 [k269 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}]
intro.c(l34:s202:k364:d0:s0)		*(iTemp264 [k270 lr201:202 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat]) := 0x1f {const-unsigned-char literal}
intro.c(l34:s203:k365:d0:s0)		iTemp266 [k272 lr203:216 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] = &[_intro_letra_3_1_15 [k269 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}]
intro.c(l34:s204:k366:d0:s0)		iTemp267 [k273 lr204:205 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] = iTemp266 [k272 lr203:216 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0x1 {unsigned-_Bool literal}
intro.c(l34:s205:k367:d0:s0)		*(iTemp267 [k273 lr204:205 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat]) := 0x1f {const-unsigned-char literal}
intro.c(l34:s206:k369:d0:s0)		iTemp269 [k275 lr206:207 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] = iTemp266 [k272 lr203:216 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0x2 {unsigned-char literal}
intro.c(l34:s207:k370:d0:s0)		*(iTemp269 [k275 lr206:207 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat]) := 0x0 {const-unsigned-char literal}
intro.c(l34:s208:k372:d0:s0)		iTemp271 [k277 lr208:209 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] = iTemp266 [k272 lr203:216 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0x3 {unsigned-char literal}
intro.c(l34:s209:k373:d0:s0)		*(iTemp271 [k277 lr208:209 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat]) := 0x0 {const-unsigned-char literal}
intro.c(l34:s210:k375:d0:s0)		iTemp273 [k279 lr210:211 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] = iTemp266 [k272 lr203:216 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0x4 {unsigned-char literal}
intro.c(l34:s211:k376:d0:s0)		*(iTemp273 [k279 lr210:211 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat]) := 0x0 {const-unsigned-char literal}
intro.c(l34:s212:k378:d0:s0)		iTemp275 [k281 lr212:213 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] = iTemp266 [k272 lr203:216 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0x5 {unsigned-char literal}
intro.c(l34:s213:k379:d0:s0)		*(iTemp275 [k281 lr212:213 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat]) := 0x0 {const-unsigned-char literal}
intro.c(l34:s214:k381:d0:s0)		iTemp277 [k283 lr214:215 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] = iTemp266 [k272 lr203:216 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0x6 {unsigned-char literal}
intro.c(l34:s215:k382:d0:s0)		*(iTemp277 [k283 lr214:215 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat]) := 0x0 {const-unsigned-char literal}
intro.c(l34:s216:k384:d0:s0)		iTemp279 [k285 lr216:217 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] = iTemp266 [k272 lr203:216 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0x7 {unsigned-char literal}
intro.c(l34:s217:k385:d0:s0)		*(iTemp279 [k285 lr216:217 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat]) := 0x0 {const-unsigned-char literal}
intro.c(l34:s218:k386:d0:s0)		iTemp280 [k286 lr218:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] = &[_intro_letra_3_1_15 [k269 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}]
intro.c(l34:s219:k387:d0:s0)		iTemp281 [k287 lr219:220 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] = iTemp280 [k286 lr218:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0x8 {unsigned-char literal}
intro.c(l34:s220:k389:d0:s0)		*(iTemp281 [k287 lr219:220 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat]) := 0x1f {const-unsigned-char literal}
intro.c(l34:s221:k392:d0:s0)		iTemp285 [k291 lr221:222 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat] = iTemp280 [k286 lr218:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0x9 {const-unsigned-char literal}
intro.c(l34:s222:k393:d0:s0)		*(iTemp285 [k291 lr221:222 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat]) := 0x1f {const-unsigned-char literal}
intro.c(l34:s223:k396:d0:s0)		iTemp288 [k294 lr223:224 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat] = iTemp280 [k286 lr218:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0xa {const-unsigned-char literal}
intro.c(l34:s224:k397:d0:s0)		*(iTemp288 [k294 lr223:224 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat]) := 0x3 {const-unsigned-char literal}
intro.c(l34:s225:k400:d0:s0)		iTemp291 [k297 lr225:226 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat] = iTemp280 [k286 lr218:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0xb {const-unsigned-char literal}
intro.c(l34:s226:k401:d0:s0)		*(iTemp291 [k297 lr225:226 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat]) := 0x6 {const-unsigned-char literal}
intro.c(l34:s227:k404:d0:s0)		iTemp294 [k300 lr227:228 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat] = iTemp280 [k286 lr218:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0xc {const-unsigned-char literal}
intro.c(l34:s228:k405:d0:s0)		*(iTemp294 [k300 lr227:228 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat]) := 0x4 {const-unsigned-char literal}
intro.c(l34:s229:k408:d0:s0)		iTemp297 [k303 lr229:230 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat] = iTemp280 [k286 lr218:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0xd {const-unsigned-char literal}
intro.c(l34:s230:k409:d0:s0)		*(iTemp297 [k303 lr229:230 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat]) := 0xc {const-unsigned-char literal}
intro.c(l34:s231:k412:d0:s0)		iTemp300 [k306 lr231:232 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat] = iTemp280 [k286 lr218:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0xe {const-unsigned-char literal}
intro.c(l34:s232:k413:d0:s0)		*(iTemp300 [k306 lr231:232 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat]) := 0x8 {const-unsigned-char literal}
intro.c(l34:s233:k416:d0:s0)		iTemp303 [k309 lr233:234 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat] = iTemp280 [k286 lr218:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0xf {const-unsigned-char literal}
intro.c(l34:s234:k417:d0:s0)		*(iTemp303 [k309 lr233:234 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat]) := 0x10 {const-unsigned-char literal}
intro.c(l34:s235:k419:d0:s0)		iTemp305 [k311 lr235:236 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] = iTemp280 [k286 lr218:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0x10 {unsigned-char literal}
intro.c(l34:s236:k421:d0:s0)		*(iTemp305 [k311 lr235:236 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat]) := 0x0 {const-unsigned-char literal}
intro.c(l34:s237:k424:d0:s0)		iTemp309 [k315 lr237:238 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat] = iTemp280 [k286 lr218:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0x11 {const-unsigned-char literal}
intro.c(l34:s238:k425:d0:s0)		*(iTemp309 [k315 lr237:238 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat]) := 0x0 {const-unsigned-char literal}
intro.c(l34:s239:k428:d0:s0)		iTemp312 [k318 lr239:240 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat] = iTemp280 [k286 lr218:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0x12 {const-unsigned-char literal}
intro.c(l34:s240:k429:d0:s0)		*(iTemp312 [k318 lr239:240 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat]) := 0x0 {const-unsigned-char literal}
intro.c(l34:s241:k432:d0:s0)		iTemp315 [k321 lr241:242 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat] = iTemp280 [k286 lr218:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0x13 {const-unsigned-char literal}
intro.c(l34:s242:k433:d0:s0)		*(iTemp315 [k321 lr241:242 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat]) := 0x0 {const-unsigned-char literal}
intro.c(l34:s243:k436:d0:s0)		iTemp318 [k324 lr243:244 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat] = iTemp280 [k286 lr218:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0x14 {const-unsigned-char literal}
intro.c(l34:s244:k437:d0:s0)		*(iTemp318 [k324 lr243:244 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat]) := 0x0 {const-unsigned-char literal}
intro.c(l34:s245:k440:d0:s0)		iTemp321 [k327 lr245:246 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat] = iTemp280 [k286 lr218:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0x15 {const-unsigned-char literal}
intro.c(l34:s246:k441:d0:s0)		*(iTemp321 [k327 lr245:246 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat]) := 0x8 {const-unsigned-char literal}
intro.c(l34:s247:k444:d0:s0)		iTemp324 [k330 lr247:248 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat] = iTemp280 [k286 lr218:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0x16 {const-unsigned-char literal}
intro.c(l34:s248:k445:d0:s0)		*(iTemp324 [k330 lr247:248 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat]) := 0x8 {const-unsigned-char literal}
intro.c(l34:s249:k448:d0:s0)		iTemp327 [k333 lr249:250 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat] = iTemp280 [k286 lr218:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0x17 {const-unsigned-char literal}
intro.c(l34:s250:k449:d0:s0)		*(iTemp327 [k333 lr249:250 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat]) := 0x7 {const-unsigned-char literal}
intro.c(l34:s251:k451:d0:s0)		iTemp329 [k335 lr251:252 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] = iTemp280 [k286 lr218:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0x18 {unsigned-char literal}
intro.c(l34:s252:k453:d0:s0)		*(iTemp329 [k335 lr251:252 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat]) := 0x18 {const-unsigned-char literal}
intro.c(l34:s253:k456:d0:s0)		iTemp333 [k339 lr253:254 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat] = iTemp280 [k286 lr218:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0x19 {const-unsigned-char literal}
intro.c(l34:s254:k457:d0:s0)		*(iTemp333 [k339 lr253:254 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat]) := 0xc {const-unsigned-char literal}
intro.c(l34:s255:k460:d0:s0)		iTemp336 [k342 lr255:256 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat] = iTemp280 [k286 lr218:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0x1a {const-unsigned-char literal}
intro.c(l34:s256:k461:d0:s0)		*(iTemp336 [k342 lr255:256 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat]) := 0x3 {const-unsigned-char literal}
intro.c(l34:s257:k464:d0:s0)		iTemp339 [k345 lr257:258 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat] = iTemp280 [k286 lr218:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0x1b {const-unsigned-char literal}
intro.c(l34:s258:k465:d0:s0)		*(iTemp339 [k345 lr257:258 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat]) := 0x3 {const-unsigned-char literal}
intro.c(l34:s259:k468:d0:s0)		iTemp342 [k348 lr259:260 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat] = iTemp280 [k286 lr218:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0x1c {const-unsigned-char literal}
intro.c(l34:s260:k469:d0:s0)		*(iTemp342 [k348 lr259:260 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat]) := 0x1 {const-unsigned-char literal}
intro.c(l34:s261:k472:d0:s0)		iTemp345 [k351 lr261:262 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat] = iTemp280 [k286 lr218:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0x1d {const-unsigned-char literal}
intro.c(l34:s262:k473:d0:s0)		*(iTemp345 [k351 lr261:262 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat]) := 0x2 {const-unsigned-char literal}
intro.c(l34:s263:k476:d0:s0)		iTemp348 [k354 lr263:264 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat] = iTemp280 [k286 lr218:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0x1e {const-unsigned-char literal}
intro.c(l34:s264:k477:d0:s0)		*(iTemp348 [k354 lr263:264 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat]) := 0xc {const-unsigned-char literal}
intro.c(l34:s265:k480:d0:s0)		iTemp351 [k357 lr265:266 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat] = iTemp280 [k286 lr218:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0x1f {const-unsigned-char literal}
intro.c(l34:s266:k481:d0:s0)		*(iTemp351 [k357 lr265:266 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat]) := 0x18 {const-unsigned-char literal}
intro.c(l43:s267:k482:d0:s0)		iTemp352 [k359 lr267:268 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] = &[_intro_letra_0_1_15 [k358 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}]
intro.c(l43:s268:k484:d0:s0)		*(iTemp352 [k359 lr267:268 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat]) := 0x0 {const-unsigned-char literal}
intro.c(l43:s269:k485:d0:s0)		iTemp354 [k361 lr269:282 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] = &[_intro_letra_0_1_15 [k358 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}]
intro.c(l43:s270:k486:d0:s0)		iTemp355 [k362 lr270:271 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] = iTemp354 [k361 lr269:282 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0x1 {unsigned-_Bool literal}
intro.c(l43:s271:k487:d0:s0)		*(iTemp355 [k362 lr270:271 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat]) := 0x1 {const-unsigned-char literal}
intro.c(l43:s272:k489:d0:s0)		iTemp357 [k364 lr272:273 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] = iTemp354 [k361 lr269:282 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0x2 {unsigned-char literal}
intro.c(l43:s273:k490:d0:s0)		*(iTemp357 [k364 lr272:273 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat]) := 0x3 {const-unsigned-char literal}
intro.c(l43:s274:k492:d0:s0)		iTemp359 [k366 lr274:275 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] = iTemp354 [k361 lr269:282 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0x3 {unsigned-char literal}
intro.c(l43:s275:k493:d0:s0)		*(iTemp359 [k366 lr274:275 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat]) := 0x2 {const-unsigned-char literal}
intro.c(l43:s276:k495:d0:s0)		iTemp361 [k368 lr276:277 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] = iTemp354 [k361 lr269:282 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0x4 {unsigned-char literal}
intro.c(l43:s277:k496:d0:s0)		*(iTemp361 [k368 lr276:277 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat]) := 0x6 {const-unsigned-char literal}
intro.c(l43:s278:k498:d0:s0)		iTemp363 [k370 lr278:279 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] = iTemp354 [k361 lr269:282 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0x5 {unsigned-char literal}
intro.c(l43:s279:k499:d0:s0)		*(iTemp363 [k370 lr278:279 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat]) := 0x4 {const-unsigned-char literal}
intro.c(l43:s280:k501:d0:s0)		iTemp365 [k372 lr280:281 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] = iTemp354 [k361 lr269:282 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0x6 {unsigned-char literal}
intro.c(l43:s281:k502:d0:s0)		*(iTemp365 [k372 lr280:281 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat]) := 0x4 {const-unsigned-char literal}
intro.c(l43:s282:k504:d0:s0)		iTemp367 [k374 lr282:283 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] = iTemp354 [k361 lr269:282 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0x7 {unsigned-char literal}
intro.c(l43:s283:k505:d0:s0)		*(iTemp367 [k374 lr282:283 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat]) := 0x4 {const-unsigned-char literal}
intro.c(l43:s284:k506:d0:s0)		iTemp368 [k375 lr284:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] = &[_intro_letra_0_1_15 [k358 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}]
intro.c(l43:s285:k507:d0:s0)		iTemp369 [k376 lr285:286 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] = iTemp368 [k375 lr284:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0x8 {unsigned-char literal}
intro.c(l43:s286:k509:d0:s0)		*(iTemp369 [k376 lr285:286 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat]) := 0x0 {const-unsigned-char literal}
intro.c(l43:s287:k512:d0:s0)		iTemp373 [k380 lr287:288 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat] = iTemp368 [k375 lr284:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0x9 {const-unsigned-char literal}
intro.c(l43:s288:k513:d0:s0)		*(iTemp373 [k380 lr287:288 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat]) := 0x18 {const-unsigned-char literal}
intro.c(l43:s289:k516:d0:s0)		iTemp376 [k383 lr289:290 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat] = iTemp368 [k375 lr284:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0xa {const-unsigned-char literal}
intro.c(l43:s290:k517:d0:s0)		*(iTemp376 [k383 lr289:290 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat]) := 0xe {const-unsigned-char literal}
intro.c(l43:s291:k520:d0:s0)		iTemp379 [k386 lr291:292 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat] = iTemp368 [k375 lr284:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0xb {const-unsigned-char literal}
intro.c(l43:s292:k521:d0:s0)		*(iTemp379 [k386 lr291:292 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat]) := 0x6 {const-unsigned-char literal}
intro.c(l43:s293:k524:d0:s0)		iTemp382 [k389 lr293:294 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat] = iTemp368 [k375 lr284:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0xc {const-unsigned-char literal}
intro.c(l43:s294:k525:d0:s0)		*(iTemp382 [k389 lr293:294 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat]) := 0x6 {const-unsigned-char literal}
intro.c(l43:s295:k528:d0:s0)		iTemp385 [k392 lr295:296 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat] = iTemp368 [k375 lr284:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0xd {const-unsigned-char literal}
intro.c(l43:s296:k529:d0:s0)		*(iTemp385 [k392 lr295:296 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat]) := 0x6 {const-unsigned-char literal}
intro.c(l43:s297:k532:d0:s0)		iTemp388 [k395 lr297:298 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat] = iTemp368 [k375 lr284:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0xe {const-unsigned-char literal}
intro.c(l43:s298:k533:d0:s0)		*(iTemp388 [k395 lr297:298 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat]) := 0x6 {const-unsigned-char literal}
intro.c(l43:s299:k536:d0:s0)		iTemp391 [k398 lr299:300 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat] = iTemp368 [k375 lr284:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0xf {const-unsigned-char literal}
intro.c(l43:s300:k537:d0:s0)		*(iTemp391 [k398 lr299:300 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat]) := 0x6 {const-unsigned-char literal}
intro.c(l43:s301:k539:d0:s0)		iTemp393 [k400 lr301:302 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] = iTemp368 [k375 lr284:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0x10 {unsigned-char literal}
intro.c(l43:s302:k541:d0:s0)		*(iTemp393 [k400 lr301:302 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat]) := 0x4 {const-unsigned-char literal}
intro.c(l43:s303:k544:d0:s0)		iTemp397 [k404 lr303:304 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat] = iTemp368 [k375 lr284:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0x11 {const-unsigned-char literal}
intro.c(l43:s304:k545:d0:s0)		*(iTemp397 [k404 lr303:304 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat]) := 0x4 {const-unsigned-char literal}
intro.c(l43:s305:k548:d0:s0)		iTemp400 [k407 lr305:306 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat] = iTemp368 [k375 lr284:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0x12 {const-unsigned-char literal}
intro.c(l43:s306:k549:d0:s0)		*(iTemp400 [k407 lr305:306 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat]) := 0x4 {const-unsigned-char literal}
intro.c(l43:s307:k552:d0:s0)		iTemp403 [k410 lr307:308 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat] = iTemp368 [k375 lr284:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0x13 {const-unsigned-char literal}
intro.c(l43:s308:k553:d0:s0)		*(iTemp403 [k410 lr307:308 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat]) := 0x4 {const-unsigned-char literal}
intro.c(l43:s309:k556:d0:s0)		iTemp406 [k413 lr309:310 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat] = iTemp368 [k375 lr284:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0x14 {const-unsigned-char literal}
intro.c(l43:s310:k557:d0:s0)		*(iTemp406 [k413 lr309:310 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat]) := 0x4 {const-unsigned-char literal}
intro.c(l43:s311:k560:d0:s0)		iTemp409 [k416 lr311:312 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat] = iTemp368 [k375 lr284:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0x15 {const-unsigned-char literal}
intro.c(l43:s312:k561:d0:s0)		*(iTemp409 [k416 lr311:312 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat]) := 0x6 {const-unsigned-char literal}
intro.c(l43:s313:k564:d0:s0)		iTemp412 [k419 lr313:314 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat] = iTemp368 [k375 lr284:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0x16 {const-unsigned-char literal}
intro.c(l43:s314:k565:d0:s0)		*(iTemp412 [k419 lr313:314 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat]) := 0x3 {const-unsigned-char literal}
intro.c(l43:s315:k568:d0:s0)		iTemp415 [k422 lr315:316 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat] = iTemp368 [k375 lr284:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0x17 {const-unsigned-char literal}
intro.c(l43:s316:k569:d0:s0)		*(iTemp415 [k422 lr315:316 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat]) := 0x0 {const-unsigned-char literal}
intro.c(l43:s317:k571:d0:s0)		iTemp417 [k424 lr317:318 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] = iTemp368 [k375 lr284:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0x18 {unsigned-char literal}
intro.c(l43:s318:k573:d0:s0)		*(iTemp417 [k424 lr317:318 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat]) := 0x6 {const-unsigned-char literal}
intro.c(l43:s319:k576:d0:s0)		iTemp421 [k428 lr319:320 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat] = iTemp368 [k375 lr284:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0x19 {const-unsigned-char literal}
intro.c(l43:s320:k577:d0:s0)		*(iTemp421 [k428 lr319:320 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat]) := 0x6 {const-unsigned-char literal}
intro.c(l43:s321:k580:d0:s0)		iTemp424 [k431 lr321:322 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat] = iTemp368 [k375 lr284:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0x1a {const-unsigned-char literal}
intro.c(l43:s322:k581:d0:s0)		*(iTemp424 [k431 lr321:322 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat]) := 0x6 {const-unsigned-char literal}
intro.c(l43:s323:k584:d0:s0)		iTemp427 [k434 lr323:324 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat] = iTemp368 [k375 lr284:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0x1b {const-unsigned-char literal}
intro.c(l43:s324:k585:d0:s0)		*(iTemp427 [k434 lr323:324 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat]) := 0x6 {const-unsigned-char literal}
intro.c(l43:s325:k588:d0:s0)		iTemp430 [k437 lr325:326 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat] = iTemp368 [k375 lr284:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0x1c {const-unsigned-char literal}
intro.c(l43:s326:k589:d0:s0)		*(iTemp430 [k437 lr325:326 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat]) := 0xc {const-unsigned-char literal}
intro.c(l43:s327:k592:d0:s0)		iTemp433 [k440 lr327:328 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat] = iTemp368 [k375 lr284:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0x1d {const-unsigned-char literal}
intro.c(l43:s328:k593:d0:s0)		*(iTemp433 [k440 lr327:328 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat]) := 0xc {const-unsigned-char literal}
intro.c(l43:s329:k596:d0:s0)		iTemp436 [k443 lr329:330 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat] = iTemp368 [k375 lr284:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0x1e {const-unsigned-char literal}
intro.c(l43:s330:k597:d0:s0)		*(iTemp436 [k443 lr329:330 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat]) := 0x1c {const-unsigned-char literal}
intro.c(l43:s331:k600:d0:s0)		iTemp439 [k446 lr331:332 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat] = iTemp368 [k375 lr284:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0x1f {const-unsigned-char literal}
intro.c(l43:s332:k601:d0:s0)		*(iTemp439 [k446 lr331:332 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat]) := 0x0 {const-unsigned-char literal}
intro.c(l52:s333:k602:d0:s0)		iTemp440 [k448 lr333:334 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] = &[_intro_letra_z_1_15 [k447 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}]
intro.c(l52:s334:k604:d0:s0)		*(iTemp440 [k448 lr333:334 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat]) := 0x0 {const-unsigned-char literal}
intro.c(l52:s335:k605:d0:s0)		iTemp442 [k450 lr335:348 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] = &[_intro_letra_z_1_15 [k447 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}]
intro.c(l52:s336:k606:d0:s0)		iTemp443 [k451 lr336:337 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] = iTemp442 [k450 lr335:348 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0x1 {unsigned-_Bool literal}
intro.c(l52:s337:k607:d0:s0)		*(iTemp443 [k451 lr336:337 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat]) := 0xf {const-unsigned-char literal}
intro.c(l52:s338:k609:d0:s0)		iTemp445 [k453 lr338:339 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] = iTemp442 [k450 lr335:348 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0x2 {unsigned-char literal}
intro.c(l52:s339:k610:d0:s0)		*(iTemp445 [k453 lr338:339 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat]) := 0xf {const-unsigned-char literal}
intro.c(l52:s340:k612:d0:s0)		iTemp447 [k455 lr340:341 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] = iTemp442 [k450 lr335:348 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0x3 {unsigned-char literal}
intro.c(l52:s341:k613:d0:s0)		*(iTemp447 [k455 lr340:341 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat]) := 0x0 {const-unsigned-char literal}
intro.c(l52:s342:k615:d0:s0)		iTemp449 [k457 lr342:343 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] = iTemp442 [k450 lr335:348 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0x4 {unsigned-char literal}
intro.c(l52:s343:k616:d0:s0)		*(iTemp449 [k457 lr342:343 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat]) := 0x0 {const-unsigned-char literal}
intro.c(l52:s344:k618:d0:s0)		iTemp451 [k459 lr344:345 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] = iTemp442 [k450 lr335:348 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0x5 {unsigned-char literal}
intro.c(l52:s345:k619:d0:s0)		*(iTemp451 [k459 lr344:345 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat]) := 0x0 {const-unsigned-char literal}
intro.c(l52:s346:k621:d0:s0)		iTemp453 [k461 lr346:347 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] = iTemp442 [k450 lr335:348 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0x6 {unsigned-char literal}
intro.c(l52:s347:k622:d0:s0)		*(iTemp453 [k461 lr346:347 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat]) := 0x0 {const-unsigned-char literal}
intro.c(l52:s348:k624:d0:s0)		iTemp455 [k463 lr348:349 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat] = iTemp442 [k450 lr335:348 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0x7 {unsigned-char literal}
intro.c(l52:s349:k625:d0:s0)		*(iTemp455 [k463 lr348:349 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char near* fixed}[remat]) := 0x0 {const-unsigned-char literal}
intro.c(l52:s350:k626:d0:s0)		iTemp456 [k464 lr350:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] = &[_intro_letra_z_1_15 [k447 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}]
intro.c(l52:s351:k627:d0:s0)		iTemp457 [k465 lr351:352 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] = iTemp456 [k464 lr350:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0x8 {unsigned-char literal}
intro.c(l52:s352:k629:d0:s0)		*(iTemp457 [k465 lr351:352 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat]) := 0x0 {const-unsigned-char literal}
intro.c(l52:s353:k632:d0:s0)		iTemp461 [k469 lr353:354 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat] = iTemp456 [k464 lr350:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0x9 {const-unsigned-char literal}
intro.c(l52:s354:k633:d0:s0)		*(iTemp461 [k469 lr353:354 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat]) := 0xf {const-unsigned-char literal}
intro.c(l52:s355:k636:d0:s0)		iTemp464 [k472 lr355:356 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat] = iTemp456 [k464 lr350:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0xa {const-unsigned-char literal}
intro.c(l52:s356:k637:d0:s0)		*(iTemp464 [k472 lr355:356 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat]) := 0xf {const-unsigned-char literal}
intro.c(l52:s357:k640:d0:s0)		iTemp467 [k475 lr357:358 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat] = iTemp456 [k464 lr350:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0xb {const-unsigned-char literal}
intro.c(l52:s358:k641:d0:s0)		*(iTemp467 [k475 lr357:358 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat]) := 0x3 {const-unsigned-char literal}
intro.c(l52:s359:k644:d0:s0)		iTemp470 [k478 lr359:360 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat] = iTemp456 [k464 lr350:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0xc {const-unsigned-char literal}
intro.c(l52:s360:k645:d0:s0)		*(iTemp470 [k478 lr359:360 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat]) := 0x6 {const-unsigned-char literal}
intro.c(l52:s361:k648:d0:s0)		iTemp473 [k481 lr361:362 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat] = iTemp456 [k464 lr350:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0xd {const-unsigned-char literal}
intro.c(l52:s362:k649:d0:s0)		*(iTemp473 [k481 lr361:362 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat]) := 0xc {const-unsigned-char literal}
intro.c(l52:s363:k652:d0:s0)		iTemp476 [k484 lr363:364 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat] = iTemp456 [k464 lr350:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0xe {const-unsigned-char literal}
intro.c(l52:s364:k653:d0:s0)		*(iTemp476 [k484 lr363:364 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat]) := 0x18 {const-unsigned-char literal}
intro.c(l52:s365:k656:d0:s0)		iTemp479 [k487 lr365:366 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat] = iTemp456 [k464 lr350:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0xf {const-unsigned-char literal}
intro.c(l52:s366:k657:d0:s0)		*(iTemp479 [k487 lr365:366 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat]) := 0x10 {const-unsigned-char literal}
intro.c(l52:s367:k659:d0:s0)		iTemp481 [k489 lr367:368 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] = iTemp456 [k464 lr350:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0x10 {unsigned-char literal}
intro.c(l52:s368:k661:d0:s0)		*(iTemp481 [k489 lr367:368 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat]) := 0x3 {const-unsigned-char literal}
intro.c(l52:s369:k664:d0:s0)		iTemp485 [k493 lr369:370 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat] = iTemp456 [k464 lr350:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0x11 {const-unsigned-char literal}
intro.c(l52:s370:k665:d0:s0)		*(iTemp485 [k493 lr369:370 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat]) := 0x2 {const-unsigned-char literal}
intro.c(l52:s371:k668:d0:s0)		iTemp488 [k496 lr371:372 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat] = iTemp456 [k464 lr350:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0x12 {const-unsigned-char literal}
intro.c(l52:s372:k669:d0:s0)		*(iTemp488 [k496 lr371:372 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat]) := 0x6 {const-unsigned-char literal}
intro.c(l52:s373:k672:d0:s0)		iTemp491 [k499 lr373:374 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat] = iTemp456 [k464 lr350:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0x13 {const-unsigned-char literal}
intro.c(l52:s374:k673:d0:s0)		*(iTemp491 [k499 lr373:374 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat]) := 0xc {const-unsigned-char literal}
intro.c(l52:s375:k676:d0:s0)		iTemp494 [k502 lr375:376 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat] = iTemp456 [k464 lr350:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0x14 {const-unsigned-char literal}
intro.c(l52:s376:k677:d0:s0)		*(iTemp494 [k502 lr375:376 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat]) := 0xc {const-unsigned-char literal}
intro.c(l52:s377:k680:d0:s0)		iTemp497 [k505 lr377:378 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat] = iTemp456 [k464 lr350:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0x15 {const-unsigned-char literal}
intro.c(l52:s378:k681:d0:s0)		*(iTemp497 [k505 lr377:378 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat]) := 0x18 {const-unsigned-char literal}
intro.c(l52:s379:k684:d0:s0)		iTemp500 [k508 lr379:380 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat] = iTemp456 [k464 lr350:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0x16 {const-unsigned-char literal}
intro.c(l52:s380:k685:d0:s0)		*(iTemp500 [k508 lr379:380 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat]) := 0x1f {const-unsigned-char literal}
intro.c(l52:s381:k688:d0:s0)		iTemp503 [k511 lr381:382 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat] = iTemp456 [k464 lr350:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0x17 {const-unsigned-char literal}
intro.c(l52:s382:k689:d0:s0)		*(iTemp503 [k511 lr381:382 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat]) := 0x1f {const-unsigned-char literal}
intro.c(l52:s383:k691:d0:s0)		iTemp505 [k513 lr383:384 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] = iTemp456 [k464 lr350:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0x18 {unsigned-char literal}
intro.c(l52:s384:k693:d0:s0)		*(iTemp505 [k513 lr383:384 so:0]{ ia1 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat]) := 0x0 {const-unsigned-char literal}
intro.c(l52:s385:k696:d0:s0)		iTemp509 [k517 lr385:386 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat] = iTemp456 [k464 lr350:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0x19 {const-unsigned-char literal}
intro.c(l52:s386:k697:d0:s0)		*(iTemp509 [k517 lr385:386 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat]) := 0x0 {const-unsigned-char literal}
intro.c(l52:s387:k700:d0:s0)		iTemp512 [k520 lr387:388 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat] = iTemp456 [k464 lr350:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0x1a {const-unsigned-char literal}
intro.c(l52:s388:k701:d0:s0)		*(iTemp512 [k520 lr387:388 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat]) := 0x0 {const-unsigned-char literal}
intro.c(l52:s389:k704:d0:s0)		iTemp515 [k523 lr389:390 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat] = iTemp456 [k464 lr350:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0x1b {const-unsigned-char literal}
intro.c(l52:s390:k705:d0:s0)		*(iTemp515 [k523 lr389:390 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat]) := 0x0 {const-unsigned-char literal}
intro.c(l52:s391:k708:d0:s0)		iTemp518 [k526 lr391:392 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat] = iTemp456 [k464 lr350:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0x1c {const-unsigned-char literal}
intro.c(l52:s392:k709:d0:s0)		*(iTemp518 [k526 lr391:392 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat]) := 0x0 {const-unsigned-char literal}
intro.c(l52:s393:k712:d0:s0)		iTemp521 [k529 lr393:394 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat] = iTemp456 [k464 lr350:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0x1d {const-unsigned-char literal}
intro.c(l52:s394:k713:d0:s0)		*(iTemp521 [k529 lr393:394 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat]) := 0x0 {const-unsigned-char literal}
intro.c(l52:s395:k716:d0:s0)		iTemp524 [k532 lr395:396 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat] = iTemp456 [k464 lr350:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0x1e {const-unsigned-char literal}
intro.c(l52:s396:k717:d0:s0)		*(iTemp524 [k532 lr395:396 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat]) := 0x1f {const-unsigned-char literal}
intro.c(l52:s397:k720:d0:s0)		iTemp527 [k535 lr397:398 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat] = iTemp456 [k464 lr350:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + 0x1f {const-unsigned-char literal}
intro.c(l52:s398:k721:d0:s0)		*(iTemp527 [k535 lr397:398 so:0]{ ia1 a2p0 re0 rm1 nos1 ru0 dp0}{char near* fixed}[remat]) := 0x1f {const-unsigned-char literal}
intro.c(l61:s399:k722:d0:s0)		iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15}[r0x00 r0x01 ] := 0x0 {unsigned-int literal}
intro.c(l67:s400:k1050:d0:s0)		iTemp657 [k675 lr400:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_x_1_15}[r0x02 ] := 0x0 {const-unsigned-char literal}
intro.c(l68:s402:k1005:d1:s0)	 preHeaderLbl0($48) :
intro.c(l68:s403:k1015:d1:s0)		iTemp531 [k542 lr403:407 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_delay_1_15}[r0x03 r0x04 ] := 0x4e20 {unsigned-int literal}
intro.c(l68:s405:k726:d14:s0)	 _forcontinue_1($27) :
intro.c(l68:s406:k727:d14:s0)		iTemp531 [k542 lr403:407 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_delay_1_15}[r0x03 r0x04 ] = iTemp531 [k542 lr403:407 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_delay_1_15}[r0x03 r0x04 ] - 0x1 {unsigned-int literal}
intro.c(l68:s407:k729:d14:s0)		if iTemp531 [k542 lr403:407 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_delay_1_15}[r0x03 r0x04 ] != 0 goto _forcontinue_1($27)
intro.c(l69:s408:k736:d1:s0)		iTemp532 [k544 lr408:408 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _limpa_lcd [k543 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( ) fixed}
intro.c(l70:s409:k737:d1:s0)		send 0x40 {const-unsigned-char literal}{argreg = 1}
intro.c(l70:s410:k738:d1:s0)		iTemp533 [k547 lr410:410 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l71:s411:k739:d1:s0)		iTemp534 [k548 lr411:412 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15}[r0x00 r0x01 ] > 0x3 {unsigned-int literal}
intro.c(l71:s412:k740:d1:s0)		if iTemp534 [k548 lr411:412 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forcontinue_0($45)
intro.c(l71:s413:k741:d1:s0)		jtab	iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15}[r0x00 r0x01 ]; _case_0_0; _case_0_1; _case_0_2; _case_0_3
intro.c(l72:s414:k742:d1:s0)	 _case_0_0($2) :
intro.c(l73:s415:k1030:d1:s0)		iTemp557 [k575 lr415:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] := 0x0 {const-unsigned-char literal}
intro.c(l73:s416:k1033:d1:s0)		iTemp539 [k556 lr416:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] := 0x0 {unsigned-int literal}
intro.c(l74:s418:k1006:d13:s0)	 preHeaderLbl1($52) :
intro.c(l74:s419:k762:d13:s0)		iTemp546 [k564 lr419:420 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register}[r0x06 ] = iTemp557 [k575 lr415:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] - 0x4 {const-unsigned-char literal}
intro.c(l74:s420:k763:d13:s0)		iTemp547 [k565 lr420:421 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x06 r0x07 ] = iTemp546 [k564 lr419:420 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register}[r0x06 ] * 0x8 {const-unsigned-char literal}
intro.c(l74:s421:k764:d13:s0)		iTemp548 [k566 lr421:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] = iTemp104 [k108 lr86:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp547 [k565 lr420:421 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x06 r0x07 ]
intro.c(l74:s422:k753:d13:s0)		iTemp540 [k557 lr422:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x08 r0x09 ] = iTemp16 [k19 lr20:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp539 [k556 lr416:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ]
intro.c(l74:s423:k747:d13:s0)		iTemp537 [k553 lr423:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0a ] = iTemp557 [k575 lr415:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x4 {const-unsigned-char literal}
intro.c(l74:s424:k1018:d13:s0)		iTemp554 [k572 lr424:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] := 0x0 {const-unsigned-char literal}
intro.c(l74:s426:k746:d14:s0)	 _forbody_3($28) :
intro.c(l75:s427:k748:d14:s0)		if iTemp537 [k553 lr423:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0a ] == 0 goto _iffalse_0($4)
intro.c(l76:s428:k755:d14:s0)		iTemp542 [k559 lr428:429 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] = iTemp540 [k557 lr422:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x08 r0x09 ] + iTemp554 [k572 lr424:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ]
intro.c(l76:s429:k756:d14:s0)		iTemp543 [k560 lr429:430 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ] = @[iTemp542 [k559 lr428:429 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] + 0x0 {const-unsigned-char literal}]
intro.c(l76:s430:k757:d14:s0)		send iTemp543 [k560 lr429:430 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ]{argreg = 1}
intro.c(l76:s431:k758:d14:s0)		iTemp544 [k562 lr431:431 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l76:s432:k759:d14:s0)		 goto _forcontinue_3($29)
intro.c(l76:s433:k760:d14:s0)	 _iffalse_0($4) :
intro.c(l78:s434:k766:d14:s0)		iTemp550 [k568 lr434:435 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] = iTemp548 [k566 lr421:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] + iTemp554 [k572 lr424:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ]
intro.c(l78:s435:k767:d14:s0)		iTemp551 [k569 lr435:436 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ] = @[iTemp550 [k568 lr434:435 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] + 0x0 {const-unsigned-char literal}]
intro.c(l78:s436:k768:d14:s0)		send iTemp551 [k569 lr435:436 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ]{argreg = 1}
intro.c(l78:s437:k769:d14:s0)		iTemp552 [k570 lr437:437 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l78:s438:k771:d14:s0)	 _forcontinue_3($29) :
intro.c(l74:s439:k773:d14:s0)		iTemp554 [k572 lr424:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] = iTemp554 [k572 lr424:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] + 0x1 {const-unsigned-char literal}
intro.c(l74:s440:k775:d14:s0)		iTemp555 [k573 lr440:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp554 [k572 lr424:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] < 0x8 {const-unsigned-char literal}
intro.c(l74:s441:k776:d14:s0)		if iTemp555 [k573 lr440:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forbody_3($28)
intro.c(l73:s442:k1034:d13:s0)		iTemp539 [k556 lr416:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] = iTemp539 [k556 lr416:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] + 0x8 {const-unsigned-char literal}
intro.c(l73:s443:k781:d13:s0)		iTemp557 [k575 lr415:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] = iTemp557 [k575 lr415:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] + 0x1 {const-unsigned-char literal}
intro.c(l73:s444:k783:d13:s0)		iTemp558 [k576 lr444:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp557 [k575 lr415:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x8 {const-unsigned-char literal}
intro.c(l73:s445:k784:d13:s0)		if iTemp558 [k576 lr444:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl1($52)
intro.c(l81:s446:k787:d1:s0)		send 0x80 {const-unsigned-char literal}{argreg = 1}
intro.c(l81:s447:k788:d1:s0)		iTemp559 [k577 lr447:447 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l82:s448:k789:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l82:s449:k790:d1:s0)		iTemp560 [k578 lr449:449 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l83:s450:k791:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l83:s451:k792:d1:s0)		iTemp561 [k579 lr451:451 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l84:s452:k793:d1:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
intro.c(l84:s453:k794:d1:s0)		iTemp562 [k580 lr453:453 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l85:s454:k795:d1:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
intro.c(l85:s455:k796:d1:s0)		iTemp563 [k581 lr455:455 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l86:s456:k797:d1:s0)		send 0xc0 {const-unsigned-char literal}{argreg = 1}
intro.c(l86:s457:k798:d1:s0)		iTemp564 [k582 lr457:457 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l87:s458:k799:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l87:s459:k800:d1:s0)		iTemp565 [k583 lr459:459 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l88:s460:k801:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l88:s461:k802:d1:s0)		iTemp566 [k584 lr461:461 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l89:s462:k803:d1:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
intro.c(l89:s463:k804:d1:s0)		iTemp567 [k585 lr463:463 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l90:s464:k805:d1:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
intro.c(l90:s465:k806:d1:s0)		iTemp568 [k586 lr465:465 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l91:s466:k807:d1:s0)		iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15}[r0x00 r0x01 ] := 0x1 {unsigned-int literal}
intro.c(l92:s467:k808:d1:s0)		 goto _forcontinue_0($45)
intro.c(l93:s468:k809:d1:s0)	 _case_0_1($8) :
intro.c(l94:s469:k1035:d1:s0)		iTemp589 [k607 lr469:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] := 0x0 {const-unsigned-char literal}
intro.c(l94:s470:k1038:d1:s0)		iTemp571 [k589 lr470:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] := 0x0 {unsigned-int literal}
intro.c(l95:s472:k1008:d13:s0)	 preHeaderLbl3($57) :
intro.c(l95:s473:k829:d13:s0)		iTemp578 [k596 lr473:474 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register}[r0x06 ] = iTemp589 [k607 lr469:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] - 0x4 {const-unsigned-char literal}
intro.c(l95:s474:k830:d13:s0)		iTemp579 [k597 lr474:475 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x06 r0x07 ] = iTemp578 [k596 lr473:474 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register}[r0x06 ] * 0x8 {const-unsigned-char literal}
intro.c(l95:s475:k831:d13:s0)		iTemp580 [k598 lr475:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] = iTemp280 [k286 lr218:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp579 [k597 lr474:475 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x06 r0x07 ]
intro.c(l95:s476:k820:d13:s0)		iTemp572 [k590 lr476:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x08 r0x09 ] = iTemp192 [k197 lr152:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp571 [k589 lr470:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ]
intro.c(l95:s477:k814:d13:s0)		iTemp569 [k587 lr477:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0a ] = iTemp589 [k607 lr469:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x4 {const-unsigned-char literal}
intro.c(l95:s478:k1021:d13:s0)		iTemp586 [k604 lr478:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] := 0x0 {const-unsigned-char literal}
intro.c(l95:s480:k813:d14:s0)	 _forbody_5($32) :
intro.c(l96:s481:k815:d14:s0)		if iTemp569 [k587 lr477:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0a ] == 0 goto _iffalse_1($10)
intro.c(l97:s482:k822:d14:s0)		iTemp574 [k592 lr482:483 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] = iTemp572 [k590 lr476:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x08 r0x09 ] + iTemp586 [k604 lr478:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ]
intro.c(l97:s483:k823:d14:s0)		iTemp575 [k593 lr483:484 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ] = @[iTemp574 [k592 lr482:483 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] + 0x0 {const-unsigned-char literal}]
intro.c(l97:s484:k824:d14:s0)		send iTemp575 [k593 lr483:484 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ]{argreg = 1}
intro.c(l97:s485:k825:d14:s0)		iTemp576 [k594 lr485:485 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l97:s486:k826:d14:s0)		 goto _forcontinue_5($33)
intro.c(l97:s487:k827:d14:s0)	 _iffalse_1($10) :
intro.c(l99:s488:k833:d14:s0)		iTemp582 [k600 lr488:489 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] = iTemp580 [k598 lr475:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] + iTemp586 [k604 lr478:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ]
intro.c(l99:s489:k834:d14:s0)		iTemp583 [k601 lr489:490 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ] = @[iTemp582 [k600 lr488:489 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] + 0x0 {const-unsigned-char literal}]
intro.c(l99:s490:k835:d14:s0)		send iTemp583 [k601 lr489:490 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ]{argreg = 1}
intro.c(l99:s491:k836:d14:s0)		iTemp584 [k602 lr491:491 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l99:s492:k838:d14:s0)	 _forcontinue_5($33) :
intro.c(l95:s493:k840:d14:s0)		iTemp586 [k604 lr478:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] = iTemp586 [k604 lr478:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] + 0x1 {const-unsigned-char literal}
intro.c(l95:s494:k842:d14:s0)		iTemp587 [k605 lr494:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp586 [k604 lr478:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] < 0x8 {const-unsigned-char literal}
intro.c(l95:s495:k843:d14:s0)		if iTemp587 [k605 lr494:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forbody_5($32)
intro.c(l94:s496:k1039:d13:s0)		iTemp571 [k589 lr470:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] = iTemp571 [k589 lr470:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] + 0x8 {const-unsigned-char literal}
intro.c(l94:s497:k848:d13:s0)		iTemp589 [k607 lr469:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] = iTemp589 [k607 lr469:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] + 0x1 {const-unsigned-char literal}
intro.c(l94:s498:k850:d13:s0)		iTemp590 [k608 lr498:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp589 [k607 lr469:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x8 {const-unsigned-char literal}
intro.c(l94:s499:k851:d13:s0)		if iTemp590 [k608 lr498:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl3($57)
intro.c(l102:s500:k854:d1:s0)		send 0x84 {const-unsigned-char literal}{argreg = 1}
intro.c(l102:s501:k855:d1:s0)		iTemp591 [k609 lr501:501 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l103:s502:k856:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l103:s503:k857:d1:s0)		iTemp592 [k610 lr503:503 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l104:s504:k858:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l104:s505:k859:d1:s0)		iTemp593 [k611 lr505:505 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l105:s506:k860:d1:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
intro.c(l105:s507:k861:d1:s0)		iTemp594 [k612 lr507:507 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l106:s508:k862:d1:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
intro.c(l106:s509:k863:d1:s0)		iTemp595 [k613 lr509:509 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l107:s510:k864:d1:s0)		send 0xc4 {const-unsigned-char literal}{argreg = 1}
intro.c(l107:s511:k865:d1:s0)		iTemp596 [k614 lr511:511 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l108:s512:k866:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l108:s513:k867:d1:s0)		iTemp597 [k615 lr513:513 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l109:s514:k868:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l109:s515:k869:d1:s0)		iTemp598 [k616 lr515:515 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l110:s516:k870:d1:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
intro.c(l110:s517:k871:d1:s0)		iTemp599 [k617 lr517:517 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l111:s518:k872:d1:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
intro.c(l111:s519:k873:d1:s0)		iTemp600 [k618 lr519:519 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l112:s520:k874:d1:s0)		iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15}[r0x00 r0x01 ] := 0x2 {unsigned-int literal}
intro.c(l113:s521:k875:d1:s0)		 goto _forcontinue_0($45)
intro.c(l114:s522:k876:d1:s0)	 _case_0_2($14) :
intro.c(l115:s523:k1040:d1:s0)		iTemp612 [k630 lr523:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] := 0x0 {const-unsigned-char literal}
intro.c(l115:s524:k1043:d1:s0)		iTemp602 [k620 lr524:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] := 0x0 {unsigned-int literal}
intro.c(l116:s526:k1010:d13:s0)	 preHeaderLbl5($61) :
intro.c(l116:s527:k883:d13:s0)		iTemp603 [k621 lr527:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] = iTemp368 [k375 lr284:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp602 [k620 lr524:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ]
intro.c(l116:s528:k1024:d13:s0)		iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x08 ] := 0x0 {const-unsigned-char literal}
intro.c(l116:s530:k880:d14:s0)	 _forbody_7($36) :
intro.c(l117:s531:k885:d14:s0)		iTemp605 [k623 lr531:532 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x09 r0x0a ] = iTemp603 [k621 lr527:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] + iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x08 ]
intro.c(l117:s532:k886:d14:s0)		iTemp606 [k624 lr532:533 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x09 ] = @[iTemp605 [k623 lr531:532 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x09 r0x0a ] + 0x0 {const-unsigned-char literal}]
intro.c(l117:s533:k887:d14:s0)		send iTemp606 [k624 lr532:533 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x09 ]{argreg = 1}
intro.c(l117:s534:k888:d14:s0)		iTemp607 [k625 lr534:534 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l116:s535:k891:d14:s0)		iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x08 ] = iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x08 ] + 0x1 {const-unsigned-char literal}
intro.c(l116:s536:k893:d14:s0)		iTemp610 [k628 lr536:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x08 ] < 0x8 {const-unsigned-char literal}
intro.c(l116:s537:k894:d14:s0)		if iTemp610 [k628 lr536:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forbody_7($36)
intro.c(l115:s538:k1044:d13:s0)		iTemp602 [k620 lr524:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] = iTemp602 [k620 lr524:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] + 0x8 {const-unsigned-char literal}
intro.c(l115:s539:k899:d13:s0)		iTemp612 [k630 lr523:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] = iTemp612 [k630 lr523:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] + 0x1 {const-unsigned-char literal}
intro.c(l115:s540:k901:d13:s0)		iTemp613 [k631 lr540:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp612 [k630 lr523:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x4 {const-unsigned-char literal}
intro.c(l115:s541:k902:d13:s0)		if iTemp613 [k631 lr540:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl5($61)
intro.c(l120:s542:k905:d1:s0)		send 0x88 {const-unsigned-char literal}{argreg = 1}
intro.c(l120:s543:k906:d1:s0)		iTemp614 [k632 lr543:543 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l121:s544:k907:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l121:s545:k908:d1:s0)		iTemp615 [k633 lr545:545 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l122:s546:k909:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l122:s547:k910:d1:s0)		iTemp616 [k634 lr547:547 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l123:s548:k911:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l123:s549:k912:d1:s0)		iTemp617 [k635 lr549:549 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l124:s550:k913:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l124:s551:k914:d1:s0)		iTemp618 [k636 lr551:551 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l125:s552:k915:d1:s0)		send 0xc8 {const-unsigned-char literal}{argreg = 1}
intro.c(l125:s553:k916:d1:s0)		iTemp619 [k637 lr553:553 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l126:s554:k917:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l126:s555:k918:d1:s0)		iTemp620 [k638 lr555:555 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l127:s556:k919:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l127:s557:k920:d1:s0)		iTemp621 [k639 lr557:557 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l128:s558:k921:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l128:s559:k922:d1:s0)		iTemp622 [k640 lr559:559 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l129:s560:k923:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l129:s561:k924:d1:s0)		iTemp623 [k641 lr561:561 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l130:s562:k925:d1:s0)		iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15}[r0x00 r0x01 ] := 0x3 {unsigned-int literal}
intro.c(l131:s563:k926:d1:s0)		 goto _forcontinue_0($45)
intro.c(l132:s564:k927:d1:s0)	 _case_0_3($17) :
intro.c(l133:s565:k1045:d1:s0)		iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] := 0x0 {const-unsigned-char literal}
intro.c(l133:s566:k1048:d1:s0)		iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] := 0x0 {unsigned-int literal}
intro.c(l134:s568:k1012:d13:s0)	 preHeaderLbl7($66) :
intro.c(l134:s569:k947:d13:s0)		iTemp633 [k651 lr569:570 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register}[r0x06 ] = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] - 0x4 {const-unsigned-char literal}
intro.c(l134:s570:k948:d13:s0)		iTemp634 [k652 lr570:571 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x06 r0x07 ] = iTemp633 [k651 lr569:570 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register}[r0x06 ] * 0x8 {const-unsigned-char literal}
intro.c(l134:s571:k949:d13:s0)		iTemp635 [k653 lr571:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] = iTemp456 [k464 lr350:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp634 [k652 lr570:571 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x06 r0x07 ]
intro.c(l134:s572:k938:d13:s0)		iTemp627 [k645 lr572:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x08 r0x09 ] = iTemp368 [k375 lr284:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ]
intro.c(l134:s573:k932:d13:s0)		iTemp624 [k642 lr573:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0a ] = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x4 {const-unsigned-char literal}
intro.c(l134:s574:k1027:d13:s0)		iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] := 0x0 {const-unsigned-char literal}
intro.c(l134:s576:k931:d14:s0)	 _forbody_9($40) :
intro.c(l135:s577:k933:d14:s0)		if iTemp624 [k642 lr573:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0a ] == 0 goto _iffalse_2($19)
intro.c(l136:s578:k940:d14:s0)		iTemp629 [k647 lr578:579 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] = iTemp627 [k645 lr572:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x08 r0x09 ] + iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ]
intro.c(l136:s579:k941:d14:s0)		iTemp630 [k648 lr579:580 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ] = @[iTemp629 [k647 lr578:579 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] + 0x0 {const-unsigned-char literal}]
intro.c(l136:s580:k942:d14:s0)		send iTemp630 [k648 lr579:580 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ]{argreg = 1}
intro.c(l136:s581:k943:d14:s0)		iTemp631 [k649 lr581:581 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l136:s582:k944:d14:s0)		 goto _forcontinue_9($41)
intro.c(l136:s583:k945:d14:s0)	 _iffalse_2($19) :
intro.c(l138:s584:k951:d14:s0)		iTemp637 [k655 lr584:585 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] = iTemp635 [k653 lr571:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] + iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ]
intro.c(l138:s585:k952:d14:s0)		iTemp638 [k656 lr585:586 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ] = @[iTemp637 [k655 lr584:585 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] + 0x0 {const-unsigned-char literal}]
intro.c(l138:s586:k953:d14:s0)		send iTemp638 [k656 lr585:586 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ]{argreg = 1}
intro.c(l138:s587:k954:d14:s0)		iTemp639 [k657 lr587:587 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l138:s588:k956:d14:s0)	 _forcontinue_9($41) :
intro.c(l134:s589:k958:d14:s0)		iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] = iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] + 0x1 {const-unsigned-char literal}
intro.c(l134:s590:k960:d14:s0)		iTemp642 [k660 lr590:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] < 0x8 {const-unsigned-char literal}
intro.c(l134:s591:k961:d14:s0)		if iTemp642 [k660 lr590:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forbody_9($40)
intro.c(l133:s592:k1049:d13:s0)		iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] = iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] + 0x8 {const-unsigned-char literal}
intro.c(l133:s593:k966:d13:s0)		iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] + 0x1 {const-unsigned-char literal}
intro.c(l133:s594:k968:d13:s0)		iTemp645 [k663 lr594:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x8 {const-unsigned-char literal}
intro.c(l133:s595:k969:d13:s0)		if iTemp645 [k663 lr594:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl7($66)
intro.c(l141:s596:k972:d1:s0)		send 0x8c {const-unsigned-char literal}{argreg = 1}
intro.c(l141:s597:k973:d1:s0)		iTemp646 [k664 lr597:597 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l142:s598:k974:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l142:s599:k975:d1:s0)		iTemp647 [k665 lr599:599 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l143:s600:k976:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l143:s601:k977:d1:s0)		iTemp648 [k666 lr601:601 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l144:s602:k978:d1:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
intro.c(l144:s603:k979:d1:s0)		iTemp649 [k667 lr603:603 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l145:s604:k980:d1:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
intro.c(l145:s605:k981:d1:s0)		iTemp650 [k668 lr605:605 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l146:s606:k982:d1:s0)		send 0xcc {const-unsigned-char literal}{argreg = 1}
intro.c(l146:s607:k983:d1:s0)		iTemp651 [k669 lr607:607 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l147:s608:k984:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l147:s609:k985:d1:s0)		iTemp652 [k670 lr609:609 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l148:s610:k986:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l148:s611:k987:d1:s0)		iTemp653 [k671 lr611:611 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l149:s612:k988:d1:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
intro.c(l149:s613:k989:d1:s0)		iTemp654 [k672 lr613:613 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l150:s614:k990:d1:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
intro.c(l150:s615:k991:d1:s0)		iTemp655 [k673 lr615:615 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l151:s616:k992:d1:s0)		iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15}[r0x00 r0x01 ] := 0x0 {unsigned-int literal}
intro.c(l153:s617:k995:d1:s0)	 _forcontinue_0($45) :
intro.c(l67:s618:k997:d1:s0)		iTemp657 [k675 lr400:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_x_1_15}[r0x02 ] = iTemp657 [k675 lr400:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_x_1_15}[r0x02 ] + 0x1 {const-unsigned-char literal}
intro.c(l67:s619:k999:d1:s0)		iTemp658 [k676 lr619:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp657 [k675 lr400:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_x_1_15}[r0x02 ] < 0x64 {const-unsigned-char literal}
intro.c(l67:s620:k1000:d1:s0)		if iTemp658 [k676 lr619:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl0($48)
intro.c(l67:s621:k1003:d0:s0)	 _return($46) :
intro.c(l67:s622:k1004:d0:s0)		eproc _intro [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( ) fixed}

----------------------------------------------------------------
Basic Block preHeaderLbl39 : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 2 : bbnum = 1 1st iCode = 401 , last iCode = 401
visited 0 : hasFcall = 0

defines bitVector :bitvector Size = 1073 bSize = 135
Bits on { }

local defines bitVector :
pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

in pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

inDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (1050) }

outDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (1050) }

usesDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { }

----------------------------------------------------------------
intro.c(l68:s401:k1072:d0:s0)	 preHeaderLbl39($126) :
intro.c(l68:s402:k1005:d1:s0)	 preHeaderLbl0($48) :
intro.c(l68:s403:k1015:d1:s0)		iTemp531 [k542 lr403:407 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_delay_1_15}[r0x03 r0x04 ] := 0x4e20 {unsigned-int literal}
intro.c(l68:s405:k726:d14:s0)	 _forcontinue_1($27) :
intro.c(l68:s406:k727:d14:s0)		iTemp531 [k542 lr403:407 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_delay_1_15}[r0x03 r0x04 ] = iTemp531 [k542 lr403:407 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_delay_1_15}[r0x03 r0x04 ] - 0x1 {unsigned-int literal}
intro.c(l68:s407:k729:d14:s0)		if iTemp531 [k542 lr403:407 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_delay_1_15}[r0x03 r0x04 ] != 0 goto _forcontinue_1($27)
intro.c(l69:s408:k736:d1:s0)		iTemp532 [k544 lr408:408 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _limpa_lcd [k543 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( ) fixed}
intro.c(l70:s409:k737:d1:s0)		send 0x40 {const-unsigned-char literal}{argreg = 1}
intro.c(l70:s410:k738:d1:s0)		iTemp533 [k547 lr410:410 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l71:s411:k739:d1:s0)		iTemp534 [k548 lr411:412 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15}[r0x00 r0x01 ] > 0x3 {unsigned-int literal}
intro.c(l71:s412:k740:d1:s0)		if iTemp534 [k548 lr411:412 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forcontinue_0($45)
intro.c(l71:s413:k741:d1:s0)		jtab	iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15}[r0x00 r0x01 ]; _case_0_0; _case_0_1; _case_0_2; _case_0_3
intro.c(l72:s414:k742:d1:s0)	 _case_0_0($2) :
intro.c(l73:s415:k1030:d1:s0)		iTemp557 [k575 lr415:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] := 0x0 {const-unsigned-char literal}
intro.c(l73:s416:k1033:d1:s0)		iTemp539 [k556 lr416:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] := 0x0 {unsigned-int literal}
intro.c(l74:s418:k1006:d13:s0)	 preHeaderLbl1($52) :
intro.c(l74:s419:k762:d13:s0)		iTemp546 [k564 lr419:420 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register}[r0x06 ] = iTemp557 [k575 lr415:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] - 0x4 {const-unsigned-char literal}
intro.c(l74:s420:k763:d13:s0)		iTemp547 [k565 lr420:421 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x06 r0x07 ] = iTemp546 [k564 lr419:420 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register}[r0x06 ] * 0x8 {const-unsigned-char literal}
intro.c(l74:s421:k764:d13:s0)		iTemp548 [k566 lr421:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] = iTemp104 [k108 lr86:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp547 [k565 lr420:421 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x06 r0x07 ]
intro.c(l74:s422:k753:d13:s0)		iTemp540 [k557 lr422:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x08 r0x09 ] = iTemp16 [k19 lr20:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp539 [k556 lr416:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ]
intro.c(l74:s423:k747:d13:s0)		iTemp537 [k553 lr423:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0a ] = iTemp557 [k575 lr415:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x4 {const-unsigned-char literal}
intro.c(l74:s424:k1018:d13:s0)		iTemp554 [k572 lr424:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] := 0x0 {const-unsigned-char literal}
intro.c(l74:s426:k746:d14:s0)	 _forbody_3($28) :
intro.c(l75:s427:k748:d14:s0)		if iTemp537 [k553 lr423:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0a ] == 0 goto _iffalse_0($4)
intro.c(l76:s428:k755:d14:s0)		iTemp542 [k559 lr428:429 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] = iTemp540 [k557 lr422:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x08 r0x09 ] + iTemp554 [k572 lr424:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ]
intro.c(l76:s429:k756:d14:s0)		iTemp543 [k560 lr429:430 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ] = @[iTemp542 [k559 lr428:429 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] + 0x0 {const-unsigned-char literal}]
intro.c(l76:s430:k757:d14:s0)		send iTemp543 [k560 lr429:430 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ]{argreg = 1}
intro.c(l76:s431:k758:d14:s0)		iTemp544 [k562 lr431:431 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l76:s432:k759:d14:s0)		 goto _forcontinue_3($29)
intro.c(l76:s433:k760:d14:s0)	 _iffalse_0($4) :
intro.c(l78:s434:k766:d14:s0)		iTemp550 [k568 lr434:435 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] = iTemp548 [k566 lr421:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] + iTemp554 [k572 lr424:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ]
intro.c(l78:s435:k767:d14:s0)		iTemp551 [k569 lr435:436 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ] = @[iTemp550 [k568 lr434:435 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] + 0x0 {const-unsigned-char literal}]
intro.c(l78:s436:k768:d14:s0)		send iTemp551 [k569 lr435:436 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ]{argreg = 1}
intro.c(l78:s437:k769:d14:s0)		iTemp552 [k570 lr437:437 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l78:s438:k771:d14:s0)	 _forcontinue_3($29) :
intro.c(l74:s439:k773:d14:s0)		iTemp554 [k572 lr424:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] = iTemp554 [k572 lr424:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] + 0x1 {const-unsigned-char literal}
intro.c(l74:s440:k775:d14:s0)		iTemp555 [k573 lr440:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp554 [k572 lr424:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] < 0x8 {const-unsigned-char literal}
intro.c(l74:s441:k776:d14:s0)		if iTemp555 [k573 lr440:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forbody_3($28)
intro.c(l73:s442:k1034:d13:s0)		iTemp539 [k556 lr416:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] = iTemp539 [k556 lr416:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] + 0x8 {const-unsigned-char literal}
intro.c(l73:s443:k781:d13:s0)		iTemp557 [k575 lr415:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] = iTemp557 [k575 lr415:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] + 0x1 {const-unsigned-char literal}
intro.c(l73:s444:k783:d13:s0)		iTemp558 [k576 lr444:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp557 [k575 lr415:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x8 {const-unsigned-char literal}
intro.c(l73:s445:k784:d13:s0)		if iTemp558 [k576 lr444:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl1($52)
intro.c(l81:s446:k787:d1:s0)		send 0x80 {const-unsigned-char literal}{argreg = 1}
intro.c(l81:s447:k788:d1:s0)		iTemp559 [k577 lr447:447 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l82:s448:k789:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l82:s449:k790:d1:s0)		iTemp560 [k578 lr449:449 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l83:s450:k791:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l83:s451:k792:d1:s0)		iTemp561 [k579 lr451:451 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l84:s452:k793:d1:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
intro.c(l84:s453:k794:d1:s0)		iTemp562 [k580 lr453:453 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l85:s454:k795:d1:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
intro.c(l85:s455:k796:d1:s0)		iTemp563 [k581 lr455:455 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l86:s456:k797:d1:s0)		send 0xc0 {const-unsigned-char literal}{argreg = 1}
intro.c(l86:s457:k798:d1:s0)		iTemp564 [k582 lr457:457 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l87:s458:k799:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l87:s459:k800:d1:s0)		iTemp565 [k583 lr459:459 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l88:s460:k801:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l88:s461:k802:d1:s0)		iTemp566 [k584 lr461:461 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l89:s462:k803:d1:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
intro.c(l89:s463:k804:d1:s0)		iTemp567 [k585 lr463:463 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l90:s464:k805:d1:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
intro.c(l90:s465:k806:d1:s0)		iTemp568 [k586 lr465:465 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l91:s466:k807:d1:s0)		iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15}[r0x00 r0x01 ] := 0x1 {unsigned-int literal}
intro.c(l92:s467:k808:d1:s0)		 goto _forcontinue_0($45)
intro.c(l93:s468:k809:d1:s0)	 _case_0_1($8) :
intro.c(l94:s469:k1035:d1:s0)		iTemp589 [k607 lr469:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] := 0x0 {const-unsigned-char literal}
intro.c(l94:s470:k1038:d1:s0)		iTemp571 [k589 lr470:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] := 0x0 {unsigned-int literal}
intro.c(l95:s472:k1008:d13:s0)	 preHeaderLbl3($57) :
intro.c(l95:s473:k829:d13:s0)		iTemp578 [k596 lr473:474 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register}[r0x06 ] = iTemp589 [k607 lr469:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] - 0x4 {const-unsigned-char literal}
intro.c(l95:s474:k830:d13:s0)		iTemp579 [k597 lr474:475 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x06 r0x07 ] = iTemp578 [k596 lr473:474 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register}[r0x06 ] * 0x8 {const-unsigned-char literal}
intro.c(l95:s475:k831:d13:s0)		iTemp580 [k598 lr475:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] = iTemp280 [k286 lr218:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp579 [k597 lr474:475 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x06 r0x07 ]
intro.c(l95:s476:k820:d13:s0)		iTemp572 [k590 lr476:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x08 r0x09 ] = iTemp192 [k197 lr152:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp571 [k589 lr470:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ]
intro.c(l95:s477:k814:d13:s0)		iTemp569 [k587 lr477:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0a ] = iTemp589 [k607 lr469:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x4 {const-unsigned-char literal}
intro.c(l95:s478:k1021:d13:s0)		iTemp586 [k604 lr478:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] := 0x0 {const-unsigned-char literal}
intro.c(l95:s480:k813:d14:s0)	 _forbody_5($32) :
intro.c(l96:s481:k815:d14:s0)		if iTemp569 [k587 lr477:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0a ] == 0 goto _iffalse_1($10)
intro.c(l97:s482:k822:d14:s0)		iTemp574 [k592 lr482:483 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] = iTemp572 [k590 lr476:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x08 r0x09 ] + iTemp586 [k604 lr478:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ]
intro.c(l97:s483:k823:d14:s0)		iTemp575 [k593 lr483:484 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ] = @[iTemp574 [k592 lr482:483 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] + 0x0 {const-unsigned-char literal}]
intro.c(l97:s484:k824:d14:s0)		send iTemp575 [k593 lr483:484 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ]{argreg = 1}
intro.c(l97:s485:k825:d14:s0)		iTemp576 [k594 lr485:485 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l97:s486:k826:d14:s0)		 goto _forcontinue_5($33)
intro.c(l97:s487:k827:d14:s0)	 _iffalse_1($10) :
intro.c(l99:s488:k833:d14:s0)		iTemp582 [k600 lr488:489 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] = iTemp580 [k598 lr475:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] + iTemp586 [k604 lr478:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ]
intro.c(l99:s489:k834:d14:s0)		iTemp583 [k601 lr489:490 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ] = @[iTemp582 [k600 lr488:489 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] + 0x0 {const-unsigned-char literal}]
intro.c(l99:s490:k835:d14:s0)		send iTemp583 [k601 lr489:490 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ]{argreg = 1}
intro.c(l99:s491:k836:d14:s0)		iTemp584 [k602 lr491:491 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l99:s492:k838:d14:s0)	 _forcontinue_5($33) :
intro.c(l95:s493:k840:d14:s0)		iTemp586 [k604 lr478:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] = iTemp586 [k604 lr478:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] + 0x1 {const-unsigned-char literal}
intro.c(l95:s494:k842:d14:s0)		iTemp587 [k605 lr494:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp586 [k604 lr478:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] < 0x8 {const-unsigned-char literal}
intro.c(l95:s495:k843:d14:s0)		if iTemp587 [k605 lr494:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forbody_5($32)
intro.c(l94:s496:k1039:d13:s0)		iTemp571 [k589 lr470:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] = iTemp571 [k589 lr470:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] + 0x8 {const-unsigned-char literal}
intro.c(l94:s497:k848:d13:s0)		iTemp589 [k607 lr469:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] = iTemp589 [k607 lr469:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] + 0x1 {const-unsigned-char literal}
intro.c(l94:s498:k850:d13:s0)		iTemp590 [k608 lr498:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp589 [k607 lr469:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x8 {const-unsigned-char literal}
intro.c(l94:s499:k851:d13:s0)		if iTemp590 [k608 lr498:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl3($57)
intro.c(l102:s500:k854:d1:s0)		send 0x84 {const-unsigned-char literal}{argreg = 1}
intro.c(l102:s501:k855:d1:s0)		iTemp591 [k609 lr501:501 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l103:s502:k856:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l103:s503:k857:d1:s0)		iTemp592 [k610 lr503:503 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l104:s504:k858:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l104:s505:k859:d1:s0)		iTemp593 [k611 lr505:505 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l105:s506:k860:d1:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
intro.c(l105:s507:k861:d1:s0)		iTemp594 [k612 lr507:507 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l106:s508:k862:d1:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
intro.c(l106:s509:k863:d1:s0)		iTemp595 [k613 lr509:509 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l107:s510:k864:d1:s0)		send 0xc4 {const-unsigned-char literal}{argreg = 1}
intro.c(l107:s511:k865:d1:s0)		iTemp596 [k614 lr511:511 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l108:s512:k866:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l108:s513:k867:d1:s0)		iTemp597 [k615 lr513:513 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l109:s514:k868:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l109:s515:k869:d1:s0)		iTemp598 [k616 lr515:515 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l110:s516:k870:d1:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
intro.c(l110:s517:k871:d1:s0)		iTemp599 [k617 lr517:517 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l111:s518:k872:d1:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
intro.c(l111:s519:k873:d1:s0)		iTemp600 [k618 lr519:519 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l112:s520:k874:d1:s0)		iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15}[r0x00 r0x01 ] := 0x2 {unsigned-int literal}
intro.c(l113:s521:k875:d1:s0)		 goto _forcontinue_0($45)
intro.c(l114:s522:k876:d1:s0)	 _case_0_2($14) :
intro.c(l115:s523:k1040:d1:s0)		iTemp612 [k630 lr523:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] := 0x0 {const-unsigned-char literal}
intro.c(l115:s524:k1043:d1:s0)		iTemp602 [k620 lr524:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] := 0x0 {unsigned-int literal}
intro.c(l116:s526:k1010:d13:s0)	 preHeaderLbl5($61) :
intro.c(l116:s527:k883:d13:s0)		iTemp603 [k621 lr527:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] = iTemp368 [k375 lr284:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp602 [k620 lr524:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ]
intro.c(l116:s528:k1024:d13:s0)		iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x08 ] := 0x0 {const-unsigned-char literal}
intro.c(l116:s530:k880:d14:s0)	 _forbody_7($36) :
intro.c(l117:s531:k885:d14:s0)		iTemp605 [k623 lr531:532 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x09 r0x0a ] = iTemp603 [k621 lr527:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] + iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x08 ]
intro.c(l117:s532:k886:d14:s0)		iTemp606 [k624 lr532:533 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x09 ] = @[iTemp605 [k623 lr531:532 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x09 r0x0a ] + 0x0 {const-unsigned-char literal}]
intro.c(l117:s533:k887:d14:s0)		send iTemp606 [k624 lr532:533 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x09 ]{argreg = 1}
intro.c(l117:s534:k888:d14:s0)		iTemp607 [k625 lr534:534 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l116:s535:k891:d14:s0)		iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x08 ] = iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x08 ] + 0x1 {const-unsigned-char literal}
intro.c(l116:s536:k893:d14:s0)		iTemp610 [k628 lr536:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x08 ] < 0x8 {const-unsigned-char literal}
intro.c(l116:s537:k894:d14:s0)		if iTemp610 [k628 lr536:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forbody_7($36)
intro.c(l115:s538:k1044:d13:s0)		iTemp602 [k620 lr524:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] = iTemp602 [k620 lr524:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] + 0x8 {const-unsigned-char literal}
intro.c(l115:s539:k899:d13:s0)		iTemp612 [k630 lr523:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] = iTemp612 [k630 lr523:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] + 0x1 {const-unsigned-char literal}
intro.c(l115:s540:k901:d13:s0)		iTemp613 [k631 lr540:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp612 [k630 lr523:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x4 {const-unsigned-char literal}
intro.c(l115:s541:k902:d13:s0)		if iTemp613 [k631 lr540:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl5($61)
intro.c(l120:s542:k905:d1:s0)		send 0x88 {const-unsigned-char literal}{argreg = 1}
intro.c(l120:s543:k906:d1:s0)		iTemp614 [k632 lr543:543 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l121:s544:k907:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l121:s545:k908:d1:s0)		iTemp615 [k633 lr545:545 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l122:s546:k909:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l122:s547:k910:d1:s0)		iTemp616 [k634 lr547:547 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l123:s548:k911:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l123:s549:k912:d1:s0)		iTemp617 [k635 lr549:549 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l124:s550:k913:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l124:s551:k914:d1:s0)		iTemp618 [k636 lr551:551 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l125:s552:k915:d1:s0)		send 0xc8 {const-unsigned-char literal}{argreg = 1}
intro.c(l125:s553:k916:d1:s0)		iTemp619 [k637 lr553:553 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l126:s554:k917:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l126:s555:k918:d1:s0)		iTemp620 [k638 lr555:555 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l127:s556:k919:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l127:s557:k920:d1:s0)		iTemp621 [k639 lr557:557 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l128:s558:k921:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l128:s559:k922:d1:s0)		iTemp622 [k640 lr559:559 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l129:s560:k923:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l129:s561:k924:d1:s0)		iTemp623 [k641 lr561:561 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l130:s562:k925:d1:s0)		iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15}[r0x00 r0x01 ] := 0x3 {unsigned-int literal}
intro.c(l131:s563:k926:d1:s0)		 goto _forcontinue_0($45)
intro.c(l132:s564:k927:d1:s0)	 _case_0_3($17) :
intro.c(l133:s565:k1045:d1:s0)		iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] := 0x0 {const-unsigned-char literal}
intro.c(l133:s566:k1048:d1:s0)		iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] := 0x0 {unsigned-int literal}
intro.c(l134:s568:k1012:d13:s0)	 preHeaderLbl7($66) :
intro.c(l134:s569:k947:d13:s0)		iTemp633 [k651 lr569:570 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register}[r0x06 ] = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] - 0x4 {const-unsigned-char literal}
intro.c(l134:s570:k948:d13:s0)		iTemp634 [k652 lr570:571 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x06 r0x07 ] = iTemp633 [k651 lr569:570 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register}[r0x06 ] * 0x8 {const-unsigned-char literal}
intro.c(l134:s571:k949:d13:s0)		iTemp635 [k653 lr571:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] = iTemp456 [k464 lr350:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp634 [k652 lr570:571 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x06 r0x07 ]
intro.c(l134:s572:k938:d13:s0)		iTemp627 [k645 lr572:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x08 r0x09 ] = iTemp368 [k375 lr284:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ]
intro.c(l134:s573:k932:d13:s0)		iTemp624 [k642 lr573:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0a ] = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x4 {const-unsigned-char literal}
intro.c(l134:s574:k1027:d13:s0)		iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] := 0x0 {const-unsigned-char literal}
intro.c(l134:s576:k931:d14:s0)	 _forbody_9($40) :
intro.c(l135:s577:k933:d14:s0)		if iTemp624 [k642 lr573:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0a ] == 0 goto _iffalse_2($19)
intro.c(l136:s578:k940:d14:s0)		iTemp629 [k647 lr578:579 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] = iTemp627 [k645 lr572:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x08 r0x09 ] + iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ]
intro.c(l136:s579:k941:d14:s0)		iTemp630 [k648 lr579:580 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ] = @[iTemp629 [k647 lr578:579 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] + 0x0 {const-unsigned-char literal}]
intro.c(l136:s580:k942:d14:s0)		send iTemp630 [k648 lr579:580 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ]{argreg = 1}
intro.c(l136:s581:k943:d14:s0)		iTemp631 [k649 lr581:581 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l136:s582:k944:d14:s0)		 goto _forcontinue_9($41)
intro.c(l136:s583:k945:d14:s0)	 _iffalse_2($19) :
intro.c(l138:s584:k951:d14:s0)		iTemp637 [k655 lr584:585 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] = iTemp635 [k653 lr571:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] + iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ]
intro.c(l138:s585:k952:d14:s0)		iTemp638 [k656 lr585:586 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ] = @[iTemp637 [k655 lr584:585 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] + 0x0 {const-unsigned-char literal}]
intro.c(l138:s586:k953:d14:s0)		send iTemp638 [k656 lr585:586 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ]{argreg = 1}
intro.c(l138:s587:k954:d14:s0)		iTemp639 [k657 lr587:587 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l138:s588:k956:d14:s0)	 _forcontinue_9($41) :
intro.c(l134:s589:k958:d14:s0)		iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] = iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] + 0x1 {const-unsigned-char literal}
intro.c(l134:s590:k960:d14:s0)		iTemp642 [k660 lr590:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] < 0x8 {const-unsigned-char literal}
intro.c(l134:s591:k961:d14:s0)		if iTemp642 [k660 lr590:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forbody_9($40)
intro.c(l133:s592:k1049:d13:s0)		iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] = iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] + 0x8 {const-unsigned-char literal}
intro.c(l133:s593:k966:d13:s0)		iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] + 0x1 {const-unsigned-char literal}
intro.c(l133:s594:k968:d13:s0)		iTemp645 [k663 lr594:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x8 {const-unsigned-char literal}
intro.c(l133:s595:k969:d13:s0)		if iTemp645 [k663 lr594:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl7($66)
intro.c(l141:s596:k972:d1:s0)		send 0x8c {const-unsigned-char literal}{argreg = 1}
intro.c(l141:s597:k973:d1:s0)		iTemp646 [k664 lr597:597 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l142:s598:k974:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l142:s599:k975:d1:s0)		iTemp647 [k665 lr599:599 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l143:s600:k976:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l143:s601:k977:d1:s0)		iTemp648 [k666 lr601:601 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l144:s602:k978:d1:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
intro.c(l144:s603:k979:d1:s0)		iTemp649 [k667 lr603:603 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l145:s604:k980:d1:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
intro.c(l145:s605:k981:d1:s0)		iTemp650 [k668 lr605:605 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l146:s606:k982:d1:s0)		send 0xcc {const-unsigned-char literal}{argreg = 1}
intro.c(l146:s607:k983:d1:s0)		iTemp651 [k669 lr607:607 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l147:s608:k984:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l147:s609:k985:d1:s0)		iTemp652 [k670 lr609:609 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l148:s610:k986:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l148:s611:k987:d1:s0)		iTemp653 [k671 lr611:611 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l149:s612:k988:d1:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
intro.c(l149:s613:k989:d1:s0)		iTemp654 [k672 lr613:613 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l150:s614:k990:d1:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
intro.c(l150:s615:k991:d1:s0)		iTemp655 [k673 lr615:615 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l151:s616:k992:d1:s0)		iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15}[r0x00 r0x01 ] := 0x0 {unsigned-int literal}
intro.c(l153:s617:k995:d1:s0)	 _forcontinue_0($45) :
intro.c(l67:s618:k997:d1:s0)		iTemp657 [k675 lr400:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_x_1_15}[r0x02 ] = iTemp657 [k675 lr400:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_x_1_15}[r0x02 ] + 0x1 {const-unsigned-char literal}
intro.c(l67:s619:k999:d1:s0)		iTemp658 [k676 lr619:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp657 [k675 lr400:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_x_1_15}[r0x02 ] < 0x64 {const-unsigned-char literal}
intro.c(l67:s620:k1000:d1:s0)		if iTemp658 [k676 lr619:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl0($48)
intro.c(l67:s621:k1003:d0:s0)	 _return($46) :
intro.c(l67:s622:k1004:d0:s0)		eproc _intro [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( ) fixed}

----------------------------------------------------------------
Basic Block preHeaderLbl0 : loop Depth = 1 noPath = 0 , lastinLoop = 0
depth 1st num 3 : bbnum = 2 1st iCode = 402 , last iCode = 403
visited 1 : hasFcall = 0

defines bitVector :bitvector Size = 1073 bSize = 135
Bits on { (1015) }

local defines bitVector :bitvector Size = 1073 bSize = 135
Bits on { (1015) }

pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

in pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

inDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1034) (1039) (1044) (1049) (1050) }

outDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1015) (1034) (1039) (1044) (1049) (1050) }

usesDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { }

----------------------------------------------------------------
intro.c(l68:s402:k1005:d1:s0)	 preHeaderLbl0($48) :
intro.c(l68:s403:k1015:d1:s0)		iTemp531 [k542 lr403:407 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_delay_1_15}[r0x03 r0x04 ] := 0x4e20 {unsigned-int literal}
intro.c(l68:s405:k726:d14:s0)	 _forcontinue_1($27) :
intro.c(l68:s406:k727:d14:s0)		iTemp531 [k542 lr403:407 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_delay_1_15}[r0x03 r0x04 ] = iTemp531 [k542 lr403:407 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_delay_1_15}[r0x03 r0x04 ] - 0x1 {unsigned-int literal}
intro.c(l68:s407:k729:d14:s0)		if iTemp531 [k542 lr403:407 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_delay_1_15}[r0x03 r0x04 ] != 0 goto _forcontinue_1($27)
intro.c(l69:s408:k736:d1:s0)		iTemp532 [k544 lr408:408 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _limpa_lcd [k543 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( ) fixed}
intro.c(l70:s409:k737:d1:s0)		send 0x40 {const-unsigned-char literal}{argreg = 1}
intro.c(l70:s410:k738:d1:s0)		iTemp533 [k547 lr410:410 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l71:s411:k739:d1:s0)		iTemp534 [k548 lr411:412 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15}[r0x00 r0x01 ] > 0x3 {unsigned-int literal}
intro.c(l71:s412:k740:d1:s0)		if iTemp534 [k548 lr411:412 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forcontinue_0($45)
intro.c(l71:s413:k741:d1:s0)		jtab	iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15}[r0x00 r0x01 ]; _case_0_0; _case_0_1; _case_0_2; _case_0_3
intro.c(l72:s414:k742:d1:s0)	 _case_0_0($2) :
intro.c(l73:s415:k1030:d1:s0)		iTemp557 [k575 lr415:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] := 0x0 {const-unsigned-char literal}
intro.c(l73:s416:k1033:d1:s0)		iTemp539 [k556 lr416:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] := 0x0 {unsigned-int literal}
intro.c(l74:s418:k1006:d13:s0)	 preHeaderLbl1($52) :
intro.c(l74:s419:k762:d13:s0)		iTemp546 [k564 lr419:420 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register}[r0x06 ] = iTemp557 [k575 lr415:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] - 0x4 {const-unsigned-char literal}
intro.c(l74:s420:k763:d13:s0)		iTemp547 [k565 lr420:421 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x06 r0x07 ] = iTemp546 [k564 lr419:420 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register}[r0x06 ] * 0x8 {const-unsigned-char literal}
intro.c(l74:s421:k764:d13:s0)		iTemp548 [k566 lr421:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] = iTemp104 [k108 lr86:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp547 [k565 lr420:421 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x06 r0x07 ]
intro.c(l74:s422:k753:d13:s0)		iTemp540 [k557 lr422:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x08 r0x09 ] = iTemp16 [k19 lr20:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp539 [k556 lr416:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ]
intro.c(l74:s423:k747:d13:s0)		iTemp537 [k553 lr423:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0a ] = iTemp557 [k575 lr415:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x4 {const-unsigned-char literal}
intro.c(l74:s424:k1018:d13:s0)		iTemp554 [k572 lr424:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] := 0x0 {const-unsigned-char literal}
intro.c(l74:s426:k746:d14:s0)	 _forbody_3($28) :
intro.c(l75:s427:k748:d14:s0)		if iTemp537 [k553 lr423:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0a ] == 0 goto _iffalse_0($4)
intro.c(l76:s428:k755:d14:s0)		iTemp542 [k559 lr428:429 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] = iTemp540 [k557 lr422:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x08 r0x09 ] + iTemp554 [k572 lr424:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ]
intro.c(l76:s429:k756:d14:s0)		iTemp543 [k560 lr429:430 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ] = @[iTemp542 [k559 lr428:429 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] + 0x0 {const-unsigned-char literal}]
intro.c(l76:s430:k757:d14:s0)		send iTemp543 [k560 lr429:430 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ]{argreg = 1}
intro.c(l76:s431:k758:d14:s0)		iTemp544 [k562 lr431:431 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l76:s432:k759:d14:s0)		 goto _forcontinue_3($29)
intro.c(l76:s433:k760:d14:s0)	 _iffalse_0($4) :
intro.c(l78:s434:k766:d14:s0)		iTemp550 [k568 lr434:435 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] = iTemp548 [k566 lr421:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] + iTemp554 [k572 lr424:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ]
intro.c(l78:s435:k767:d14:s0)		iTemp551 [k569 lr435:436 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ] = @[iTemp550 [k568 lr434:435 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] + 0x0 {const-unsigned-char literal}]
intro.c(l78:s436:k768:d14:s0)		send iTemp551 [k569 lr435:436 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ]{argreg = 1}
intro.c(l78:s437:k769:d14:s0)		iTemp552 [k570 lr437:437 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l78:s438:k771:d14:s0)	 _forcontinue_3($29) :
intro.c(l74:s439:k773:d14:s0)		iTemp554 [k572 lr424:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] = iTemp554 [k572 lr424:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] + 0x1 {const-unsigned-char literal}
intro.c(l74:s440:k775:d14:s0)		iTemp555 [k573 lr440:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp554 [k572 lr424:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] < 0x8 {const-unsigned-char literal}
intro.c(l74:s441:k776:d14:s0)		if iTemp555 [k573 lr440:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forbody_3($28)
intro.c(l73:s442:k1034:d13:s0)		iTemp539 [k556 lr416:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] = iTemp539 [k556 lr416:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] + 0x8 {const-unsigned-char literal}
intro.c(l73:s443:k781:d13:s0)		iTemp557 [k575 lr415:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] = iTemp557 [k575 lr415:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] + 0x1 {const-unsigned-char literal}
intro.c(l73:s444:k783:d13:s0)		iTemp558 [k576 lr444:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp557 [k575 lr415:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x8 {const-unsigned-char literal}
intro.c(l73:s445:k784:d13:s0)		if iTemp558 [k576 lr444:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl1($52)
intro.c(l81:s446:k787:d1:s0)		send 0x80 {const-unsigned-char literal}{argreg = 1}
intro.c(l81:s447:k788:d1:s0)		iTemp559 [k577 lr447:447 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l82:s448:k789:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l82:s449:k790:d1:s0)		iTemp560 [k578 lr449:449 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l83:s450:k791:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l83:s451:k792:d1:s0)		iTemp561 [k579 lr451:451 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l84:s452:k793:d1:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
intro.c(l84:s453:k794:d1:s0)		iTemp562 [k580 lr453:453 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l85:s454:k795:d1:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
intro.c(l85:s455:k796:d1:s0)		iTemp563 [k581 lr455:455 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l86:s456:k797:d1:s0)		send 0xc0 {const-unsigned-char literal}{argreg = 1}
intro.c(l86:s457:k798:d1:s0)		iTemp564 [k582 lr457:457 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l87:s458:k799:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l87:s459:k800:d1:s0)		iTemp565 [k583 lr459:459 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l88:s460:k801:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l88:s461:k802:d1:s0)		iTemp566 [k584 lr461:461 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l89:s462:k803:d1:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
intro.c(l89:s463:k804:d1:s0)		iTemp567 [k585 lr463:463 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l90:s464:k805:d1:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
intro.c(l90:s465:k806:d1:s0)		iTemp568 [k586 lr465:465 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l91:s466:k807:d1:s0)		iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15}[r0x00 r0x01 ] := 0x1 {unsigned-int literal}
intro.c(l92:s467:k808:d1:s0)		 goto _forcontinue_0($45)
intro.c(l93:s468:k809:d1:s0)	 _case_0_1($8) :
intro.c(l94:s469:k1035:d1:s0)		iTemp589 [k607 lr469:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] := 0x0 {const-unsigned-char literal}
intro.c(l94:s470:k1038:d1:s0)		iTemp571 [k589 lr470:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] := 0x0 {unsigned-int literal}
intro.c(l95:s472:k1008:d13:s0)	 preHeaderLbl3($57) :
intro.c(l95:s473:k829:d13:s0)		iTemp578 [k596 lr473:474 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register}[r0x06 ] = iTemp589 [k607 lr469:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] - 0x4 {const-unsigned-char literal}
intro.c(l95:s474:k830:d13:s0)		iTemp579 [k597 lr474:475 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x06 r0x07 ] = iTemp578 [k596 lr473:474 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register}[r0x06 ] * 0x8 {const-unsigned-char literal}
intro.c(l95:s475:k831:d13:s0)		iTemp580 [k598 lr475:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] = iTemp280 [k286 lr218:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp579 [k597 lr474:475 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x06 r0x07 ]
intro.c(l95:s476:k820:d13:s0)		iTemp572 [k590 lr476:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x08 r0x09 ] = iTemp192 [k197 lr152:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp571 [k589 lr470:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ]
intro.c(l95:s477:k814:d13:s0)		iTemp569 [k587 lr477:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0a ] = iTemp589 [k607 lr469:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x4 {const-unsigned-char literal}
intro.c(l95:s478:k1021:d13:s0)		iTemp586 [k604 lr478:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] := 0x0 {const-unsigned-char literal}
intro.c(l95:s480:k813:d14:s0)	 _forbody_5($32) :
intro.c(l96:s481:k815:d14:s0)		if iTemp569 [k587 lr477:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0a ] == 0 goto _iffalse_1($10)
intro.c(l97:s482:k822:d14:s0)		iTemp574 [k592 lr482:483 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] = iTemp572 [k590 lr476:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x08 r0x09 ] + iTemp586 [k604 lr478:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ]
intro.c(l97:s483:k823:d14:s0)		iTemp575 [k593 lr483:484 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ] = @[iTemp574 [k592 lr482:483 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] + 0x0 {const-unsigned-char literal}]
intro.c(l97:s484:k824:d14:s0)		send iTemp575 [k593 lr483:484 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ]{argreg = 1}
intro.c(l97:s485:k825:d14:s0)		iTemp576 [k594 lr485:485 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l97:s486:k826:d14:s0)		 goto _forcontinue_5($33)
intro.c(l97:s487:k827:d14:s0)	 _iffalse_1($10) :
intro.c(l99:s488:k833:d14:s0)		iTemp582 [k600 lr488:489 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] = iTemp580 [k598 lr475:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] + iTemp586 [k604 lr478:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ]
intro.c(l99:s489:k834:d14:s0)		iTemp583 [k601 lr489:490 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ] = @[iTemp582 [k600 lr488:489 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] + 0x0 {const-unsigned-char literal}]
intro.c(l99:s490:k835:d14:s0)		send iTemp583 [k601 lr489:490 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ]{argreg = 1}
intro.c(l99:s491:k836:d14:s0)		iTemp584 [k602 lr491:491 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l99:s492:k838:d14:s0)	 _forcontinue_5($33) :
intro.c(l95:s493:k840:d14:s0)		iTemp586 [k604 lr478:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] = iTemp586 [k604 lr478:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] + 0x1 {const-unsigned-char literal}
intro.c(l95:s494:k842:d14:s0)		iTemp587 [k605 lr494:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp586 [k604 lr478:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] < 0x8 {const-unsigned-char literal}
intro.c(l95:s495:k843:d14:s0)		if iTemp587 [k605 lr494:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forbody_5($32)
intro.c(l94:s496:k1039:d13:s0)		iTemp571 [k589 lr470:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] = iTemp571 [k589 lr470:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] + 0x8 {const-unsigned-char literal}
intro.c(l94:s497:k848:d13:s0)		iTemp589 [k607 lr469:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] = iTemp589 [k607 lr469:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] + 0x1 {const-unsigned-char literal}
intro.c(l94:s498:k850:d13:s0)		iTemp590 [k608 lr498:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp589 [k607 lr469:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x8 {const-unsigned-char literal}
intro.c(l94:s499:k851:d13:s0)		if iTemp590 [k608 lr498:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl3($57)
intro.c(l102:s500:k854:d1:s0)		send 0x84 {const-unsigned-char literal}{argreg = 1}
intro.c(l102:s501:k855:d1:s0)		iTemp591 [k609 lr501:501 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l103:s502:k856:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l103:s503:k857:d1:s0)		iTemp592 [k610 lr503:503 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l104:s504:k858:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l104:s505:k859:d1:s0)		iTemp593 [k611 lr505:505 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l105:s506:k860:d1:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
intro.c(l105:s507:k861:d1:s0)		iTemp594 [k612 lr507:507 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l106:s508:k862:d1:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
intro.c(l106:s509:k863:d1:s0)		iTemp595 [k613 lr509:509 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l107:s510:k864:d1:s0)		send 0xc4 {const-unsigned-char literal}{argreg = 1}
intro.c(l107:s511:k865:d1:s0)		iTemp596 [k614 lr511:511 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l108:s512:k866:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l108:s513:k867:d1:s0)		iTemp597 [k615 lr513:513 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l109:s514:k868:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l109:s515:k869:d1:s0)		iTemp598 [k616 lr515:515 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l110:s516:k870:d1:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
intro.c(l110:s517:k871:d1:s0)		iTemp599 [k617 lr517:517 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l111:s518:k872:d1:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
intro.c(l111:s519:k873:d1:s0)		iTemp600 [k618 lr519:519 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l112:s520:k874:d1:s0)		iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15}[r0x00 r0x01 ] := 0x2 {unsigned-int literal}
intro.c(l113:s521:k875:d1:s0)		 goto _forcontinue_0($45)
intro.c(l114:s522:k876:d1:s0)	 _case_0_2($14) :
intro.c(l115:s523:k1040:d1:s0)		iTemp612 [k630 lr523:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] := 0x0 {const-unsigned-char literal}
intro.c(l115:s524:k1043:d1:s0)		iTemp602 [k620 lr524:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] := 0x0 {unsigned-int literal}
intro.c(l116:s526:k1010:d13:s0)	 preHeaderLbl5($61) :
intro.c(l116:s527:k883:d13:s0)		iTemp603 [k621 lr527:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] = iTemp368 [k375 lr284:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp602 [k620 lr524:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ]
intro.c(l116:s528:k1024:d13:s0)		iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x08 ] := 0x0 {const-unsigned-char literal}
intro.c(l116:s530:k880:d14:s0)	 _forbody_7($36) :
intro.c(l117:s531:k885:d14:s0)		iTemp605 [k623 lr531:532 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x09 r0x0a ] = iTemp603 [k621 lr527:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] + iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x08 ]
intro.c(l117:s532:k886:d14:s0)		iTemp606 [k624 lr532:533 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x09 ] = @[iTemp605 [k623 lr531:532 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x09 r0x0a ] + 0x0 {const-unsigned-char literal}]
intro.c(l117:s533:k887:d14:s0)		send iTemp606 [k624 lr532:533 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x09 ]{argreg = 1}
intro.c(l117:s534:k888:d14:s0)		iTemp607 [k625 lr534:534 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l116:s535:k891:d14:s0)		iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x08 ] = iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x08 ] + 0x1 {const-unsigned-char literal}
intro.c(l116:s536:k893:d14:s0)		iTemp610 [k628 lr536:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x08 ] < 0x8 {const-unsigned-char literal}
intro.c(l116:s537:k894:d14:s0)		if iTemp610 [k628 lr536:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forbody_7($36)
intro.c(l115:s538:k1044:d13:s0)		iTemp602 [k620 lr524:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] = iTemp602 [k620 lr524:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] + 0x8 {const-unsigned-char literal}
intro.c(l115:s539:k899:d13:s0)		iTemp612 [k630 lr523:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] = iTemp612 [k630 lr523:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] + 0x1 {const-unsigned-char literal}
intro.c(l115:s540:k901:d13:s0)		iTemp613 [k631 lr540:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp612 [k630 lr523:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x4 {const-unsigned-char literal}
intro.c(l115:s541:k902:d13:s0)		if iTemp613 [k631 lr540:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl5($61)
intro.c(l120:s542:k905:d1:s0)		send 0x88 {const-unsigned-char literal}{argreg = 1}
intro.c(l120:s543:k906:d1:s0)		iTemp614 [k632 lr543:543 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l121:s544:k907:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l121:s545:k908:d1:s0)		iTemp615 [k633 lr545:545 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l122:s546:k909:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l122:s547:k910:d1:s0)		iTemp616 [k634 lr547:547 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l123:s548:k911:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l123:s549:k912:d1:s0)		iTemp617 [k635 lr549:549 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l124:s550:k913:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l124:s551:k914:d1:s0)		iTemp618 [k636 lr551:551 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l125:s552:k915:d1:s0)		send 0xc8 {const-unsigned-char literal}{argreg = 1}
intro.c(l125:s553:k916:d1:s0)		iTemp619 [k637 lr553:553 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l126:s554:k917:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l126:s555:k918:d1:s0)		iTemp620 [k638 lr555:555 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l127:s556:k919:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l127:s557:k920:d1:s0)		iTemp621 [k639 lr557:557 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l128:s558:k921:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l128:s559:k922:d1:s0)		iTemp622 [k640 lr559:559 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l129:s560:k923:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l129:s561:k924:d1:s0)		iTemp623 [k641 lr561:561 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l130:s562:k925:d1:s0)		iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15}[r0x00 r0x01 ] := 0x3 {unsigned-int literal}
intro.c(l131:s563:k926:d1:s0)		 goto _forcontinue_0($45)
intro.c(l132:s564:k927:d1:s0)	 _case_0_3($17) :
intro.c(l133:s565:k1045:d1:s0)		iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] := 0x0 {const-unsigned-char literal}
intro.c(l133:s566:k1048:d1:s0)		iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] := 0x0 {unsigned-int literal}
intro.c(l134:s568:k1012:d13:s0)	 preHeaderLbl7($66) :
intro.c(l134:s569:k947:d13:s0)		iTemp633 [k651 lr569:570 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register}[r0x06 ] = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] - 0x4 {const-unsigned-char literal}
intro.c(l134:s570:k948:d13:s0)		iTemp634 [k652 lr570:571 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x06 r0x07 ] = iTemp633 [k651 lr569:570 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register}[r0x06 ] * 0x8 {const-unsigned-char literal}
intro.c(l134:s571:k949:d13:s0)		iTemp635 [k653 lr571:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] = iTemp456 [k464 lr350:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp634 [k652 lr570:571 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x06 r0x07 ]
intro.c(l134:s572:k938:d13:s0)		iTemp627 [k645 lr572:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x08 r0x09 ] = iTemp368 [k375 lr284:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ]
intro.c(l134:s573:k932:d13:s0)		iTemp624 [k642 lr573:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0a ] = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x4 {const-unsigned-char literal}
intro.c(l134:s574:k1027:d13:s0)		iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] := 0x0 {const-unsigned-char literal}
intro.c(l134:s576:k931:d14:s0)	 _forbody_9($40) :
intro.c(l135:s577:k933:d14:s0)		if iTemp624 [k642 lr573:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0a ] == 0 goto _iffalse_2($19)
intro.c(l136:s578:k940:d14:s0)		iTemp629 [k647 lr578:579 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] = iTemp627 [k645 lr572:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x08 r0x09 ] + iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ]
intro.c(l136:s579:k941:d14:s0)		iTemp630 [k648 lr579:580 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ] = @[iTemp629 [k647 lr578:579 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] + 0x0 {const-unsigned-char literal}]
intro.c(l136:s580:k942:d14:s0)		send iTemp630 [k648 lr579:580 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ]{argreg = 1}
intro.c(l136:s581:k943:d14:s0)		iTemp631 [k649 lr581:581 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l136:s582:k944:d14:s0)		 goto _forcontinue_9($41)
intro.c(l136:s583:k945:d14:s0)	 _iffalse_2($19) :
intro.c(l138:s584:k951:d14:s0)		iTemp637 [k655 lr584:585 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] = iTemp635 [k653 lr571:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] + iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ]
intro.c(l138:s585:k952:d14:s0)		iTemp638 [k656 lr585:586 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ] = @[iTemp637 [k655 lr584:585 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] + 0x0 {const-unsigned-char literal}]
intro.c(l138:s586:k953:d14:s0)		send iTemp638 [k656 lr585:586 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ]{argreg = 1}
intro.c(l138:s587:k954:d14:s0)		iTemp639 [k657 lr587:587 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l138:s588:k956:d14:s0)	 _forcontinue_9($41) :
intro.c(l134:s589:k958:d14:s0)		iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] = iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] + 0x1 {const-unsigned-char literal}
intro.c(l134:s590:k960:d14:s0)		iTemp642 [k660 lr590:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] < 0x8 {const-unsigned-char literal}
intro.c(l134:s591:k961:d14:s0)		if iTemp642 [k660 lr590:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forbody_9($40)
intro.c(l133:s592:k1049:d13:s0)		iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] = iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] + 0x8 {const-unsigned-char literal}
intro.c(l133:s593:k966:d13:s0)		iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] + 0x1 {const-unsigned-char literal}
intro.c(l133:s594:k968:d13:s0)		iTemp645 [k663 lr594:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x8 {const-unsigned-char literal}
intro.c(l133:s595:k969:d13:s0)		if iTemp645 [k663 lr594:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl7($66)
intro.c(l141:s596:k972:d1:s0)		send 0x8c {const-unsigned-char literal}{argreg = 1}
intro.c(l141:s597:k973:d1:s0)		iTemp646 [k664 lr597:597 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l142:s598:k974:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l142:s599:k975:d1:s0)		iTemp647 [k665 lr599:599 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l143:s600:k976:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l143:s601:k977:d1:s0)		iTemp648 [k666 lr601:601 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l144:s602:k978:d1:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
intro.c(l144:s603:k979:d1:s0)		iTemp649 [k667 lr603:603 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l145:s604:k980:d1:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
intro.c(l145:s605:k981:d1:s0)		iTemp650 [k668 lr605:605 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l146:s606:k982:d1:s0)		send 0xcc {const-unsigned-char literal}{argreg = 1}
intro.c(l146:s607:k983:d1:s0)		iTemp651 [k669 lr607:607 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l147:s608:k984:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l147:s609:k985:d1:s0)		iTemp652 [k670 lr609:609 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l148:s610:k986:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l148:s611:k987:d1:s0)		iTemp653 [k671 lr611:611 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l149:s612:k988:d1:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
intro.c(l149:s613:k989:d1:s0)		iTemp654 [k672 lr613:613 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l150:s614:k990:d1:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
intro.c(l150:s615:k991:d1:s0)		iTemp655 [k673 lr615:615 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l151:s616:k992:d1:s0)		iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15}[r0x00 r0x01 ] := 0x0 {unsigned-int literal}
intro.c(l153:s617:k995:d1:s0)	 _forcontinue_0($45) :
intro.c(l67:s618:k997:d1:s0)		iTemp657 [k675 lr400:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_x_1_15}[r0x02 ] = iTemp657 [k675 lr400:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_x_1_15}[r0x02 ] + 0x1 {const-unsigned-char literal}
intro.c(l67:s619:k999:d1:s0)		iTemp658 [k676 lr619:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp657 [k675 lr400:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_x_1_15}[r0x02 ] < 0x64 {const-unsigned-char literal}
intro.c(l67:s620:k1000:d1:s0)		if iTemp658 [k676 lr619:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl0($48)
intro.c(l67:s621:k1003:d0:s0)	 _return($46) :
intro.c(l67:s622:k1004:d0:s0)		eproc _intro [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( ) fixed}

----------------------------------------------------------------
Basic Block preHeaderLbl30 : loop Depth = 1 noPath = 0 , lastinLoop = 0
depth 1st num 4 : bbnum = 3 1st iCode = 404 , last iCode = 404
visited 1 : hasFcall = 0

defines bitVector :bitvector Size = 1073 bSize = 135
Bits on { }

local defines bitVector :
pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

in pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

inDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1015) (1034) (1039) (1044) (1049) (1050) }

outDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1015) (1034) (1039) (1044) (1049) (1050) }

usesDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { }

----------------------------------------------------------------
intro.c(l68:s404:k1063:d1:s0)	 preHeaderLbl30($104) :
intro.c(l68:s405:k726:d14:s0)	 _forcontinue_1($27) :
intro.c(l68:s406:k727:d14:s0)		iTemp531 [k542 lr403:407 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_delay_1_15}[r0x03 r0x04 ] = iTemp531 [k542 lr403:407 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_delay_1_15}[r0x03 r0x04 ] - 0x1 {unsigned-int literal}
intro.c(l68:s407:k729:d14:s0)		if iTemp531 [k542 lr403:407 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_delay_1_15}[r0x03 r0x04 ] != 0 goto _forcontinue_1($27)
intro.c(l69:s408:k736:d1:s0)		iTemp532 [k544 lr408:408 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _limpa_lcd [k543 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( ) fixed}
intro.c(l70:s409:k737:d1:s0)		send 0x40 {const-unsigned-char literal}{argreg = 1}
intro.c(l70:s410:k738:d1:s0)		iTemp533 [k547 lr410:410 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l71:s411:k739:d1:s0)		iTemp534 [k548 lr411:412 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15}[r0x00 r0x01 ] > 0x3 {unsigned-int literal}
intro.c(l71:s412:k740:d1:s0)		if iTemp534 [k548 lr411:412 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forcontinue_0($45)
intro.c(l71:s413:k741:d1:s0)		jtab	iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15}[r0x00 r0x01 ]; _case_0_0; _case_0_1; _case_0_2; _case_0_3
intro.c(l72:s414:k742:d1:s0)	 _case_0_0($2) :
intro.c(l73:s415:k1030:d1:s0)		iTemp557 [k575 lr415:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] := 0x0 {const-unsigned-char literal}
intro.c(l73:s416:k1033:d1:s0)		iTemp539 [k556 lr416:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] := 0x0 {unsigned-int literal}
intro.c(l74:s418:k1006:d13:s0)	 preHeaderLbl1($52) :
intro.c(l74:s419:k762:d13:s0)		iTemp546 [k564 lr419:420 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register}[r0x06 ] = iTemp557 [k575 lr415:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] - 0x4 {const-unsigned-char literal}
intro.c(l74:s420:k763:d13:s0)		iTemp547 [k565 lr420:421 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x06 r0x07 ] = iTemp546 [k564 lr419:420 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register}[r0x06 ] * 0x8 {const-unsigned-char literal}
intro.c(l74:s421:k764:d13:s0)		iTemp548 [k566 lr421:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] = iTemp104 [k108 lr86:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp547 [k565 lr420:421 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x06 r0x07 ]
intro.c(l74:s422:k753:d13:s0)		iTemp540 [k557 lr422:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x08 r0x09 ] = iTemp16 [k19 lr20:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp539 [k556 lr416:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ]
intro.c(l74:s423:k747:d13:s0)		iTemp537 [k553 lr423:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0a ] = iTemp557 [k575 lr415:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x4 {const-unsigned-char literal}
intro.c(l74:s424:k1018:d13:s0)		iTemp554 [k572 lr424:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] := 0x0 {const-unsigned-char literal}
intro.c(l74:s426:k746:d14:s0)	 _forbody_3($28) :
intro.c(l75:s427:k748:d14:s0)		if iTemp537 [k553 lr423:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0a ] == 0 goto _iffalse_0($4)
intro.c(l76:s428:k755:d14:s0)		iTemp542 [k559 lr428:429 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] = iTemp540 [k557 lr422:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x08 r0x09 ] + iTemp554 [k572 lr424:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ]
intro.c(l76:s429:k756:d14:s0)		iTemp543 [k560 lr429:430 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ] = @[iTemp542 [k559 lr428:429 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] + 0x0 {const-unsigned-char literal}]
intro.c(l76:s430:k757:d14:s0)		send iTemp543 [k560 lr429:430 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ]{argreg = 1}
intro.c(l76:s431:k758:d14:s0)		iTemp544 [k562 lr431:431 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l76:s432:k759:d14:s0)		 goto _forcontinue_3($29)
intro.c(l76:s433:k760:d14:s0)	 _iffalse_0($4) :
intro.c(l78:s434:k766:d14:s0)		iTemp550 [k568 lr434:435 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] = iTemp548 [k566 lr421:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] + iTemp554 [k572 lr424:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ]
intro.c(l78:s435:k767:d14:s0)		iTemp551 [k569 lr435:436 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ] = @[iTemp550 [k568 lr434:435 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] + 0x0 {const-unsigned-char literal}]
intro.c(l78:s436:k768:d14:s0)		send iTemp551 [k569 lr435:436 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ]{argreg = 1}
intro.c(l78:s437:k769:d14:s0)		iTemp552 [k570 lr437:437 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l78:s438:k771:d14:s0)	 _forcontinue_3($29) :
intro.c(l74:s439:k773:d14:s0)		iTemp554 [k572 lr424:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] = iTemp554 [k572 lr424:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] + 0x1 {const-unsigned-char literal}
intro.c(l74:s440:k775:d14:s0)		iTemp555 [k573 lr440:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp554 [k572 lr424:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] < 0x8 {const-unsigned-char literal}
intro.c(l74:s441:k776:d14:s0)		if iTemp555 [k573 lr440:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forbody_3($28)
intro.c(l73:s442:k1034:d13:s0)		iTemp539 [k556 lr416:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] = iTemp539 [k556 lr416:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] + 0x8 {const-unsigned-char literal}
intro.c(l73:s443:k781:d13:s0)		iTemp557 [k575 lr415:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] = iTemp557 [k575 lr415:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] + 0x1 {const-unsigned-char literal}
intro.c(l73:s444:k783:d13:s0)		iTemp558 [k576 lr444:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp557 [k575 lr415:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x8 {const-unsigned-char literal}
intro.c(l73:s445:k784:d13:s0)		if iTemp558 [k576 lr444:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl1($52)
intro.c(l81:s446:k787:d1:s0)		send 0x80 {const-unsigned-char literal}{argreg = 1}
intro.c(l81:s447:k788:d1:s0)		iTemp559 [k577 lr447:447 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l82:s448:k789:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l82:s449:k790:d1:s0)		iTemp560 [k578 lr449:449 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l83:s450:k791:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l83:s451:k792:d1:s0)		iTemp561 [k579 lr451:451 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l84:s452:k793:d1:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
intro.c(l84:s453:k794:d1:s0)		iTemp562 [k580 lr453:453 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l85:s454:k795:d1:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
intro.c(l85:s455:k796:d1:s0)		iTemp563 [k581 lr455:455 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l86:s456:k797:d1:s0)		send 0xc0 {const-unsigned-char literal}{argreg = 1}
intro.c(l86:s457:k798:d1:s0)		iTemp564 [k582 lr457:457 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l87:s458:k799:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l87:s459:k800:d1:s0)		iTemp565 [k583 lr459:459 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l88:s460:k801:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l88:s461:k802:d1:s0)		iTemp566 [k584 lr461:461 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l89:s462:k803:d1:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
intro.c(l89:s463:k804:d1:s0)		iTemp567 [k585 lr463:463 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l90:s464:k805:d1:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
intro.c(l90:s465:k806:d1:s0)		iTemp568 [k586 lr465:465 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l91:s466:k807:d1:s0)		iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15}[r0x00 r0x01 ] := 0x1 {unsigned-int literal}
intro.c(l92:s467:k808:d1:s0)		 goto _forcontinue_0($45)
intro.c(l93:s468:k809:d1:s0)	 _case_0_1($8) :
intro.c(l94:s469:k1035:d1:s0)		iTemp589 [k607 lr469:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] := 0x0 {const-unsigned-char literal}
intro.c(l94:s470:k1038:d1:s0)		iTemp571 [k589 lr470:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] := 0x0 {unsigned-int literal}
intro.c(l95:s472:k1008:d13:s0)	 preHeaderLbl3($57) :
intro.c(l95:s473:k829:d13:s0)		iTemp578 [k596 lr473:474 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register}[r0x06 ] = iTemp589 [k607 lr469:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] - 0x4 {const-unsigned-char literal}
intro.c(l95:s474:k830:d13:s0)		iTemp579 [k597 lr474:475 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x06 r0x07 ] = iTemp578 [k596 lr473:474 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register}[r0x06 ] * 0x8 {const-unsigned-char literal}
intro.c(l95:s475:k831:d13:s0)		iTemp580 [k598 lr475:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] = iTemp280 [k286 lr218:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp579 [k597 lr474:475 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x06 r0x07 ]
intro.c(l95:s476:k820:d13:s0)		iTemp572 [k590 lr476:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x08 r0x09 ] = iTemp192 [k197 lr152:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp571 [k589 lr470:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ]
intro.c(l95:s477:k814:d13:s0)		iTemp569 [k587 lr477:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0a ] = iTemp589 [k607 lr469:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x4 {const-unsigned-char literal}
intro.c(l95:s478:k1021:d13:s0)		iTemp586 [k604 lr478:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] := 0x0 {const-unsigned-char literal}
intro.c(l95:s480:k813:d14:s0)	 _forbody_5($32) :
intro.c(l96:s481:k815:d14:s0)		if iTemp569 [k587 lr477:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0a ] == 0 goto _iffalse_1($10)
intro.c(l97:s482:k822:d14:s0)		iTemp574 [k592 lr482:483 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] = iTemp572 [k590 lr476:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x08 r0x09 ] + iTemp586 [k604 lr478:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ]
intro.c(l97:s483:k823:d14:s0)		iTemp575 [k593 lr483:484 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ] = @[iTemp574 [k592 lr482:483 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] + 0x0 {const-unsigned-char literal}]
intro.c(l97:s484:k824:d14:s0)		send iTemp575 [k593 lr483:484 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ]{argreg = 1}
intro.c(l97:s485:k825:d14:s0)		iTemp576 [k594 lr485:485 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l97:s486:k826:d14:s0)		 goto _forcontinue_5($33)
intro.c(l97:s487:k827:d14:s0)	 _iffalse_1($10) :
intro.c(l99:s488:k833:d14:s0)		iTemp582 [k600 lr488:489 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] = iTemp580 [k598 lr475:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] + iTemp586 [k604 lr478:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ]
intro.c(l99:s489:k834:d14:s0)		iTemp583 [k601 lr489:490 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ] = @[iTemp582 [k600 lr488:489 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] + 0x0 {const-unsigned-char literal}]
intro.c(l99:s490:k835:d14:s0)		send iTemp583 [k601 lr489:490 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ]{argreg = 1}
intro.c(l99:s491:k836:d14:s0)		iTemp584 [k602 lr491:491 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l99:s492:k838:d14:s0)	 _forcontinue_5($33) :
intro.c(l95:s493:k840:d14:s0)		iTemp586 [k604 lr478:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] = iTemp586 [k604 lr478:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] + 0x1 {const-unsigned-char literal}
intro.c(l95:s494:k842:d14:s0)		iTemp587 [k605 lr494:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp586 [k604 lr478:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] < 0x8 {const-unsigned-char literal}
intro.c(l95:s495:k843:d14:s0)		if iTemp587 [k605 lr494:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forbody_5($32)
intro.c(l94:s496:k1039:d13:s0)		iTemp571 [k589 lr470:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] = iTemp571 [k589 lr470:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] + 0x8 {const-unsigned-char literal}
intro.c(l94:s497:k848:d13:s0)		iTemp589 [k607 lr469:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] = iTemp589 [k607 lr469:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] + 0x1 {const-unsigned-char literal}
intro.c(l94:s498:k850:d13:s0)		iTemp590 [k608 lr498:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp589 [k607 lr469:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x8 {const-unsigned-char literal}
intro.c(l94:s499:k851:d13:s0)		if iTemp590 [k608 lr498:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl3($57)
intro.c(l102:s500:k854:d1:s0)		send 0x84 {const-unsigned-char literal}{argreg = 1}
intro.c(l102:s501:k855:d1:s0)		iTemp591 [k609 lr501:501 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l103:s502:k856:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l103:s503:k857:d1:s0)		iTemp592 [k610 lr503:503 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l104:s504:k858:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l104:s505:k859:d1:s0)		iTemp593 [k611 lr505:505 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l105:s506:k860:d1:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
intro.c(l105:s507:k861:d1:s0)		iTemp594 [k612 lr507:507 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l106:s508:k862:d1:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
intro.c(l106:s509:k863:d1:s0)		iTemp595 [k613 lr509:509 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l107:s510:k864:d1:s0)		send 0xc4 {const-unsigned-char literal}{argreg = 1}
intro.c(l107:s511:k865:d1:s0)		iTemp596 [k614 lr511:511 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l108:s512:k866:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l108:s513:k867:d1:s0)		iTemp597 [k615 lr513:513 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l109:s514:k868:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l109:s515:k869:d1:s0)		iTemp598 [k616 lr515:515 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l110:s516:k870:d1:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
intro.c(l110:s517:k871:d1:s0)		iTemp599 [k617 lr517:517 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l111:s518:k872:d1:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
intro.c(l111:s519:k873:d1:s0)		iTemp600 [k618 lr519:519 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l112:s520:k874:d1:s0)		iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15}[r0x00 r0x01 ] := 0x2 {unsigned-int literal}
intro.c(l113:s521:k875:d1:s0)		 goto _forcontinue_0($45)
intro.c(l114:s522:k876:d1:s0)	 _case_0_2($14) :
intro.c(l115:s523:k1040:d1:s0)		iTemp612 [k630 lr523:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] := 0x0 {const-unsigned-char literal}
intro.c(l115:s524:k1043:d1:s0)		iTemp602 [k620 lr524:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] := 0x0 {unsigned-int literal}
intro.c(l116:s526:k1010:d13:s0)	 preHeaderLbl5($61) :
intro.c(l116:s527:k883:d13:s0)		iTemp603 [k621 lr527:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] = iTemp368 [k375 lr284:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp602 [k620 lr524:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ]
intro.c(l116:s528:k1024:d13:s0)		iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x08 ] := 0x0 {const-unsigned-char literal}
intro.c(l116:s530:k880:d14:s0)	 _forbody_7($36) :
intro.c(l117:s531:k885:d14:s0)		iTemp605 [k623 lr531:532 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x09 r0x0a ] = iTemp603 [k621 lr527:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] + iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x08 ]
intro.c(l117:s532:k886:d14:s0)		iTemp606 [k624 lr532:533 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x09 ] = @[iTemp605 [k623 lr531:532 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x09 r0x0a ] + 0x0 {const-unsigned-char literal}]
intro.c(l117:s533:k887:d14:s0)		send iTemp606 [k624 lr532:533 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x09 ]{argreg = 1}
intro.c(l117:s534:k888:d14:s0)		iTemp607 [k625 lr534:534 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l116:s535:k891:d14:s0)		iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x08 ] = iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x08 ] + 0x1 {const-unsigned-char literal}
intro.c(l116:s536:k893:d14:s0)		iTemp610 [k628 lr536:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x08 ] < 0x8 {const-unsigned-char literal}
intro.c(l116:s537:k894:d14:s0)		if iTemp610 [k628 lr536:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forbody_7($36)
intro.c(l115:s538:k1044:d13:s0)		iTemp602 [k620 lr524:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] = iTemp602 [k620 lr524:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] + 0x8 {const-unsigned-char literal}
intro.c(l115:s539:k899:d13:s0)		iTemp612 [k630 lr523:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] = iTemp612 [k630 lr523:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] + 0x1 {const-unsigned-char literal}
intro.c(l115:s540:k901:d13:s0)		iTemp613 [k631 lr540:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp612 [k630 lr523:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x4 {const-unsigned-char literal}
intro.c(l115:s541:k902:d13:s0)		if iTemp613 [k631 lr540:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl5($61)
intro.c(l120:s542:k905:d1:s0)		send 0x88 {const-unsigned-char literal}{argreg = 1}
intro.c(l120:s543:k906:d1:s0)		iTemp614 [k632 lr543:543 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l121:s544:k907:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l121:s545:k908:d1:s0)		iTemp615 [k633 lr545:545 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l122:s546:k909:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l122:s547:k910:d1:s0)		iTemp616 [k634 lr547:547 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l123:s548:k911:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l123:s549:k912:d1:s0)		iTemp617 [k635 lr549:549 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l124:s550:k913:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l124:s551:k914:d1:s0)		iTemp618 [k636 lr551:551 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l125:s552:k915:d1:s0)		send 0xc8 {const-unsigned-char literal}{argreg = 1}
intro.c(l125:s553:k916:d1:s0)		iTemp619 [k637 lr553:553 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l126:s554:k917:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l126:s555:k918:d1:s0)		iTemp620 [k638 lr555:555 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l127:s556:k919:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l127:s557:k920:d1:s0)		iTemp621 [k639 lr557:557 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l128:s558:k921:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l128:s559:k922:d1:s0)		iTemp622 [k640 lr559:559 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l129:s560:k923:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l129:s561:k924:d1:s0)		iTemp623 [k641 lr561:561 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l130:s562:k925:d1:s0)		iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15}[r0x00 r0x01 ] := 0x3 {unsigned-int literal}
intro.c(l131:s563:k926:d1:s0)		 goto _forcontinue_0($45)
intro.c(l132:s564:k927:d1:s0)	 _case_0_3($17) :
intro.c(l133:s565:k1045:d1:s0)		iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] := 0x0 {const-unsigned-char literal}
intro.c(l133:s566:k1048:d1:s0)		iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] := 0x0 {unsigned-int literal}
intro.c(l134:s568:k1012:d13:s0)	 preHeaderLbl7($66) :
intro.c(l134:s569:k947:d13:s0)		iTemp633 [k651 lr569:570 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register}[r0x06 ] = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] - 0x4 {const-unsigned-char literal}
intro.c(l134:s570:k948:d13:s0)		iTemp634 [k652 lr570:571 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x06 r0x07 ] = iTemp633 [k651 lr569:570 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register}[r0x06 ] * 0x8 {const-unsigned-char literal}
intro.c(l134:s571:k949:d13:s0)		iTemp635 [k653 lr571:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] = iTemp456 [k464 lr350:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp634 [k652 lr570:571 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x06 r0x07 ]
intro.c(l134:s572:k938:d13:s0)		iTemp627 [k645 lr572:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x08 r0x09 ] = iTemp368 [k375 lr284:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ]
intro.c(l134:s573:k932:d13:s0)		iTemp624 [k642 lr573:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0a ] = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x4 {const-unsigned-char literal}
intro.c(l134:s574:k1027:d13:s0)		iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] := 0x0 {const-unsigned-char literal}
intro.c(l134:s576:k931:d14:s0)	 _forbody_9($40) :
intro.c(l135:s577:k933:d14:s0)		if iTemp624 [k642 lr573:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0a ] == 0 goto _iffalse_2($19)
intro.c(l136:s578:k940:d14:s0)		iTemp629 [k647 lr578:579 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] = iTemp627 [k645 lr572:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x08 r0x09 ] + iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ]
intro.c(l136:s579:k941:d14:s0)		iTemp630 [k648 lr579:580 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ] = @[iTemp629 [k647 lr578:579 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] + 0x0 {const-unsigned-char literal}]
intro.c(l136:s580:k942:d14:s0)		send iTemp630 [k648 lr579:580 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ]{argreg = 1}
intro.c(l136:s581:k943:d14:s0)		iTemp631 [k649 lr581:581 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l136:s582:k944:d14:s0)		 goto _forcontinue_9($41)
intro.c(l136:s583:k945:d14:s0)	 _iffalse_2($19) :
intro.c(l138:s584:k951:d14:s0)		iTemp637 [k655 lr584:585 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] = iTemp635 [k653 lr571:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] + iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ]
intro.c(l138:s585:k952:d14:s0)		iTemp638 [k656 lr585:586 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ] = @[iTemp637 [k655 lr584:585 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] + 0x0 {const-unsigned-char literal}]
intro.c(l138:s586:k953:d14:s0)		send iTemp638 [k656 lr585:586 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ]{argreg = 1}
intro.c(l138:s587:k954:d14:s0)		iTemp639 [k657 lr587:587 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l138:s588:k956:d14:s0)	 _forcontinue_9($41) :
intro.c(l134:s589:k958:d14:s0)		iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] = iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] + 0x1 {const-unsigned-char literal}
intro.c(l134:s590:k960:d14:s0)		iTemp642 [k660 lr590:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] < 0x8 {const-unsigned-char literal}
intro.c(l134:s591:k961:d14:s0)		if iTemp642 [k660 lr590:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forbody_9($40)
intro.c(l133:s592:k1049:d13:s0)		iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] = iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] + 0x8 {const-unsigned-char literal}
intro.c(l133:s593:k966:d13:s0)		iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] + 0x1 {const-unsigned-char literal}
intro.c(l133:s594:k968:d13:s0)		iTemp645 [k663 lr594:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x8 {const-unsigned-char literal}
intro.c(l133:s595:k969:d13:s0)		if iTemp645 [k663 lr594:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl7($66)
intro.c(l141:s596:k972:d1:s0)		send 0x8c {const-unsigned-char literal}{argreg = 1}
intro.c(l141:s597:k973:d1:s0)		iTemp646 [k664 lr597:597 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l142:s598:k974:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l142:s599:k975:d1:s0)		iTemp647 [k665 lr599:599 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l143:s600:k976:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l143:s601:k977:d1:s0)		iTemp648 [k666 lr601:601 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l144:s602:k978:d1:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
intro.c(l144:s603:k979:d1:s0)		iTemp649 [k667 lr603:603 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l145:s604:k980:d1:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
intro.c(l145:s605:k981:d1:s0)		iTemp650 [k668 lr605:605 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l146:s606:k982:d1:s0)		send 0xcc {const-unsigned-char literal}{argreg = 1}
intro.c(l146:s607:k983:d1:s0)		iTemp651 [k669 lr607:607 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l147:s608:k984:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l147:s609:k985:d1:s0)		iTemp652 [k670 lr609:609 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l148:s610:k986:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l148:s611:k987:d1:s0)		iTemp653 [k671 lr611:611 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l149:s612:k988:d1:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
intro.c(l149:s613:k989:d1:s0)		iTemp654 [k672 lr613:613 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l150:s614:k990:d1:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
intro.c(l150:s615:k991:d1:s0)		iTemp655 [k673 lr615:615 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l151:s616:k992:d1:s0)		iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15}[r0x00 r0x01 ] := 0x0 {unsigned-int literal}
intro.c(l153:s617:k995:d1:s0)	 _forcontinue_0($45) :
intro.c(l67:s618:k997:d1:s0)		iTemp657 [k675 lr400:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_x_1_15}[r0x02 ] = iTemp657 [k675 lr400:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_x_1_15}[r0x02 ] + 0x1 {const-unsigned-char literal}
intro.c(l67:s619:k999:d1:s0)		iTemp658 [k676 lr619:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp657 [k675 lr400:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_x_1_15}[r0x02 ] < 0x64 {const-unsigned-char literal}
intro.c(l67:s620:k1000:d1:s0)		if iTemp658 [k676 lr619:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl0($48)
intro.c(l67:s621:k1003:d0:s0)	 _return($46) :
intro.c(l67:s622:k1004:d0:s0)		eproc _intro [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( ) fixed}

----------------------------------------------------------------
Basic Block _forcontinue_1 : loop Depth = 14 noPath = 0 , lastinLoop = 0
depth 1st num 5 : bbnum = 4 1st iCode = 405 , last iCode = 407
visited 1 : hasFcall = 0

defines bitVector :bitvector Size = 1073 bSize = 135
Bits on { (727) }

local defines bitVector :bitvector Size = 1073 bSize = 135
Bits on { (727) }

pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

in pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

inDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1015) (1034) (1039) (1044) (1049) (1050) }

outDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1034) (1039) (1044) (1049) (1050) }

usesDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (727) (1015) }

----------------------------------------------------------------
intro.c(l68:s405:k726:d14:s0)	 _forcontinue_1($27) :
intro.c(l68:s406:k727:d14:s0)		iTemp531 [k542 lr403:407 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_delay_1_15}[r0x03 r0x04 ] = iTemp531 [k542 lr403:407 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_delay_1_15}[r0x03 r0x04 ] - 0x1 {unsigned-int literal}
intro.c(l68:s407:k729:d14:s0)		if iTemp531 [k542 lr403:407 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_delay_1_15}[r0x03 r0x04 ] != 0 goto _forcontinue_1($27)
intro.c(l69:s408:k736:d1:s0)		iTemp532 [k544 lr408:408 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _limpa_lcd [k543 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( ) fixed}
intro.c(l70:s409:k737:d1:s0)		send 0x40 {const-unsigned-char literal}{argreg = 1}
intro.c(l70:s410:k738:d1:s0)		iTemp533 [k547 lr410:410 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l71:s411:k739:d1:s0)		iTemp534 [k548 lr411:412 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15}[r0x00 r0x01 ] > 0x3 {unsigned-int literal}
intro.c(l71:s412:k740:d1:s0)		if iTemp534 [k548 lr411:412 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forcontinue_0($45)
intro.c(l71:s413:k741:d1:s0)		jtab	iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15}[r0x00 r0x01 ]; _case_0_0; _case_0_1; _case_0_2; _case_0_3
intro.c(l72:s414:k742:d1:s0)	 _case_0_0($2) :
intro.c(l73:s415:k1030:d1:s0)		iTemp557 [k575 lr415:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] := 0x0 {const-unsigned-char literal}
intro.c(l73:s416:k1033:d1:s0)		iTemp539 [k556 lr416:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] := 0x0 {unsigned-int literal}
intro.c(l74:s418:k1006:d13:s0)	 preHeaderLbl1($52) :
intro.c(l74:s419:k762:d13:s0)		iTemp546 [k564 lr419:420 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register}[r0x06 ] = iTemp557 [k575 lr415:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] - 0x4 {const-unsigned-char literal}
intro.c(l74:s420:k763:d13:s0)		iTemp547 [k565 lr420:421 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x06 r0x07 ] = iTemp546 [k564 lr419:420 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register}[r0x06 ] * 0x8 {const-unsigned-char literal}
intro.c(l74:s421:k764:d13:s0)		iTemp548 [k566 lr421:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] = iTemp104 [k108 lr86:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp547 [k565 lr420:421 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x06 r0x07 ]
intro.c(l74:s422:k753:d13:s0)		iTemp540 [k557 lr422:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x08 r0x09 ] = iTemp16 [k19 lr20:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp539 [k556 lr416:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ]
intro.c(l74:s423:k747:d13:s0)		iTemp537 [k553 lr423:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0a ] = iTemp557 [k575 lr415:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x4 {const-unsigned-char literal}
intro.c(l74:s424:k1018:d13:s0)		iTemp554 [k572 lr424:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] := 0x0 {const-unsigned-char literal}
intro.c(l74:s426:k746:d14:s0)	 _forbody_3($28) :
intro.c(l75:s427:k748:d14:s0)		if iTemp537 [k553 lr423:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0a ] == 0 goto _iffalse_0($4)
intro.c(l76:s428:k755:d14:s0)		iTemp542 [k559 lr428:429 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] = iTemp540 [k557 lr422:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x08 r0x09 ] + iTemp554 [k572 lr424:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ]
intro.c(l76:s429:k756:d14:s0)		iTemp543 [k560 lr429:430 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ] = @[iTemp542 [k559 lr428:429 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] + 0x0 {const-unsigned-char literal}]
intro.c(l76:s430:k757:d14:s0)		send iTemp543 [k560 lr429:430 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ]{argreg = 1}
intro.c(l76:s431:k758:d14:s0)		iTemp544 [k562 lr431:431 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l76:s432:k759:d14:s0)		 goto _forcontinue_3($29)
intro.c(l76:s433:k760:d14:s0)	 _iffalse_0($4) :
intro.c(l78:s434:k766:d14:s0)		iTemp550 [k568 lr434:435 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] = iTemp548 [k566 lr421:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] + iTemp554 [k572 lr424:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ]
intro.c(l78:s435:k767:d14:s0)		iTemp551 [k569 lr435:436 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ] = @[iTemp550 [k568 lr434:435 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] + 0x0 {const-unsigned-char literal}]
intro.c(l78:s436:k768:d14:s0)		send iTemp551 [k569 lr435:436 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ]{argreg = 1}
intro.c(l78:s437:k769:d14:s0)		iTemp552 [k570 lr437:437 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l78:s438:k771:d14:s0)	 _forcontinue_3($29) :
intro.c(l74:s439:k773:d14:s0)		iTemp554 [k572 lr424:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] = iTemp554 [k572 lr424:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] + 0x1 {const-unsigned-char literal}
intro.c(l74:s440:k775:d14:s0)		iTemp555 [k573 lr440:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp554 [k572 lr424:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] < 0x8 {const-unsigned-char literal}
intro.c(l74:s441:k776:d14:s0)		if iTemp555 [k573 lr440:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forbody_3($28)
intro.c(l73:s442:k1034:d13:s0)		iTemp539 [k556 lr416:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] = iTemp539 [k556 lr416:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] + 0x8 {const-unsigned-char literal}
intro.c(l73:s443:k781:d13:s0)		iTemp557 [k575 lr415:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] = iTemp557 [k575 lr415:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] + 0x1 {const-unsigned-char literal}
intro.c(l73:s444:k783:d13:s0)		iTemp558 [k576 lr444:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp557 [k575 lr415:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x8 {const-unsigned-char literal}
intro.c(l73:s445:k784:d13:s0)		if iTemp558 [k576 lr444:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl1($52)
intro.c(l81:s446:k787:d1:s0)		send 0x80 {const-unsigned-char literal}{argreg = 1}
intro.c(l81:s447:k788:d1:s0)		iTemp559 [k577 lr447:447 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l82:s448:k789:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l82:s449:k790:d1:s0)		iTemp560 [k578 lr449:449 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l83:s450:k791:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l83:s451:k792:d1:s0)		iTemp561 [k579 lr451:451 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l84:s452:k793:d1:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
intro.c(l84:s453:k794:d1:s0)		iTemp562 [k580 lr453:453 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l85:s454:k795:d1:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
intro.c(l85:s455:k796:d1:s0)		iTemp563 [k581 lr455:455 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l86:s456:k797:d1:s0)		send 0xc0 {const-unsigned-char literal}{argreg = 1}
intro.c(l86:s457:k798:d1:s0)		iTemp564 [k582 lr457:457 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l87:s458:k799:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l87:s459:k800:d1:s0)		iTemp565 [k583 lr459:459 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l88:s460:k801:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l88:s461:k802:d1:s0)		iTemp566 [k584 lr461:461 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l89:s462:k803:d1:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
intro.c(l89:s463:k804:d1:s0)		iTemp567 [k585 lr463:463 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l90:s464:k805:d1:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
intro.c(l90:s465:k806:d1:s0)		iTemp568 [k586 lr465:465 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l91:s466:k807:d1:s0)		iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15}[r0x00 r0x01 ] := 0x1 {unsigned-int literal}
intro.c(l92:s467:k808:d1:s0)		 goto _forcontinue_0($45)
intro.c(l93:s468:k809:d1:s0)	 _case_0_1($8) :
intro.c(l94:s469:k1035:d1:s0)		iTemp589 [k607 lr469:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] := 0x0 {const-unsigned-char literal}
intro.c(l94:s470:k1038:d1:s0)		iTemp571 [k589 lr470:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] := 0x0 {unsigned-int literal}
intro.c(l95:s472:k1008:d13:s0)	 preHeaderLbl3($57) :
intro.c(l95:s473:k829:d13:s0)		iTemp578 [k596 lr473:474 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register}[r0x06 ] = iTemp589 [k607 lr469:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] - 0x4 {const-unsigned-char literal}
intro.c(l95:s474:k830:d13:s0)		iTemp579 [k597 lr474:475 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x06 r0x07 ] = iTemp578 [k596 lr473:474 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register}[r0x06 ] * 0x8 {const-unsigned-char literal}
intro.c(l95:s475:k831:d13:s0)		iTemp580 [k598 lr475:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] = iTemp280 [k286 lr218:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp579 [k597 lr474:475 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x06 r0x07 ]
intro.c(l95:s476:k820:d13:s0)		iTemp572 [k590 lr476:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x08 r0x09 ] = iTemp192 [k197 lr152:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp571 [k589 lr470:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ]
intro.c(l95:s477:k814:d13:s0)		iTemp569 [k587 lr477:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0a ] = iTemp589 [k607 lr469:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x4 {const-unsigned-char literal}
intro.c(l95:s478:k1021:d13:s0)		iTemp586 [k604 lr478:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] := 0x0 {const-unsigned-char literal}
intro.c(l95:s480:k813:d14:s0)	 _forbody_5($32) :
intro.c(l96:s481:k815:d14:s0)		if iTemp569 [k587 lr477:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0a ] == 0 goto _iffalse_1($10)
intro.c(l97:s482:k822:d14:s0)		iTemp574 [k592 lr482:483 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] = iTemp572 [k590 lr476:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x08 r0x09 ] + iTemp586 [k604 lr478:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ]
intro.c(l97:s483:k823:d14:s0)		iTemp575 [k593 lr483:484 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ] = @[iTemp574 [k592 lr482:483 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] + 0x0 {const-unsigned-char literal}]
intro.c(l97:s484:k824:d14:s0)		send iTemp575 [k593 lr483:484 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ]{argreg = 1}
intro.c(l97:s485:k825:d14:s0)		iTemp576 [k594 lr485:485 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l97:s486:k826:d14:s0)		 goto _forcontinue_5($33)
intro.c(l97:s487:k827:d14:s0)	 _iffalse_1($10) :
intro.c(l99:s488:k833:d14:s0)		iTemp582 [k600 lr488:489 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] = iTemp580 [k598 lr475:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] + iTemp586 [k604 lr478:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ]
intro.c(l99:s489:k834:d14:s0)		iTemp583 [k601 lr489:490 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ] = @[iTemp582 [k600 lr488:489 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] + 0x0 {const-unsigned-char literal}]
intro.c(l99:s490:k835:d14:s0)		send iTemp583 [k601 lr489:490 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ]{argreg = 1}
intro.c(l99:s491:k836:d14:s0)		iTemp584 [k602 lr491:491 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l99:s492:k838:d14:s0)	 _forcontinue_5($33) :
intro.c(l95:s493:k840:d14:s0)		iTemp586 [k604 lr478:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] = iTemp586 [k604 lr478:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] + 0x1 {const-unsigned-char literal}
intro.c(l95:s494:k842:d14:s0)		iTemp587 [k605 lr494:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp586 [k604 lr478:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] < 0x8 {const-unsigned-char literal}
intro.c(l95:s495:k843:d14:s0)		if iTemp587 [k605 lr494:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forbody_5($32)
intro.c(l94:s496:k1039:d13:s0)		iTemp571 [k589 lr470:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] = iTemp571 [k589 lr470:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] + 0x8 {const-unsigned-char literal}
intro.c(l94:s497:k848:d13:s0)		iTemp589 [k607 lr469:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] = iTemp589 [k607 lr469:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] + 0x1 {const-unsigned-char literal}
intro.c(l94:s498:k850:d13:s0)		iTemp590 [k608 lr498:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp589 [k607 lr469:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x8 {const-unsigned-char literal}
intro.c(l94:s499:k851:d13:s0)		if iTemp590 [k608 lr498:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl3($57)
intro.c(l102:s500:k854:d1:s0)		send 0x84 {const-unsigned-char literal}{argreg = 1}
intro.c(l102:s501:k855:d1:s0)		iTemp591 [k609 lr501:501 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l103:s502:k856:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l103:s503:k857:d1:s0)		iTemp592 [k610 lr503:503 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l104:s504:k858:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l104:s505:k859:d1:s0)		iTemp593 [k611 lr505:505 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l105:s506:k860:d1:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
intro.c(l105:s507:k861:d1:s0)		iTemp594 [k612 lr507:507 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l106:s508:k862:d1:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
intro.c(l106:s509:k863:d1:s0)		iTemp595 [k613 lr509:509 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l107:s510:k864:d1:s0)		send 0xc4 {const-unsigned-char literal}{argreg = 1}
intro.c(l107:s511:k865:d1:s0)		iTemp596 [k614 lr511:511 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l108:s512:k866:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l108:s513:k867:d1:s0)		iTemp597 [k615 lr513:513 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l109:s514:k868:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l109:s515:k869:d1:s0)		iTemp598 [k616 lr515:515 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l110:s516:k870:d1:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
intro.c(l110:s517:k871:d1:s0)		iTemp599 [k617 lr517:517 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l111:s518:k872:d1:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
intro.c(l111:s519:k873:d1:s0)		iTemp600 [k618 lr519:519 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l112:s520:k874:d1:s0)		iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15}[r0x00 r0x01 ] := 0x2 {unsigned-int literal}
intro.c(l113:s521:k875:d1:s0)		 goto _forcontinue_0($45)
intro.c(l114:s522:k876:d1:s0)	 _case_0_2($14) :
intro.c(l115:s523:k1040:d1:s0)		iTemp612 [k630 lr523:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] := 0x0 {const-unsigned-char literal}
intro.c(l115:s524:k1043:d1:s0)		iTemp602 [k620 lr524:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] := 0x0 {unsigned-int literal}
intro.c(l116:s526:k1010:d13:s0)	 preHeaderLbl5($61) :
intro.c(l116:s527:k883:d13:s0)		iTemp603 [k621 lr527:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] = iTemp368 [k375 lr284:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp602 [k620 lr524:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ]
intro.c(l116:s528:k1024:d13:s0)		iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x08 ] := 0x0 {const-unsigned-char literal}
intro.c(l116:s530:k880:d14:s0)	 _forbody_7($36) :
intro.c(l117:s531:k885:d14:s0)		iTemp605 [k623 lr531:532 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x09 r0x0a ] = iTemp603 [k621 lr527:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] + iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x08 ]
intro.c(l117:s532:k886:d14:s0)		iTemp606 [k624 lr532:533 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x09 ] = @[iTemp605 [k623 lr531:532 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x09 r0x0a ] + 0x0 {const-unsigned-char literal}]
intro.c(l117:s533:k887:d14:s0)		send iTemp606 [k624 lr532:533 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x09 ]{argreg = 1}
intro.c(l117:s534:k888:d14:s0)		iTemp607 [k625 lr534:534 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l116:s535:k891:d14:s0)		iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x08 ] = iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x08 ] + 0x1 {const-unsigned-char literal}
intro.c(l116:s536:k893:d14:s0)		iTemp610 [k628 lr536:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x08 ] < 0x8 {const-unsigned-char literal}
intro.c(l116:s537:k894:d14:s0)		if iTemp610 [k628 lr536:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forbody_7($36)
intro.c(l115:s538:k1044:d13:s0)		iTemp602 [k620 lr524:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] = iTemp602 [k620 lr524:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] + 0x8 {const-unsigned-char literal}
intro.c(l115:s539:k899:d13:s0)		iTemp612 [k630 lr523:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] = iTemp612 [k630 lr523:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] + 0x1 {const-unsigned-char literal}
intro.c(l115:s540:k901:d13:s0)		iTemp613 [k631 lr540:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp612 [k630 lr523:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x4 {const-unsigned-char literal}
intro.c(l115:s541:k902:d13:s0)		if iTemp613 [k631 lr540:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl5($61)
intro.c(l120:s542:k905:d1:s0)		send 0x88 {const-unsigned-char literal}{argreg = 1}
intro.c(l120:s543:k906:d1:s0)		iTemp614 [k632 lr543:543 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l121:s544:k907:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l121:s545:k908:d1:s0)		iTemp615 [k633 lr545:545 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l122:s546:k909:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l122:s547:k910:d1:s0)		iTemp616 [k634 lr547:547 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l123:s548:k911:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l123:s549:k912:d1:s0)		iTemp617 [k635 lr549:549 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l124:s550:k913:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l124:s551:k914:d1:s0)		iTemp618 [k636 lr551:551 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l125:s552:k915:d1:s0)		send 0xc8 {const-unsigned-char literal}{argreg = 1}
intro.c(l125:s553:k916:d1:s0)		iTemp619 [k637 lr553:553 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l126:s554:k917:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l126:s555:k918:d1:s0)		iTemp620 [k638 lr555:555 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l127:s556:k919:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l127:s557:k920:d1:s0)		iTemp621 [k639 lr557:557 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l128:s558:k921:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l128:s559:k922:d1:s0)		iTemp622 [k640 lr559:559 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l129:s560:k923:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l129:s561:k924:d1:s0)		iTemp623 [k641 lr561:561 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l130:s562:k925:d1:s0)		iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15}[r0x00 r0x01 ] := 0x3 {unsigned-int literal}
intro.c(l131:s563:k926:d1:s0)		 goto _forcontinue_0($45)
intro.c(l132:s564:k927:d1:s0)	 _case_0_3($17) :
intro.c(l133:s565:k1045:d1:s0)		iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] := 0x0 {const-unsigned-char literal}
intro.c(l133:s566:k1048:d1:s0)		iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] := 0x0 {unsigned-int literal}
intro.c(l134:s568:k1012:d13:s0)	 preHeaderLbl7($66) :
intro.c(l134:s569:k947:d13:s0)		iTemp633 [k651 lr569:570 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register}[r0x06 ] = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] - 0x4 {const-unsigned-char literal}
intro.c(l134:s570:k948:d13:s0)		iTemp634 [k652 lr570:571 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x06 r0x07 ] = iTemp633 [k651 lr569:570 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register}[r0x06 ] * 0x8 {const-unsigned-char literal}
intro.c(l134:s571:k949:d13:s0)		iTemp635 [k653 lr571:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] = iTemp456 [k464 lr350:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp634 [k652 lr570:571 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x06 r0x07 ]
intro.c(l134:s572:k938:d13:s0)		iTemp627 [k645 lr572:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x08 r0x09 ] = iTemp368 [k375 lr284:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ]
intro.c(l134:s573:k932:d13:s0)		iTemp624 [k642 lr573:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0a ] = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x4 {const-unsigned-char literal}
intro.c(l134:s574:k1027:d13:s0)		iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] := 0x0 {const-unsigned-char literal}
intro.c(l134:s576:k931:d14:s0)	 _forbody_9($40) :
intro.c(l135:s577:k933:d14:s0)		if iTemp624 [k642 lr573:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0a ] == 0 goto _iffalse_2($19)
intro.c(l136:s578:k940:d14:s0)		iTemp629 [k647 lr578:579 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] = iTemp627 [k645 lr572:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x08 r0x09 ] + iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ]
intro.c(l136:s579:k941:d14:s0)		iTemp630 [k648 lr579:580 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ] = @[iTemp629 [k647 lr578:579 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] + 0x0 {const-unsigned-char literal}]
intro.c(l136:s580:k942:d14:s0)		send iTemp630 [k648 lr579:580 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ]{argreg = 1}
intro.c(l136:s581:k943:d14:s0)		iTemp631 [k649 lr581:581 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l136:s582:k944:d14:s0)		 goto _forcontinue_9($41)
intro.c(l136:s583:k945:d14:s0)	 _iffalse_2($19) :
intro.c(l138:s584:k951:d14:s0)		iTemp637 [k655 lr584:585 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] = iTemp635 [k653 lr571:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] + iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ]
intro.c(l138:s585:k952:d14:s0)		iTemp638 [k656 lr585:586 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ] = @[iTemp637 [k655 lr584:585 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] + 0x0 {const-unsigned-char literal}]
intro.c(l138:s586:k953:d14:s0)		send iTemp638 [k656 lr585:586 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ]{argreg = 1}
intro.c(l138:s587:k954:d14:s0)		iTemp639 [k657 lr587:587 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l138:s588:k956:d14:s0)	 _forcontinue_9($41) :
intro.c(l134:s589:k958:d14:s0)		iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] = iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] + 0x1 {const-unsigned-char literal}
intro.c(l134:s590:k960:d14:s0)		iTemp642 [k660 lr590:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] < 0x8 {const-unsigned-char literal}
intro.c(l134:s591:k961:d14:s0)		if iTemp642 [k660 lr590:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forbody_9($40)
intro.c(l133:s592:k1049:d13:s0)		iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] = iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] + 0x8 {const-unsigned-char literal}
intro.c(l133:s593:k966:d13:s0)		iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] + 0x1 {const-unsigned-char literal}
intro.c(l133:s594:k968:d13:s0)		iTemp645 [k663 lr594:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x8 {const-unsigned-char literal}
intro.c(l133:s595:k969:d13:s0)		if iTemp645 [k663 lr594:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl7($66)
intro.c(l141:s596:k972:d1:s0)		send 0x8c {const-unsigned-char literal}{argreg = 1}
intro.c(l141:s597:k973:d1:s0)		iTemp646 [k664 lr597:597 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l142:s598:k974:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l142:s599:k975:d1:s0)		iTemp647 [k665 lr599:599 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l143:s600:k976:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l143:s601:k977:d1:s0)		iTemp648 [k666 lr601:601 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l144:s602:k978:d1:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
intro.c(l144:s603:k979:d1:s0)		iTemp649 [k667 lr603:603 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l145:s604:k980:d1:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
intro.c(l145:s605:k981:d1:s0)		iTemp650 [k668 lr605:605 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l146:s606:k982:d1:s0)		send 0xcc {const-unsigned-char literal}{argreg = 1}
intro.c(l146:s607:k983:d1:s0)		iTemp651 [k669 lr607:607 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l147:s608:k984:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l147:s609:k985:d1:s0)		iTemp652 [k670 lr609:609 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l148:s610:k986:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l148:s611:k987:d1:s0)		iTemp653 [k671 lr611:611 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l149:s612:k988:d1:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
intro.c(l149:s613:k989:d1:s0)		iTemp654 [k672 lr613:613 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l150:s614:k990:d1:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
intro.c(l150:s615:k991:d1:s0)		iTemp655 [k673 lr615:615 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l151:s616:k992:d1:s0)		iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15}[r0x00 r0x01 ] := 0x0 {unsigned-int literal}
intro.c(l153:s617:k995:d1:s0)	 _forcontinue_0($45) :
intro.c(l67:s618:k997:d1:s0)		iTemp657 [k675 lr400:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_x_1_15}[r0x02 ] = iTemp657 [k675 lr400:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_x_1_15}[r0x02 ] + 0x1 {const-unsigned-char literal}
intro.c(l67:s619:k999:d1:s0)		iTemp658 [k676 lr619:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp657 [k675 lr400:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_x_1_15}[r0x02 ] < 0x64 {const-unsigned-char literal}
intro.c(l67:s620:k1000:d1:s0)		if iTemp658 [k676 lr619:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl0($48)
intro.c(l67:s621:k1003:d0:s0)	 _return($46) :
intro.c(l67:s622:k1004:d0:s0)		eproc _intro [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( ) fixed}

----------------------------------------------------------------
Basic Block _eBBlock26 : loop Depth = 1 noPath = 0 , lastinLoop = 0
depth 1st num 6 : bbnum = 5 1st iCode = 408 , last iCode = 412
visited 1 : hasFcall = 1

defines bitVector :bitvector Size = 1073 bSize = 135
Bits on { (739) }

local defines bitVector :bitvector Size = 1073 bSize = 135
Bits on { (736) (738) (739) }

pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

in pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

inDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1034) (1039) (1044) (1049) (1050) }

outDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1034) (1039) (1044) (1049) (1050) }

usesDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (722) (736) (738) (739) (807) (874) (925) (992) }

----------------------------------------------------------------
intro.c(l69:s408:k736:d1:s0)		iTemp532 [k544 lr408:408 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _limpa_lcd [k543 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( ) fixed}
intro.c(l70:s409:k737:d1:s0)		send 0x40 {const-unsigned-char literal}{argreg = 1}
intro.c(l70:s410:k738:d1:s0)		iTemp533 [k547 lr410:410 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l71:s411:k739:d1:s0)		iTemp534 [k548 lr411:412 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15}[r0x00 r0x01 ] > 0x3 {unsigned-int literal}
intro.c(l71:s412:k740:d1:s0)		if iTemp534 [k548 lr411:412 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forcontinue_0($45)
intro.c(l71:s413:k741:d1:s0)		jtab	iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15}[r0x00 r0x01 ]; _case_0_0; _case_0_1; _case_0_2; _case_0_3
intro.c(l72:s414:k742:d1:s0)	 _case_0_0($2) :
intro.c(l73:s415:k1030:d1:s0)		iTemp557 [k575 lr415:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] := 0x0 {const-unsigned-char literal}
intro.c(l73:s416:k1033:d1:s0)		iTemp539 [k556 lr416:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] := 0x0 {unsigned-int literal}
intro.c(l74:s418:k1006:d13:s0)	 preHeaderLbl1($52) :
intro.c(l74:s419:k762:d13:s0)		iTemp546 [k564 lr419:420 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register}[r0x06 ] = iTemp557 [k575 lr415:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] - 0x4 {const-unsigned-char literal}
intro.c(l74:s420:k763:d13:s0)		iTemp547 [k565 lr420:421 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x06 r0x07 ] = iTemp546 [k564 lr419:420 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register}[r0x06 ] * 0x8 {const-unsigned-char literal}
intro.c(l74:s421:k764:d13:s0)		iTemp548 [k566 lr421:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] = iTemp104 [k108 lr86:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp547 [k565 lr420:421 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x06 r0x07 ]
intro.c(l74:s422:k753:d13:s0)		iTemp540 [k557 lr422:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x08 r0x09 ] = iTemp16 [k19 lr20:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp539 [k556 lr416:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ]
intro.c(l74:s423:k747:d13:s0)		iTemp537 [k553 lr423:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0a ] = iTemp557 [k575 lr415:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x4 {const-unsigned-char literal}
intro.c(l74:s424:k1018:d13:s0)		iTemp554 [k572 lr424:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] := 0x0 {const-unsigned-char literal}
intro.c(l74:s426:k746:d14:s0)	 _forbody_3($28) :
intro.c(l75:s427:k748:d14:s0)		if iTemp537 [k553 lr423:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0a ] == 0 goto _iffalse_0($4)
intro.c(l76:s428:k755:d14:s0)		iTemp542 [k559 lr428:429 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] = iTemp540 [k557 lr422:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x08 r0x09 ] + iTemp554 [k572 lr424:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ]
intro.c(l76:s429:k756:d14:s0)		iTemp543 [k560 lr429:430 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ] = @[iTemp542 [k559 lr428:429 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] + 0x0 {const-unsigned-char literal}]
intro.c(l76:s430:k757:d14:s0)		send iTemp543 [k560 lr429:430 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ]{argreg = 1}
intro.c(l76:s431:k758:d14:s0)		iTemp544 [k562 lr431:431 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l76:s432:k759:d14:s0)		 goto _forcontinue_3($29)
intro.c(l76:s433:k760:d14:s0)	 _iffalse_0($4) :
intro.c(l78:s434:k766:d14:s0)		iTemp550 [k568 lr434:435 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] = iTemp548 [k566 lr421:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] + iTemp554 [k572 lr424:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ]
intro.c(l78:s435:k767:d14:s0)		iTemp551 [k569 lr435:436 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ] = @[iTemp550 [k568 lr434:435 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] + 0x0 {const-unsigned-char literal}]
intro.c(l78:s436:k768:d14:s0)		send iTemp551 [k569 lr435:436 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ]{argreg = 1}
intro.c(l78:s437:k769:d14:s0)		iTemp552 [k570 lr437:437 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l78:s438:k771:d14:s0)	 _forcontinue_3($29) :
intro.c(l74:s439:k773:d14:s0)		iTemp554 [k572 lr424:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] = iTemp554 [k572 lr424:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] + 0x1 {const-unsigned-char literal}
intro.c(l74:s440:k775:d14:s0)		iTemp555 [k573 lr440:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp554 [k572 lr424:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] < 0x8 {const-unsigned-char literal}
intro.c(l74:s441:k776:d14:s0)		if iTemp555 [k573 lr440:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forbody_3($28)
intro.c(l73:s442:k1034:d13:s0)		iTemp539 [k556 lr416:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] = iTemp539 [k556 lr416:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] + 0x8 {const-unsigned-char literal}
intro.c(l73:s443:k781:d13:s0)		iTemp557 [k575 lr415:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] = iTemp557 [k575 lr415:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] + 0x1 {const-unsigned-char literal}
intro.c(l73:s444:k783:d13:s0)		iTemp558 [k576 lr444:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp557 [k575 lr415:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x8 {const-unsigned-char literal}
intro.c(l73:s445:k784:d13:s0)		if iTemp558 [k576 lr444:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl1($52)
intro.c(l81:s446:k787:d1:s0)		send 0x80 {const-unsigned-char literal}{argreg = 1}
intro.c(l81:s447:k788:d1:s0)		iTemp559 [k577 lr447:447 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l82:s448:k789:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l82:s449:k790:d1:s0)		iTemp560 [k578 lr449:449 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l83:s450:k791:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l83:s451:k792:d1:s0)		iTemp561 [k579 lr451:451 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l84:s452:k793:d1:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
intro.c(l84:s453:k794:d1:s0)		iTemp562 [k580 lr453:453 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l85:s454:k795:d1:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
intro.c(l85:s455:k796:d1:s0)		iTemp563 [k581 lr455:455 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l86:s456:k797:d1:s0)		send 0xc0 {const-unsigned-char literal}{argreg = 1}
intro.c(l86:s457:k798:d1:s0)		iTemp564 [k582 lr457:457 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l87:s458:k799:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l87:s459:k800:d1:s0)		iTemp565 [k583 lr459:459 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l88:s460:k801:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l88:s461:k802:d1:s0)		iTemp566 [k584 lr461:461 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l89:s462:k803:d1:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
intro.c(l89:s463:k804:d1:s0)		iTemp567 [k585 lr463:463 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l90:s464:k805:d1:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
intro.c(l90:s465:k806:d1:s0)		iTemp568 [k586 lr465:465 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l91:s466:k807:d1:s0)		iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15}[r0x00 r0x01 ] := 0x1 {unsigned-int literal}
intro.c(l92:s467:k808:d1:s0)		 goto _forcontinue_0($45)
intro.c(l93:s468:k809:d1:s0)	 _case_0_1($8) :
intro.c(l94:s469:k1035:d1:s0)		iTemp589 [k607 lr469:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] := 0x0 {const-unsigned-char literal}
intro.c(l94:s470:k1038:d1:s0)		iTemp571 [k589 lr470:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] := 0x0 {unsigned-int literal}
intro.c(l95:s472:k1008:d13:s0)	 preHeaderLbl3($57) :
intro.c(l95:s473:k829:d13:s0)		iTemp578 [k596 lr473:474 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register}[r0x06 ] = iTemp589 [k607 lr469:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] - 0x4 {const-unsigned-char literal}
intro.c(l95:s474:k830:d13:s0)		iTemp579 [k597 lr474:475 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x06 r0x07 ] = iTemp578 [k596 lr473:474 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register}[r0x06 ] * 0x8 {const-unsigned-char literal}
intro.c(l95:s475:k831:d13:s0)		iTemp580 [k598 lr475:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] = iTemp280 [k286 lr218:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp579 [k597 lr474:475 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x06 r0x07 ]
intro.c(l95:s476:k820:d13:s0)		iTemp572 [k590 lr476:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x08 r0x09 ] = iTemp192 [k197 lr152:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp571 [k589 lr470:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ]
intro.c(l95:s477:k814:d13:s0)		iTemp569 [k587 lr477:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0a ] = iTemp589 [k607 lr469:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x4 {const-unsigned-char literal}
intro.c(l95:s478:k1021:d13:s0)		iTemp586 [k604 lr478:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] := 0x0 {const-unsigned-char literal}
intro.c(l95:s480:k813:d14:s0)	 _forbody_5($32) :
intro.c(l96:s481:k815:d14:s0)		if iTemp569 [k587 lr477:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0a ] == 0 goto _iffalse_1($10)
intro.c(l97:s482:k822:d14:s0)		iTemp574 [k592 lr482:483 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] = iTemp572 [k590 lr476:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x08 r0x09 ] + iTemp586 [k604 lr478:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ]
intro.c(l97:s483:k823:d14:s0)		iTemp575 [k593 lr483:484 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ] = @[iTemp574 [k592 lr482:483 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] + 0x0 {const-unsigned-char literal}]
intro.c(l97:s484:k824:d14:s0)		send iTemp575 [k593 lr483:484 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ]{argreg = 1}
intro.c(l97:s485:k825:d14:s0)		iTemp576 [k594 lr485:485 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l97:s486:k826:d14:s0)		 goto _forcontinue_5($33)
intro.c(l97:s487:k827:d14:s0)	 _iffalse_1($10) :
intro.c(l99:s488:k833:d14:s0)		iTemp582 [k600 lr488:489 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] = iTemp580 [k598 lr475:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] + iTemp586 [k604 lr478:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ]
intro.c(l99:s489:k834:d14:s0)		iTemp583 [k601 lr489:490 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ] = @[iTemp582 [k600 lr488:489 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] + 0x0 {const-unsigned-char literal}]
intro.c(l99:s490:k835:d14:s0)		send iTemp583 [k601 lr489:490 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ]{argreg = 1}
intro.c(l99:s491:k836:d14:s0)		iTemp584 [k602 lr491:491 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l99:s492:k838:d14:s0)	 _forcontinue_5($33) :
intro.c(l95:s493:k840:d14:s0)		iTemp586 [k604 lr478:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] = iTemp586 [k604 lr478:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] + 0x1 {const-unsigned-char literal}
intro.c(l95:s494:k842:d14:s0)		iTemp587 [k605 lr494:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp586 [k604 lr478:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] < 0x8 {const-unsigned-char literal}
intro.c(l95:s495:k843:d14:s0)		if iTemp587 [k605 lr494:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forbody_5($32)
intro.c(l94:s496:k1039:d13:s0)		iTemp571 [k589 lr470:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] = iTemp571 [k589 lr470:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] + 0x8 {const-unsigned-char literal}
intro.c(l94:s497:k848:d13:s0)		iTemp589 [k607 lr469:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] = iTemp589 [k607 lr469:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] + 0x1 {const-unsigned-char literal}
intro.c(l94:s498:k850:d13:s0)		iTemp590 [k608 lr498:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp589 [k607 lr469:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x8 {const-unsigned-char literal}
intro.c(l94:s499:k851:d13:s0)		if iTemp590 [k608 lr498:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl3($57)
intro.c(l102:s500:k854:d1:s0)		send 0x84 {const-unsigned-char literal}{argreg = 1}
intro.c(l102:s501:k855:d1:s0)		iTemp591 [k609 lr501:501 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l103:s502:k856:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l103:s503:k857:d1:s0)		iTemp592 [k610 lr503:503 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l104:s504:k858:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l104:s505:k859:d1:s0)		iTemp593 [k611 lr505:505 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l105:s506:k860:d1:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
intro.c(l105:s507:k861:d1:s0)		iTemp594 [k612 lr507:507 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l106:s508:k862:d1:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
intro.c(l106:s509:k863:d1:s0)		iTemp595 [k613 lr509:509 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l107:s510:k864:d1:s0)		send 0xc4 {const-unsigned-char literal}{argreg = 1}
intro.c(l107:s511:k865:d1:s0)		iTemp596 [k614 lr511:511 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l108:s512:k866:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l108:s513:k867:d1:s0)		iTemp597 [k615 lr513:513 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l109:s514:k868:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l109:s515:k869:d1:s0)		iTemp598 [k616 lr515:515 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l110:s516:k870:d1:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
intro.c(l110:s517:k871:d1:s0)		iTemp599 [k617 lr517:517 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l111:s518:k872:d1:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
intro.c(l111:s519:k873:d1:s0)		iTemp600 [k618 lr519:519 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l112:s520:k874:d1:s0)		iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15}[r0x00 r0x01 ] := 0x2 {unsigned-int literal}
intro.c(l113:s521:k875:d1:s0)		 goto _forcontinue_0($45)
intro.c(l114:s522:k876:d1:s0)	 _case_0_2($14) :
intro.c(l115:s523:k1040:d1:s0)		iTemp612 [k630 lr523:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] := 0x0 {const-unsigned-char literal}
intro.c(l115:s524:k1043:d1:s0)		iTemp602 [k620 lr524:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] := 0x0 {unsigned-int literal}
intro.c(l116:s526:k1010:d13:s0)	 preHeaderLbl5($61) :
intro.c(l116:s527:k883:d13:s0)		iTemp603 [k621 lr527:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] = iTemp368 [k375 lr284:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp602 [k620 lr524:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ]
intro.c(l116:s528:k1024:d13:s0)		iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x08 ] := 0x0 {const-unsigned-char literal}
intro.c(l116:s530:k880:d14:s0)	 _forbody_7($36) :
intro.c(l117:s531:k885:d14:s0)		iTemp605 [k623 lr531:532 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x09 r0x0a ] = iTemp603 [k621 lr527:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] + iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x08 ]
intro.c(l117:s532:k886:d14:s0)		iTemp606 [k624 lr532:533 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x09 ] = @[iTemp605 [k623 lr531:532 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x09 r0x0a ] + 0x0 {const-unsigned-char literal}]
intro.c(l117:s533:k887:d14:s0)		send iTemp606 [k624 lr532:533 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x09 ]{argreg = 1}
intro.c(l117:s534:k888:d14:s0)		iTemp607 [k625 lr534:534 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l116:s535:k891:d14:s0)		iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x08 ] = iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x08 ] + 0x1 {const-unsigned-char literal}
intro.c(l116:s536:k893:d14:s0)		iTemp610 [k628 lr536:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x08 ] < 0x8 {const-unsigned-char literal}
intro.c(l116:s537:k894:d14:s0)		if iTemp610 [k628 lr536:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forbody_7($36)
intro.c(l115:s538:k1044:d13:s0)		iTemp602 [k620 lr524:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] = iTemp602 [k620 lr524:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] + 0x8 {const-unsigned-char literal}
intro.c(l115:s539:k899:d13:s0)		iTemp612 [k630 lr523:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] = iTemp612 [k630 lr523:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] + 0x1 {const-unsigned-char literal}
intro.c(l115:s540:k901:d13:s0)		iTemp613 [k631 lr540:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp612 [k630 lr523:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x4 {const-unsigned-char literal}
intro.c(l115:s541:k902:d13:s0)		if iTemp613 [k631 lr540:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl5($61)
intro.c(l120:s542:k905:d1:s0)		send 0x88 {const-unsigned-char literal}{argreg = 1}
intro.c(l120:s543:k906:d1:s0)		iTemp614 [k632 lr543:543 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l121:s544:k907:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l121:s545:k908:d1:s0)		iTemp615 [k633 lr545:545 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l122:s546:k909:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l122:s547:k910:d1:s0)		iTemp616 [k634 lr547:547 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l123:s548:k911:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l123:s549:k912:d1:s0)		iTemp617 [k635 lr549:549 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l124:s550:k913:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l124:s551:k914:d1:s0)		iTemp618 [k636 lr551:551 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l125:s552:k915:d1:s0)		send 0xc8 {const-unsigned-char literal}{argreg = 1}
intro.c(l125:s553:k916:d1:s0)		iTemp619 [k637 lr553:553 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l126:s554:k917:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l126:s555:k918:d1:s0)		iTemp620 [k638 lr555:555 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l127:s556:k919:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l127:s557:k920:d1:s0)		iTemp621 [k639 lr557:557 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l128:s558:k921:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l128:s559:k922:d1:s0)		iTemp622 [k640 lr559:559 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l129:s560:k923:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l129:s561:k924:d1:s0)		iTemp623 [k641 lr561:561 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l130:s562:k925:d1:s0)		iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15}[r0x00 r0x01 ] := 0x3 {unsigned-int literal}
intro.c(l131:s563:k926:d1:s0)		 goto _forcontinue_0($45)
intro.c(l132:s564:k927:d1:s0)	 _case_0_3($17) :
intro.c(l133:s565:k1045:d1:s0)		iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] := 0x0 {const-unsigned-char literal}
intro.c(l133:s566:k1048:d1:s0)		iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] := 0x0 {unsigned-int literal}
intro.c(l134:s568:k1012:d13:s0)	 preHeaderLbl7($66) :
intro.c(l134:s569:k947:d13:s0)		iTemp633 [k651 lr569:570 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register}[r0x06 ] = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] - 0x4 {const-unsigned-char literal}
intro.c(l134:s570:k948:d13:s0)		iTemp634 [k652 lr570:571 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x06 r0x07 ] = iTemp633 [k651 lr569:570 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register}[r0x06 ] * 0x8 {const-unsigned-char literal}
intro.c(l134:s571:k949:d13:s0)		iTemp635 [k653 lr571:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] = iTemp456 [k464 lr350:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp634 [k652 lr570:571 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x06 r0x07 ]
intro.c(l134:s572:k938:d13:s0)		iTemp627 [k645 lr572:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x08 r0x09 ] = iTemp368 [k375 lr284:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ]
intro.c(l134:s573:k932:d13:s0)		iTemp624 [k642 lr573:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0a ] = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x4 {const-unsigned-char literal}
intro.c(l134:s574:k1027:d13:s0)		iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] := 0x0 {const-unsigned-char literal}
intro.c(l134:s576:k931:d14:s0)	 _forbody_9($40) :
intro.c(l135:s577:k933:d14:s0)		if iTemp624 [k642 lr573:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0a ] == 0 goto _iffalse_2($19)
intro.c(l136:s578:k940:d14:s0)		iTemp629 [k647 lr578:579 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] = iTemp627 [k645 lr572:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x08 r0x09 ] + iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ]
intro.c(l136:s579:k941:d14:s0)		iTemp630 [k648 lr579:580 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ] = @[iTemp629 [k647 lr578:579 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] + 0x0 {const-unsigned-char literal}]
intro.c(l136:s580:k942:d14:s0)		send iTemp630 [k648 lr579:580 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ]{argreg = 1}
intro.c(l136:s581:k943:d14:s0)		iTemp631 [k649 lr581:581 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l136:s582:k944:d14:s0)		 goto _forcontinue_9($41)
intro.c(l136:s583:k945:d14:s0)	 _iffalse_2($19) :
intro.c(l138:s584:k951:d14:s0)		iTemp637 [k655 lr584:585 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] = iTemp635 [k653 lr571:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] + iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ]
intro.c(l138:s585:k952:d14:s0)		iTemp638 [k656 lr585:586 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ] = @[iTemp637 [k655 lr584:585 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] + 0x0 {const-unsigned-char literal}]
intro.c(l138:s586:k953:d14:s0)		send iTemp638 [k656 lr585:586 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ]{argreg = 1}
intro.c(l138:s587:k954:d14:s0)		iTemp639 [k657 lr587:587 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l138:s588:k956:d14:s0)	 _forcontinue_9($41) :
intro.c(l134:s589:k958:d14:s0)		iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] = iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] + 0x1 {const-unsigned-char literal}
intro.c(l134:s590:k960:d14:s0)		iTemp642 [k660 lr590:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] < 0x8 {const-unsigned-char literal}
intro.c(l134:s591:k961:d14:s0)		if iTemp642 [k660 lr590:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forbody_9($40)
intro.c(l133:s592:k1049:d13:s0)		iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] = iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] + 0x8 {const-unsigned-char literal}
intro.c(l133:s593:k966:d13:s0)		iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] + 0x1 {const-unsigned-char literal}
intro.c(l133:s594:k968:d13:s0)		iTemp645 [k663 lr594:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x8 {const-unsigned-char literal}
intro.c(l133:s595:k969:d13:s0)		if iTemp645 [k663 lr594:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl7($66)
intro.c(l141:s596:k972:d1:s0)		send 0x8c {const-unsigned-char literal}{argreg = 1}
intro.c(l141:s597:k973:d1:s0)		iTemp646 [k664 lr597:597 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l142:s598:k974:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l142:s599:k975:d1:s0)		iTemp647 [k665 lr599:599 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l143:s600:k976:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l143:s601:k977:d1:s0)		iTemp648 [k666 lr601:601 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l144:s602:k978:d1:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
intro.c(l144:s603:k979:d1:s0)		iTemp649 [k667 lr603:603 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l145:s604:k980:d1:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
intro.c(l145:s605:k981:d1:s0)		iTemp650 [k668 lr605:605 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l146:s606:k982:d1:s0)		send 0xcc {const-unsigned-char literal}{argreg = 1}
intro.c(l146:s607:k983:d1:s0)		iTemp651 [k669 lr607:607 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l147:s608:k984:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l147:s609:k985:d1:s0)		iTemp652 [k670 lr609:609 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l148:s610:k986:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l148:s611:k987:d1:s0)		iTemp653 [k671 lr611:611 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l149:s612:k988:d1:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
intro.c(l149:s613:k989:d1:s0)		iTemp654 [k672 lr613:613 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l150:s614:k990:d1:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
intro.c(l150:s615:k991:d1:s0)		iTemp655 [k673 lr615:615 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l151:s616:k992:d1:s0)		iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15}[r0x00 r0x01 ] := 0x0 {unsigned-int literal}
intro.c(l153:s617:k995:d1:s0)	 _forcontinue_0($45) :
intro.c(l67:s618:k997:d1:s0)		iTemp657 [k675 lr400:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_x_1_15}[r0x02 ] = iTemp657 [k675 lr400:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_x_1_15}[r0x02 ] + 0x1 {const-unsigned-char literal}
intro.c(l67:s619:k999:d1:s0)		iTemp658 [k676 lr619:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp657 [k675 lr400:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_x_1_15}[r0x02 ] < 0x64 {const-unsigned-char literal}
intro.c(l67:s620:k1000:d1:s0)		if iTemp658 [k676 lr619:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl0($48)
intro.c(l67:s621:k1003:d0:s0)	 _return($46) :
intro.c(l67:s622:k1004:d0:s0)		eproc _intro [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( ) fixed}

----------------------------------------------------------------
Basic Block _eBBlock27 : loop Depth = 1 noPath = 0 , lastinLoop = 0
depth 1st num 7 : bbnum = 6 1st iCode = 413 , last iCode = 413
visited 1 : hasFcall = 0

defines bitVector :bitvector Size = 1073 bSize = 135
Bits on { }

local defines bitVector :
pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

in pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

inDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1034) (1039) (1044) (1049) (1050) }

outDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1034) (1039) (1044) (1049) (1050) }

usesDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (722) (807) (874) (925) (992) }

----------------------------------------------------------------
intro.c(l71:s413:k741:d1:s0)		jtab	iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15}[r0x00 r0x01 ]; _case_0_0; _case_0_1; _case_0_2; _case_0_3
intro.c(l72:s414:k742:d1:s0)	 _case_0_0($2) :
intro.c(l73:s415:k1030:d1:s0)		iTemp557 [k575 lr415:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] := 0x0 {const-unsigned-char literal}
intro.c(l73:s416:k1033:d1:s0)		iTemp539 [k556 lr416:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] := 0x0 {unsigned-int literal}
intro.c(l74:s418:k1006:d13:s0)	 preHeaderLbl1($52) :
intro.c(l74:s419:k762:d13:s0)		iTemp546 [k564 lr419:420 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register}[r0x06 ] = iTemp557 [k575 lr415:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] - 0x4 {const-unsigned-char literal}
intro.c(l74:s420:k763:d13:s0)		iTemp547 [k565 lr420:421 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x06 r0x07 ] = iTemp546 [k564 lr419:420 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register}[r0x06 ] * 0x8 {const-unsigned-char literal}
intro.c(l74:s421:k764:d13:s0)		iTemp548 [k566 lr421:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] = iTemp104 [k108 lr86:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp547 [k565 lr420:421 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x06 r0x07 ]
intro.c(l74:s422:k753:d13:s0)		iTemp540 [k557 lr422:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x08 r0x09 ] = iTemp16 [k19 lr20:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp539 [k556 lr416:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ]
intro.c(l74:s423:k747:d13:s0)		iTemp537 [k553 lr423:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0a ] = iTemp557 [k575 lr415:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x4 {const-unsigned-char literal}
intro.c(l74:s424:k1018:d13:s0)		iTemp554 [k572 lr424:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] := 0x0 {const-unsigned-char literal}
intro.c(l74:s426:k746:d14:s0)	 _forbody_3($28) :
intro.c(l75:s427:k748:d14:s0)		if iTemp537 [k553 lr423:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0a ] == 0 goto _iffalse_0($4)
intro.c(l76:s428:k755:d14:s0)		iTemp542 [k559 lr428:429 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] = iTemp540 [k557 lr422:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x08 r0x09 ] + iTemp554 [k572 lr424:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ]
intro.c(l76:s429:k756:d14:s0)		iTemp543 [k560 lr429:430 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ] = @[iTemp542 [k559 lr428:429 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] + 0x0 {const-unsigned-char literal}]
intro.c(l76:s430:k757:d14:s0)		send iTemp543 [k560 lr429:430 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ]{argreg = 1}
intro.c(l76:s431:k758:d14:s0)		iTemp544 [k562 lr431:431 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l76:s432:k759:d14:s0)		 goto _forcontinue_3($29)
intro.c(l76:s433:k760:d14:s0)	 _iffalse_0($4) :
intro.c(l78:s434:k766:d14:s0)		iTemp550 [k568 lr434:435 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] = iTemp548 [k566 lr421:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] + iTemp554 [k572 lr424:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ]
intro.c(l78:s435:k767:d14:s0)		iTemp551 [k569 lr435:436 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ] = @[iTemp550 [k568 lr434:435 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] + 0x0 {const-unsigned-char literal}]
intro.c(l78:s436:k768:d14:s0)		send iTemp551 [k569 lr435:436 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ]{argreg = 1}
intro.c(l78:s437:k769:d14:s0)		iTemp552 [k570 lr437:437 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l78:s438:k771:d14:s0)	 _forcontinue_3($29) :
intro.c(l74:s439:k773:d14:s0)		iTemp554 [k572 lr424:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] = iTemp554 [k572 lr424:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] + 0x1 {const-unsigned-char literal}
intro.c(l74:s440:k775:d14:s0)		iTemp555 [k573 lr440:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp554 [k572 lr424:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] < 0x8 {const-unsigned-char literal}
intro.c(l74:s441:k776:d14:s0)		if iTemp555 [k573 lr440:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forbody_3($28)
intro.c(l73:s442:k1034:d13:s0)		iTemp539 [k556 lr416:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] = iTemp539 [k556 lr416:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] + 0x8 {const-unsigned-char literal}
intro.c(l73:s443:k781:d13:s0)		iTemp557 [k575 lr415:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] = iTemp557 [k575 lr415:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] + 0x1 {const-unsigned-char literal}
intro.c(l73:s444:k783:d13:s0)		iTemp558 [k576 lr444:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp557 [k575 lr415:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x8 {const-unsigned-char literal}
intro.c(l73:s445:k784:d13:s0)		if iTemp558 [k576 lr444:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl1($52)
intro.c(l81:s446:k787:d1:s0)		send 0x80 {const-unsigned-char literal}{argreg = 1}
intro.c(l81:s447:k788:d1:s0)		iTemp559 [k577 lr447:447 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l82:s448:k789:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l82:s449:k790:d1:s0)		iTemp560 [k578 lr449:449 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l83:s450:k791:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l83:s451:k792:d1:s0)		iTemp561 [k579 lr451:451 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l84:s452:k793:d1:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
intro.c(l84:s453:k794:d1:s0)		iTemp562 [k580 lr453:453 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l85:s454:k795:d1:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
intro.c(l85:s455:k796:d1:s0)		iTemp563 [k581 lr455:455 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l86:s456:k797:d1:s0)		send 0xc0 {const-unsigned-char literal}{argreg = 1}
intro.c(l86:s457:k798:d1:s0)		iTemp564 [k582 lr457:457 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l87:s458:k799:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l87:s459:k800:d1:s0)		iTemp565 [k583 lr459:459 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l88:s460:k801:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l88:s461:k802:d1:s0)		iTemp566 [k584 lr461:461 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l89:s462:k803:d1:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
intro.c(l89:s463:k804:d1:s0)		iTemp567 [k585 lr463:463 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l90:s464:k805:d1:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
intro.c(l90:s465:k806:d1:s0)		iTemp568 [k586 lr465:465 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l91:s466:k807:d1:s0)		iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15}[r0x00 r0x01 ] := 0x1 {unsigned-int literal}
intro.c(l92:s467:k808:d1:s0)		 goto _forcontinue_0($45)
intro.c(l93:s468:k809:d1:s0)	 _case_0_1($8) :
intro.c(l94:s469:k1035:d1:s0)		iTemp589 [k607 lr469:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] := 0x0 {const-unsigned-char literal}
intro.c(l94:s470:k1038:d1:s0)		iTemp571 [k589 lr470:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] := 0x0 {unsigned-int literal}
intro.c(l95:s472:k1008:d13:s0)	 preHeaderLbl3($57) :
intro.c(l95:s473:k829:d13:s0)		iTemp578 [k596 lr473:474 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register}[r0x06 ] = iTemp589 [k607 lr469:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] - 0x4 {const-unsigned-char literal}
intro.c(l95:s474:k830:d13:s0)		iTemp579 [k597 lr474:475 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x06 r0x07 ] = iTemp578 [k596 lr473:474 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register}[r0x06 ] * 0x8 {const-unsigned-char literal}
intro.c(l95:s475:k831:d13:s0)		iTemp580 [k598 lr475:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] = iTemp280 [k286 lr218:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp579 [k597 lr474:475 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x06 r0x07 ]
intro.c(l95:s476:k820:d13:s0)		iTemp572 [k590 lr476:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x08 r0x09 ] = iTemp192 [k197 lr152:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp571 [k589 lr470:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ]
intro.c(l95:s477:k814:d13:s0)		iTemp569 [k587 lr477:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0a ] = iTemp589 [k607 lr469:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x4 {const-unsigned-char literal}
intro.c(l95:s478:k1021:d13:s0)		iTemp586 [k604 lr478:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] := 0x0 {const-unsigned-char literal}
intro.c(l95:s480:k813:d14:s0)	 _forbody_5($32) :
intro.c(l96:s481:k815:d14:s0)		if iTemp569 [k587 lr477:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0a ] == 0 goto _iffalse_1($10)
intro.c(l97:s482:k822:d14:s0)		iTemp574 [k592 lr482:483 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] = iTemp572 [k590 lr476:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x08 r0x09 ] + iTemp586 [k604 lr478:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ]
intro.c(l97:s483:k823:d14:s0)		iTemp575 [k593 lr483:484 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ] = @[iTemp574 [k592 lr482:483 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] + 0x0 {const-unsigned-char literal}]
intro.c(l97:s484:k824:d14:s0)		send iTemp575 [k593 lr483:484 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ]{argreg = 1}
intro.c(l97:s485:k825:d14:s0)		iTemp576 [k594 lr485:485 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l97:s486:k826:d14:s0)		 goto _forcontinue_5($33)
intro.c(l97:s487:k827:d14:s0)	 _iffalse_1($10) :
intro.c(l99:s488:k833:d14:s0)		iTemp582 [k600 lr488:489 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] = iTemp580 [k598 lr475:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] + iTemp586 [k604 lr478:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ]
intro.c(l99:s489:k834:d14:s0)		iTemp583 [k601 lr489:490 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ] = @[iTemp582 [k600 lr488:489 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] + 0x0 {const-unsigned-char literal}]
intro.c(l99:s490:k835:d14:s0)		send iTemp583 [k601 lr489:490 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ]{argreg = 1}
intro.c(l99:s491:k836:d14:s0)		iTemp584 [k602 lr491:491 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l99:s492:k838:d14:s0)	 _forcontinue_5($33) :
intro.c(l95:s493:k840:d14:s0)		iTemp586 [k604 lr478:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] = iTemp586 [k604 lr478:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] + 0x1 {const-unsigned-char literal}
intro.c(l95:s494:k842:d14:s0)		iTemp587 [k605 lr494:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp586 [k604 lr478:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] < 0x8 {const-unsigned-char literal}
intro.c(l95:s495:k843:d14:s0)		if iTemp587 [k605 lr494:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forbody_5($32)
intro.c(l94:s496:k1039:d13:s0)		iTemp571 [k589 lr470:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] = iTemp571 [k589 lr470:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] + 0x8 {const-unsigned-char literal}
intro.c(l94:s497:k848:d13:s0)		iTemp589 [k607 lr469:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] = iTemp589 [k607 lr469:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] + 0x1 {const-unsigned-char literal}
intro.c(l94:s498:k850:d13:s0)		iTemp590 [k608 lr498:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp589 [k607 lr469:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x8 {const-unsigned-char literal}
intro.c(l94:s499:k851:d13:s0)		if iTemp590 [k608 lr498:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl3($57)
intro.c(l102:s500:k854:d1:s0)		send 0x84 {const-unsigned-char literal}{argreg = 1}
intro.c(l102:s501:k855:d1:s0)		iTemp591 [k609 lr501:501 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l103:s502:k856:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l103:s503:k857:d1:s0)		iTemp592 [k610 lr503:503 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l104:s504:k858:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l104:s505:k859:d1:s0)		iTemp593 [k611 lr505:505 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l105:s506:k860:d1:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
intro.c(l105:s507:k861:d1:s0)		iTemp594 [k612 lr507:507 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l106:s508:k862:d1:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
intro.c(l106:s509:k863:d1:s0)		iTemp595 [k613 lr509:509 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l107:s510:k864:d1:s0)		send 0xc4 {const-unsigned-char literal}{argreg = 1}
intro.c(l107:s511:k865:d1:s0)		iTemp596 [k614 lr511:511 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l108:s512:k866:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l108:s513:k867:d1:s0)		iTemp597 [k615 lr513:513 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l109:s514:k868:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l109:s515:k869:d1:s0)		iTemp598 [k616 lr515:515 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l110:s516:k870:d1:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
intro.c(l110:s517:k871:d1:s0)		iTemp599 [k617 lr517:517 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l111:s518:k872:d1:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
intro.c(l111:s519:k873:d1:s0)		iTemp600 [k618 lr519:519 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l112:s520:k874:d1:s0)		iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15}[r0x00 r0x01 ] := 0x2 {unsigned-int literal}
intro.c(l113:s521:k875:d1:s0)		 goto _forcontinue_0($45)
intro.c(l114:s522:k876:d1:s0)	 _case_0_2($14) :
intro.c(l115:s523:k1040:d1:s0)		iTemp612 [k630 lr523:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] := 0x0 {const-unsigned-char literal}
intro.c(l115:s524:k1043:d1:s0)		iTemp602 [k620 lr524:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] := 0x0 {unsigned-int literal}
intro.c(l116:s526:k1010:d13:s0)	 preHeaderLbl5($61) :
intro.c(l116:s527:k883:d13:s0)		iTemp603 [k621 lr527:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] = iTemp368 [k375 lr284:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp602 [k620 lr524:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ]
intro.c(l116:s528:k1024:d13:s0)		iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x08 ] := 0x0 {const-unsigned-char literal}
intro.c(l116:s530:k880:d14:s0)	 _forbody_7($36) :
intro.c(l117:s531:k885:d14:s0)		iTemp605 [k623 lr531:532 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x09 r0x0a ] = iTemp603 [k621 lr527:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] + iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x08 ]
intro.c(l117:s532:k886:d14:s0)		iTemp606 [k624 lr532:533 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x09 ] = @[iTemp605 [k623 lr531:532 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x09 r0x0a ] + 0x0 {const-unsigned-char literal}]
intro.c(l117:s533:k887:d14:s0)		send iTemp606 [k624 lr532:533 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x09 ]{argreg = 1}
intro.c(l117:s534:k888:d14:s0)		iTemp607 [k625 lr534:534 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l116:s535:k891:d14:s0)		iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x08 ] = iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x08 ] + 0x1 {const-unsigned-char literal}
intro.c(l116:s536:k893:d14:s0)		iTemp610 [k628 lr536:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x08 ] < 0x8 {const-unsigned-char literal}
intro.c(l116:s537:k894:d14:s0)		if iTemp610 [k628 lr536:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forbody_7($36)
intro.c(l115:s538:k1044:d13:s0)		iTemp602 [k620 lr524:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] = iTemp602 [k620 lr524:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] + 0x8 {const-unsigned-char literal}
intro.c(l115:s539:k899:d13:s0)		iTemp612 [k630 lr523:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] = iTemp612 [k630 lr523:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] + 0x1 {const-unsigned-char literal}
intro.c(l115:s540:k901:d13:s0)		iTemp613 [k631 lr540:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp612 [k630 lr523:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x4 {const-unsigned-char literal}
intro.c(l115:s541:k902:d13:s0)		if iTemp613 [k631 lr540:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl5($61)
intro.c(l120:s542:k905:d1:s0)		send 0x88 {const-unsigned-char literal}{argreg = 1}
intro.c(l120:s543:k906:d1:s0)		iTemp614 [k632 lr543:543 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l121:s544:k907:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l121:s545:k908:d1:s0)		iTemp615 [k633 lr545:545 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l122:s546:k909:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l122:s547:k910:d1:s0)		iTemp616 [k634 lr547:547 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l123:s548:k911:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l123:s549:k912:d1:s0)		iTemp617 [k635 lr549:549 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l124:s550:k913:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l124:s551:k914:d1:s0)		iTemp618 [k636 lr551:551 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l125:s552:k915:d1:s0)		send 0xc8 {const-unsigned-char literal}{argreg = 1}
intro.c(l125:s553:k916:d1:s0)		iTemp619 [k637 lr553:553 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l126:s554:k917:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l126:s555:k918:d1:s0)		iTemp620 [k638 lr555:555 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l127:s556:k919:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l127:s557:k920:d1:s0)		iTemp621 [k639 lr557:557 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l128:s558:k921:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l128:s559:k922:d1:s0)		iTemp622 [k640 lr559:559 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l129:s560:k923:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l129:s561:k924:d1:s0)		iTemp623 [k641 lr561:561 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l130:s562:k925:d1:s0)		iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15}[r0x00 r0x01 ] := 0x3 {unsigned-int literal}
intro.c(l131:s563:k926:d1:s0)		 goto _forcontinue_0($45)
intro.c(l132:s564:k927:d1:s0)	 _case_0_3($17) :
intro.c(l133:s565:k1045:d1:s0)		iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] := 0x0 {const-unsigned-char literal}
intro.c(l133:s566:k1048:d1:s0)		iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] := 0x0 {unsigned-int literal}
intro.c(l134:s568:k1012:d13:s0)	 preHeaderLbl7($66) :
intro.c(l134:s569:k947:d13:s0)		iTemp633 [k651 lr569:570 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register}[r0x06 ] = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] - 0x4 {const-unsigned-char literal}
intro.c(l134:s570:k948:d13:s0)		iTemp634 [k652 lr570:571 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x06 r0x07 ] = iTemp633 [k651 lr569:570 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register}[r0x06 ] * 0x8 {const-unsigned-char literal}
intro.c(l134:s571:k949:d13:s0)		iTemp635 [k653 lr571:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] = iTemp456 [k464 lr350:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp634 [k652 lr570:571 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x06 r0x07 ]
intro.c(l134:s572:k938:d13:s0)		iTemp627 [k645 lr572:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x08 r0x09 ] = iTemp368 [k375 lr284:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ]
intro.c(l134:s573:k932:d13:s0)		iTemp624 [k642 lr573:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0a ] = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x4 {const-unsigned-char literal}
intro.c(l134:s574:k1027:d13:s0)		iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] := 0x0 {const-unsigned-char literal}
intro.c(l134:s576:k931:d14:s0)	 _forbody_9($40) :
intro.c(l135:s577:k933:d14:s0)		if iTemp624 [k642 lr573:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0a ] == 0 goto _iffalse_2($19)
intro.c(l136:s578:k940:d14:s0)		iTemp629 [k647 lr578:579 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] = iTemp627 [k645 lr572:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x08 r0x09 ] + iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ]
intro.c(l136:s579:k941:d14:s0)		iTemp630 [k648 lr579:580 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ] = @[iTemp629 [k647 lr578:579 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] + 0x0 {const-unsigned-char literal}]
intro.c(l136:s580:k942:d14:s0)		send iTemp630 [k648 lr579:580 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ]{argreg = 1}
intro.c(l136:s581:k943:d14:s0)		iTemp631 [k649 lr581:581 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l136:s582:k944:d14:s0)		 goto _forcontinue_9($41)
intro.c(l136:s583:k945:d14:s0)	 _iffalse_2($19) :
intro.c(l138:s584:k951:d14:s0)		iTemp637 [k655 lr584:585 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] = iTemp635 [k653 lr571:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] + iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ]
intro.c(l138:s585:k952:d14:s0)		iTemp638 [k656 lr585:586 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ] = @[iTemp637 [k655 lr584:585 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] + 0x0 {const-unsigned-char literal}]
intro.c(l138:s586:k953:d14:s0)		send iTemp638 [k656 lr585:586 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ]{argreg = 1}
intro.c(l138:s587:k954:d14:s0)		iTemp639 [k657 lr587:587 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l138:s588:k956:d14:s0)	 _forcontinue_9($41) :
intro.c(l134:s589:k958:d14:s0)		iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] = iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] + 0x1 {const-unsigned-char literal}
intro.c(l134:s590:k960:d14:s0)		iTemp642 [k660 lr590:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] < 0x8 {const-unsigned-char literal}
intro.c(l134:s591:k961:d14:s0)		if iTemp642 [k660 lr590:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forbody_9($40)
intro.c(l133:s592:k1049:d13:s0)		iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] = iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] + 0x8 {const-unsigned-char literal}
intro.c(l133:s593:k966:d13:s0)		iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] + 0x1 {const-unsigned-char literal}
intro.c(l133:s594:k968:d13:s0)		iTemp645 [k663 lr594:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x8 {const-unsigned-char literal}
intro.c(l133:s595:k969:d13:s0)		if iTemp645 [k663 lr594:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl7($66)
intro.c(l141:s596:k972:d1:s0)		send 0x8c {const-unsigned-char literal}{argreg = 1}
intro.c(l141:s597:k973:d1:s0)		iTemp646 [k664 lr597:597 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l142:s598:k974:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l142:s599:k975:d1:s0)		iTemp647 [k665 lr599:599 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l143:s600:k976:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l143:s601:k977:d1:s0)		iTemp648 [k666 lr601:601 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l144:s602:k978:d1:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
intro.c(l144:s603:k979:d1:s0)		iTemp649 [k667 lr603:603 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l145:s604:k980:d1:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
intro.c(l145:s605:k981:d1:s0)		iTemp650 [k668 lr605:605 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l146:s606:k982:d1:s0)		send 0xcc {const-unsigned-char literal}{argreg = 1}
intro.c(l146:s607:k983:d1:s0)		iTemp651 [k669 lr607:607 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l147:s608:k984:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l147:s609:k985:d1:s0)		iTemp652 [k670 lr609:609 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l148:s610:k986:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l148:s611:k987:d1:s0)		iTemp653 [k671 lr611:611 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l149:s612:k988:d1:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
intro.c(l149:s613:k989:d1:s0)		iTemp654 [k672 lr613:613 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l150:s614:k990:d1:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
intro.c(l150:s615:k991:d1:s0)		iTemp655 [k673 lr615:615 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l151:s616:k992:d1:s0)		iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15}[r0x00 r0x01 ] := 0x0 {unsigned-int literal}
intro.c(l153:s617:k995:d1:s0)	 _forcontinue_0($45) :
intro.c(l67:s618:k997:d1:s0)		iTemp657 [k675 lr400:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_x_1_15}[r0x02 ] = iTemp657 [k675 lr400:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_x_1_15}[r0x02 ] + 0x1 {const-unsigned-char literal}
intro.c(l67:s619:k999:d1:s0)		iTemp658 [k676 lr619:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp657 [k675 lr400:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_x_1_15}[r0x02 ] < 0x64 {const-unsigned-char literal}
intro.c(l67:s620:k1000:d1:s0)		if iTemp658 [k676 lr619:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl0($48)
intro.c(l67:s621:k1003:d0:s0)	 _return($46) :
intro.c(l67:s622:k1004:d0:s0)		eproc _intro [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( ) fixed}

----------------------------------------------------------------
Basic Block _case_0_0 : loop Depth = 1 noPath = 0 , lastinLoop = 0
depth 1st num 8 : bbnum = 7 1st iCode = 414 , last iCode = 416
visited 1 : hasFcall = 0

defines bitVector :bitvector Size = 1073 bSize = 135
Bits on { (1030) (1033) }

local defines bitVector :bitvector Size = 1073 bSize = 135
Bits on { (1030) (1033) }

pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

in pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

inDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1034) (1039) (1044) (1049) (1050) }

outDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1030) (1033) (1039) (1044) (1049) (1050) }

usesDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { }

----------------------------------------------------------------
intro.c(l72:s414:k742:d1:s0)	 _case_0_0($2) :
intro.c(l73:s415:k1030:d1:s0)		iTemp557 [k575 lr415:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] := 0x0 {const-unsigned-char literal}
intro.c(l73:s416:k1033:d1:s0)		iTemp539 [k556 lr416:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] := 0x0 {unsigned-int literal}
intro.c(l74:s418:k1006:d13:s0)	 preHeaderLbl1($52) :
intro.c(l74:s419:k762:d13:s0)		iTemp546 [k564 lr419:420 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register}[r0x06 ] = iTemp557 [k575 lr415:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] - 0x4 {const-unsigned-char literal}
intro.c(l74:s420:k763:d13:s0)		iTemp547 [k565 lr420:421 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x06 r0x07 ] = iTemp546 [k564 lr419:420 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register}[r0x06 ] * 0x8 {const-unsigned-char literal}
intro.c(l74:s421:k764:d13:s0)		iTemp548 [k566 lr421:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] = iTemp104 [k108 lr86:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp547 [k565 lr420:421 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x06 r0x07 ]
intro.c(l74:s422:k753:d13:s0)		iTemp540 [k557 lr422:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x08 r0x09 ] = iTemp16 [k19 lr20:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp539 [k556 lr416:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ]
intro.c(l74:s423:k747:d13:s0)		iTemp537 [k553 lr423:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0a ] = iTemp557 [k575 lr415:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x4 {const-unsigned-char literal}
intro.c(l74:s424:k1018:d13:s0)		iTemp554 [k572 lr424:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] := 0x0 {const-unsigned-char literal}
intro.c(l74:s426:k746:d14:s0)	 _forbody_3($28) :
intro.c(l75:s427:k748:d14:s0)		if iTemp537 [k553 lr423:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0a ] == 0 goto _iffalse_0($4)
intro.c(l76:s428:k755:d14:s0)		iTemp542 [k559 lr428:429 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] = iTemp540 [k557 lr422:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x08 r0x09 ] + iTemp554 [k572 lr424:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ]
intro.c(l76:s429:k756:d14:s0)		iTemp543 [k560 lr429:430 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ] = @[iTemp542 [k559 lr428:429 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] + 0x0 {const-unsigned-char literal}]
intro.c(l76:s430:k757:d14:s0)		send iTemp543 [k560 lr429:430 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ]{argreg = 1}
intro.c(l76:s431:k758:d14:s0)		iTemp544 [k562 lr431:431 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l76:s432:k759:d14:s0)		 goto _forcontinue_3($29)
intro.c(l76:s433:k760:d14:s0)	 _iffalse_0($4) :
intro.c(l78:s434:k766:d14:s0)		iTemp550 [k568 lr434:435 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] = iTemp548 [k566 lr421:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] + iTemp554 [k572 lr424:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ]
intro.c(l78:s435:k767:d14:s0)		iTemp551 [k569 lr435:436 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ] = @[iTemp550 [k568 lr434:435 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] + 0x0 {const-unsigned-char literal}]
intro.c(l78:s436:k768:d14:s0)		send iTemp551 [k569 lr435:436 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ]{argreg = 1}
intro.c(l78:s437:k769:d14:s0)		iTemp552 [k570 lr437:437 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l78:s438:k771:d14:s0)	 _forcontinue_3($29) :
intro.c(l74:s439:k773:d14:s0)		iTemp554 [k572 lr424:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] = iTemp554 [k572 lr424:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] + 0x1 {const-unsigned-char literal}
intro.c(l74:s440:k775:d14:s0)		iTemp555 [k573 lr440:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp554 [k572 lr424:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] < 0x8 {const-unsigned-char literal}
intro.c(l74:s441:k776:d14:s0)		if iTemp555 [k573 lr440:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forbody_3($28)
intro.c(l73:s442:k1034:d13:s0)		iTemp539 [k556 lr416:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] = iTemp539 [k556 lr416:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] + 0x8 {const-unsigned-char literal}
intro.c(l73:s443:k781:d13:s0)		iTemp557 [k575 lr415:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] = iTemp557 [k575 lr415:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] + 0x1 {const-unsigned-char literal}
intro.c(l73:s444:k783:d13:s0)		iTemp558 [k576 lr444:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp557 [k575 lr415:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x8 {const-unsigned-char literal}
intro.c(l73:s445:k784:d13:s0)		if iTemp558 [k576 lr444:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl1($52)
intro.c(l81:s446:k787:d1:s0)		send 0x80 {const-unsigned-char literal}{argreg = 1}
intro.c(l81:s447:k788:d1:s0)		iTemp559 [k577 lr447:447 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l82:s448:k789:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l82:s449:k790:d1:s0)		iTemp560 [k578 lr449:449 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l83:s450:k791:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l83:s451:k792:d1:s0)		iTemp561 [k579 lr451:451 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l84:s452:k793:d1:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
intro.c(l84:s453:k794:d1:s0)		iTemp562 [k580 lr453:453 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l85:s454:k795:d1:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
intro.c(l85:s455:k796:d1:s0)		iTemp563 [k581 lr455:455 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l86:s456:k797:d1:s0)		send 0xc0 {const-unsigned-char literal}{argreg = 1}
intro.c(l86:s457:k798:d1:s0)		iTemp564 [k582 lr457:457 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l87:s458:k799:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l87:s459:k800:d1:s0)		iTemp565 [k583 lr459:459 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l88:s460:k801:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l88:s461:k802:d1:s0)		iTemp566 [k584 lr461:461 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l89:s462:k803:d1:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
intro.c(l89:s463:k804:d1:s0)		iTemp567 [k585 lr463:463 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l90:s464:k805:d1:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
intro.c(l90:s465:k806:d1:s0)		iTemp568 [k586 lr465:465 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l91:s466:k807:d1:s0)		iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15}[r0x00 r0x01 ] := 0x1 {unsigned-int literal}
intro.c(l92:s467:k808:d1:s0)		 goto _forcontinue_0($45)
intro.c(l93:s468:k809:d1:s0)	 _case_0_1($8) :
intro.c(l94:s469:k1035:d1:s0)		iTemp589 [k607 lr469:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] := 0x0 {const-unsigned-char literal}
intro.c(l94:s470:k1038:d1:s0)		iTemp571 [k589 lr470:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] := 0x0 {unsigned-int literal}
intro.c(l95:s472:k1008:d13:s0)	 preHeaderLbl3($57) :
intro.c(l95:s473:k829:d13:s0)		iTemp578 [k596 lr473:474 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register}[r0x06 ] = iTemp589 [k607 lr469:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] - 0x4 {const-unsigned-char literal}
intro.c(l95:s474:k830:d13:s0)		iTemp579 [k597 lr474:475 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x06 r0x07 ] = iTemp578 [k596 lr473:474 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register}[r0x06 ] * 0x8 {const-unsigned-char literal}
intro.c(l95:s475:k831:d13:s0)		iTemp580 [k598 lr475:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] = iTemp280 [k286 lr218:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp579 [k597 lr474:475 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x06 r0x07 ]
intro.c(l95:s476:k820:d13:s0)		iTemp572 [k590 lr476:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x08 r0x09 ] = iTemp192 [k197 lr152:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp571 [k589 lr470:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ]
intro.c(l95:s477:k814:d13:s0)		iTemp569 [k587 lr477:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0a ] = iTemp589 [k607 lr469:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x4 {const-unsigned-char literal}
intro.c(l95:s478:k1021:d13:s0)		iTemp586 [k604 lr478:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] := 0x0 {const-unsigned-char literal}
intro.c(l95:s480:k813:d14:s0)	 _forbody_5($32) :
intro.c(l96:s481:k815:d14:s0)		if iTemp569 [k587 lr477:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0a ] == 0 goto _iffalse_1($10)
intro.c(l97:s482:k822:d14:s0)		iTemp574 [k592 lr482:483 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] = iTemp572 [k590 lr476:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x08 r0x09 ] + iTemp586 [k604 lr478:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ]
intro.c(l97:s483:k823:d14:s0)		iTemp575 [k593 lr483:484 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ] = @[iTemp574 [k592 lr482:483 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] + 0x0 {const-unsigned-char literal}]
intro.c(l97:s484:k824:d14:s0)		send iTemp575 [k593 lr483:484 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ]{argreg = 1}
intro.c(l97:s485:k825:d14:s0)		iTemp576 [k594 lr485:485 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l97:s486:k826:d14:s0)		 goto _forcontinue_5($33)
intro.c(l97:s487:k827:d14:s0)	 _iffalse_1($10) :
intro.c(l99:s488:k833:d14:s0)		iTemp582 [k600 lr488:489 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] = iTemp580 [k598 lr475:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] + iTemp586 [k604 lr478:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ]
intro.c(l99:s489:k834:d14:s0)		iTemp583 [k601 lr489:490 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ] = @[iTemp582 [k600 lr488:489 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] + 0x0 {const-unsigned-char literal}]
intro.c(l99:s490:k835:d14:s0)		send iTemp583 [k601 lr489:490 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ]{argreg = 1}
intro.c(l99:s491:k836:d14:s0)		iTemp584 [k602 lr491:491 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l99:s492:k838:d14:s0)	 _forcontinue_5($33) :
intro.c(l95:s493:k840:d14:s0)		iTemp586 [k604 lr478:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] = iTemp586 [k604 lr478:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] + 0x1 {const-unsigned-char literal}
intro.c(l95:s494:k842:d14:s0)		iTemp587 [k605 lr494:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp586 [k604 lr478:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] < 0x8 {const-unsigned-char literal}
intro.c(l95:s495:k843:d14:s0)		if iTemp587 [k605 lr494:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forbody_5($32)
intro.c(l94:s496:k1039:d13:s0)		iTemp571 [k589 lr470:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] = iTemp571 [k589 lr470:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] + 0x8 {const-unsigned-char literal}
intro.c(l94:s497:k848:d13:s0)		iTemp589 [k607 lr469:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] = iTemp589 [k607 lr469:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] + 0x1 {const-unsigned-char literal}
intro.c(l94:s498:k850:d13:s0)		iTemp590 [k608 lr498:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp589 [k607 lr469:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x8 {const-unsigned-char literal}
intro.c(l94:s499:k851:d13:s0)		if iTemp590 [k608 lr498:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl3($57)
intro.c(l102:s500:k854:d1:s0)		send 0x84 {const-unsigned-char literal}{argreg = 1}
intro.c(l102:s501:k855:d1:s0)		iTemp591 [k609 lr501:501 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l103:s502:k856:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l103:s503:k857:d1:s0)		iTemp592 [k610 lr503:503 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l104:s504:k858:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l104:s505:k859:d1:s0)		iTemp593 [k611 lr505:505 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l105:s506:k860:d1:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
intro.c(l105:s507:k861:d1:s0)		iTemp594 [k612 lr507:507 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l106:s508:k862:d1:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
intro.c(l106:s509:k863:d1:s0)		iTemp595 [k613 lr509:509 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l107:s510:k864:d1:s0)		send 0xc4 {const-unsigned-char literal}{argreg = 1}
intro.c(l107:s511:k865:d1:s0)		iTemp596 [k614 lr511:511 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l108:s512:k866:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l108:s513:k867:d1:s0)		iTemp597 [k615 lr513:513 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l109:s514:k868:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l109:s515:k869:d1:s0)		iTemp598 [k616 lr515:515 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l110:s516:k870:d1:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
intro.c(l110:s517:k871:d1:s0)		iTemp599 [k617 lr517:517 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l111:s518:k872:d1:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
intro.c(l111:s519:k873:d1:s0)		iTemp600 [k618 lr519:519 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l112:s520:k874:d1:s0)		iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15}[r0x00 r0x01 ] := 0x2 {unsigned-int literal}
intro.c(l113:s521:k875:d1:s0)		 goto _forcontinue_0($45)
intro.c(l114:s522:k876:d1:s0)	 _case_0_2($14) :
intro.c(l115:s523:k1040:d1:s0)		iTemp612 [k630 lr523:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] := 0x0 {const-unsigned-char literal}
intro.c(l115:s524:k1043:d1:s0)		iTemp602 [k620 lr524:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] := 0x0 {unsigned-int literal}
intro.c(l116:s526:k1010:d13:s0)	 preHeaderLbl5($61) :
intro.c(l116:s527:k883:d13:s0)		iTemp603 [k621 lr527:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] = iTemp368 [k375 lr284:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp602 [k620 lr524:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ]
intro.c(l116:s528:k1024:d13:s0)		iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x08 ] := 0x0 {const-unsigned-char literal}
intro.c(l116:s530:k880:d14:s0)	 _forbody_7($36) :
intro.c(l117:s531:k885:d14:s0)		iTemp605 [k623 lr531:532 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x09 r0x0a ] = iTemp603 [k621 lr527:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] + iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x08 ]
intro.c(l117:s532:k886:d14:s0)		iTemp606 [k624 lr532:533 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x09 ] = @[iTemp605 [k623 lr531:532 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x09 r0x0a ] + 0x0 {const-unsigned-char literal}]
intro.c(l117:s533:k887:d14:s0)		send iTemp606 [k624 lr532:533 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x09 ]{argreg = 1}
intro.c(l117:s534:k888:d14:s0)		iTemp607 [k625 lr534:534 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l116:s535:k891:d14:s0)		iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x08 ] = iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x08 ] + 0x1 {const-unsigned-char literal}
intro.c(l116:s536:k893:d14:s0)		iTemp610 [k628 lr536:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x08 ] < 0x8 {const-unsigned-char literal}
intro.c(l116:s537:k894:d14:s0)		if iTemp610 [k628 lr536:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forbody_7($36)
intro.c(l115:s538:k1044:d13:s0)		iTemp602 [k620 lr524:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] = iTemp602 [k620 lr524:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] + 0x8 {const-unsigned-char literal}
intro.c(l115:s539:k899:d13:s0)		iTemp612 [k630 lr523:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] = iTemp612 [k630 lr523:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] + 0x1 {const-unsigned-char literal}
intro.c(l115:s540:k901:d13:s0)		iTemp613 [k631 lr540:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp612 [k630 lr523:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x4 {const-unsigned-char literal}
intro.c(l115:s541:k902:d13:s0)		if iTemp613 [k631 lr540:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl5($61)
intro.c(l120:s542:k905:d1:s0)		send 0x88 {const-unsigned-char literal}{argreg = 1}
intro.c(l120:s543:k906:d1:s0)		iTemp614 [k632 lr543:543 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l121:s544:k907:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l121:s545:k908:d1:s0)		iTemp615 [k633 lr545:545 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l122:s546:k909:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l122:s547:k910:d1:s0)		iTemp616 [k634 lr547:547 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l123:s548:k911:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l123:s549:k912:d1:s0)		iTemp617 [k635 lr549:549 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l124:s550:k913:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l124:s551:k914:d1:s0)		iTemp618 [k636 lr551:551 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l125:s552:k915:d1:s0)		send 0xc8 {const-unsigned-char literal}{argreg = 1}
intro.c(l125:s553:k916:d1:s0)		iTemp619 [k637 lr553:553 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l126:s554:k917:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l126:s555:k918:d1:s0)		iTemp620 [k638 lr555:555 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l127:s556:k919:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l127:s557:k920:d1:s0)		iTemp621 [k639 lr557:557 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l128:s558:k921:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l128:s559:k922:d1:s0)		iTemp622 [k640 lr559:559 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l129:s560:k923:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l129:s561:k924:d1:s0)		iTemp623 [k641 lr561:561 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l130:s562:k925:d1:s0)		iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15}[r0x00 r0x01 ] := 0x3 {unsigned-int literal}
intro.c(l131:s563:k926:d1:s0)		 goto _forcontinue_0($45)
intro.c(l132:s564:k927:d1:s0)	 _case_0_3($17) :
intro.c(l133:s565:k1045:d1:s0)		iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] := 0x0 {const-unsigned-char literal}
intro.c(l133:s566:k1048:d1:s0)		iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] := 0x0 {unsigned-int literal}
intro.c(l134:s568:k1012:d13:s0)	 preHeaderLbl7($66) :
intro.c(l134:s569:k947:d13:s0)		iTemp633 [k651 lr569:570 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register}[r0x06 ] = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] - 0x4 {const-unsigned-char literal}
intro.c(l134:s570:k948:d13:s0)		iTemp634 [k652 lr570:571 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x06 r0x07 ] = iTemp633 [k651 lr569:570 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register}[r0x06 ] * 0x8 {const-unsigned-char literal}
intro.c(l134:s571:k949:d13:s0)		iTemp635 [k653 lr571:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] = iTemp456 [k464 lr350:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp634 [k652 lr570:571 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x06 r0x07 ]
intro.c(l134:s572:k938:d13:s0)		iTemp627 [k645 lr572:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x08 r0x09 ] = iTemp368 [k375 lr284:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ]
intro.c(l134:s573:k932:d13:s0)		iTemp624 [k642 lr573:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0a ] = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x4 {const-unsigned-char literal}
intro.c(l134:s574:k1027:d13:s0)		iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] := 0x0 {const-unsigned-char literal}
intro.c(l134:s576:k931:d14:s0)	 _forbody_9($40) :
intro.c(l135:s577:k933:d14:s0)		if iTemp624 [k642 lr573:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0a ] == 0 goto _iffalse_2($19)
intro.c(l136:s578:k940:d14:s0)		iTemp629 [k647 lr578:579 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] = iTemp627 [k645 lr572:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x08 r0x09 ] + iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ]
intro.c(l136:s579:k941:d14:s0)		iTemp630 [k648 lr579:580 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ] = @[iTemp629 [k647 lr578:579 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] + 0x0 {const-unsigned-char literal}]
intro.c(l136:s580:k942:d14:s0)		send iTemp630 [k648 lr579:580 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ]{argreg = 1}
intro.c(l136:s581:k943:d14:s0)		iTemp631 [k649 lr581:581 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l136:s582:k944:d14:s0)		 goto _forcontinue_9($41)
intro.c(l136:s583:k945:d14:s0)	 _iffalse_2($19) :
intro.c(l138:s584:k951:d14:s0)		iTemp637 [k655 lr584:585 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] = iTemp635 [k653 lr571:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] + iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ]
intro.c(l138:s585:k952:d14:s0)		iTemp638 [k656 lr585:586 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ] = @[iTemp637 [k655 lr584:585 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] + 0x0 {const-unsigned-char literal}]
intro.c(l138:s586:k953:d14:s0)		send iTemp638 [k656 lr585:586 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ]{argreg = 1}
intro.c(l138:s587:k954:d14:s0)		iTemp639 [k657 lr587:587 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l138:s588:k956:d14:s0)	 _forcontinue_9($41) :
intro.c(l134:s589:k958:d14:s0)		iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] = iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] + 0x1 {const-unsigned-char literal}
intro.c(l134:s590:k960:d14:s0)		iTemp642 [k660 lr590:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] < 0x8 {const-unsigned-char literal}
intro.c(l134:s591:k961:d14:s0)		if iTemp642 [k660 lr590:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forbody_9($40)
intro.c(l133:s592:k1049:d13:s0)		iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] = iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] + 0x8 {const-unsigned-char literal}
intro.c(l133:s593:k966:d13:s0)		iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] + 0x1 {const-unsigned-char literal}
intro.c(l133:s594:k968:d13:s0)		iTemp645 [k663 lr594:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x8 {const-unsigned-char literal}
intro.c(l133:s595:k969:d13:s0)		if iTemp645 [k663 lr594:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl7($66)
intro.c(l141:s596:k972:d1:s0)		send 0x8c {const-unsigned-char literal}{argreg = 1}
intro.c(l141:s597:k973:d1:s0)		iTemp646 [k664 lr597:597 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l142:s598:k974:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l142:s599:k975:d1:s0)		iTemp647 [k665 lr599:599 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l143:s600:k976:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l143:s601:k977:d1:s0)		iTemp648 [k666 lr601:601 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l144:s602:k978:d1:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
intro.c(l144:s603:k979:d1:s0)		iTemp649 [k667 lr603:603 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l145:s604:k980:d1:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
intro.c(l145:s605:k981:d1:s0)		iTemp650 [k668 lr605:605 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l146:s606:k982:d1:s0)		send 0xcc {const-unsigned-char literal}{argreg = 1}
intro.c(l146:s607:k983:d1:s0)		iTemp651 [k669 lr607:607 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l147:s608:k984:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l147:s609:k985:d1:s0)		iTemp652 [k670 lr609:609 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l148:s610:k986:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l148:s611:k987:d1:s0)		iTemp653 [k671 lr611:611 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l149:s612:k988:d1:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
intro.c(l149:s613:k989:d1:s0)		iTemp654 [k672 lr613:613 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l150:s614:k990:d1:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
intro.c(l150:s615:k991:d1:s0)		iTemp655 [k673 lr615:615 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l151:s616:k992:d1:s0)		iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15}[r0x00 r0x01 ] := 0x0 {unsigned-int literal}
intro.c(l153:s617:k995:d1:s0)	 _forcontinue_0($45) :
intro.c(l67:s618:k997:d1:s0)		iTemp657 [k675 lr400:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_x_1_15}[r0x02 ] = iTemp657 [k675 lr400:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_x_1_15}[r0x02 ] + 0x1 {const-unsigned-char literal}
intro.c(l67:s619:k999:d1:s0)		iTemp658 [k676 lr619:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp657 [k675 lr400:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_x_1_15}[r0x02 ] < 0x64 {const-unsigned-char literal}
intro.c(l67:s620:k1000:d1:s0)		if iTemp658 [k676 lr619:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl0($48)
intro.c(l67:s621:k1003:d0:s0)	 _return($46) :
intro.c(l67:s622:k1004:d0:s0)		eproc _intro [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( ) fixed}

----------------------------------------------------------------
Basic Block preHeaderLbl32 : loop Depth = 1 noPath = 0 , lastinLoop = 0
depth 1st num 9 : bbnum = 8 1st iCode = 417 , last iCode = 417
visited 1 : hasFcall = 0

defines bitVector :bitvector Size = 1073 bSize = 135
Bits on { }

local defines bitVector :
pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

in pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

inDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1030) (1033) (1039) (1044) (1049) (1050) }

outDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1030) (1033) (1039) (1044) (1049) (1050) }

usesDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { }

----------------------------------------------------------------
intro.c(l74:s417:k1065:d1:s0)	 preHeaderLbl32($110) :
intro.c(l74:s418:k1006:d13:s0)	 preHeaderLbl1($52) :
intro.c(l74:s419:k762:d13:s0)		iTemp546 [k564 lr419:420 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register}[r0x06 ] = iTemp557 [k575 lr415:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] - 0x4 {const-unsigned-char literal}
intro.c(l74:s420:k763:d13:s0)		iTemp547 [k565 lr420:421 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x06 r0x07 ] = iTemp546 [k564 lr419:420 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register}[r0x06 ] * 0x8 {const-unsigned-char literal}
intro.c(l74:s421:k764:d13:s0)		iTemp548 [k566 lr421:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] = iTemp104 [k108 lr86:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp547 [k565 lr420:421 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x06 r0x07 ]
intro.c(l74:s422:k753:d13:s0)		iTemp540 [k557 lr422:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x08 r0x09 ] = iTemp16 [k19 lr20:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp539 [k556 lr416:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ]
intro.c(l74:s423:k747:d13:s0)		iTemp537 [k553 lr423:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0a ] = iTemp557 [k575 lr415:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x4 {const-unsigned-char literal}
intro.c(l74:s424:k1018:d13:s0)		iTemp554 [k572 lr424:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] := 0x0 {const-unsigned-char literal}
intro.c(l74:s426:k746:d14:s0)	 _forbody_3($28) :
intro.c(l75:s427:k748:d14:s0)		if iTemp537 [k553 lr423:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0a ] == 0 goto _iffalse_0($4)
intro.c(l76:s428:k755:d14:s0)		iTemp542 [k559 lr428:429 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] = iTemp540 [k557 lr422:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x08 r0x09 ] + iTemp554 [k572 lr424:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ]
intro.c(l76:s429:k756:d14:s0)		iTemp543 [k560 lr429:430 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ] = @[iTemp542 [k559 lr428:429 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] + 0x0 {const-unsigned-char literal}]
intro.c(l76:s430:k757:d14:s0)		send iTemp543 [k560 lr429:430 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ]{argreg = 1}
intro.c(l76:s431:k758:d14:s0)		iTemp544 [k562 lr431:431 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l76:s432:k759:d14:s0)		 goto _forcontinue_3($29)
intro.c(l76:s433:k760:d14:s0)	 _iffalse_0($4) :
intro.c(l78:s434:k766:d14:s0)		iTemp550 [k568 lr434:435 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] = iTemp548 [k566 lr421:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] + iTemp554 [k572 lr424:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ]
intro.c(l78:s435:k767:d14:s0)		iTemp551 [k569 lr435:436 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ] = @[iTemp550 [k568 lr434:435 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] + 0x0 {const-unsigned-char literal}]
intro.c(l78:s436:k768:d14:s0)		send iTemp551 [k569 lr435:436 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ]{argreg = 1}
intro.c(l78:s437:k769:d14:s0)		iTemp552 [k570 lr437:437 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l78:s438:k771:d14:s0)	 _forcontinue_3($29) :
intro.c(l74:s439:k773:d14:s0)		iTemp554 [k572 lr424:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] = iTemp554 [k572 lr424:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] + 0x1 {const-unsigned-char literal}
intro.c(l74:s440:k775:d14:s0)		iTemp555 [k573 lr440:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp554 [k572 lr424:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] < 0x8 {const-unsigned-char literal}
intro.c(l74:s441:k776:d14:s0)		if iTemp555 [k573 lr440:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forbody_3($28)
intro.c(l73:s442:k1034:d13:s0)		iTemp539 [k556 lr416:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] = iTemp539 [k556 lr416:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] + 0x8 {const-unsigned-char literal}
intro.c(l73:s443:k781:d13:s0)		iTemp557 [k575 lr415:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] = iTemp557 [k575 lr415:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] + 0x1 {const-unsigned-char literal}
intro.c(l73:s444:k783:d13:s0)		iTemp558 [k576 lr444:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp557 [k575 lr415:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x8 {const-unsigned-char literal}
intro.c(l73:s445:k784:d13:s0)		if iTemp558 [k576 lr444:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl1($52)
intro.c(l81:s446:k787:d1:s0)		send 0x80 {const-unsigned-char literal}{argreg = 1}
intro.c(l81:s447:k788:d1:s0)		iTemp559 [k577 lr447:447 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l82:s448:k789:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l82:s449:k790:d1:s0)		iTemp560 [k578 lr449:449 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l83:s450:k791:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l83:s451:k792:d1:s0)		iTemp561 [k579 lr451:451 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l84:s452:k793:d1:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
intro.c(l84:s453:k794:d1:s0)		iTemp562 [k580 lr453:453 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l85:s454:k795:d1:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
intro.c(l85:s455:k796:d1:s0)		iTemp563 [k581 lr455:455 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l86:s456:k797:d1:s0)		send 0xc0 {const-unsigned-char literal}{argreg = 1}
intro.c(l86:s457:k798:d1:s0)		iTemp564 [k582 lr457:457 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l87:s458:k799:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l87:s459:k800:d1:s0)		iTemp565 [k583 lr459:459 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l88:s460:k801:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l88:s461:k802:d1:s0)		iTemp566 [k584 lr461:461 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l89:s462:k803:d1:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
intro.c(l89:s463:k804:d1:s0)		iTemp567 [k585 lr463:463 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l90:s464:k805:d1:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
intro.c(l90:s465:k806:d1:s0)		iTemp568 [k586 lr465:465 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l91:s466:k807:d1:s0)		iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15}[r0x00 r0x01 ] := 0x1 {unsigned-int literal}
intro.c(l92:s467:k808:d1:s0)		 goto _forcontinue_0($45)
intro.c(l93:s468:k809:d1:s0)	 _case_0_1($8) :
intro.c(l94:s469:k1035:d1:s0)		iTemp589 [k607 lr469:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] := 0x0 {const-unsigned-char literal}
intro.c(l94:s470:k1038:d1:s0)		iTemp571 [k589 lr470:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] := 0x0 {unsigned-int literal}
intro.c(l95:s472:k1008:d13:s0)	 preHeaderLbl3($57) :
intro.c(l95:s473:k829:d13:s0)		iTemp578 [k596 lr473:474 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register}[r0x06 ] = iTemp589 [k607 lr469:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] - 0x4 {const-unsigned-char literal}
intro.c(l95:s474:k830:d13:s0)		iTemp579 [k597 lr474:475 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x06 r0x07 ] = iTemp578 [k596 lr473:474 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register}[r0x06 ] * 0x8 {const-unsigned-char literal}
intro.c(l95:s475:k831:d13:s0)		iTemp580 [k598 lr475:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] = iTemp280 [k286 lr218:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp579 [k597 lr474:475 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x06 r0x07 ]
intro.c(l95:s476:k820:d13:s0)		iTemp572 [k590 lr476:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x08 r0x09 ] = iTemp192 [k197 lr152:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp571 [k589 lr470:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ]
intro.c(l95:s477:k814:d13:s0)		iTemp569 [k587 lr477:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0a ] = iTemp589 [k607 lr469:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x4 {const-unsigned-char literal}
intro.c(l95:s478:k1021:d13:s0)		iTemp586 [k604 lr478:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] := 0x0 {const-unsigned-char literal}
intro.c(l95:s480:k813:d14:s0)	 _forbody_5($32) :
intro.c(l96:s481:k815:d14:s0)		if iTemp569 [k587 lr477:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0a ] == 0 goto _iffalse_1($10)
intro.c(l97:s482:k822:d14:s0)		iTemp574 [k592 lr482:483 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] = iTemp572 [k590 lr476:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x08 r0x09 ] + iTemp586 [k604 lr478:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ]
intro.c(l97:s483:k823:d14:s0)		iTemp575 [k593 lr483:484 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ] = @[iTemp574 [k592 lr482:483 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] + 0x0 {const-unsigned-char literal}]
intro.c(l97:s484:k824:d14:s0)		send iTemp575 [k593 lr483:484 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ]{argreg = 1}
intro.c(l97:s485:k825:d14:s0)		iTemp576 [k594 lr485:485 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l97:s486:k826:d14:s0)		 goto _forcontinue_5($33)
intro.c(l97:s487:k827:d14:s0)	 _iffalse_1($10) :
intro.c(l99:s488:k833:d14:s0)		iTemp582 [k600 lr488:489 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] = iTemp580 [k598 lr475:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] + iTemp586 [k604 lr478:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ]
intro.c(l99:s489:k834:d14:s0)		iTemp583 [k601 lr489:490 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ] = @[iTemp582 [k600 lr488:489 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] + 0x0 {const-unsigned-char literal}]
intro.c(l99:s490:k835:d14:s0)		send iTemp583 [k601 lr489:490 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ]{argreg = 1}
intro.c(l99:s491:k836:d14:s0)		iTemp584 [k602 lr491:491 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l99:s492:k838:d14:s0)	 _forcontinue_5($33) :
intro.c(l95:s493:k840:d14:s0)		iTemp586 [k604 lr478:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] = iTemp586 [k604 lr478:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] + 0x1 {const-unsigned-char literal}
intro.c(l95:s494:k842:d14:s0)		iTemp587 [k605 lr494:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp586 [k604 lr478:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] < 0x8 {const-unsigned-char literal}
intro.c(l95:s495:k843:d14:s0)		if iTemp587 [k605 lr494:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forbody_5($32)
intro.c(l94:s496:k1039:d13:s0)		iTemp571 [k589 lr470:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] = iTemp571 [k589 lr470:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] + 0x8 {const-unsigned-char literal}
intro.c(l94:s497:k848:d13:s0)		iTemp589 [k607 lr469:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] = iTemp589 [k607 lr469:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] + 0x1 {const-unsigned-char literal}
intro.c(l94:s498:k850:d13:s0)		iTemp590 [k608 lr498:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp589 [k607 lr469:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x8 {const-unsigned-char literal}
intro.c(l94:s499:k851:d13:s0)		if iTemp590 [k608 lr498:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl3($57)
intro.c(l102:s500:k854:d1:s0)		send 0x84 {const-unsigned-char literal}{argreg = 1}
intro.c(l102:s501:k855:d1:s0)		iTemp591 [k609 lr501:501 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l103:s502:k856:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l103:s503:k857:d1:s0)		iTemp592 [k610 lr503:503 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l104:s504:k858:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l104:s505:k859:d1:s0)		iTemp593 [k611 lr505:505 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l105:s506:k860:d1:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
intro.c(l105:s507:k861:d1:s0)		iTemp594 [k612 lr507:507 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l106:s508:k862:d1:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
intro.c(l106:s509:k863:d1:s0)		iTemp595 [k613 lr509:509 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l107:s510:k864:d1:s0)		send 0xc4 {const-unsigned-char literal}{argreg = 1}
intro.c(l107:s511:k865:d1:s0)		iTemp596 [k614 lr511:511 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l108:s512:k866:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l108:s513:k867:d1:s0)		iTemp597 [k615 lr513:513 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l109:s514:k868:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l109:s515:k869:d1:s0)		iTemp598 [k616 lr515:515 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l110:s516:k870:d1:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
intro.c(l110:s517:k871:d1:s0)		iTemp599 [k617 lr517:517 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l111:s518:k872:d1:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
intro.c(l111:s519:k873:d1:s0)		iTemp600 [k618 lr519:519 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l112:s520:k874:d1:s0)		iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15}[r0x00 r0x01 ] := 0x2 {unsigned-int literal}
intro.c(l113:s521:k875:d1:s0)		 goto _forcontinue_0($45)
intro.c(l114:s522:k876:d1:s0)	 _case_0_2($14) :
intro.c(l115:s523:k1040:d1:s0)		iTemp612 [k630 lr523:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] := 0x0 {const-unsigned-char literal}
intro.c(l115:s524:k1043:d1:s0)		iTemp602 [k620 lr524:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] := 0x0 {unsigned-int literal}
intro.c(l116:s526:k1010:d13:s0)	 preHeaderLbl5($61) :
intro.c(l116:s527:k883:d13:s0)		iTemp603 [k621 lr527:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] = iTemp368 [k375 lr284:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp602 [k620 lr524:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ]
intro.c(l116:s528:k1024:d13:s0)		iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x08 ] := 0x0 {const-unsigned-char literal}
intro.c(l116:s530:k880:d14:s0)	 _forbody_7($36) :
intro.c(l117:s531:k885:d14:s0)		iTemp605 [k623 lr531:532 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x09 r0x0a ] = iTemp603 [k621 lr527:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] + iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x08 ]
intro.c(l117:s532:k886:d14:s0)		iTemp606 [k624 lr532:533 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x09 ] = @[iTemp605 [k623 lr531:532 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x09 r0x0a ] + 0x0 {const-unsigned-char literal}]
intro.c(l117:s533:k887:d14:s0)		send iTemp606 [k624 lr532:533 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x09 ]{argreg = 1}
intro.c(l117:s534:k888:d14:s0)		iTemp607 [k625 lr534:534 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l116:s535:k891:d14:s0)		iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x08 ] = iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x08 ] + 0x1 {const-unsigned-char literal}
intro.c(l116:s536:k893:d14:s0)		iTemp610 [k628 lr536:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x08 ] < 0x8 {const-unsigned-char literal}
intro.c(l116:s537:k894:d14:s0)		if iTemp610 [k628 lr536:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forbody_7($36)
intro.c(l115:s538:k1044:d13:s0)		iTemp602 [k620 lr524:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] = iTemp602 [k620 lr524:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] + 0x8 {const-unsigned-char literal}
intro.c(l115:s539:k899:d13:s0)		iTemp612 [k630 lr523:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] = iTemp612 [k630 lr523:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] + 0x1 {const-unsigned-char literal}
intro.c(l115:s540:k901:d13:s0)		iTemp613 [k631 lr540:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp612 [k630 lr523:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x4 {const-unsigned-char literal}
intro.c(l115:s541:k902:d13:s0)		if iTemp613 [k631 lr540:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl5($61)
intro.c(l120:s542:k905:d1:s0)		send 0x88 {const-unsigned-char literal}{argreg = 1}
intro.c(l120:s543:k906:d1:s0)		iTemp614 [k632 lr543:543 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l121:s544:k907:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l121:s545:k908:d1:s0)		iTemp615 [k633 lr545:545 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l122:s546:k909:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l122:s547:k910:d1:s0)		iTemp616 [k634 lr547:547 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l123:s548:k911:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l123:s549:k912:d1:s0)		iTemp617 [k635 lr549:549 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l124:s550:k913:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l124:s551:k914:d1:s0)		iTemp618 [k636 lr551:551 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l125:s552:k915:d1:s0)		send 0xc8 {const-unsigned-char literal}{argreg = 1}
intro.c(l125:s553:k916:d1:s0)		iTemp619 [k637 lr553:553 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l126:s554:k917:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l126:s555:k918:d1:s0)		iTemp620 [k638 lr555:555 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l127:s556:k919:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l127:s557:k920:d1:s0)		iTemp621 [k639 lr557:557 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l128:s558:k921:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l128:s559:k922:d1:s0)		iTemp622 [k640 lr559:559 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l129:s560:k923:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l129:s561:k924:d1:s0)		iTemp623 [k641 lr561:561 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l130:s562:k925:d1:s0)		iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15}[r0x00 r0x01 ] := 0x3 {unsigned-int literal}
intro.c(l131:s563:k926:d1:s0)		 goto _forcontinue_0($45)
intro.c(l132:s564:k927:d1:s0)	 _case_0_3($17) :
intro.c(l133:s565:k1045:d1:s0)		iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] := 0x0 {const-unsigned-char literal}
intro.c(l133:s566:k1048:d1:s0)		iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] := 0x0 {unsigned-int literal}
intro.c(l134:s568:k1012:d13:s0)	 preHeaderLbl7($66) :
intro.c(l134:s569:k947:d13:s0)		iTemp633 [k651 lr569:570 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register}[r0x06 ] = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] - 0x4 {const-unsigned-char literal}
intro.c(l134:s570:k948:d13:s0)		iTemp634 [k652 lr570:571 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x06 r0x07 ] = iTemp633 [k651 lr569:570 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register}[r0x06 ] * 0x8 {const-unsigned-char literal}
intro.c(l134:s571:k949:d13:s0)		iTemp635 [k653 lr571:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] = iTemp456 [k464 lr350:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp634 [k652 lr570:571 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x06 r0x07 ]
intro.c(l134:s572:k938:d13:s0)		iTemp627 [k645 lr572:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x08 r0x09 ] = iTemp368 [k375 lr284:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ]
intro.c(l134:s573:k932:d13:s0)		iTemp624 [k642 lr573:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0a ] = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x4 {const-unsigned-char literal}
intro.c(l134:s574:k1027:d13:s0)		iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] := 0x0 {const-unsigned-char literal}
intro.c(l134:s576:k931:d14:s0)	 _forbody_9($40) :
intro.c(l135:s577:k933:d14:s0)		if iTemp624 [k642 lr573:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0a ] == 0 goto _iffalse_2($19)
intro.c(l136:s578:k940:d14:s0)		iTemp629 [k647 lr578:579 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] = iTemp627 [k645 lr572:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x08 r0x09 ] + iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ]
intro.c(l136:s579:k941:d14:s0)		iTemp630 [k648 lr579:580 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ] = @[iTemp629 [k647 lr578:579 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] + 0x0 {const-unsigned-char literal}]
intro.c(l136:s580:k942:d14:s0)		send iTemp630 [k648 lr579:580 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ]{argreg = 1}
intro.c(l136:s581:k943:d14:s0)		iTemp631 [k649 lr581:581 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l136:s582:k944:d14:s0)		 goto _forcontinue_9($41)
intro.c(l136:s583:k945:d14:s0)	 _iffalse_2($19) :
intro.c(l138:s584:k951:d14:s0)		iTemp637 [k655 lr584:585 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] = iTemp635 [k653 lr571:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] + iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ]
intro.c(l138:s585:k952:d14:s0)		iTemp638 [k656 lr585:586 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ] = @[iTemp637 [k655 lr584:585 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] + 0x0 {const-unsigned-char literal}]
intro.c(l138:s586:k953:d14:s0)		send iTemp638 [k656 lr585:586 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ]{argreg = 1}
intro.c(l138:s587:k954:d14:s0)		iTemp639 [k657 lr587:587 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l138:s588:k956:d14:s0)	 _forcontinue_9($41) :
intro.c(l134:s589:k958:d14:s0)		iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] = iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] + 0x1 {const-unsigned-char literal}
intro.c(l134:s590:k960:d14:s0)		iTemp642 [k660 lr590:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] < 0x8 {const-unsigned-char literal}
intro.c(l134:s591:k961:d14:s0)		if iTemp642 [k660 lr590:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forbody_9($40)
intro.c(l133:s592:k1049:d13:s0)		iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] = iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] + 0x8 {const-unsigned-char literal}
intro.c(l133:s593:k966:d13:s0)		iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] + 0x1 {const-unsigned-char literal}
intro.c(l133:s594:k968:d13:s0)		iTemp645 [k663 lr594:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x8 {const-unsigned-char literal}
intro.c(l133:s595:k969:d13:s0)		if iTemp645 [k663 lr594:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl7($66)
intro.c(l141:s596:k972:d1:s0)		send 0x8c {const-unsigned-char literal}{argreg = 1}
intro.c(l141:s597:k973:d1:s0)		iTemp646 [k664 lr597:597 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l142:s598:k974:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l142:s599:k975:d1:s0)		iTemp647 [k665 lr599:599 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l143:s600:k976:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l143:s601:k977:d1:s0)		iTemp648 [k666 lr601:601 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l144:s602:k978:d1:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
intro.c(l144:s603:k979:d1:s0)		iTemp649 [k667 lr603:603 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l145:s604:k980:d1:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
intro.c(l145:s605:k981:d1:s0)		iTemp650 [k668 lr605:605 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l146:s606:k982:d1:s0)		send 0xcc {const-unsigned-char literal}{argreg = 1}
intro.c(l146:s607:k983:d1:s0)		iTemp651 [k669 lr607:607 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l147:s608:k984:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l147:s609:k985:d1:s0)		iTemp652 [k670 lr609:609 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l148:s610:k986:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l148:s611:k987:d1:s0)		iTemp653 [k671 lr611:611 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l149:s612:k988:d1:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
intro.c(l149:s613:k989:d1:s0)		iTemp654 [k672 lr613:613 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l150:s614:k990:d1:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
intro.c(l150:s615:k991:d1:s0)		iTemp655 [k673 lr615:615 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l151:s616:k992:d1:s0)		iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15}[r0x00 r0x01 ] := 0x0 {unsigned-int literal}
intro.c(l153:s617:k995:d1:s0)	 _forcontinue_0($45) :
intro.c(l67:s618:k997:d1:s0)		iTemp657 [k675 lr400:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_x_1_15}[r0x02 ] = iTemp657 [k675 lr400:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_x_1_15}[r0x02 ] + 0x1 {const-unsigned-char literal}
intro.c(l67:s619:k999:d1:s0)		iTemp658 [k676 lr619:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp657 [k675 lr400:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_x_1_15}[r0x02 ] < 0x64 {const-unsigned-char literal}
intro.c(l67:s620:k1000:d1:s0)		if iTemp658 [k676 lr619:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl0($48)
intro.c(l67:s621:k1003:d0:s0)	 _return($46) :
intro.c(l67:s622:k1004:d0:s0)		eproc _intro [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( ) fixed}

----------------------------------------------------------------
Basic Block preHeaderLbl1 : loop Depth = 13 noPath = 0 , lastinLoop = 0
depth 1st num 10 : bbnum = 9 1st iCode = 418 , last iCode = 424
visited 1 : hasFcall = 0

defines bitVector :bitvector Size = 1073 bSize = 135
Bits on { (747) (753) (762) (763) (764) (1018) }

local defines bitVector :bitvector Size = 1073 bSize = 135
Bits on { (747) (753) (762) (763) (764) (1018) }

pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

in pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

inDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1030) (1033) (1034) (1039) (1044) (1049) (1050) }

outDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1018) (1030) (1033) (1034) (1039) (1044) (1049) (1050) }

usesDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (26) (146) (762) (763) (781) (1030) (1033) (1034) }

----------------------------------------------------------------
intro.c(l74:s418:k1006:d13:s0)	 preHeaderLbl1($52) :
intro.c(l74:s419:k762:d13:s0)		iTemp546 [k564 lr419:420 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register}[r0x06 ] = iTemp557 [k575 lr415:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] - 0x4 {const-unsigned-char literal}
intro.c(l74:s420:k763:d13:s0)		iTemp547 [k565 lr420:421 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x06 r0x07 ] = iTemp546 [k564 lr419:420 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register}[r0x06 ] * 0x8 {const-unsigned-char literal}
intro.c(l74:s421:k764:d13:s0)		iTemp548 [k566 lr421:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] = iTemp104 [k108 lr86:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp547 [k565 lr420:421 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x06 r0x07 ]
intro.c(l74:s422:k753:d13:s0)		iTemp540 [k557 lr422:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x08 r0x09 ] = iTemp16 [k19 lr20:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp539 [k556 lr416:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ]
intro.c(l74:s423:k747:d13:s0)		iTemp537 [k553 lr423:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0a ] = iTemp557 [k575 lr415:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x4 {const-unsigned-char literal}
intro.c(l74:s424:k1018:d13:s0)		iTemp554 [k572 lr424:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] := 0x0 {const-unsigned-char literal}
intro.c(l74:s426:k746:d14:s0)	 _forbody_3($28) :
intro.c(l75:s427:k748:d14:s0)		if iTemp537 [k553 lr423:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0a ] == 0 goto _iffalse_0($4)
intro.c(l76:s428:k755:d14:s0)		iTemp542 [k559 lr428:429 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] = iTemp540 [k557 lr422:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x08 r0x09 ] + iTemp554 [k572 lr424:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ]
intro.c(l76:s429:k756:d14:s0)		iTemp543 [k560 lr429:430 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ] = @[iTemp542 [k559 lr428:429 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] + 0x0 {const-unsigned-char literal}]
intro.c(l76:s430:k757:d14:s0)		send iTemp543 [k560 lr429:430 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ]{argreg = 1}
intro.c(l76:s431:k758:d14:s0)		iTemp544 [k562 lr431:431 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l76:s432:k759:d14:s0)		 goto _forcontinue_3($29)
intro.c(l76:s433:k760:d14:s0)	 _iffalse_0($4) :
intro.c(l78:s434:k766:d14:s0)		iTemp550 [k568 lr434:435 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] = iTemp548 [k566 lr421:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] + iTemp554 [k572 lr424:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ]
intro.c(l78:s435:k767:d14:s0)		iTemp551 [k569 lr435:436 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ] = @[iTemp550 [k568 lr434:435 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] + 0x0 {const-unsigned-char literal}]
intro.c(l78:s436:k768:d14:s0)		send iTemp551 [k569 lr435:436 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ]{argreg = 1}
intro.c(l78:s437:k769:d14:s0)		iTemp552 [k570 lr437:437 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l78:s438:k771:d14:s0)	 _forcontinue_3($29) :
intro.c(l74:s439:k773:d14:s0)		iTemp554 [k572 lr424:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] = iTemp554 [k572 lr424:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] + 0x1 {const-unsigned-char literal}
intro.c(l74:s440:k775:d14:s0)		iTemp555 [k573 lr440:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp554 [k572 lr424:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] < 0x8 {const-unsigned-char literal}
intro.c(l74:s441:k776:d14:s0)		if iTemp555 [k573 lr440:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forbody_3($28)
intro.c(l73:s442:k1034:d13:s0)		iTemp539 [k556 lr416:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] = iTemp539 [k556 lr416:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] + 0x8 {const-unsigned-char literal}
intro.c(l73:s443:k781:d13:s0)		iTemp557 [k575 lr415:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] = iTemp557 [k575 lr415:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] + 0x1 {const-unsigned-char literal}
intro.c(l73:s444:k783:d13:s0)		iTemp558 [k576 lr444:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp557 [k575 lr415:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x8 {const-unsigned-char literal}
intro.c(l73:s445:k784:d13:s0)		if iTemp558 [k576 lr444:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl1($52)
intro.c(l81:s446:k787:d1:s0)		send 0x80 {const-unsigned-char literal}{argreg = 1}
intro.c(l81:s447:k788:d1:s0)		iTemp559 [k577 lr447:447 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l82:s448:k789:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l82:s449:k790:d1:s0)		iTemp560 [k578 lr449:449 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l83:s450:k791:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l83:s451:k792:d1:s0)		iTemp561 [k579 lr451:451 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l84:s452:k793:d1:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
intro.c(l84:s453:k794:d1:s0)		iTemp562 [k580 lr453:453 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l85:s454:k795:d1:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
intro.c(l85:s455:k796:d1:s0)		iTemp563 [k581 lr455:455 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l86:s456:k797:d1:s0)		send 0xc0 {const-unsigned-char literal}{argreg = 1}
intro.c(l86:s457:k798:d1:s0)		iTemp564 [k582 lr457:457 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l87:s458:k799:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l87:s459:k800:d1:s0)		iTemp565 [k583 lr459:459 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l88:s460:k801:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l88:s461:k802:d1:s0)		iTemp566 [k584 lr461:461 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l89:s462:k803:d1:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
intro.c(l89:s463:k804:d1:s0)		iTemp567 [k585 lr463:463 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l90:s464:k805:d1:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
intro.c(l90:s465:k806:d1:s0)		iTemp568 [k586 lr465:465 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l91:s466:k807:d1:s0)		iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15}[r0x00 r0x01 ] := 0x1 {unsigned-int literal}
intro.c(l92:s467:k808:d1:s0)		 goto _forcontinue_0($45)
intro.c(l93:s468:k809:d1:s0)	 _case_0_1($8) :
intro.c(l94:s469:k1035:d1:s0)		iTemp589 [k607 lr469:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] := 0x0 {const-unsigned-char literal}
intro.c(l94:s470:k1038:d1:s0)		iTemp571 [k589 lr470:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] := 0x0 {unsigned-int literal}
intro.c(l95:s472:k1008:d13:s0)	 preHeaderLbl3($57) :
intro.c(l95:s473:k829:d13:s0)		iTemp578 [k596 lr473:474 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register}[r0x06 ] = iTemp589 [k607 lr469:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] - 0x4 {const-unsigned-char literal}
intro.c(l95:s474:k830:d13:s0)		iTemp579 [k597 lr474:475 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x06 r0x07 ] = iTemp578 [k596 lr473:474 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register}[r0x06 ] * 0x8 {const-unsigned-char literal}
intro.c(l95:s475:k831:d13:s0)		iTemp580 [k598 lr475:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] = iTemp280 [k286 lr218:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp579 [k597 lr474:475 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x06 r0x07 ]
intro.c(l95:s476:k820:d13:s0)		iTemp572 [k590 lr476:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x08 r0x09 ] = iTemp192 [k197 lr152:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp571 [k589 lr470:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ]
intro.c(l95:s477:k814:d13:s0)		iTemp569 [k587 lr477:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0a ] = iTemp589 [k607 lr469:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x4 {const-unsigned-char literal}
intro.c(l95:s478:k1021:d13:s0)		iTemp586 [k604 lr478:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] := 0x0 {const-unsigned-char literal}
intro.c(l95:s480:k813:d14:s0)	 _forbody_5($32) :
intro.c(l96:s481:k815:d14:s0)		if iTemp569 [k587 lr477:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0a ] == 0 goto _iffalse_1($10)
intro.c(l97:s482:k822:d14:s0)		iTemp574 [k592 lr482:483 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] = iTemp572 [k590 lr476:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x08 r0x09 ] + iTemp586 [k604 lr478:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ]
intro.c(l97:s483:k823:d14:s0)		iTemp575 [k593 lr483:484 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ] = @[iTemp574 [k592 lr482:483 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] + 0x0 {const-unsigned-char literal}]
intro.c(l97:s484:k824:d14:s0)		send iTemp575 [k593 lr483:484 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ]{argreg = 1}
intro.c(l97:s485:k825:d14:s0)		iTemp576 [k594 lr485:485 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l97:s486:k826:d14:s0)		 goto _forcontinue_5($33)
intro.c(l97:s487:k827:d14:s0)	 _iffalse_1($10) :
intro.c(l99:s488:k833:d14:s0)		iTemp582 [k600 lr488:489 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] = iTemp580 [k598 lr475:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] + iTemp586 [k604 lr478:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ]
intro.c(l99:s489:k834:d14:s0)		iTemp583 [k601 lr489:490 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ] = @[iTemp582 [k600 lr488:489 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] + 0x0 {const-unsigned-char literal}]
intro.c(l99:s490:k835:d14:s0)		send iTemp583 [k601 lr489:490 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ]{argreg = 1}
intro.c(l99:s491:k836:d14:s0)		iTemp584 [k602 lr491:491 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l99:s492:k838:d14:s0)	 _forcontinue_5($33) :
intro.c(l95:s493:k840:d14:s0)		iTemp586 [k604 lr478:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] = iTemp586 [k604 lr478:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] + 0x1 {const-unsigned-char literal}
intro.c(l95:s494:k842:d14:s0)		iTemp587 [k605 lr494:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp586 [k604 lr478:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] < 0x8 {const-unsigned-char literal}
intro.c(l95:s495:k843:d14:s0)		if iTemp587 [k605 lr494:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forbody_5($32)
intro.c(l94:s496:k1039:d13:s0)		iTemp571 [k589 lr470:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] = iTemp571 [k589 lr470:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] + 0x8 {const-unsigned-char literal}
intro.c(l94:s497:k848:d13:s0)		iTemp589 [k607 lr469:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] = iTemp589 [k607 lr469:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] + 0x1 {const-unsigned-char literal}
intro.c(l94:s498:k850:d13:s0)		iTemp590 [k608 lr498:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp589 [k607 lr469:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x8 {const-unsigned-char literal}
intro.c(l94:s499:k851:d13:s0)		if iTemp590 [k608 lr498:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl3($57)
intro.c(l102:s500:k854:d1:s0)		send 0x84 {const-unsigned-char literal}{argreg = 1}
intro.c(l102:s501:k855:d1:s0)		iTemp591 [k609 lr501:501 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l103:s502:k856:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l103:s503:k857:d1:s0)		iTemp592 [k610 lr503:503 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l104:s504:k858:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l104:s505:k859:d1:s0)		iTemp593 [k611 lr505:505 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l105:s506:k860:d1:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
intro.c(l105:s507:k861:d1:s0)		iTemp594 [k612 lr507:507 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l106:s508:k862:d1:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
intro.c(l106:s509:k863:d1:s0)		iTemp595 [k613 lr509:509 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l107:s510:k864:d1:s0)		send 0xc4 {const-unsigned-char literal}{argreg = 1}
intro.c(l107:s511:k865:d1:s0)		iTemp596 [k614 lr511:511 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l108:s512:k866:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l108:s513:k867:d1:s0)		iTemp597 [k615 lr513:513 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l109:s514:k868:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l109:s515:k869:d1:s0)		iTemp598 [k616 lr515:515 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l110:s516:k870:d1:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
intro.c(l110:s517:k871:d1:s0)		iTemp599 [k617 lr517:517 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l111:s518:k872:d1:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
intro.c(l111:s519:k873:d1:s0)		iTemp600 [k618 lr519:519 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l112:s520:k874:d1:s0)		iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15}[r0x00 r0x01 ] := 0x2 {unsigned-int literal}
intro.c(l113:s521:k875:d1:s0)		 goto _forcontinue_0($45)
intro.c(l114:s522:k876:d1:s0)	 _case_0_2($14) :
intro.c(l115:s523:k1040:d1:s0)		iTemp612 [k630 lr523:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] := 0x0 {const-unsigned-char literal}
intro.c(l115:s524:k1043:d1:s0)		iTemp602 [k620 lr524:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] := 0x0 {unsigned-int literal}
intro.c(l116:s526:k1010:d13:s0)	 preHeaderLbl5($61) :
intro.c(l116:s527:k883:d13:s0)		iTemp603 [k621 lr527:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] = iTemp368 [k375 lr284:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp602 [k620 lr524:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ]
intro.c(l116:s528:k1024:d13:s0)		iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x08 ] := 0x0 {const-unsigned-char literal}
intro.c(l116:s530:k880:d14:s0)	 _forbody_7($36) :
intro.c(l117:s531:k885:d14:s0)		iTemp605 [k623 lr531:532 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x09 r0x0a ] = iTemp603 [k621 lr527:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] + iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x08 ]
intro.c(l117:s532:k886:d14:s0)		iTemp606 [k624 lr532:533 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x09 ] = @[iTemp605 [k623 lr531:532 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x09 r0x0a ] + 0x0 {const-unsigned-char literal}]
intro.c(l117:s533:k887:d14:s0)		send iTemp606 [k624 lr532:533 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x09 ]{argreg = 1}
intro.c(l117:s534:k888:d14:s0)		iTemp607 [k625 lr534:534 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l116:s535:k891:d14:s0)		iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x08 ] = iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x08 ] + 0x1 {const-unsigned-char literal}
intro.c(l116:s536:k893:d14:s0)		iTemp610 [k628 lr536:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x08 ] < 0x8 {const-unsigned-char literal}
intro.c(l116:s537:k894:d14:s0)		if iTemp610 [k628 lr536:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forbody_7($36)
intro.c(l115:s538:k1044:d13:s0)		iTemp602 [k620 lr524:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] = iTemp602 [k620 lr524:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] + 0x8 {const-unsigned-char literal}
intro.c(l115:s539:k899:d13:s0)		iTemp612 [k630 lr523:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] = iTemp612 [k630 lr523:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] + 0x1 {const-unsigned-char literal}
intro.c(l115:s540:k901:d13:s0)		iTemp613 [k631 lr540:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp612 [k630 lr523:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x4 {const-unsigned-char literal}
intro.c(l115:s541:k902:d13:s0)		if iTemp613 [k631 lr540:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl5($61)
intro.c(l120:s542:k905:d1:s0)		send 0x88 {const-unsigned-char literal}{argreg = 1}
intro.c(l120:s543:k906:d1:s0)		iTemp614 [k632 lr543:543 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l121:s544:k907:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l121:s545:k908:d1:s0)		iTemp615 [k633 lr545:545 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l122:s546:k909:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l122:s547:k910:d1:s0)		iTemp616 [k634 lr547:547 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l123:s548:k911:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l123:s549:k912:d1:s0)		iTemp617 [k635 lr549:549 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l124:s550:k913:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l124:s551:k914:d1:s0)		iTemp618 [k636 lr551:551 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l125:s552:k915:d1:s0)		send 0xc8 {const-unsigned-char literal}{argreg = 1}
intro.c(l125:s553:k916:d1:s0)		iTemp619 [k637 lr553:553 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l126:s554:k917:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l126:s555:k918:d1:s0)		iTemp620 [k638 lr555:555 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l127:s556:k919:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l127:s557:k920:d1:s0)		iTemp621 [k639 lr557:557 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l128:s558:k921:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l128:s559:k922:d1:s0)		iTemp622 [k640 lr559:559 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l129:s560:k923:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l129:s561:k924:d1:s0)		iTemp623 [k641 lr561:561 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l130:s562:k925:d1:s0)		iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15}[r0x00 r0x01 ] := 0x3 {unsigned-int literal}
intro.c(l131:s563:k926:d1:s0)		 goto _forcontinue_0($45)
intro.c(l132:s564:k927:d1:s0)	 _case_0_3($17) :
intro.c(l133:s565:k1045:d1:s0)		iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] := 0x0 {const-unsigned-char literal}
intro.c(l133:s566:k1048:d1:s0)		iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] := 0x0 {unsigned-int literal}
intro.c(l134:s568:k1012:d13:s0)	 preHeaderLbl7($66) :
intro.c(l134:s569:k947:d13:s0)		iTemp633 [k651 lr569:570 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register}[r0x06 ] = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] - 0x4 {const-unsigned-char literal}
intro.c(l134:s570:k948:d13:s0)		iTemp634 [k652 lr570:571 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x06 r0x07 ] = iTemp633 [k651 lr569:570 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register}[r0x06 ] * 0x8 {const-unsigned-char literal}
intro.c(l134:s571:k949:d13:s0)		iTemp635 [k653 lr571:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] = iTemp456 [k464 lr350:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp634 [k652 lr570:571 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x06 r0x07 ]
intro.c(l134:s572:k938:d13:s0)		iTemp627 [k645 lr572:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x08 r0x09 ] = iTemp368 [k375 lr284:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ]
intro.c(l134:s573:k932:d13:s0)		iTemp624 [k642 lr573:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0a ] = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x4 {const-unsigned-char literal}
intro.c(l134:s574:k1027:d13:s0)		iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] := 0x0 {const-unsigned-char literal}
intro.c(l134:s576:k931:d14:s0)	 _forbody_9($40) :
intro.c(l135:s577:k933:d14:s0)		if iTemp624 [k642 lr573:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0a ] == 0 goto _iffalse_2($19)
intro.c(l136:s578:k940:d14:s0)		iTemp629 [k647 lr578:579 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] = iTemp627 [k645 lr572:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x08 r0x09 ] + iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ]
intro.c(l136:s579:k941:d14:s0)		iTemp630 [k648 lr579:580 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ] = @[iTemp629 [k647 lr578:579 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] + 0x0 {const-unsigned-char literal}]
intro.c(l136:s580:k942:d14:s0)		send iTemp630 [k648 lr579:580 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ]{argreg = 1}
intro.c(l136:s581:k943:d14:s0)		iTemp631 [k649 lr581:581 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l136:s582:k944:d14:s0)		 goto _forcontinue_9($41)
intro.c(l136:s583:k945:d14:s0)	 _iffalse_2($19) :
intro.c(l138:s584:k951:d14:s0)		iTemp637 [k655 lr584:585 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] = iTemp635 [k653 lr571:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] + iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ]
intro.c(l138:s585:k952:d14:s0)		iTemp638 [k656 lr585:586 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ] = @[iTemp637 [k655 lr584:585 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] + 0x0 {const-unsigned-char literal}]
intro.c(l138:s586:k953:d14:s0)		send iTemp638 [k656 lr585:586 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ]{argreg = 1}
intro.c(l138:s587:k954:d14:s0)		iTemp639 [k657 lr587:587 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l138:s588:k956:d14:s0)	 _forcontinue_9($41) :
intro.c(l134:s589:k958:d14:s0)		iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] = iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] + 0x1 {const-unsigned-char literal}
intro.c(l134:s590:k960:d14:s0)		iTemp642 [k660 lr590:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] < 0x8 {const-unsigned-char literal}
intro.c(l134:s591:k961:d14:s0)		if iTemp642 [k660 lr590:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forbody_9($40)
intro.c(l133:s592:k1049:d13:s0)		iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] = iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] + 0x8 {const-unsigned-char literal}
intro.c(l133:s593:k966:d13:s0)		iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] + 0x1 {const-unsigned-char literal}
intro.c(l133:s594:k968:d13:s0)		iTemp645 [k663 lr594:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x8 {const-unsigned-char literal}
intro.c(l133:s595:k969:d13:s0)		if iTemp645 [k663 lr594:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl7($66)
intro.c(l141:s596:k972:d1:s0)		send 0x8c {const-unsigned-char literal}{argreg = 1}
intro.c(l141:s597:k973:d1:s0)		iTemp646 [k664 lr597:597 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l142:s598:k974:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l142:s599:k975:d1:s0)		iTemp647 [k665 lr599:599 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l143:s600:k976:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l143:s601:k977:d1:s0)		iTemp648 [k666 lr601:601 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l144:s602:k978:d1:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
intro.c(l144:s603:k979:d1:s0)		iTemp649 [k667 lr603:603 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l145:s604:k980:d1:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
intro.c(l145:s605:k981:d1:s0)		iTemp650 [k668 lr605:605 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l146:s606:k982:d1:s0)		send 0xcc {const-unsigned-char literal}{argreg = 1}
intro.c(l146:s607:k983:d1:s0)		iTemp651 [k669 lr607:607 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l147:s608:k984:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l147:s609:k985:d1:s0)		iTemp652 [k670 lr609:609 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l148:s610:k986:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l148:s611:k987:d1:s0)		iTemp653 [k671 lr611:611 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l149:s612:k988:d1:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
intro.c(l149:s613:k989:d1:s0)		iTemp654 [k672 lr613:613 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l150:s614:k990:d1:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
intro.c(l150:s615:k991:d1:s0)		iTemp655 [k673 lr615:615 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l151:s616:k992:d1:s0)		iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15}[r0x00 r0x01 ] := 0x0 {unsigned-int literal}
intro.c(l153:s617:k995:d1:s0)	 _forcontinue_0($45) :
intro.c(l67:s618:k997:d1:s0)		iTemp657 [k675 lr400:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_x_1_15}[r0x02 ] = iTemp657 [k675 lr400:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_x_1_15}[r0x02 ] + 0x1 {const-unsigned-char literal}
intro.c(l67:s619:k999:d1:s0)		iTemp658 [k676 lr619:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp657 [k675 lr400:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_x_1_15}[r0x02 ] < 0x64 {const-unsigned-char literal}
intro.c(l67:s620:k1000:d1:s0)		if iTemp658 [k676 lr619:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl0($48)
intro.c(l67:s621:k1003:d0:s0)	 _return($46) :
intro.c(l67:s622:k1004:d0:s0)		eproc _intro [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( ) fixed}

----------------------------------------------------------------
Basic Block preHeaderLbl31 : loop Depth = 13 noPath = 0 , lastinLoop = 0
depth 1st num 11 : bbnum = 10 1st iCode = 425 , last iCode = 425
visited 1 : hasFcall = 0

defines bitVector :bitvector Size = 1073 bSize = 135
Bits on { }

local defines bitVector :
pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

in pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

inDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1018) (1030) (1033) (1034) (1039) (1044) (1049) (1050) }

outDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1018) (1030) (1033) (1034) (1039) (1044) (1049) (1050) }

usesDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { }

----------------------------------------------------------------
intro.c(l74:s425:k1064:d13:s0)	 preHeaderLbl31($108) :
intro.c(l74:s426:k746:d14:s0)	 _forbody_3($28) :
intro.c(l75:s427:k748:d14:s0)		if iTemp537 [k553 lr423:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0a ] == 0 goto _iffalse_0($4)
intro.c(l76:s428:k755:d14:s0)		iTemp542 [k559 lr428:429 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] = iTemp540 [k557 lr422:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x08 r0x09 ] + iTemp554 [k572 lr424:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ]
intro.c(l76:s429:k756:d14:s0)		iTemp543 [k560 lr429:430 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ] = @[iTemp542 [k559 lr428:429 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] + 0x0 {const-unsigned-char literal}]
intro.c(l76:s430:k757:d14:s0)		send iTemp543 [k560 lr429:430 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ]{argreg = 1}
intro.c(l76:s431:k758:d14:s0)		iTemp544 [k562 lr431:431 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l76:s432:k759:d14:s0)		 goto _forcontinue_3($29)
intro.c(l76:s433:k760:d14:s0)	 _iffalse_0($4) :
intro.c(l78:s434:k766:d14:s0)		iTemp550 [k568 lr434:435 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] = iTemp548 [k566 lr421:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] + iTemp554 [k572 lr424:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ]
intro.c(l78:s435:k767:d14:s0)		iTemp551 [k569 lr435:436 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ] = @[iTemp550 [k568 lr434:435 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] + 0x0 {const-unsigned-char literal}]
intro.c(l78:s436:k768:d14:s0)		send iTemp551 [k569 lr435:436 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ]{argreg = 1}
intro.c(l78:s437:k769:d14:s0)		iTemp552 [k570 lr437:437 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l78:s438:k771:d14:s0)	 _forcontinue_3($29) :
intro.c(l74:s439:k773:d14:s0)		iTemp554 [k572 lr424:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] = iTemp554 [k572 lr424:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] + 0x1 {const-unsigned-char literal}
intro.c(l74:s440:k775:d14:s0)		iTemp555 [k573 lr440:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp554 [k572 lr424:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] < 0x8 {const-unsigned-char literal}
intro.c(l74:s441:k776:d14:s0)		if iTemp555 [k573 lr440:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forbody_3($28)
intro.c(l73:s442:k1034:d13:s0)		iTemp539 [k556 lr416:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] = iTemp539 [k556 lr416:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] + 0x8 {const-unsigned-char literal}
intro.c(l73:s443:k781:d13:s0)		iTemp557 [k575 lr415:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] = iTemp557 [k575 lr415:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] + 0x1 {const-unsigned-char literal}
intro.c(l73:s444:k783:d13:s0)		iTemp558 [k576 lr444:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp557 [k575 lr415:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x8 {const-unsigned-char literal}
intro.c(l73:s445:k784:d13:s0)		if iTemp558 [k576 lr444:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl1($52)
intro.c(l81:s446:k787:d1:s0)		send 0x80 {const-unsigned-char literal}{argreg = 1}
intro.c(l81:s447:k788:d1:s0)		iTemp559 [k577 lr447:447 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l82:s448:k789:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l82:s449:k790:d1:s0)		iTemp560 [k578 lr449:449 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l83:s450:k791:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l83:s451:k792:d1:s0)		iTemp561 [k579 lr451:451 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l84:s452:k793:d1:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
intro.c(l84:s453:k794:d1:s0)		iTemp562 [k580 lr453:453 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l85:s454:k795:d1:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
intro.c(l85:s455:k796:d1:s0)		iTemp563 [k581 lr455:455 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l86:s456:k797:d1:s0)		send 0xc0 {const-unsigned-char literal}{argreg = 1}
intro.c(l86:s457:k798:d1:s0)		iTemp564 [k582 lr457:457 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l87:s458:k799:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l87:s459:k800:d1:s0)		iTemp565 [k583 lr459:459 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l88:s460:k801:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l88:s461:k802:d1:s0)		iTemp566 [k584 lr461:461 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l89:s462:k803:d1:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
intro.c(l89:s463:k804:d1:s0)		iTemp567 [k585 lr463:463 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l90:s464:k805:d1:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
intro.c(l90:s465:k806:d1:s0)		iTemp568 [k586 lr465:465 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l91:s466:k807:d1:s0)		iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15}[r0x00 r0x01 ] := 0x1 {unsigned-int literal}
intro.c(l92:s467:k808:d1:s0)		 goto _forcontinue_0($45)
intro.c(l93:s468:k809:d1:s0)	 _case_0_1($8) :
intro.c(l94:s469:k1035:d1:s0)		iTemp589 [k607 lr469:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] := 0x0 {const-unsigned-char literal}
intro.c(l94:s470:k1038:d1:s0)		iTemp571 [k589 lr470:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] := 0x0 {unsigned-int literal}
intro.c(l95:s472:k1008:d13:s0)	 preHeaderLbl3($57) :
intro.c(l95:s473:k829:d13:s0)		iTemp578 [k596 lr473:474 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register}[r0x06 ] = iTemp589 [k607 lr469:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] - 0x4 {const-unsigned-char literal}
intro.c(l95:s474:k830:d13:s0)		iTemp579 [k597 lr474:475 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x06 r0x07 ] = iTemp578 [k596 lr473:474 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register}[r0x06 ] * 0x8 {const-unsigned-char literal}
intro.c(l95:s475:k831:d13:s0)		iTemp580 [k598 lr475:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] = iTemp280 [k286 lr218:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp579 [k597 lr474:475 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x06 r0x07 ]
intro.c(l95:s476:k820:d13:s0)		iTemp572 [k590 lr476:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x08 r0x09 ] = iTemp192 [k197 lr152:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp571 [k589 lr470:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ]
intro.c(l95:s477:k814:d13:s0)		iTemp569 [k587 lr477:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0a ] = iTemp589 [k607 lr469:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x4 {const-unsigned-char literal}
intro.c(l95:s478:k1021:d13:s0)		iTemp586 [k604 lr478:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] := 0x0 {const-unsigned-char literal}
intro.c(l95:s480:k813:d14:s0)	 _forbody_5($32) :
intro.c(l96:s481:k815:d14:s0)		if iTemp569 [k587 lr477:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0a ] == 0 goto _iffalse_1($10)
intro.c(l97:s482:k822:d14:s0)		iTemp574 [k592 lr482:483 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] = iTemp572 [k590 lr476:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x08 r0x09 ] + iTemp586 [k604 lr478:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ]
intro.c(l97:s483:k823:d14:s0)		iTemp575 [k593 lr483:484 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ] = @[iTemp574 [k592 lr482:483 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] + 0x0 {const-unsigned-char literal}]
intro.c(l97:s484:k824:d14:s0)		send iTemp575 [k593 lr483:484 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ]{argreg = 1}
intro.c(l97:s485:k825:d14:s0)		iTemp576 [k594 lr485:485 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l97:s486:k826:d14:s0)		 goto _forcontinue_5($33)
intro.c(l97:s487:k827:d14:s0)	 _iffalse_1($10) :
intro.c(l99:s488:k833:d14:s0)		iTemp582 [k600 lr488:489 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] = iTemp580 [k598 lr475:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] + iTemp586 [k604 lr478:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ]
intro.c(l99:s489:k834:d14:s0)		iTemp583 [k601 lr489:490 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ] = @[iTemp582 [k600 lr488:489 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] + 0x0 {const-unsigned-char literal}]
intro.c(l99:s490:k835:d14:s0)		send iTemp583 [k601 lr489:490 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ]{argreg = 1}
intro.c(l99:s491:k836:d14:s0)		iTemp584 [k602 lr491:491 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l99:s492:k838:d14:s0)	 _forcontinue_5($33) :
intro.c(l95:s493:k840:d14:s0)		iTemp586 [k604 lr478:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] = iTemp586 [k604 lr478:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] + 0x1 {const-unsigned-char literal}
intro.c(l95:s494:k842:d14:s0)		iTemp587 [k605 lr494:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp586 [k604 lr478:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] < 0x8 {const-unsigned-char literal}
intro.c(l95:s495:k843:d14:s0)		if iTemp587 [k605 lr494:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forbody_5($32)
intro.c(l94:s496:k1039:d13:s0)		iTemp571 [k589 lr470:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] = iTemp571 [k589 lr470:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] + 0x8 {const-unsigned-char literal}
intro.c(l94:s497:k848:d13:s0)		iTemp589 [k607 lr469:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] = iTemp589 [k607 lr469:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] + 0x1 {const-unsigned-char literal}
intro.c(l94:s498:k850:d13:s0)		iTemp590 [k608 lr498:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp589 [k607 lr469:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x8 {const-unsigned-char literal}
intro.c(l94:s499:k851:d13:s0)		if iTemp590 [k608 lr498:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl3($57)
intro.c(l102:s500:k854:d1:s0)		send 0x84 {const-unsigned-char literal}{argreg = 1}
intro.c(l102:s501:k855:d1:s0)		iTemp591 [k609 lr501:501 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l103:s502:k856:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l103:s503:k857:d1:s0)		iTemp592 [k610 lr503:503 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l104:s504:k858:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l104:s505:k859:d1:s0)		iTemp593 [k611 lr505:505 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l105:s506:k860:d1:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
intro.c(l105:s507:k861:d1:s0)		iTemp594 [k612 lr507:507 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l106:s508:k862:d1:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
intro.c(l106:s509:k863:d1:s0)		iTemp595 [k613 lr509:509 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l107:s510:k864:d1:s0)		send 0xc4 {const-unsigned-char literal}{argreg = 1}
intro.c(l107:s511:k865:d1:s0)		iTemp596 [k614 lr511:511 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l108:s512:k866:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l108:s513:k867:d1:s0)		iTemp597 [k615 lr513:513 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l109:s514:k868:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l109:s515:k869:d1:s0)		iTemp598 [k616 lr515:515 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l110:s516:k870:d1:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
intro.c(l110:s517:k871:d1:s0)		iTemp599 [k617 lr517:517 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l111:s518:k872:d1:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
intro.c(l111:s519:k873:d1:s0)		iTemp600 [k618 lr519:519 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l112:s520:k874:d1:s0)		iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15}[r0x00 r0x01 ] := 0x2 {unsigned-int literal}
intro.c(l113:s521:k875:d1:s0)		 goto _forcontinue_0($45)
intro.c(l114:s522:k876:d1:s0)	 _case_0_2($14) :
intro.c(l115:s523:k1040:d1:s0)		iTemp612 [k630 lr523:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] := 0x0 {const-unsigned-char literal}
intro.c(l115:s524:k1043:d1:s0)		iTemp602 [k620 lr524:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] := 0x0 {unsigned-int literal}
intro.c(l116:s526:k1010:d13:s0)	 preHeaderLbl5($61) :
intro.c(l116:s527:k883:d13:s0)		iTemp603 [k621 lr527:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] = iTemp368 [k375 lr284:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp602 [k620 lr524:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ]
intro.c(l116:s528:k1024:d13:s0)		iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x08 ] := 0x0 {const-unsigned-char literal}
intro.c(l116:s530:k880:d14:s0)	 _forbody_7($36) :
intro.c(l117:s531:k885:d14:s0)		iTemp605 [k623 lr531:532 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x09 r0x0a ] = iTemp603 [k621 lr527:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] + iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x08 ]
intro.c(l117:s532:k886:d14:s0)		iTemp606 [k624 lr532:533 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x09 ] = @[iTemp605 [k623 lr531:532 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x09 r0x0a ] + 0x0 {const-unsigned-char literal}]
intro.c(l117:s533:k887:d14:s0)		send iTemp606 [k624 lr532:533 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x09 ]{argreg = 1}
intro.c(l117:s534:k888:d14:s0)		iTemp607 [k625 lr534:534 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l116:s535:k891:d14:s0)		iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x08 ] = iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x08 ] + 0x1 {const-unsigned-char literal}
intro.c(l116:s536:k893:d14:s0)		iTemp610 [k628 lr536:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x08 ] < 0x8 {const-unsigned-char literal}
intro.c(l116:s537:k894:d14:s0)		if iTemp610 [k628 lr536:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forbody_7($36)
intro.c(l115:s538:k1044:d13:s0)		iTemp602 [k620 lr524:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] = iTemp602 [k620 lr524:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] + 0x8 {const-unsigned-char literal}
intro.c(l115:s539:k899:d13:s0)		iTemp612 [k630 lr523:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] = iTemp612 [k630 lr523:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] + 0x1 {const-unsigned-char literal}
intro.c(l115:s540:k901:d13:s0)		iTemp613 [k631 lr540:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp612 [k630 lr523:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x4 {const-unsigned-char literal}
intro.c(l115:s541:k902:d13:s0)		if iTemp613 [k631 lr540:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl5($61)
intro.c(l120:s542:k905:d1:s0)		send 0x88 {const-unsigned-char literal}{argreg = 1}
intro.c(l120:s543:k906:d1:s0)		iTemp614 [k632 lr543:543 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l121:s544:k907:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l121:s545:k908:d1:s0)		iTemp615 [k633 lr545:545 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l122:s546:k909:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l122:s547:k910:d1:s0)		iTemp616 [k634 lr547:547 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l123:s548:k911:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l123:s549:k912:d1:s0)		iTemp617 [k635 lr549:549 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l124:s550:k913:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l124:s551:k914:d1:s0)		iTemp618 [k636 lr551:551 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l125:s552:k915:d1:s0)		send 0xc8 {const-unsigned-char literal}{argreg = 1}
intro.c(l125:s553:k916:d1:s0)		iTemp619 [k637 lr553:553 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l126:s554:k917:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l126:s555:k918:d1:s0)		iTemp620 [k638 lr555:555 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l127:s556:k919:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l127:s557:k920:d1:s0)		iTemp621 [k639 lr557:557 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l128:s558:k921:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l128:s559:k922:d1:s0)		iTemp622 [k640 lr559:559 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l129:s560:k923:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l129:s561:k924:d1:s0)		iTemp623 [k641 lr561:561 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l130:s562:k925:d1:s0)		iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15}[r0x00 r0x01 ] := 0x3 {unsigned-int literal}
intro.c(l131:s563:k926:d1:s0)		 goto _forcontinue_0($45)
intro.c(l132:s564:k927:d1:s0)	 _case_0_3($17) :
intro.c(l133:s565:k1045:d1:s0)		iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] := 0x0 {const-unsigned-char literal}
intro.c(l133:s566:k1048:d1:s0)		iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] := 0x0 {unsigned-int literal}
intro.c(l134:s568:k1012:d13:s0)	 preHeaderLbl7($66) :
intro.c(l134:s569:k947:d13:s0)		iTemp633 [k651 lr569:570 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register}[r0x06 ] = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] - 0x4 {const-unsigned-char literal}
intro.c(l134:s570:k948:d13:s0)		iTemp634 [k652 lr570:571 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x06 r0x07 ] = iTemp633 [k651 lr569:570 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register}[r0x06 ] * 0x8 {const-unsigned-char literal}
intro.c(l134:s571:k949:d13:s0)		iTemp635 [k653 lr571:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] = iTemp456 [k464 lr350:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp634 [k652 lr570:571 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x06 r0x07 ]
intro.c(l134:s572:k938:d13:s0)		iTemp627 [k645 lr572:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x08 r0x09 ] = iTemp368 [k375 lr284:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ]
intro.c(l134:s573:k932:d13:s0)		iTemp624 [k642 lr573:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0a ] = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x4 {const-unsigned-char literal}
intro.c(l134:s574:k1027:d13:s0)		iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] := 0x0 {const-unsigned-char literal}
intro.c(l134:s576:k931:d14:s0)	 _forbody_9($40) :
intro.c(l135:s577:k933:d14:s0)		if iTemp624 [k642 lr573:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0a ] == 0 goto _iffalse_2($19)
intro.c(l136:s578:k940:d14:s0)		iTemp629 [k647 lr578:579 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] = iTemp627 [k645 lr572:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x08 r0x09 ] + iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ]
intro.c(l136:s579:k941:d14:s0)		iTemp630 [k648 lr579:580 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ] = @[iTemp629 [k647 lr578:579 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] + 0x0 {const-unsigned-char literal}]
intro.c(l136:s580:k942:d14:s0)		send iTemp630 [k648 lr579:580 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ]{argreg = 1}
intro.c(l136:s581:k943:d14:s0)		iTemp631 [k649 lr581:581 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l136:s582:k944:d14:s0)		 goto _forcontinue_9($41)
intro.c(l136:s583:k945:d14:s0)	 _iffalse_2($19) :
intro.c(l138:s584:k951:d14:s0)		iTemp637 [k655 lr584:585 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] = iTemp635 [k653 lr571:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] + iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ]
intro.c(l138:s585:k952:d14:s0)		iTemp638 [k656 lr585:586 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ] = @[iTemp637 [k655 lr584:585 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] + 0x0 {const-unsigned-char literal}]
intro.c(l138:s586:k953:d14:s0)		send iTemp638 [k656 lr585:586 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ]{argreg = 1}
intro.c(l138:s587:k954:d14:s0)		iTemp639 [k657 lr587:587 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l138:s588:k956:d14:s0)	 _forcontinue_9($41) :
intro.c(l134:s589:k958:d14:s0)		iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] = iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] + 0x1 {const-unsigned-char literal}
intro.c(l134:s590:k960:d14:s0)		iTemp642 [k660 lr590:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] < 0x8 {const-unsigned-char literal}
intro.c(l134:s591:k961:d14:s0)		if iTemp642 [k660 lr590:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forbody_9($40)
intro.c(l133:s592:k1049:d13:s0)		iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] = iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] + 0x8 {const-unsigned-char literal}
intro.c(l133:s593:k966:d13:s0)		iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] + 0x1 {const-unsigned-char literal}
intro.c(l133:s594:k968:d13:s0)		iTemp645 [k663 lr594:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x8 {const-unsigned-char literal}
intro.c(l133:s595:k969:d13:s0)		if iTemp645 [k663 lr594:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl7($66)
intro.c(l141:s596:k972:d1:s0)		send 0x8c {const-unsigned-char literal}{argreg = 1}
intro.c(l141:s597:k973:d1:s0)		iTemp646 [k664 lr597:597 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l142:s598:k974:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l142:s599:k975:d1:s0)		iTemp647 [k665 lr599:599 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l143:s600:k976:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l143:s601:k977:d1:s0)		iTemp648 [k666 lr601:601 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l144:s602:k978:d1:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
intro.c(l144:s603:k979:d1:s0)		iTemp649 [k667 lr603:603 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l145:s604:k980:d1:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
intro.c(l145:s605:k981:d1:s0)		iTemp650 [k668 lr605:605 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l146:s606:k982:d1:s0)		send 0xcc {const-unsigned-char literal}{argreg = 1}
intro.c(l146:s607:k983:d1:s0)		iTemp651 [k669 lr607:607 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l147:s608:k984:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l147:s609:k985:d1:s0)		iTemp652 [k670 lr609:609 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l148:s610:k986:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l148:s611:k987:d1:s0)		iTemp653 [k671 lr611:611 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l149:s612:k988:d1:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
intro.c(l149:s613:k989:d1:s0)		iTemp654 [k672 lr613:613 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l150:s614:k990:d1:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
intro.c(l150:s615:k991:d1:s0)		iTemp655 [k673 lr615:615 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l151:s616:k992:d1:s0)		iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15}[r0x00 r0x01 ] := 0x0 {unsigned-int literal}
intro.c(l153:s617:k995:d1:s0)	 _forcontinue_0($45) :
intro.c(l67:s618:k997:d1:s0)		iTemp657 [k675 lr400:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_x_1_15}[r0x02 ] = iTemp657 [k675 lr400:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_x_1_15}[r0x02 ] + 0x1 {const-unsigned-char literal}
intro.c(l67:s619:k999:d1:s0)		iTemp658 [k676 lr619:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp657 [k675 lr400:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_x_1_15}[r0x02 ] < 0x64 {const-unsigned-char literal}
intro.c(l67:s620:k1000:d1:s0)		if iTemp658 [k676 lr619:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl0($48)
intro.c(l67:s621:k1003:d0:s0)	 _return($46) :
intro.c(l67:s622:k1004:d0:s0)		eproc _intro [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( ) fixed}

----------------------------------------------------------------
Basic Block _forbody_3 : loop Depth = 14 noPath = 0 , lastinLoop = 0
depth 1st num 12 : bbnum = 11 1st iCode = 426 , last iCode = 427
visited 1 : hasFcall = 0

defines bitVector :bitvector Size = 1073 bSize = 135
Bits on { }

local defines bitVector :
pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

in pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

inDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1018) (1030) (1033) (1034) (1039) (1044) (1049) (1050) }

outDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1018) (1030) (1033) (1034) (1039) (1044) (1049) (1050) }

usesDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (747) }

----------------------------------------------------------------
intro.c(l74:s426:k746:d14:s0)	 _forbody_3($28) :
intro.c(l75:s427:k748:d14:s0)		if iTemp537 [k553 lr423:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0a ] == 0 goto _iffalse_0($4)
intro.c(l76:s428:k755:d14:s0)		iTemp542 [k559 lr428:429 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] = iTemp540 [k557 lr422:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x08 r0x09 ] + iTemp554 [k572 lr424:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ]
intro.c(l76:s429:k756:d14:s0)		iTemp543 [k560 lr429:430 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ] = @[iTemp542 [k559 lr428:429 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] + 0x0 {const-unsigned-char literal}]
intro.c(l76:s430:k757:d14:s0)		send iTemp543 [k560 lr429:430 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ]{argreg = 1}
intro.c(l76:s431:k758:d14:s0)		iTemp544 [k562 lr431:431 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l76:s432:k759:d14:s0)		 goto _forcontinue_3($29)
intro.c(l76:s433:k760:d14:s0)	 _iffalse_0($4) :
intro.c(l78:s434:k766:d14:s0)		iTemp550 [k568 lr434:435 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] = iTemp548 [k566 lr421:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] + iTemp554 [k572 lr424:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ]
intro.c(l78:s435:k767:d14:s0)		iTemp551 [k569 lr435:436 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ] = @[iTemp550 [k568 lr434:435 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] + 0x0 {const-unsigned-char literal}]
intro.c(l78:s436:k768:d14:s0)		send iTemp551 [k569 lr435:436 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ]{argreg = 1}
intro.c(l78:s437:k769:d14:s0)		iTemp552 [k570 lr437:437 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l78:s438:k771:d14:s0)	 _forcontinue_3($29) :
intro.c(l74:s439:k773:d14:s0)		iTemp554 [k572 lr424:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] = iTemp554 [k572 lr424:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] + 0x1 {const-unsigned-char literal}
intro.c(l74:s440:k775:d14:s0)		iTemp555 [k573 lr440:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp554 [k572 lr424:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] < 0x8 {const-unsigned-char literal}
intro.c(l74:s441:k776:d14:s0)		if iTemp555 [k573 lr440:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forbody_3($28)
intro.c(l73:s442:k1034:d13:s0)		iTemp539 [k556 lr416:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] = iTemp539 [k556 lr416:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] + 0x8 {const-unsigned-char literal}
intro.c(l73:s443:k781:d13:s0)		iTemp557 [k575 lr415:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] = iTemp557 [k575 lr415:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] + 0x1 {const-unsigned-char literal}
intro.c(l73:s444:k783:d13:s0)		iTemp558 [k576 lr444:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp557 [k575 lr415:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x8 {const-unsigned-char literal}
intro.c(l73:s445:k784:d13:s0)		if iTemp558 [k576 lr444:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl1($52)
intro.c(l81:s446:k787:d1:s0)		send 0x80 {const-unsigned-char literal}{argreg = 1}
intro.c(l81:s447:k788:d1:s0)		iTemp559 [k577 lr447:447 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l82:s448:k789:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l82:s449:k790:d1:s0)		iTemp560 [k578 lr449:449 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l83:s450:k791:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l83:s451:k792:d1:s0)		iTemp561 [k579 lr451:451 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l84:s452:k793:d1:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
intro.c(l84:s453:k794:d1:s0)		iTemp562 [k580 lr453:453 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l85:s454:k795:d1:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
intro.c(l85:s455:k796:d1:s0)		iTemp563 [k581 lr455:455 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l86:s456:k797:d1:s0)		send 0xc0 {const-unsigned-char literal}{argreg = 1}
intro.c(l86:s457:k798:d1:s0)		iTemp564 [k582 lr457:457 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l87:s458:k799:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l87:s459:k800:d1:s0)		iTemp565 [k583 lr459:459 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l88:s460:k801:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l88:s461:k802:d1:s0)		iTemp566 [k584 lr461:461 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l89:s462:k803:d1:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
intro.c(l89:s463:k804:d1:s0)		iTemp567 [k585 lr463:463 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l90:s464:k805:d1:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
intro.c(l90:s465:k806:d1:s0)		iTemp568 [k586 lr465:465 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l91:s466:k807:d1:s0)		iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15}[r0x00 r0x01 ] := 0x1 {unsigned-int literal}
intro.c(l92:s467:k808:d1:s0)		 goto _forcontinue_0($45)
intro.c(l93:s468:k809:d1:s0)	 _case_0_1($8) :
intro.c(l94:s469:k1035:d1:s0)		iTemp589 [k607 lr469:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] := 0x0 {const-unsigned-char literal}
intro.c(l94:s470:k1038:d1:s0)		iTemp571 [k589 lr470:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] := 0x0 {unsigned-int literal}
intro.c(l95:s472:k1008:d13:s0)	 preHeaderLbl3($57) :
intro.c(l95:s473:k829:d13:s0)		iTemp578 [k596 lr473:474 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register}[r0x06 ] = iTemp589 [k607 lr469:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] - 0x4 {const-unsigned-char literal}
intro.c(l95:s474:k830:d13:s0)		iTemp579 [k597 lr474:475 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x06 r0x07 ] = iTemp578 [k596 lr473:474 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register}[r0x06 ] * 0x8 {const-unsigned-char literal}
intro.c(l95:s475:k831:d13:s0)		iTemp580 [k598 lr475:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] = iTemp280 [k286 lr218:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp579 [k597 lr474:475 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x06 r0x07 ]
intro.c(l95:s476:k820:d13:s0)		iTemp572 [k590 lr476:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x08 r0x09 ] = iTemp192 [k197 lr152:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp571 [k589 lr470:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ]
intro.c(l95:s477:k814:d13:s0)		iTemp569 [k587 lr477:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0a ] = iTemp589 [k607 lr469:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x4 {const-unsigned-char literal}
intro.c(l95:s478:k1021:d13:s0)		iTemp586 [k604 lr478:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] := 0x0 {const-unsigned-char literal}
intro.c(l95:s480:k813:d14:s0)	 _forbody_5($32) :
intro.c(l96:s481:k815:d14:s0)		if iTemp569 [k587 lr477:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0a ] == 0 goto _iffalse_1($10)
intro.c(l97:s482:k822:d14:s0)		iTemp574 [k592 lr482:483 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] = iTemp572 [k590 lr476:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x08 r0x09 ] + iTemp586 [k604 lr478:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ]
intro.c(l97:s483:k823:d14:s0)		iTemp575 [k593 lr483:484 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ] = @[iTemp574 [k592 lr482:483 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] + 0x0 {const-unsigned-char literal}]
intro.c(l97:s484:k824:d14:s0)		send iTemp575 [k593 lr483:484 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ]{argreg = 1}
intro.c(l97:s485:k825:d14:s0)		iTemp576 [k594 lr485:485 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l97:s486:k826:d14:s0)		 goto _forcontinue_5($33)
intro.c(l97:s487:k827:d14:s0)	 _iffalse_1($10) :
intro.c(l99:s488:k833:d14:s0)		iTemp582 [k600 lr488:489 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] = iTemp580 [k598 lr475:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] + iTemp586 [k604 lr478:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ]
intro.c(l99:s489:k834:d14:s0)		iTemp583 [k601 lr489:490 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ] = @[iTemp582 [k600 lr488:489 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] + 0x0 {const-unsigned-char literal}]
intro.c(l99:s490:k835:d14:s0)		send iTemp583 [k601 lr489:490 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ]{argreg = 1}
intro.c(l99:s491:k836:d14:s0)		iTemp584 [k602 lr491:491 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l99:s492:k838:d14:s0)	 _forcontinue_5($33) :
intro.c(l95:s493:k840:d14:s0)		iTemp586 [k604 lr478:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] = iTemp586 [k604 lr478:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] + 0x1 {const-unsigned-char literal}
intro.c(l95:s494:k842:d14:s0)		iTemp587 [k605 lr494:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp586 [k604 lr478:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] < 0x8 {const-unsigned-char literal}
intro.c(l95:s495:k843:d14:s0)		if iTemp587 [k605 lr494:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forbody_5($32)
intro.c(l94:s496:k1039:d13:s0)		iTemp571 [k589 lr470:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] = iTemp571 [k589 lr470:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] + 0x8 {const-unsigned-char literal}
intro.c(l94:s497:k848:d13:s0)		iTemp589 [k607 lr469:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] = iTemp589 [k607 lr469:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] + 0x1 {const-unsigned-char literal}
intro.c(l94:s498:k850:d13:s0)		iTemp590 [k608 lr498:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp589 [k607 lr469:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x8 {const-unsigned-char literal}
intro.c(l94:s499:k851:d13:s0)		if iTemp590 [k608 lr498:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl3($57)
intro.c(l102:s500:k854:d1:s0)		send 0x84 {const-unsigned-char literal}{argreg = 1}
intro.c(l102:s501:k855:d1:s0)		iTemp591 [k609 lr501:501 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l103:s502:k856:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l103:s503:k857:d1:s0)		iTemp592 [k610 lr503:503 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l104:s504:k858:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l104:s505:k859:d1:s0)		iTemp593 [k611 lr505:505 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l105:s506:k860:d1:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
intro.c(l105:s507:k861:d1:s0)		iTemp594 [k612 lr507:507 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l106:s508:k862:d1:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
intro.c(l106:s509:k863:d1:s0)		iTemp595 [k613 lr509:509 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l107:s510:k864:d1:s0)		send 0xc4 {const-unsigned-char literal}{argreg = 1}
intro.c(l107:s511:k865:d1:s0)		iTemp596 [k614 lr511:511 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l108:s512:k866:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l108:s513:k867:d1:s0)		iTemp597 [k615 lr513:513 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l109:s514:k868:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l109:s515:k869:d1:s0)		iTemp598 [k616 lr515:515 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l110:s516:k870:d1:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
intro.c(l110:s517:k871:d1:s0)		iTemp599 [k617 lr517:517 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l111:s518:k872:d1:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
intro.c(l111:s519:k873:d1:s0)		iTemp600 [k618 lr519:519 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l112:s520:k874:d1:s0)		iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15}[r0x00 r0x01 ] := 0x2 {unsigned-int literal}
intro.c(l113:s521:k875:d1:s0)		 goto _forcontinue_0($45)
intro.c(l114:s522:k876:d1:s0)	 _case_0_2($14) :
intro.c(l115:s523:k1040:d1:s0)		iTemp612 [k630 lr523:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] := 0x0 {const-unsigned-char literal}
intro.c(l115:s524:k1043:d1:s0)		iTemp602 [k620 lr524:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] := 0x0 {unsigned-int literal}
intro.c(l116:s526:k1010:d13:s0)	 preHeaderLbl5($61) :
intro.c(l116:s527:k883:d13:s0)		iTemp603 [k621 lr527:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] = iTemp368 [k375 lr284:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp602 [k620 lr524:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ]
intro.c(l116:s528:k1024:d13:s0)		iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x08 ] := 0x0 {const-unsigned-char literal}
intro.c(l116:s530:k880:d14:s0)	 _forbody_7($36) :
intro.c(l117:s531:k885:d14:s0)		iTemp605 [k623 lr531:532 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x09 r0x0a ] = iTemp603 [k621 lr527:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] + iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x08 ]
intro.c(l117:s532:k886:d14:s0)		iTemp606 [k624 lr532:533 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x09 ] = @[iTemp605 [k623 lr531:532 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x09 r0x0a ] + 0x0 {const-unsigned-char literal}]
intro.c(l117:s533:k887:d14:s0)		send iTemp606 [k624 lr532:533 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x09 ]{argreg = 1}
intro.c(l117:s534:k888:d14:s0)		iTemp607 [k625 lr534:534 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l116:s535:k891:d14:s0)		iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x08 ] = iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x08 ] + 0x1 {const-unsigned-char literal}
intro.c(l116:s536:k893:d14:s0)		iTemp610 [k628 lr536:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x08 ] < 0x8 {const-unsigned-char literal}
intro.c(l116:s537:k894:d14:s0)		if iTemp610 [k628 lr536:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forbody_7($36)
intro.c(l115:s538:k1044:d13:s0)		iTemp602 [k620 lr524:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] = iTemp602 [k620 lr524:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] + 0x8 {const-unsigned-char literal}
intro.c(l115:s539:k899:d13:s0)		iTemp612 [k630 lr523:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] = iTemp612 [k630 lr523:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] + 0x1 {const-unsigned-char literal}
intro.c(l115:s540:k901:d13:s0)		iTemp613 [k631 lr540:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp612 [k630 lr523:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x4 {const-unsigned-char literal}
intro.c(l115:s541:k902:d13:s0)		if iTemp613 [k631 lr540:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl5($61)
intro.c(l120:s542:k905:d1:s0)		send 0x88 {const-unsigned-char literal}{argreg = 1}
intro.c(l120:s543:k906:d1:s0)		iTemp614 [k632 lr543:543 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l121:s544:k907:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l121:s545:k908:d1:s0)		iTemp615 [k633 lr545:545 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l122:s546:k909:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l122:s547:k910:d1:s0)		iTemp616 [k634 lr547:547 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l123:s548:k911:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l123:s549:k912:d1:s0)		iTemp617 [k635 lr549:549 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l124:s550:k913:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l124:s551:k914:d1:s0)		iTemp618 [k636 lr551:551 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l125:s552:k915:d1:s0)		send 0xc8 {const-unsigned-char literal}{argreg = 1}
intro.c(l125:s553:k916:d1:s0)		iTemp619 [k637 lr553:553 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l126:s554:k917:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l126:s555:k918:d1:s0)		iTemp620 [k638 lr555:555 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l127:s556:k919:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l127:s557:k920:d1:s0)		iTemp621 [k639 lr557:557 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l128:s558:k921:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l128:s559:k922:d1:s0)		iTemp622 [k640 lr559:559 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l129:s560:k923:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l129:s561:k924:d1:s0)		iTemp623 [k641 lr561:561 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l130:s562:k925:d1:s0)		iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15}[r0x00 r0x01 ] := 0x3 {unsigned-int literal}
intro.c(l131:s563:k926:d1:s0)		 goto _forcontinue_0($45)
intro.c(l132:s564:k927:d1:s0)	 _case_0_3($17) :
intro.c(l133:s565:k1045:d1:s0)		iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] := 0x0 {const-unsigned-char literal}
intro.c(l133:s566:k1048:d1:s0)		iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] := 0x0 {unsigned-int literal}
intro.c(l134:s568:k1012:d13:s0)	 preHeaderLbl7($66) :
intro.c(l134:s569:k947:d13:s0)		iTemp633 [k651 lr569:570 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register}[r0x06 ] = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] - 0x4 {const-unsigned-char literal}
intro.c(l134:s570:k948:d13:s0)		iTemp634 [k652 lr570:571 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x06 r0x07 ] = iTemp633 [k651 lr569:570 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register}[r0x06 ] * 0x8 {const-unsigned-char literal}
intro.c(l134:s571:k949:d13:s0)		iTemp635 [k653 lr571:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] = iTemp456 [k464 lr350:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp634 [k652 lr570:571 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x06 r0x07 ]
intro.c(l134:s572:k938:d13:s0)		iTemp627 [k645 lr572:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x08 r0x09 ] = iTemp368 [k375 lr284:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ]
intro.c(l134:s573:k932:d13:s0)		iTemp624 [k642 lr573:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0a ] = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x4 {const-unsigned-char literal}
intro.c(l134:s574:k1027:d13:s0)		iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] := 0x0 {const-unsigned-char literal}
intro.c(l134:s576:k931:d14:s0)	 _forbody_9($40) :
intro.c(l135:s577:k933:d14:s0)		if iTemp624 [k642 lr573:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0a ] == 0 goto _iffalse_2($19)
intro.c(l136:s578:k940:d14:s0)		iTemp629 [k647 lr578:579 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] = iTemp627 [k645 lr572:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x08 r0x09 ] + iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ]
intro.c(l136:s579:k941:d14:s0)		iTemp630 [k648 lr579:580 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ] = @[iTemp629 [k647 lr578:579 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] + 0x0 {const-unsigned-char literal}]
intro.c(l136:s580:k942:d14:s0)		send iTemp630 [k648 lr579:580 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ]{argreg = 1}
intro.c(l136:s581:k943:d14:s0)		iTemp631 [k649 lr581:581 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l136:s582:k944:d14:s0)		 goto _forcontinue_9($41)
intro.c(l136:s583:k945:d14:s0)	 _iffalse_2($19) :
intro.c(l138:s584:k951:d14:s0)		iTemp637 [k655 lr584:585 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] = iTemp635 [k653 lr571:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] + iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ]
intro.c(l138:s585:k952:d14:s0)		iTemp638 [k656 lr585:586 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ] = @[iTemp637 [k655 lr584:585 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] + 0x0 {const-unsigned-char literal}]
intro.c(l138:s586:k953:d14:s0)		send iTemp638 [k656 lr585:586 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ]{argreg = 1}
intro.c(l138:s587:k954:d14:s0)		iTemp639 [k657 lr587:587 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l138:s588:k956:d14:s0)	 _forcontinue_9($41) :
intro.c(l134:s589:k958:d14:s0)		iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] = iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] + 0x1 {const-unsigned-char literal}
intro.c(l134:s590:k960:d14:s0)		iTemp642 [k660 lr590:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] < 0x8 {const-unsigned-char literal}
intro.c(l134:s591:k961:d14:s0)		if iTemp642 [k660 lr590:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forbody_9($40)
intro.c(l133:s592:k1049:d13:s0)		iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] = iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] + 0x8 {const-unsigned-char literal}
intro.c(l133:s593:k966:d13:s0)		iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] + 0x1 {const-unsigned-char literal}
intro.c(l133:s594:k968:d13:s0)		iTemp645 [k663 lr594:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x8 {const-unsigned-char literal}
intro.c(l133:s595:k969:d13:s0)		if iTemp645 [k663 lr594:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl7($66)
intro.c(l141:s596:k972:d1:s0)		send 0x8c {const-unsigned-char literal}{argreg = 1}
intro.c(l141:s597:k973:d1:s0)		iTemp646 [k664 lr597:597 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l142:s598:k974:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l142:s599:k975:d1:s0)		iTemp647 [k665 lr599:599 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l143:s600:k976:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l143:s601:k977:d1:s0)		iTemp648 [k666 lr601:601 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l144:s602:k978:d1:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
intro.c(l144:s603:k979:d1:s0)		iTemp649 [k667 lr603:603 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l145:s604:k980:d1:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
intro.c(l145:s605:k981:d1:s0)		iTemp650 [k668 lr605:605 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l146:s606:k982:d1:s0)		send 0xcc {const-unsigned-char literal}{argreg = 1}
intro.c(l146:s607:k983:d1:s0)		iTemp651 [k669 lr607:607 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l147:s608:k984:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l147:s609:k985:d1:s0)		iTemp652 [k670 lr609:609 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l148:s610:k986:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l148:s611:k987:d1:s0)		iTemp653 [k671 lr611:611 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l149:s612:k988:d1:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
intro.c(l149:s613:k989:d1:s0)		iTemp654 [k672 lr613:613 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l150:s614:k990:d1:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
intro.c(l150:s615:k991:d1:s0)		iTemp655 [k673 lr615:615 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l151:s616:k992:d1:s0)		iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15}[r0x00 r0x01 ] := 0x0 {unsigned-int literal}
intro.c(l153:s617:k995:d1:s0)	 _forcontinue_0($45) :
intro.c(l67:s618:k997:d1:s0)		iTemp657 [k675 lr400:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_x_1_15}[r0x02 ] = iTemp657 [k675 lr400:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_x_1_15}[r0x02 ] + 0x1 {const-unsigned-char literal}
intro.c(l67:s619:k999:d1:s0)		iTemp658 [k676 lr619:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp657 [k675 lr400:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_x_1_15}[r0x02 ] < 0x64 {const-unsigned-char literal}
intro.c(l67:s620:k1000:d1:s0)		if iTemp658 [k676 lr619:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl0($48)
intro.c(l67:s621:k1003:d0:s0)	 _return($46) :
intro.c(l67:s622:k1004:d0:s0)		eproc _intro [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( ) fixed}

----------------------------------------------------------------
Basic Block _eBBlock28 : loop Depth = 14 noPath = 0 , lastinLoop = 0
depth 1st num 13 : bbnum = 12 1st iCode = 428 , last iCode = 432
visited 1 : hasFcall = 1

defines bitVector :bitvector Size = 1073 bSize = 135
Bits on { (755) (756) }

local defines bitVector :bitvector Size = 1073 bSize = 135
Bits on { (755) (756) (758) }

pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

in pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

inDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1018) (1030) (1033) (1034) (1039) (1044) (1049) (1050) }

outDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1018) (1030) (1033) (1034) (1039) (1044) (1049) (1050) }

usesDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (753) (755) (756) (758) (773) (1018) }

----------------------------------------------------------------
intro.c(l76:s428:k755:d14:s0)		iTemp542 [k559 lr428:429 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] = iTemp540 [k557 lr422:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x08 r0x09 ] + iTemp554 [k572 lr424:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ]
intro.c(l76:s429:k756:d14:s0)		iTemp543 [k560 lr429:430 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ] = @[iTemp542 [k559 lr428:429 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] + 0x0 {const-unsigned-char literal}]
intro.c(l76:s430:k757:d14:s0)		send iTemp543 [k560 lr429:430 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ]{argreg = 1}
intro.c(l76:s431:k758:d14:s0)		iTemp544 [k562 lr431:431 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l76:s432:k759:d14:s0)		 goto _forcontinue_3($29)
intro.c(l76:s433:k760:d14:s0)	 _iffalse_0($4) :
intro.c(l78:s434:k766:d14:s0)		iTemp550 [k568 lr434:435 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] = iTemp548 [k566 lr421:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] + iTemp554 [k572 lr424:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ]
intro.c(l78:s435:k767:d14:s0)		iTemp551 [k569 lr435:436 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ] = @[iTemp550 [k568 lr434:435 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] + 0x0 {const-unsigned-char literal}]
intro.c(l78:s436:k768:d14:s0)		send iTemp551 [k569 lr435:436 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ]{argreg = 1}
intro.c(l78:s437:k769:d14:s0)		iTemp552 [k570 lr437:437 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l78:s438:k771:d14:s0)	 _forcontinue_3($29) :
intro.c(l74:s439:k773:d14:s0)		iTemp554 [k572 lr424:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] = iTemp554 [k572 lr424:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] + 0x1 {const-unsigned-char literal}
intro.c(l74:s440:k775:d14:s0)		iTemp555 [k573 lr440:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp554 [k572 lr424:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] < 0x8 {const-unsigned-char literal}
intro.c(l74:s441:k776:d14:s0)		if iTemp555 [k573 lr440:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forbody_3($28)
intro.c(l73:s442:k1034:d13:s0)		iTemp539 [k556 lr416:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] = iTemp539 [k556 lr416:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] + 0x8 {const-unsigned-char literal}
intro.c(l73:s443:k781:d13:s0)		iTemp557 [k575 lr415:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] = iTemp557 [k575 lr415:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] + 0x1 {const-unsigned-char literal}
intro.c(l73:s444:k783:d13:s0)		iTemp558 [k576 lr444:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp557 [k575 lr415:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x8 {const-unsigned-char literal}
intro.c(l73:s445:k784:d13:s0)		if iTemp558 [k576 lr444:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl1($52)
intro.c(l81:s446:k787:d1:s0)		send 0x80 {const-unsigned-char literal}{argreg = 1}
intro.c(l81:s447:k788:d1:s0)		iTemp559 [k577 lr447:447 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l82:s448:k789:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l82:s449:k790:d1:s0)		iTemp560 [k578 lr449:449 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l83:s450:k791:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l83:s451:k792:d1:s0)		iTemp561 [k579 lr451:451 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l84:s452:k793:d1:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
intro.c(l84:s453:k794:d1:s0)		iTemp562 [k580 lr453:453 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l85:s454:k795:d1:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
intro.c(l85:s455:k796:d1:s0)		iTemp563 [k581 lr455:455 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l86:s456:k797:d1:s0)		send 0xc0 {const-unsigned-char literal}{argreg = 1}
intro.c(l86:s457:k798:d1:s0)		iTemp564 [k582 lr457:457 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l87:s458:k799:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l87:s459:k800:d1:s0)		iTemp565 [k583 lr459:459 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l88:s460:k801:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l88:s461:k802:d1:s0)		iTemp566 [k584 lr461:461 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l89:s462:k803:d1:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
intro.c(l89:s463:k804:d1:s0)		iTemp567 [k585 lr463:463 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l90:s464:k805:d1:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
intro.c(l90:s465:k806:d1:s0)		iTemp568 [k586 lr465:465 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l91:s466:k807:d1:s0)		iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15}[r0x00 r0x01 ] := 0x1 {unsigned-int literal}
intro.c(l92:s467:k808:d1:s0)		 goto _forcontinue_0($45)
intro.c(l93:s468:k809:d1:s0)	 _case_0_1($8) :
intro.c(l94:s469:k1035:d1:s0)		iTemp589 [k607 lr469:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] := 0x0 {const-unsigned-char literal}
intro.c(l94:s470:k1038:d1:s0)		iTemp571 [k589 lr470:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] := 0x0 {unsigned-int literal}
intro.c(l95:s472:k1008:d13:s0)	 preHeaderLbl3($57) :
intro.c(l95:s473:k829:d13:s0)		iTemp578 [k596 lr473:474 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register}[r0x06 ] = iTemp589 [k607 lr469:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] - 0x4 {const-unsigned-char literal}
intro.c(l95:s474:k830:d13:s0)		iTemp579 [k597 lr474:475 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x06 r0x07 ] = iTemp578 [k596 lr473:474 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register}[r0x06 ] * 0x8 {const-unsigned-char literal}
intro.c(l95:s475:k831:d13:s0)		iTemp580 [k598 lr475:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] = iTemp280 [k286 lr218:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp579 [k597 lr474:475 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x06 r0x07 ]
intro.c(l95:s476:k820:d13:s0)		iTemp572 [k590 lr476:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x08 r0x09 ] = iTemp192 [k197 lr152:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp571 [k589 lr470:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ]
intro.c(l95:s477:k814:d13:s0)		iTemp569 [k587 lr477:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0a ] = iTemp589 [k607 lr469:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x4 {const-unsigned-char literal}
intro.c(l95:s478:k1021:d13:s0)		iTemp586 [k604 lr478:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] := 0x0 {const-unsigned-char literal}
intro.c(l95:s480:k813:d14:s0)	 _forbody_5($32) :
intro.c(l96:s481:k815:d14:s0)		if iTemp569 [k587 lr477:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0a ] == 0 goto _iffalse_1($10)
intro.c(l97:s482:k822:d14:s0)		iTemp574 [k592 lr482:483 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] = iTemp572 [k590 lr476:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x08 r0x09 ] + iTemp586 [k604 lr478:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ]
intro.c(l97:s483:k823:d14:s0)		iTemp575 [k593 lr483:484 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ] = @[iTemp574 [k592 lr482:483 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] + 0x0 {const-unsigned-char literal}]
intro.c(l97:s484:k824:d14:s0)		send iTemp575 [k593 lr483:484 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ]{argreg = 1}
intro.c(l97:s485:k825:d14:s0)		iTemp576 [k594 lr485:485 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l97:s486:k826:d14:s0)		 goto _forcontinue_5($33)
intro.c(l97:s487:k827:d14:s0)	 _iffalse_1($10) :
intro.c(l99:s488:k833:d14:s0)		iTemp582 [k600 lr488:489 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] = iTemp580 [k598 lr475:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] + iTemp586 [k604 lr478:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ]
intro.c(l99:s489:k834:d14:s0)		iTemp583 [k601 lr489:490 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ] = @[iTemp582 [k600 lr488:489 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] + 0x0 {const-unsigned-char literal}]
intro.c(l99:s490:k835:d14:s0)		send iTemp583 [k601 lr489:490 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ]{argreg = 1}
intro.c(l99:s491:k836:d14:s0)		iTemp584 [k602 lr491:491 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l99:s492:k838:d14:s0)	 _forcontinue_5($33) :
intro.c(l95:s493:k840:d14:s0)		iTemp586 [k604 lr478:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] = iTemp586 [k604 lr478:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] + 0x1 {const-unsigned-char literal}
intro.c(l95:s494:k842:d14:s0)		iTemp587 [k605 lr494:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp586 [k604 lr478:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] < 0x8 {const-unsigned-char literal}
intro.c(l95:s495:k843:d14:s0)		if iTemp587 [k605 lr494:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forbody_5($32)
intro.c(l94:s496:k1039:d13:s0)		iTemp571 [k589 lr470:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] = iTemp571 [k589 lr470:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] + 0x8 {const-unsigned-char literal}
intro.c(l94:s497:k848:d13:s0)		iTemp589 [k607 lr469:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] = iTemp589 [k607 lr469:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] + 0x1 {const-unsigned-char literal}
intro.c(l94:s498:k850:d13:s0)		iTemp590 [k608 lr498:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp589 [k607 lr469:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x8 {const-unsigned-char literal}
intro.c(l94:s499:k851:d13:s0)		if iTemp590 [k608 lr498:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl3($57)
intro.c(l102:s500:k854:d1:s0)		send 0x84 {const-unsigned-char literal}{argreg = 1}
intro.c(l102:s501:k855:d1:s0)		iTemp591 [k609 lr501:501 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l103:s502:k856:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l103:s503:k857:d1:s0)		iTemp592 [k610 lr503:503 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l104:s504:k858:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l104:s505:k859:d1:s0)		iTemp593 [k611 lr505:505 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l105:s506:k860:d1:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
intro.c(l105:s507:k861:d1:s0)		iTemp594 [k612 lr507:507 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l106:s508:k862:d1:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
intro.c(l106:s509:k863:d1:s0)		iTemp595 [k613 lr509:509 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l107:s510:k864:d1:s0)		send 0xc4 {const-unsigned-char literal}{argreg = 1}
intro.c(l107:s511:k865:d1:s0)		iTemp596 [k614 lr511:511 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l108:s512:k866:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l108:s513:k867:d1:s0)		iTemp597 [k615 lr513:513 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l109:s514:k868:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l109:s515:k869:d1:s0)		iTemp598 [k616 lr515:515 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l110:s516:k870:d1:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
intro.c(l110:s517:k871:d1:s0)		iTemp599 [k617 lr517:517 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l111:s518:k872:d1:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
intro.c(l111:s519:k873:d1:s0)		iTemp600 [k618 lr519:519 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l112:s520:k874:d1:s0)		iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15}[r0x00 r0x01 ] := 0x2 {unsigned-int literal}
intro.c(l113:s521:k875:d1:s0)		 goto _forcontinue_0($45)
intro.c(l114:s522:k876:d1:s0)	 _case_0_2($14) :
intro.c(l115:s523:k1040:d1:s0)		iTemp612 [k630 lr523:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] := 0x0 {const-unsigned-char literal}
intro.c(l115:s524:k1043:d1:s0)		iTemp602 [k620 lr524:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] := 0x0 {unsigned-int literal}
intro.c(l116:s526:k1010:d13:s0)	 preHeaderLbl5($61) :
intro.c(l116:s527:k883:d13:s0)		iTemp603 [k621 lr527:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] = iTemp368 [k375 lr284:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp602 [k620 lr524:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ]
intro.c(l116:s528:k1024:d13:s0)		iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x08 ] := 0x0 {const-unsigned-char literal}
intro.c(l116:s530:k880:d14:s0)	 _forbody_7($36) :
intro.c(l117:s531:k885:d14:s0)		iTemp605 [k623 lr531:532 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x09 r0x0a ] = iTemp603 [k621 lr527:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] + iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x08 ]
intro.c(l117:s532:k886:d14:s0)		iTemp606 [k624 lr532:533 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x09 ] = @[iTemp605 [k623 lr531:532 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x09 r0x0a ] + 0x0 {const-unsigned-char literal}]
intro.c(l117:s533:k887:d14:s0)		send iTemp606 [k624 lr532:533 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x09 ]{argreg = 1}
intro.c(l117:s534:k888:d14:s0)		iTemp607 [k625 lr534:534 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l116:s535:k891:d14:s0)		iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x08 ] = iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x08 ] + 0x1 {const-unsigned-char literal}
intro.c(l116:s536:k893:d14:s0)		iTemp610 [k628 lr536:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x08 ] < 0x8 {const-unsigned-char literal}
intro.c(l116:s537:k894:d14:s0)		if iTemp610 [k628 lr536:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forbody_7($36)
intro.c(l115:s538:k1044:d13:s0)		iTemp602 [k620 lr524:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] = iTemp602 [k620 lr524:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] + 0x8 {const-unsigned-char literal}
intro.c(l115:s539:k899:d13:s0)		iTemp612 [k630 lr523:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] = iTemp612 [k630 lr523:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] + 0x1 {const-unsigned-char literal}
intro.c(l115:s540:k901:d13:s0)		iTemp613 [k631 lr540:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp612 [k630 lr523:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x4 {const-unsigned-char literal}
intro.c(l115:s541:k902:d13:s0)		if iTemp613 [k631 lr540:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl5($61)
intro.c(l120:s542:k905:d1:s0)		send 0x88 {const-unsigned-char literal}{argreg = 1}
intro.c(l120:s543:k906:d1:s0)		iTemp614 [k632 lr543:543 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l121:s544:k907:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l121:s545:k908:d1:s0)		iTemp615 [k633 lr545:545 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l122:s546:k909:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l122:s547:k910:d1:s0)		iTemp616 [k634 lr547:547 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l123:s548:k911:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l123:s549:k912:d1:s0)		iTemp617 [k635 lr549:549 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l124:s550:k913:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l124:s551:k914:d1:s0)		iTemp618 [k636 lr551:551 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l125:s552:k915:d1:s0)		send 0xc8 {const-unsigned-char literal}{argreg = 1}
intro.c(l125:s553:k916:d1:s0)		iTemp619 [k637 lr553:553 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l126:s554:k917:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l126:s555:k918:d1:s0)		iTemp620 [k638 lr555:555 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l127:s556:k919:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l127:s557:k920:d1:s0)		iTemp621 [k639 lr557:557 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l128:s558:k921:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l128:s559:k922:d1:s0)		iTemp622 [k640 lr559:559 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l129:s560:k923:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l129:s561:k924:d1:s0)		iTemp623 [k641 lr561:561 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l130:s562:k925:d1:s0)		iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15}[r0x00 r0x01 ] := 0x3 {unsigned-int literal}
intro.c(l131:s563:k926:d1:s0)		 goto _forcontinue_0($45)
intro.c(l132:s564:k927:d1:s0)	 _case_0_3($17) :
intro.c(l133:s565:k1045:d1:s0)		iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] := 0x0 {const-unsigned-char literal}
intro.c(l133:s566:k1048:d1:s0)		iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] := 0x0 {unsigned-int literal}
intro.c(l134:s568:k1012:d13:s0)	 preHeaderLbl7($66) :
intro.c(l134:s569:k947:d13:s0)		iTemp633 [k651 lr569:570 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register}[r0x06 ] = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] - 0x4 {const-unsigned-char literal}
intro.c(l134:s570:k948:d13:s0)		iTemp634 [k652 lr570:571 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x06 r0x07 ] = iTemp633 [k651 lr569:570 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register}[r0x06 ] * 0x8 {const-unsigned-char literal}
intro.c(l134:s571:k949:d13:s0)		iTemp635 [k653 lr571:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] = iTemp456 [k464 lr350:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp634 [k652 lr570:571 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x06 r0x07 ]
intro.c(l134:s572:k938:d13:s0)		iTemp627 [k645 lr572:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x08 r0x09 ] = iTemp368 [k375 lr284:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ]
intro.c(l134:s573:k932:d13:s0)		iTemp624 [k642 lr573:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0a ] = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x4 {const-unsigned-char literal}
intro.c(l134:s574:k1027:d13:s0)		iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] := 0x0 {const-unsigned-char literal}
intro.c(l134:s576:k931:d14:s0)	 _forbody_9($40) :
intro.c(l135:s577:k933:d14:s0)		if iTemp624 [k642 lr573:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0a ] == 0 goto _iffalse_2($19)
intro.c(l136:s578:k940:d14:s0)		iTemp629 [k647 lr578:579 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] = iTemp627 [k645 lr572:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x08 r0x09 ] + iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ]
intro.c(l136:s579:k941:d14:s0)		iTemp630 [k648 lr579:580 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ] = @[iTemp629 [k647 lr578:579 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] + 0x0 {const-unsigned-char literal}]
intro.c(l136:s580:k942:d14:s0)		send iTemp630 [k648 lr579:580 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ]{argreg = 1}
intro.c(l136:s581:k943:d14:s0)		iTemp631 [k649 lr581:581 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l136:s582:k944:d14:s0)		 goto _forcontinue_9($41)
intro.c(l136:s583:k945:d14:s0)	 _iffalse_2($19) :
intro.c(l138:s584:k951:d14:s0)		iTemp637 [k655 lr584:585 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] = iTemp635 [k653 lr571:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] + iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ]
intro.c(l138:s585:k952:d14:s0)		iTemp638 [k656 lr585:586 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ] = @[iTemp637 [k655 lr584:585 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] + 0x0 {const-unsigned-char literal}]
intro.c(l138:s586:k953:d14:s0)		send iTemp638 [k656 lr585:586 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ]{argreg = 1}
intro.c(l138:s587:k954:d14:s0)		iTemp639 [k657 lr587:587 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l138:s588:k956:d14:s0)	 _forcontinue_9($41) :
intro.c(l134:s589:k958:d14:s0)		iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] = iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] + 0x1 {const-unsigned-char literal}
intro.c(l134:s590:k960:d14:s0)		iTemp642 [k660 lr590:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] < 0x8 {const-unsigned-char literal}
intro.c(l134:s591:k961:d14:s0)		if iTemp642 [k660 lr590:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forbody_9($40)
intro.c(l133:s592:k1049:d13:s0)		iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] = iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] + 0x8 {const-unsigned-char literal}
intro.c(l133:s593:k966:d13:s0)		iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] + 0x1 {const-unsigned-char literal}
intro.c(l133:s594:k968:d13:s0)		iTemp645 [k663 lr594:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x8 {const-unsigned-char literal}
intro.c(l133:s595:k969:d13:s0)		if iTemp645 [k663 lr594:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl7($66)
intro.c(l141:s596:k972:d1:s0)		send 0x8c {const-unsigned-char literal}{argreg = 1}
intro.c(l141:s597:k973:d1:s0)		iTemp646 [k664 lr597:597 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l142:s598:k974:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l142:s599:k975:d1:s0)		iTemp647 [k665 lr599:599 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l143:s600:k976:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l143:s601:k977:d1:s0)		iTemp648 [k666 lr601:601 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l144:s602:k978:d1:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
intro.c(l144:s603:k979:d1:s0)		iTemp649 [k667 lr603:603 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l145:s604:k980:d1:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
intro.c(l145:s605:k981:d1:s0)		iTemp650 [k668 lr605:605 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l146:s606:k982:d1:s0)		send 0xcc {const-unsigned-char literal}{argreg = 1}
intro.c(l146:s607:k983:d1:s0)		iTemp651 [k669 lr607:607 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l147:s608:k984:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l147:s609:k985:d1:s0)		iTemp652 [k670 lr609:609 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l148:s610:k986:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l148:s611:k987:d1:s0)		iTemp653 [k671 lr611:611 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l149:s612:k988:d1:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
intro.c(l149:s613:k989:d1:s0)		iTemp654 [k672 lr613:613 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l150:s614:k990:d1:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
intro.c(l150:s615:k991:d1:s0)		iTemp655 [k673 lr615:615 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l151:s616:k992:d1:s0)		iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15}[r0x00 r0x01 ] := 0x0 {unsigned-int literal}
intro.c(l153:s617:k995:d1:s0)	 _forcontinue_0($45) :
intro.c(l67:s618:k997:d1:s0)		iTemp657 [k675 lr400:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_x_1_15}[r0x02 ] = iTemp657 [k675 lr400:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_x_1_15}[r0x02 ] + 0x1 {const-unsigned-char literal}
intro.c(l67:s619:k999:d1:s0)		iTemp658 [k676 lr619:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp657 [k675 lr400:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_x_1_15}[r0x02 ] < 0x64 {const-unsigned-char literal}
intro.c(l67:s620:k1000:d1:s0)		if iTemp658 [k676 lr619:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl0($48)
intro.c(l67:s621:k1003:d0:s0)	 _return($46) :
intro.c(l67:s622:k1004:d0:s0)		eproc _intro [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( ) fixed}

----------------------------------------------------------------
Basic Block _iffalse_0 : loop Depth = 14 noPath = 0 , lastinLoop = 0
depth 1st num 14 : bbnum = 13 1st iCode = 433 , last iCode = 437
visited 1 : hasFcall = 1

defines bitVector :bitvector Size = 1073 bSize = 135
Bits on { (766) (767) }

local defines bitVector :bitvector Size = 1073 bSize = 135
Bits on { (766) (767) (769) }

pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

in pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

inDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1018) (1030) (1033) (1034) (1039) (1044) (1049) (1050) }

outDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1018) (1030) (1033) (1034) (1039) (1044) (1049) (1050) }

usesDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (764) (766) (767) (769) (773) (1018) }

----------------------------------------------------------------
intro.c(l76:s433:k760:d14:s0)	 _iffalse_0($4) :
intro.c(l78:s434:k766:d14:s0)		iTemp550 [k568 lr434:435 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] = iTemp548 [k566 lr421:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] + iTemp554 [k572 lr424:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ]
intro.c(l78:s435:k767:d14:s0)		iTemp551 [k569 lr435:436 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ] = @[iTemp550 [k568 lr434:435 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] + 0x0 {const-unsigned-char literal}]
intro.c(l78:s436:k768:d14:s0)		send iTemp551 [k569 lr435:436 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ]{argreg = 1}
intro.c(l78:s437:k769:d14:s0)		iTemp552 [k570 lr437:437 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l78:s438:k771:d14:s0)	 _forcontinue_3($29) :
intro.c(l74:s439:k773:d14:s0)		iTemp554 [k572 lr424:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] = iTemp554 [k572 lr424:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] + 0x1 {const-unsigned-char literal}
intro.c(l74:s440:k775:d14:s0)		iTemp555 [k573 lr440:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp554 [k572 lr424:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] < 0x8 {const-unsigned-char literal}
intro.c(l74:s441:k776:d14:s0)		if iTemp555 [k573 lr440:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forbody_3($28)
intro.c(l73:s442:k1034:d13:s0)		iTemp539 [k556 lr416:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] = iTemp539 [k556 lr416:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] + 0x8 {const-unsigned-char literal}
intro.c(l73:s443:k781:d13:s0)		iTemp557 [k575 lr415:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] = iTemp557 [k575 lr415:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] + 0x1 {const-unsigned-char literal}
intro.c(l73:s444:k783:d13:s0)		iTemp558 [k576 lr444:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp557 [k575 lr415:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x8 {const-unsigned-char literal}
intro.c(l73:s445:k784:d13:s0)		if iTemp558 [k576 lr444:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl1($52)
intro.c(l81:s446:k787:d1:s0)		send 0x80 {const-unsigned-char literal}{argreg = 1}
intro.c(l81:s447:k788:d1:s0)		iTemp559 [k577 lr447:447 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l82:s448:k789:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l82:s449:k790:d1:s0)		iTemp560 [k578 lr449:449 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l83:s450:k791:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l83:s451:k792:d1:s0)		iTemp561 [k579 lr451:451 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l84:s452:k793:d1:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
intro.c(l84:s453:k794:d1:s0)		iTemp562 [k580 lr453:453 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l85:s454:k795:d1:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
intro.c(l85:s455:k796:d1:s0)		iTemp563 [k581 lr455:455 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l86:s456:k797:d1:s0)		send 0xc0 {const-unsigned-char literal}{argreg = 1}
intro.c(l86:s457:k798:d1:s0)		iTemp564 [k582 lr457:457 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l87:s458:k799:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l87:s459:k800:d1:s0)		iTemp565 [k583 lr459:459 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l88:s460:k801:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l88:s461:k802:d1:s0)		iTemp566 [k584 lr461:461 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l89:s462:k803:d1:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
intro.c(l89:s463:k804:d1:s0)		iTemp567 [k585 lr463:463 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l90:s464:k805:d1:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
intro.c(l90:s465:k806:d1:s0)		iTemp568 [k586 lr465:465 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l91:s466:k807:d1:s0)		iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15}[r0x00 r0x01 ] := 0x1 {unsigned-int literal}
intro.c(l92:s467:k808:d1:s0)		 goto _forcontinue_0($45)
intro.c(l93:s468:k809:d1:s0)	 _case_0_1($8) :
intro.c(l94:s469:k1035:d1:s0)		iTemp589 [k607 lr469:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] := 0x0 {const-unsigned-char literal}
intro.c(l94:s470:k1038:d1:s0)		iTemp571 [k589 lr470:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] := 0x0 {unsigned-int literal}
intro.c(l95:s472:k1008:d13:s0)	 preHeaderLbl3($57) :
intro.c(l95:s473:k829:d13:s0)		iTemp578 [k596 lr473:474 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register}[r0x06 ] = iTemp589 [k607 lr469:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] - 0x4 {const-unsigned-char literal}
intro.c(l95:s474:k830:d13:s0)		iTemp579 [k597 lr474:475 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x06 r0x07 ] = iTemp578 [k596 lr473:474 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register}[r0x06 ] * 0x8 {const-unsigned-char literal}
intro.c(l95:s475:k831:d13:s0)		iTemp580 [k598 lr475:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] = iTemp280 [k286 lr218:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp579 [k597 lr474:475 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x06 r0x07 ]
intro.c(l95:s476:k820:d13:s0)		iTemp572 [k590 lr476:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x08 r0x09 ] = iTemp192 [k197 lr152:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp571 [k589 lr470:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ]
intro.c(l95:s477:k814:d13:s0)		iTemp569 [k587 lr477:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0a ] = iTemp589 [k607 lr469:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x4 {const-unsigned-char literal}
intro.c(l95:s478:k1021:d13:s0)		iTemp586 [k604 lr478:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] := 0x0 {const-unsigned-char literal}
intro.c(l95:s480:k813:d14:s0)	 _forbody_5($32) :
intro.c(l96:s481:k815:d14:s0)		if iTemp569 [k587 lr477:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0a ] == 0 goto _iffalse_1($10)
intro.c(l97:s482:k822:d14:s0)		iTemp574 [k592 lr482:483 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] = iTemp572 [k590 lr476:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x08 r0x09 ] + iTemp586 [k604 lr478:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ]
intro.c(l97:s483:k823:d14:s0)		iTemp575 [k593 lr483:484 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ] = @[iTemp574 [k592 lr482:483 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] + 0x0 {const-unsigned-char literal}]
intro.c(l97:s484:k824:d14:s0)		send iTemp575 [k593 lr483:484 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ]{argreg = 1}
intro.c(l97:s485:k825:d14:s0)		iTemp576 [k594 lr485:485 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l97:s486:k826:d14:s0)		 goto _forcontinue_5($33)
intro.c(l97:s487:k827:d14:s0)	 _iffalse_1($10) :
intro.c(l99:s488:k833:d14:s0)		iTemp582 [k600 lr488:489 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] = iTemp580 [k598 lr475:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] + iTemp586 [k604 lr478:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ]
intro.c(l99:s489:k834:d14:s0)		iTemp583 [k601 lr489:490 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ] = @[iTemp582 [k600 lr488:489 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] + 0x0 {const-unsigned-char literal}]
intro.c(l99:s490:k835:d14:s0)		send iTemp583 [k601 lr489:490 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ]{argreg = 1}
intro.c(l99:s491:k836:d14:s0)		iTemp584 [k602 lr491:491 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l99:s492:k838:d14:s0)	 _forcontinue_5($33) :
intro.c(l95:s493:k840:d14:s0)		iTemp586 [k604 lr478:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] = iTemp586 [k604 lr478:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] + 0x1 {const-unsigned-char literal}
intro.c(l95:s494:k842:d14:s0)		iTemp587 [k605 lr494:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp586 [k604 lr478:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] < 0x8 {const-unsigned-char literal}
intro.c(l95:s495:k843:d14:s0)		if iTemp587 [k605 lr494:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forbody_5($32)
intro.c(l94:s496:k1039:d13:s0)		iTemp571 [k589 lr470:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] = iTemp571 [k589 lr470:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] + 0x8 {const-unsigned-char literal}
intro.c(l94:s497:k848:d13:s0)		iTemp589 [k607 lr469:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] = iTemp589 [k607 lr469:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] + 0x1 {const-unsigned-char literal}
intro.c(l94:s498:k850:d13:s0)		iTemp590 [k608 lr498:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp589 [k607 lr469:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x8 {const-unsigned-char literal}
intro.c(l94:s499:k851:d13:s0)		if iTemp590 [k608 lr498:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl3($57)
intro.c(l102:s500:k854:d1:s0)		send 0x84 {const-unsigned-char literal}{argreg = 1}
intro.c(l102:s501:k855:d1:s0)		iTemp591 [k609 lr501:501 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l103:s502:k856:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l103:s503:k857:d1:s0)		iTemp592 [k610 lr503:503 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l104:s504:k858:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l104:s505:k859:d1:s0)		iTemp593 [k611 lr505:505 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l105:s506:k860:d1:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
intro.c(l105:s507:k861:d1:s0)		iTemp594 [k612 lr507:507 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l106:s508:k862:d1:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
intro.c(l106:s509:k863:d1:s0)		iTemp595 [k613 lr509:509 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l107:s510:k864:d1:s0)		send 0xc4 {const-unsigned-char literal}{argreg = 1}
intro.c(l107:s511:k865:d1:s0)		iTemp596 [k614 lr511:511 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l108:s512:k866:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l108:s513:k867:d1:s0)		iTemp597 [k615 lr513:513 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l109:s514:k868:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l109:s515:k869:d1:s0)		iTemp598 [k616 lr515:515 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l110:s516:k870:d1:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
intro.c(l110:s517:k871:d1:s0)		iTemp599 [k617 lr517:517 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l111:s518:k872:d1:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
intro.c(l111:s519:k873:d1:s0)		iTemp600 [k618 lr519:519 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l112:s520:k874:d1:s0)		iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15}[r0x00 r0x01 ] := 0x2 {unsigned-int literal}
intro.c(l113:s521:k875:d1:s0)		 goto _forcontinue_0($45)
intro.c(l114:s522:k876:d1:s0)	 _case_0_2($14) :
intro.c(l115:s523:k1040:d1:s0)		iTemp612 [k630 lr523:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] := 0x0 {const-unsigned-char literal}
intro.c(l115:s524:k1043:d1:s0)		iTemp602 [k620 lr524:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] := 0x0 {unsigned-int literal}
intro.c(l116:s526:k1010:d13:s0)	 preHeaderLbl5($61) :
intro.c(l116:s527:k883:d13:s0)		iTemp603 [k621 lr527:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] = iTemp368 [k375 lr284:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp602 [k620 lr524:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ]
intro.c(l116:s528:k1024:d13:s0)		iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x08 ] := 0x0 {const-unsigned-char literal}
intro.c(l116:s530:k880:d14:s0)	 _forbody_7($36) :
intro.c(l117:s531:k885:d14:s0)		iTemp605 [k623 lr531:532 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x09 r0x0a ] = iTemp603 [k621 lr527:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] + iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x08 ]
intro.c(l117:s532:k886:d14:s0)		iTemp606 [k624 lr532:533 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x09 ] = @[iTemp605 [k623 lr531:532 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x09 r0x0a ] + 0x0 {const-unsigned-char literal}]
intro.c(l117:s533:k887:d14:s0)		send iTemp606 [k624 lr532:533 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x09 ]{argreg = 1}
intro.c(l117:s534:k888:d14:s0)		iTemp607 [k625 lr534:534 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l116:s535:k891:d14:s0)		iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x08 ] = iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x08 ] + 0x1 {const-unsigned-char literal}
intro.c(l116:s536:k893:d14:s0)		iTemp610 [k628 lr536:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x08 ] < 0x8 {const-unsigned-char literal}
intro.c(l116:s537:k894:d14:s0)		if iTemp610 [k628 lr536:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forbody_7($36)
intro.c(l115:s538:k1044:d13:s0)		iTemp602 [k620 lr524:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] = iTemp602 [k620 lr524:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] + 0x8 {const-unsigned-char literal}
intro.c(l115:s539:k899:d13:s0)		iTemp612 [k630 lr523:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] = iTemp612 [k630 lr523:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] + 0x1 {const-unsigned-char literal}
intro.c(l115:s540:k901:d13:s0)		iTemp613 [k631 lr540:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp612 [k630 lr523:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x4 {const-unsigned-char literal}
intro.c(l115:s541:k902:d13:s0)		if iTemp613 [k631 lr540:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl5($61)
intro.c(l120:s542:k905:d1:s0)		send 0x88 {const-unsigned-char literal}{argreg = 1}
intro.c(l120:s543:k906:d1:s0)		iTemp614 [k632 lr543:543 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l121:s544:k907:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l121:s545:k908:d1:s0)		iTemp615 [k633 lr545:545 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l122:s546:k909:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l122:s547:k910:d1:s0)		iTemp616 [k634 lr547:547 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l123:s548:k911:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l123:s549:k912:d1:s0)		iTemp617 [k635 lr549:549 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l124:s550:k913:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l124:s551:k914:d1:s0)		iTemp618 [k636 lr551:551 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l125:s552:k915:d1:s0)		send 0xc8 {const-unsigned-char literal}{argreg = 1}
intro.c(l125:s553:k916:d1:s0)		iTemp619 [k637 lr553:553 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l126:s554:k917:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l126:s555:k918:d1:s0)		iTemp620 [k638 lr555:555 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l127:s556:k919:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l127:s557:k920:d1:s0)		iTemp621 [k639 lr557:557 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l128:s558:k921:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l128:s559:k922:d1:s0)		iTemp622 [k640 lr559:559 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l129:s560:k923:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l129:s561:k924:d1:s0)		iTemp623 [k641 lr561:561 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l130:s562:k925:d1:s0)		iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15}[r0x00 r0x01 ] := 0x3 {unsigned-int literal}
intro.c(l131:s563:k926:d1:s0)		 goto _forcontinue_0($45)
intro.c(l132:s564:k927:d1:s0)	 _case_0_3($17) :
intro.c(l133:s565:k1045:d1:s0)		iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] := 0x0 {const-unsigned-char literal}
intro.c(l133:s566:k1048:d1:s0)		iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] := 0x0 {unsigned-int literal}
intro.c(l134:s568:k1012:d13:s0)	 preHeaderLbl7($66) :
intro.c(l134:s569:k947:d13:s0)		iTemp633 [k651 lr569:570 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register}[r0x06 ] = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] - 0x4 {const-unsigned-char literal}
intro.c(l134:s570:k948:d13:s0)		iTemp634 [k652 lr570:571 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x06 r0x07 ] = iTemp633 [k651 lr569:570 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register}[r0x06 ] * 0x8 {const-unsigned-char literal}
intro.c(l134:s571:k949:d13:s0)		iTemp635 [k653 lr571:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] = iTemp456 [k464 lr350:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp634 [k652 lr570:571 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x06 r0x07 ]
intro.c(l134:s572:k938:d13:s0)		iTemp627 [k645 lr572:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x08 r0x09 ] = iTemp368 [k375 lr284:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ]
intro.c(l134:s573:k932:d13:s0)		iTemp624 [k642 lr573:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0a ] = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x4 {const-unsigned-char literal}
intro.c(l134:s574:k1027:d13:s0)		iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] := 0x0 {const-unsigned-char literal}
intro.c(l134:s576:k931:d14:s0)	 _forbody_9($40) :
intro.c(l135:s577:k933:d14:s0)		if iTemp624 [k642 lr573:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0a ] == 0 goto _iffalse_2($19)
intro.c(l136:s578:k940:d14:s0)		iTemp629 [k647 lr578:579 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] = iTemp627 [k645 lr572:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x08 r0x09 ] + iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ]
intro.c(l136:s579:k941:d14:s0)		iTemp630 [k648 lr579:580 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ] = @[iTemp629 [k647 lr578:579 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] + 0x0 {const-unsigned-char literal}]
intro.c(l136:s580:k942:d14:s0)		send iTemp630 [k648 lr579:580 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ]{argreg = 1}
intro.c(l136:s581:k943:d14:s0)		iTemp631 [k649 lr581:581 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l136:s582:k944:d14:s0)		 goto _forcontinue_9($41)
intro.c(l136:s583:k945:d14:s0)	 _iffalse_2($19) :
intro.c(l138:s584:k951:d14:s0)		iTemp637 [k655 lr584:585 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] = iTemp635 [k653 lr571:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] + iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ]
intro.c(l138:s585:k952:d14:s0)		iTemp638 [k656 lr585:586 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ] = @[iTemp637 [k655 lr584:585 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] + 0x0 {const-unsigned-char literal}]
intro.c(l138:s586:k953:d14:s0)		send iTemp638 [k656 lr585:586 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ]{argreg = 1}
intro.c(l138:s587:k954:d14:s0)		iTemp639 [k657 lr587:587 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l138:s588:k956:d14:s0)	 _forcontinue_9($41) :
intro.c(l134:s589:k958:d14:s0)		iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] = iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] + 0x1 {const-unsigned-char literal}
intro.c(l134:s590:k960:d14:s0)		iTemp642 [k660 lr590:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] < 0x8 {const-unsigned-char literal}
intro.c(l134:s591:k961:d14:s0)		if iTemp642 [k660 lr590:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forbody_9($40)
intro.c(l133:s592:k1049:d13:s0)		iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] = iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] + 0x8 {const-unsigned-char literal}
intro.c(l133:s593:k966:d13:s0)		iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] + 0x1 {const-unsigned-char literal}
intro.c(l133:s594:k968:d13:s0)		iTemp645 [k663 lr594:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x8 {const-unsigned-char literal}
intro.c(l133:s595:k969:d13:s0)		if iTemp645 [k663 lr594:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl7($66)
intro.c(l141:s596:k972:d1:s0)		send 0x8c {const-unsigned-char literal}{argreg = 1}
intro.c(l141:s597:k973:d1:s0)		iTemp646 [k664 lr597:597 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l142:s598:k974:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l142:s599:k975:d1:s0)		iTemp647 [k665 lr599:599 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l143:s600:k976:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l143:s601:k977:d1:s0)		iTemp648 [k666 lr601:601 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l144:s602:k978:d1:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
intro.c(l144:s603:k979:d1:s0)		iTemp649 [k667 lr603:603 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l145:s604:k980:d1:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
intro.c(l145:s605:k981:d1:s0)		iTemp650 [k668 lr605:605 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l146:s606:k982:d1:s0)		send 0xcc {const-unsigned-char literal}{argreg = 1}
intro.c(l146:s607:k983:d1:s0)		iTemp651 [k669 lr607:607 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l147:s608:k984:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l147:s609:k985:d1:s0)		iTemp652 [k670 lr609:609 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l148:s610:k986:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l148:s611:k987:d1:s0)		iTemp653 [k671 lr611:611 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l149:s612:k988:d1:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
intro.c(l149:s613:k989:d1:s0)		iTemp654 [k672 lr613:613 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l150:s614:k990:d1:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
intro.c(l150:s615:k991:d1:s0)		iTemp655 [k673 lr615:615 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l151:s616:k992:d1:s0)		iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15}[r0x00 r0x01 ] := 0x0 {unsigned-int literal}
intro.c(l153:s617:k995:d1:s0)	 _forcontinue_0($45) :
intro.c(l67:s618:k997:d1:s0)		iTemp657 [k675 lr400:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_x_1_15}[r0x02 ] = iTemp657 [k675 lr400:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_x_1_15}[r0x02 ] + 0x1 {const-unsigned-char literal}
intro.c(l67:s619:k999:d1:s0)		iTemp658 [k676 lr619:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp657 [k675 lr400:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_x_1_15}[r0x02 ] < 0x64 {const-unsigned-char literal}
intro.c(l67:s620:k1000:d1:s0)		if iTemp658 [k676 lr619:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl0($48)
intro.c(l67:s621:k1003:d0:s0)	 _return($46) :
intro.c(l67:s622:k1004:d0:s0)		eproc _intro [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( ) fixed}

----------------------------------------------------------------
Basic Block _forcontinue_3 : loop Depth = 14 noPath = 0 , lastinLoop = 0
depth 1st num 15 : bbnum = 14 1st iCode = 438 , last iCode = 441
visited 1 : hasFcall = 0

defines bitVector :bitvector Size = 1073 bSize = 135
Bits on { (773) (775) }

local defines bitVector :bitvector Size = 1073 bSize = 135
Bits on { (773) (775) }

pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

in pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

inDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1018) (1030) (1033) (1034) (1039) (1044) (1049) (1050) }

outDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1030) (1033) (1034) (1039) (1044) (1049) (1050) }

usesDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (773) (775) (1018) }

----------------------------------------------------------------
intro.c(l78:s438:k771:d14:s0)	 _forcontinue_3($29) :
intro.c(l74:s439:k773:d14:s0)		iTemp554 [k572 lr424:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] = iTemp554 [k572 lr424:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] + 0x1 {const-unsigned-char literal}
intro.c(l74:s440:k775:d14:s0)		iTemp555 [k573 lr440:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp554 [k572 lr424:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] < 0x8 {const-unsigned-char literal}
intro.c(l74:s441:k776:d14:s0)		if iTemp555 [k573 lr440:441 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forbody_3($28)
intro.c(l73:s442:k1034:d13:s0)		iTemp539 [k556 lr416:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] = iTemp539 [k556 lr416:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] + 0x8 {const-unsigned-char literal}
intro.c(l73:s443:k781:d13:s0)		iTemp557 [k575 lr415:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] = iTemp557 [k575 lr415:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] + 0x1 {const-unsigned-char literal}
intro.c(l73:s444:k783:d13:s0)		iTemp558 [k576 lr444:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp557 [k575 lr415:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x8 {const-unsigned-char literal}
intro.c(l73:s445:k784:d13:s0)		if iTemp558 [k576 lr444:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl1($52)
intro.c(l81:s446:k787:d1:s0)		send 0x80 {const-unsigned-char literal}{argreg = 1}
intro.c(l81:s447:k788:d1:s0)		iTemp559 [k577 lr447:447 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l82:s448:k789:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l82:s449:k790:d1:s0)		iTemp560 [k578 lr449:449 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l83:s450:k791:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l83:s451:k792:d1:s0)		iTemp561 [k579 lr451:451 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l84:s452:k793:d1:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
intro.c(l84:s453:k794:d1:s0)		iTemp562 [k580 lr453:453 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l85:s454:k795:d1:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
intro.c(l85:s455:k796:d1:s0)		iTemp563 [k581 lr455:455 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l86:s456:k797:d1:s0)		send 0xc0 {const-unsigned-char literal}{argreg = 1}
intro.c(l86:s457:k798:d1:s0)		iTemp564 [k582 lr457:457 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l87:s458:k799:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l87:s459:k800:d1:s0)		iTemp565 [k583 lr459:459 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l88:s460:k801:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l88:s461:k802:d1:s0)		iTemp566 [k584 lr461:461 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l89:s462:k803:d1:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
intro.c(l89:s463:k804:d1:s0)		iTemp567 [k585 lr463:463 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l90:s464:k805:d1:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
intro.c(l90:s465:k806:d1:s0)		iTemp568 [k586 lr465:465 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l91:s466:k807:d1:s0)		iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15}[r0x00 r0x01 ] := 0x1 {unsigned-int literal}
intro.c(l92:s467:k808:d1:s0)		 goto _forcontinue_0($45)
intro.c(l93:s468:k809:d1:s0)	 _case_0_1($8) :
intro.c(l94:s469:k1035:d1:s0)		iTemp589 [k607 lr469:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] := 0x0 {const-unsigned-char literal}
intro.c(l94:s470:k1038:d1:s0)		iTemp571 [k589 lr470:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] := 0x0 {unsigned-int literal}
intro.c(l95:s472:k1008:d13:s0)	 preHeaderLbl3($57) :
intro.c(l95:s473:k829:d13:s0)		iTemp578 [k596 lr473:474 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register}[r0x06 ] = iTemp589 [k607 lr469:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] - 0x4 {const-unsigned-char literal}
intro.c(l95:s474:k830:d13:s0)		iTemp579 [k597 lr474:475 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x06 r0x07 ] = iTemp578 [k596 lr473:474 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register}[r0x06 ] * 0x8 {const-unsigned-char literal}
intro.c(l95:s475:k831:d13:s0)		iTemp580 [k598 lr475:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] = iTemp280 [k286 lr218:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp579 [k597 lr474:475 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x06 r0x07 ]
intro.c(l95:s476:k820:d13:s0)		iTemp572 [k590 lr476:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x08 r0x09 ] = iTemp192 [k197 lr152:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp571 [k589 lr470:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ]
intro.c(l95:s477:k814:d13:s0)		iTemp569 [k587 lr477:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0a ] = iTemp589 [k607 lr469:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x4 {const-unsigned-char literal}
intro.c(l95:s478:k1021:d13:s0)		iTemp586 [k604 lr478:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] := 0x0 {const-unsigned-char literal}
intro.c(l95:s480:k813:d14:s0)	 _forbody_5($32) :
intro.c(l96:s481:k815:d14:s0)		if iTemp569 [k587 lr477:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0a ] == 0 goto _iffalse_1($10)
intro.c(l97:s482:k822:d14:s0)		iTemp574 [k592 lr482:483 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] = iTemp572 [k590 lr476:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x08 r0x09 ] + iTemp586 [k604 lr478:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ]
intro.c(l97:s483:k823:d14:s0)		iTemp575 [k593 lr483:484 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ] = @[iTemp574 [k592 lr482:483 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] + 0x0 {const-unsigned-char literal}]
intro.c(l97:s484:k824:d14:s0)		send iTemp575 [k593 lr483:484 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ]{argreg = 1}
intro.c(l97:s485:k825:d14:s0)		iTemp576 [k594 lr485:485 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l97:s486:k826:d14:s0)		 goto _forcontinue_5($33)
intro.c(l97:s487:k827:d14:s0)	 _iffalse_1($10) :
intro.c(l99:s488:k833:d14:s0)		iTemp582 [k600 lr488:489 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] = iTemp580 [k598 lr475:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] + iTemp586 [k604 lr478:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ]
intro.c(l99:s489:k834:d14:s0)		iTemp583 [k601 lr489:490 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ] = @[iTemp582 [k600 lr488:489 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] + 0x0 {const-unsigned-char literal}]
intro.c(l99:s490:k835:d14:s0)		send iTemp583 [k601 lr489:490 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ]{argreg = 1}
intro.c(l99:s491:k836:d14:s0)		iTemp584 [k602 lr491:491 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l99:s492:k838:d14:s0)	 _forcontinue_5($33) :
intro.c(l95:s493:k840:d14:s0)		iTemp586 [k604 lr478:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] = iTemp586 [k604 lr478:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] + 0x1 {const-unsigned-char literal}
intro.c(l95:s494:k842:d14:s0)		iTemp587 [k605 lr494:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp586 [k604 lr478:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] < 0x8 {const-unsigned-char literal}
intro.c(l95:s495:k843:d14:s0)		if iTemp587 [k605 lr494:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forbody_5($32)
intro.c(l94:s496:k1039:d13:s0)		iTemp571 [k589 lr470:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] = iTemp571 [k589 lr470:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] + 0x8 {const-unsigned-char literal}
intro.c(l94:s497:k848:d13:s0)		iTemp589 [k607 lr469:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] = iTemp589 [k607 lr469:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] + 0x1 {const-unsigned-char literal}
intro.c(l94:s498:k850:d13:s0)		iTemp590 [k608 lr498:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp589 [k607 lr469:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x8 {const-unsigned-char literal}
intro.c(l94:s499:k851:d13:s0)		if iTemp590 [k608 lr498:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl3($57)
intro.c(l102:s500:k854:d1:s0)		send 0x84 {const-unsigned-char literal}{argreg = 1}
intro.c(l102:s501:k855:d1:s0)		iTemp591 [k609 lr501:501 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l103:s502:k856:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l103:s503:k857:d1:s0)		iTemp592 [k610 lr503:503 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l104:s504:k858:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l104:s505:k859:d1:s0)		iTemp593 [k611 lr505:505 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l105:s506:k860:d1:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
intro.c(l105:s507:k861:d1:s0)		iTemp594 [k612 lr507:507 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l106:s508:k862:d1:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
intro.c(l106:s509:k863:d1:s0)		iTemp595 [k613 lr509:509 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l107:s510:k864:d1:s0)		send 0xc4 {const-unsigned-char literal}{argreg = 1}
intro.c(l107:s511:k865:d1:s0)		iTemp596 [k614 lr511:511 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l108:s512:k866:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l108:s513:k867:d1:s0)		iTemp597 [k615 lr513:513 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l109:s514:k868:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l109:s515:k869:d1:s0)		iTemp598 [k616 lr515:515 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l110:s516:k870:d1:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
intro.c(l110:s517:k871:d1:s0)		iTemp599 [k617 lr517:517 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l111:s518:k872:d1:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
intro.c(l111:s519:k873:d1:s0)		iTemp600 [k618 lr519:519 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l112:s520:k874:d1:s0)		iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15}[r0x00 r0x01 ] := 0x2 {unsigned-int literal}
intro.c(l113:s521:k875:d1:s0)		 goto _forcontinue_0($45)
intro.c(l114:s522:k876:d1:s0)	 _case_0_2($14) :
intro.c(l115:s523:k1040:d1:s0)		iTemp612 [k630 lr523:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] := 0x0 {const-unsigned-char literal}
intro.c(l115:s524:k1043:d1:s0)		iTemp602 [k620 lr524:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] := 0x0 {unsigned-int literal}
intro.c(l116:s526:k1010:d13:s0)	 preHeaderLbl5($61) :
intro.c(l116:s527:k883:d13:s0)		iTemp603 [k621 lr527:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] = iTemp368 [k375 lr284:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp602 [k620 lr524:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ]
intro.c(l116:s528:k1024:d13:s0)		iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x08 ] := 0x0 {const-unsigned-char literal}
intro.c(l116:s530:k880:d14:s0)	 _forbody_7($36) :
intro.c(l117:s531:k885:d14:s0)		iTemp605 [k623 lr531:532 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x09 r0x0a ] = iTemp603 [k621 lr527:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] + iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x08 ]
intro.c(l117:s532:k886:d14:s0)		iTemp606 [k624 lr532:533 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x09 ] = @[iTemp605 [k623 lr531:532 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x09 r0x0a ] + 0x0 {const-unsigned-char literal}]
intro.c(l117:s533:k887:d14:s0)		send iTemp606 [k624 lr532:533 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x09 ]{argreg = 1}
intro.c(l117:s534:k888:d14:s0)		iTemp607 [k625 lr534:534 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l116:s535:k891:d14:s0)		iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x08 ] = iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x08 ] + 0x1 {const-unsigned-char literal}
intro.c(l116:s536:k893:d14:s0)		iTemp610 [k628 lr536:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x08 ] < 0x8 {const-unsigned-char literal}
intro.c(l116:s537:k894:d14:s0)		if iTemp610 [k628 lr536:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forbody_7($36)
intro.c(l115:s538:k1044:d13:s0)		iTemp602 [k620 lr524:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] = iTemp602 [k620 lr524:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] + 0x8 {const-unsigned-char literal}
intro.c(l115:s539:k899:d13:s0)		iTemp612 [k630 lr523:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] = iTemp612 [k630 lr523:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] + 0x1 {const-unsigned-char literal}
intro.c(l115:s540:k901:d13:s0)		iTemp613 [k631 lr540:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp612 [k630 lr523:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x4 {const-unsigned-char literal}
intro.c(l115:s541:k902:d13:s0)		if iTemp613 [k631 lr540:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl5($61)
intro.c(l120:s542:k905:d1:s0)		send 0x88 {const-unsigned-char literal}{argreg = 1}
intro.c(l120:s543:k906:d1:s0)		iTemp614 [k632 lr543:543 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l121:s544:k907:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l121:s545:k908:d1:s0)		iTemp615 [k633 lr545:545 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l122:s546:k909:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l122:s547:k910:d1:s0)		iTemp616 [k634 lr547:547 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l123:s548:k911:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l123:s549:k912:d1:s0)		iTemp617 [k635 lr549:549 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l124:s550:k913:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l124:s551:k914:d1:s0)		iTemp618 [k636 lr551:551 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l125:s552:k915:d1:s0)		send 0xc8 {const-unsigned-char literal}{argreg = 1}
intro.c(l125:s553:k916:d1:s0)		iTemp619 [k637 lr553:553 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l126:s554:k917:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l126:s555:k918:d1:s0)		iTemp620 [k638 lr555:555 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l127:s556:k919:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l127:s557:k920:d1:s0)		iTemp621 [k639 lr557:557 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l128:s558:k921:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l128:s559:k922:d1:s0)		iTemp622 [k640 lr559:559 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l129:s560:k923:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l129:s561:k924:d1:s0)		iTemp623 [k641 lr561:561 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l130:s562:k925:d1:s0)		iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15}[r0x00 r0x01 ] := 0x3 {unsigned-int literal}
intro.c(l131:s563:k926:d1:s0)		 goto _forcontinue_0($45)
intro.c(l132:s564:k927:d1:s0)	 _case_0_3($17) :
intro.c(l133:s565:k1045:d1:s0)		iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] := 0x0 {const-unsigned-char literal}
intro.c(l133:s566:k1048:d1:s0)		iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] := 0x0 {unsigned-int literal}
intro.c(l134:s568:k1012:d13:s0)	 preHeaderLbl7($66) :
intro.c(l134:s569:k947:d13:s0)		iTemp633 [k651 lr569:570 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register}[r0x06 ] = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] - 0x4 {const-unsigned-char literal}
intro.c(l134:s570:k948:d13:s0)		iTemp634 [k652 lr570:571 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x06 r0x07 ] = iTemp633 [k651 lr569:570 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register}[r0x06 ] * 0x8 {const-unsigned-char literal}
intro.c(l134:s571:k949:d13:s0)		iTemp635 [k653 lr571:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] = iTemp456 [k464 lr350:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp634 [k652 lr570:571 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x06 r0x07 ]
intro.c(l134:s572:k938:d13:s0)		iTemp627 [k645 lr572:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x08 r0x09 ] = iTemp368 [k375 lr284:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ]
intro.c(l134:s573:k932:d13:s0)		iTemp624 [k642 lr573:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0a ] = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x4 {const-unsigned-char literal}
intro.c(l134:s574:k1027:d13:s0)		iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] := 0x0 {const-unsigned-char literal}
intro.c(l134:s576:k931:d14:s0)	 _forbody_9($40) :
intro.c(l135:s577:k933:d14:s0)		if iTemp624 [k642 lr573:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0a ] == 0 goto _iffalse_2($19)
intro.c(l136:s578:k940:d14:s0)		iTemp629 [k647 lr578:579 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] = iTemp627 [k645 lr572:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x08 r0x09 ] + iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ]
intro.c(l136:s579:k941:d14:s0)		iTemp630 [k648 lr579:580 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ] = @[iTemp629 [k647 lr578:579 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] + 0x0 {const-unsigned-char literal}]
intro.c(l136:s580:k942:d14:s0)		send iTemp630 [k648 lr579:580 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ]{argreg = 1}
intro.c(l136:s581:k943:d14:s0)		iTemp631 [k649 lr581:581 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l136:s582:k944:d14:s0)		 goto _forcontinue_9($41)
intro.c(l136:s583:k945:d14:s0)	 _iffalse_2($19) :
intro.c(l138:s584:k951:d14:s0)		iTemp637 [k655 lr584:585 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] = iTemp635 [k653 lr571:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] + iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ]
intro.c(l138:s585:k952:d14:s0)		iTemp638 [k656 lr585:586 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ] = @[iTemp637 [k655 lr584:585 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] + 0x0 {const-unsigned-char literal}]
intro.c(l138:s586:k953:d14:s0)		send iTemp638 [k656 lr585:586 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ]{argreg = 1}
intro.c(l138:s587:k954:d14:s0)		iTemp639 [k657 lr587:587 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l138:s588:k956:d14:s0)	 _forcontinue_9($41) :
intro.c(l134:s589:k958:d14:s0)		iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] = iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] + 0x1 {const-unsigned-char literal}
intro.c(l134:s590:k960:d14:s0)		iTemp642 [k660 lr590:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] < 0x8 {const-unsigned-char literal}
intro.c(l134:s591:k961:d14:s0)		if iTemp642 [k660 lr590:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forbody_9($40)
intro.c(l133:s592:k1049:d13:s0)		iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] = iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] + 0x8 {const-unsigned-char literal}
intro.c(l133:s593:k966:d13:s0)		iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] + 0x1 {const-unsigned-char literal}
intro.c(l133:s594:k968:d13:s0)		iTemp645 [k663 lr594:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x8 {const-unsigned-char literal}
intro.c(l133:s595:k969:d13:s0)		if iTemp645 [k663 lr594:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl7($66)
intro.c(l141:s596:k972:d1:s0)		send 0x8c {const-unsigned-char literal}{argreg = 1}
intro.c(l141:s597:k973:d1:s0)		iTemp646 [k664 lr597:597 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l142:s598:k974:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l142:s599:k975:d1:s0)		iTemp647 [k665 lr599:599 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l143:s600:k976:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l143:s601:k977:d1:s0)		iTemp648 [k666 lr601:601 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l144:s602:k978:d1:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
intro.c(l144:s603:k979:d1:s0)		iTemp649 [k667 lr603:603 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l145:s604:k980:d1:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
intro.c(l145:s605:k981:d1:s0)		iTemp650 [k668 lr605:605 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l146:s606:k982:d1:s0)		send 0xcc {const-unsigned-char literal}{argreg = 1}
intro.c(l146:s607:k983:d1:s0)		iTemp651 [k669 lr607:607 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l147:s608:k984:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l147:s609:k985:d1:s0)		iTemp652 [k670 lr609:609 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l148:s610:k986:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l148:s611:k987:d1:s0)		iTemp653 [k671 lr611:611 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l149:s612:k988:d1:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
intro.c(l149:s613:k989:d1:s0)		iTemp654 [k672 lr613:613 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l150:s614:k990:d1:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
intro.c(l150:s615:k991:d1:s0)		iTemp655 [k673 lr615:615 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l151:s616:k992:d1:s0)		iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15}[r0x00 r0x01 ] := 0x0 {unsigned-int literal}
intro.c(l153:s617:k995:d1:s0)	 _forcontinue_0($45) :
intro.c(l67:s618:k997:d1:s0)		iTemp657 [k675 lr400:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_x_1_15}[r0x02 ] = iTemp657 [k675 lr400:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_x_1_15}[r0x02 ] + 0x1 {const-unsigned-char literal}
intro.c(l67:s619:k999:d1:s0)		iTemp658 [k676 lr619:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp657 [k675 lr400:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_x_1_15}[r0x02 ] < 0x64 {const-unsigned-char literal}
intro.c(l67:s620:k1000:d1:s0)		if iTemp658 [k676 lr619:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl0($48)
intro.c(l67:s621:k1003:d0:s0)	 _return($46) :
intro.c(l67:s622:k1004:d0:s0)		eproc _intro [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( ) fixed}

----------------------------------------------------------------
Basic Block _eBBlock29 : loop Depth = 13 noPath = 0 , lastinLoop = 0
depth 1st num 16 : bbnum = 15 1st iCode = 442 , last iCode = 445
visited 1 : hasFcall = 0

defines bitVector :bitvector Size = 1073 bSize = 135
Bits on { (781) (783) (1034) }

local defines bitVector :bitvector Size = 1073 bSize = 135
Bits on { (781) (783) (1034) }

pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

in pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

inDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1030) (1033) (1034) (1039) (1044) (1049) (1050) }

outDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1034) (1039) (1044) (1049) (1050) }

usesDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (781) (783) (1030) (1033) }

----------------------------------------------------------------
intro.c(l73:s442:k1034:d13:s0)		iTemp539 [k556 lr416:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] = iTemp539 [k556 lr416:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] + 0x8 {const-unsigned-char literal}
intro.c(l73:s443:k781:d13:s0)		iTemp557 [k575 lr415:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] = iTemp557 [k575 lr415:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] + 0x1 {const-unsigned-char literal}
intro.c(l73:s444:k783:d13:s0)		iTemp558 [k576 lr444:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp557 [k575 lr415:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x8 {const-unsigned-char literal}
intro.c(l73:s445:k784:d13:s0)		if iTemp558 [k576 lr444:445 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl1($52)
intro.c(l81:s446:k787:d1:s0)		send 0x80 {const-unsigned-char literal}{argreg = 1}
intro.c(l81:s447:k788:d1:s0)		iTemp559 [k577 lr447:447 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l82:s448:k789:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l82:s449:k790:d1:s0)		iTemp560 [k578 lr449:449 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l83:s450:k791:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l83:s451:k792:d1:s0)		iTemp561 [k579 lr451:451 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l84:s452:k793:d1:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
intro.c(l84:s453:k794:d1:s0)		iTemp562 [k580 lr453:453 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l85:s454:k795:d1:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
intro.c(l85:s455:k796:d1:s0)		iTemp563 [k581 lr455:455 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l86:s456:k797:d1:s0)		send 0xc0 {const-unsigned-char literal}{argreg = 1}
intro.c(l86:s457:k798:d1:s0)		iTemp564 [k582 lr457:457 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l87:s458:k799:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l87:s459:k800:d1:s0)		iTemp565 [k583 lr459:459 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l88:s460:k801:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l88:s461:k802:d1:s0)		iTemp566 [k584 lr461:461 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l89:s462:k803:d1:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
intro.c(l89:s463:k804:d1:s0)		iTemp567 [k585 lr463:463 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l90:s464:k805:d1:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
intro.c(l90:s465:k806:d1:s0)		iTemp568 [k586 lr465:465 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l91:s466:k807:d1:s0)		iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15}[r0x00 r0x01 ] := 0x1 {unsigned-int literal}
intro.c(l92:s467:k808:d1:s0)		 goto _forcontinue_0($45)
intro.c(l93:s468:k809:d1:s0)	 _case_0_1($8) :
intro.c(l94:s469:k1035:d1:s0)		iTemp589 [k607 lr469:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] := 0x0 {const-unsigned-char literal}
intro.c(l94:s470:k1038:d1:s0)		iTemp571 [k589 lr470:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] := 0x0 {unsigned-int literal}
intro.c(l95:s472:k1008:d13:s0)	 preHeaderLbl3($57) :
intro.c(l95:s473:k829:d13:s0)		iTemp578 [k596 lr473:474 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register}[r0x06 ] = iTemp589 [k607 lr469:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] - 0x4 {const-unsigned-char literal}
intro.c(l95:s474:k830:d13:s0)		iTemp579 [k597 lr474:475 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x06 r0x07 ] = iTemp578 [k596 lr473:474 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register}[r0x06 ] * 0x8 {const-unsigned-char literal}
intro.c(l95:s475:k831:d13:s0)		iTemp580 [k598 lr475:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] = iTemp280 [k286 lr218:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp579 [k597 lr474:475 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x06 r0x07 ]
intro.c(l95:s476:k820:d13:s0)		iTemp572 [k590 lr476:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x08 r0x09 ] = iTemp192 [k197 lr152:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp571 [k589 lr470:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ]
intro.c(l95:s477:k814:d13:s0)		iTemp569 [k587 lr477:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0a ] = iTemp589 [k607 lr469:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x4 {const-unsigned-char literal}
intro.c(l95:s478:k1021:d13:s0)		iTemp586 [k604 lr478:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] := 0x0 {const-unsigned-char literal}
intro.c(l95:s480:k813:d14:s0)	 _forbody_5($32) :
intro.c(l96:s481:k815:d14:s0)		if iTemp569 [k587 lr477:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0a ] == 0 goto _iffalse_1($10)
intro.c(l97:s482:k822:d14:s0)		iTemp574 [k592 lr482:483 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] = iTemp572 [k590 lr476:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x08 r0x09 ] + iTemp586 [k604 lr478:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ]
intro.c(l97:s483:k823:d14:s0)		iTemp575 [k593 lr483:484 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ] = @[iTemp574 [k592 lr482:483 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] + 0x0 {const-unsigned-char literal}]
intro.c(l97:s484:k824:d14:s0)		send iTemp575 [k593 lr483:484 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ]{argreg = 1}
intro.c(l97:s485:k825:d14:s0)		iTemp576 [k594 lr485:485 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l97:s486:k826:d14:s0)		 goto _forcontinue_5($33)
intro.c(l97:s487:k827:d14:s0)	 _iffalse_1($10) :
intro.c(l99:s488:k833:d14:s0)		iTemp582 [k600 lr488:489 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] = iTemp580 [k598 lr475:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] + iTemp586 [k604 lr478:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ]
intro.c(l99:s489:k834:d14:s0)		iTemp583 [k601 lr489:490 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ] = @[iTemp582 [k600 lr488:489 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] + 0x0 {const-unsigned-char literal}]
intro.c(l99:s490:k835:d14:s0)		send iTemp583 [k601 lr489:490 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ]{argreg = 1}
intro.c(l99:s491:k836:d14:s0)		iTemp584 [k602 lr491:491 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l99:s492:k838:d14:s0)	 _forcontinue_5($33) :
intro.c(l95:s493:k840:d14:s0)		iTemp586 [k604 lr478:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] = iTemp586 [k604 lr478:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] + 0x1 {const-unsigned-char literal}
intro.c(l95:s494:k842:d14:s0)		iTemp587 [k605 lr494:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp586 [k604 lr478:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] < 0x8 {const-unsigned-char literal}
intro.c(l95:s495:k843:d14:s0)		if iTemp587 [k605 lr494:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forbody_5($32)
intro.c(l94:s496:k1039:d13:s0)		iTemp571 [k589 lr470:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] = iTemp571 [k589 lr470:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] + 0x8 {const-unsigned-char literal}
intro.c(l94:s497:k848:d13:s0)		iTemp589 [k607 lr469:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] = iTemp589 [k607 lr469:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] + 0x1 {const-unsigned-char literal}
intro.c(l94:s498:k850:d13:s0)		iTemp590 [k608 lr498:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp589 [k607 lr469:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x8 {const-unsigned-char literal}
intro.c(l94:s499:k851:d13:s0)		if iTemp590 [k608 lr498:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl3($57)
intro.c(l102:s500:k854:d1:s0)		send 0x84 {const-unsigned-char literal}{argreg = 1}
intro.c(l102:s501:k855:d1:s0)		iTemp591 [k609 lr501:501 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l103:s502:k856:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l103:s503:k857:d1:s0)		iTemp592 [k610 lr503:503 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l104:s504:k858:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l104:s505:k859:d1:s0)		iTemp593 [k611 lr505:505 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l105:s506:k860:d1:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
intro.c(l105:s507:k861:d1:s0)		iTemp594 [k612 lr507:507 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l106:s508:k862:d1:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
intro.c(l106:s509:k863:d1:s0)		iTemp595 [k613 lr509:509 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l107:s510:k864:d1:s0)		send 0xc4 {const-unsigned-char literal}{argreg = 1}
intro.c(l107:s511:k865:d1:s0)		iTemp596 [k614 lr511:511 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l108:s512:k866:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l108:s513:k867:d1:s0)		iTemp597 [k615 lr513:513 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l109:s514:k868:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l109:s515:k869:d1:s0)		iTemp598 [k616 lr515:515 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l110:s516:k870:d1:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
intro.c(l110:s517:k871:d1:s0)		iTemp599 [k617 lr517:517 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l111:s518:k872:d1:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
intro.c(l111:s519:k873:d1:s0)		iTemp600 [k618 lr519:519 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l112:s520:k874:d1:s0)		iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15}[r0x00 r0x01 ] := 0x2 {unsigned-int literal}
intro.c(l113:s521:k875:d1:s0)		 goto _forcontinue_0($45)
intro.c(l114:s522:k876:d1:s0)	 _case_0_2($14) :
intro.c(l115:s523:k1040:d1:s0)		iTemp612 [k630 lr523:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] := 0x0 {const-unsigned-char literal}
intro.c(l115:s524:k1043:d1:s0)		iTemp602 [k620 lr524:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] := 0x0 {unsigned-int literal}
intro.c(l116:s526:k1010:d13:s0)	 preHeaderLbl5($61) :
intro.c(l116:s527:k883:d13:s0)		iTemp603 [k621 lr527:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] = iTemp368 [k375 lr284:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp602 [k620 lr524:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ]
intro.c(l116:s528:k1024:d13:s0)		iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x08 ] := 0x0 {const-unsigned-char literal}
intro.c(l116:s530:k880:d14:s0)	 _forbody_7($36) :
intro.c(l117:s531:k885:d14:s0)		iTemp605 [k623 lr531:532 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x09 r0x0a ] = iTemp603 [k621 lr527:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] + iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x08 ]
intro.c(l117:s532:k886:d14:s0)		iTemp606 [k624 lr532:533 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x09 ] = @[iTemp605 [k623 lr531:532 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x09 r0x0a ] + 0x0 {const-unsigned-char literal}]
intro.c(l117:s533:k887:d14:s0)		send iTemp606 [k624 lr532:533 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x09 ]{argreg = 1}
intro.c(l117:s534:k888:d14:s0)		iTemp607 [k625 lr534:534 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l116:s535:k891:d14:s0)		iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x08 ] = iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x08 ] + 0x1 {const-unsigned-char literal}
intro.c(l116:s536:k893:d14:s0)		iTemp610 [k628 lr536:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x08 ] < 0x8 {const-unsigned-char literal}
intro.c(l116:s537:k894:d14:s0)		if iTemp610 [k628 lr536:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forbody_7($36)
intro.c(l115:s538:k1044:d13:s0)		iTemp602 [k620 lr524:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] = iTemp602 [k620 lr524:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] + 0x8 {const-unsigned-char literal}
intro.c(l115:s539:k899:d13:s0)		iTemp612 [k630 lr523:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] = iTemp612 [k630 lr523:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] + 0x1 {const-unsigned-char literal}
intro.c(l115:s540:k901:d13:s0)		iTemp613 [k631 lr540:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp612 [k630 lr523:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x4 {const-unsigned-char literal}
intro.c(l115:s541:k902:d13:s0)		if iTemp613 [k631 lr540:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl5($61)
intro.c(l120:s542:k905:d1:s0)		send 0x88 {const-unsigned-char literal}{argreg = 1}
intro.c(l120:s543:k906:d1:s0)		iTemp614 [k632 lr543:543 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l121:s544:k907:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l121:s545:k908:d1:s0)		iTemp615 [k633 lr545:545 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l122:s546:k909:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l122:s547:k910:d1:s0)		iTemp616 [k634 lr547:547 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l123:s548:k911:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l123:s549:k912:d1:s0)		iTemp617 [k635 lr549:549 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l124:s550:k913:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l124:s551:k914:d1:s0)		iTemp618 [k636 lr551:551 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l125:s552:k915:d1:s0)		send 0xc8 {const-unsigned-char literal}{argreg = 1}
intro.c(l125:s553:k916:d1:s0)		iTemp619 [k637 lr553:553 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l126:s554:k917:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l126:s555:k918:d1:s0)		iTemp620 [k638 lr555:555 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l127:s556:k919:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l127:s557:k920:d1:s0)		iTemp621 [k639 lr557:557 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l128:s558:k921:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l128:s559:k922:d1:s0)		iTemp622 [k640 lr559:559 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l129:s560:k923:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l129:s561:k924:d1:s0)		iTemp623 [k641 lr561:561 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l130:s562:k925:d1:s0)		iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15}[r0x00 r0x01 ] := 0x3 {unsigned-int literal}
intro.c(l131:s563:k926:d1:s0)		 goto _forcontinue_0($45)
intro.c(l132:s564:k927:d1:s0)	 _case_0_3($17) :
intro.c(l133:s565:k1045:d1:s0)		iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] := 0x0 {const-unsigned-char literal}
intro.c(l133:s566:k1048:d1:s0)		iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] := 0x0 {unsigned-int literal}
intro.c(l134:s568:k1012:d13:s0)	 preHeaderLbl7($66) :
intro.c(l134:s569:k947:d13:s0)		iTemp633 [k651 lr569:570 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register}[r0x06 ] = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] - 0x4 {const-unsigned-char literal}
intro.c(l134:s570:k948:d13:s0)		iTemp634 [k652 lr570:571 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x06 r0x07 ] = iTemp633 [k651 lr569:570 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register}[r0x06 ] * 0x8 {const-unsigned-char literal}
intro.c(l134:s571:k949:d13:s0)		iTemp635 [k653 lr571:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] = iTemp456 [k464 lr350:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp634 [k652 lr570:571 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x06 r0x07 ]
intro.c(l134:s572:k938:d13:s0)		iTemp627 [k645 lr572:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x08 r0x09 ] = iTemp368 [k375 lr284:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ]
intro.c(l134:s573:k932:d13:s0)		iTemp624 [k642 lr573:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0a ] = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x4 {const-unsigned-char literal}
intro.c(l134:s574:k1027:d13:s0)		iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] := 0x0 {const-unsigned-char literal}
intro.c(l134:s576:k931:d14:s0)	 _forbody_9($40) :
intro.c(l135:s577:k933:d14:s0)		if iTemp624 [k642 lr573:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0a ] == 0 goto _iffalse_2($19)
intro.c(l136:s578:k940:d14:s0)		iTemp629 [k647 lr578:579 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] = iTemp627 [k645 lr572:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x08 r0x09 ] + iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ]
intro.c(l136:s579:k941:d14:s0)		iTemp630 [k648 lr579:580 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ] = @[iTemp629 [k647 lr578:579 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] + 0x0 {const-unsigned-char literal}]
intro.c(l136:s580:k942:d14:s0)		send iTemp630 [k648 lr579:580 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ]{argreg = 1}
intro.c(l136:s581:k943:d14:s0)		iTemp631 [k649 lr581:581 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l136:s582:k944:d14:s0)		 goto _forcontinue_9($41)
intro.c(l136:s583:k945:d14:s0)	 _iffalse_2($19) :
intro.c(l138:s584:k951:d14:s0)		iTemp637 [k655 lr584:585 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] = iTemp635 [k653 lr571:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] + iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ]
intro.c(l138:s585:k952:d14:s0)		iTemp638 [k656 lr585:586 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ] = @[iTemp637 [k655 lr584:585 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] + 0x0 {const-unsigned-char literal}]
intro.c(l138:s586:k953:d14:s0)		send iTemp638 [k656 lr585:586 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ]{argreg = 1}
intro.c(l138:s587:k954:d14:s0)		iTemp639 [k657 lr587:587 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l138:s588:k956:d14:s0)	 _forcontinue_9($41) :
intro.c(l134:s589:k958:d14:s0)		iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] = iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] + 0x1 {const-unsigned-char literal}
intro.c(l134:s590:k960:d14:s0)		iTemp642 [k660 lr590:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] < 0x8 {const-unsigned-char literal}
intro.c(l134:s591:k961:d14:s0)		if iTemp642 [k660 lr590:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forbody_9($40)
intro.c(l133:s592:k1049:d13:s0)		iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] = iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] + 0x8 {const-unsigned-char literal}
intro.c(l133:s593:k966:d13:s0)		iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] + 0x1 {const-unsigned-char literal}
intro.c(l133:s594:k968:d13:s0)		iTemp645 [k663 lr594:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x8 {const-unsigned-char literal}
intro.c(l133:s595:k969:d13:s0)		if iTemp645 [k663 lr594:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl7($66)
intro.c(l141:s596:k972:d1:s0)		send 0x8c {const-unsigned-char literal}{argreg = 1}
intro.c(l141:s597:k973:d1:s0)		iTemp646 [k664 lr597:597 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l142:s598:k974:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l142:s599:k975:d1:s0)		iTemp647 [k665 lr599:599 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l143:s600:k976:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l143:s601:k977:d1:s0)		iTemp648 [k666 lr601:601 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l144:s602:k978:d1:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
intro.c(l144:s603:k979:d1:s0)		iTemp649 [k667 lr603:603 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l145:s604:k980:d1:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
intro.c(l145:s605:k981:d1:s0)		iTemp650 [k668 lr605:605 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l146:s606:k982:d1:s0)		send 0xcc {const-unsigned-char literal}{argreg = 1}
intro.c(l146:s607:k983:d1:s0)		iTemp651 [k669 lr607:607 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l147:s608:k984:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l147:s609:k985:d1:s0)		iTemp652 [k670 lr609:609 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l148:s610:k986:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l148:s611:k987:d1:s0)		iTemp653 [k671 lr611:611 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l149:s612:k988:d1:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
intro.c(l149:s613:k989:d1:s0)		iTemp654 [k672 lr613:613 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l150:s614:k990:d1:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
intro.c(l150:s615:k991:d1:s0)		iTemp655 [k673 lr615:615 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l151:s616:k992:d1:s0)		iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15}[r0x00 r0x01 ] := 0x0 {unsigned-int literal}
intro.c(l153:s617:k995:d1:s0)	 _forcontinue_0($45) :
intro.c(l67:s618:k997:d1:s0)		iTemp657 [k675 lr400:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_x_1_15}[r0x02 ] = iTemp657 [k675 lr400:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_x_1_15}[r0x02 ] + 0x1 {const-unsigned-char literal}
intro.c(l67:s619:k999:d1:s0)		iTemp658 [k676 lr619:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp657 [k675 lr400:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_x_1_15}[r0x02 ] < 0x64 {const-unsigned-char literal}
intro.c(l67:s620:k1000:d1:s0)		if iTemp658 [k676 lr619:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl0($48)
intro.c(l67:s621:k1003:d0:s0)	 _return($46) :
intro.c(l67:s622:k1004:d0:s0)		eproc _intro [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( ) fixed}

----------------------------------------------------------------
Basic Block _eBBlock30 : loop Depth = 1 noPath = 0 , lastinLoop = 0
depth 1st num 17 : bbnum = 16 1st iCode = 446 , last iCode = 467
visited 1 : hasFcall = 1

defines bitVector :bitvector Size = 1073 bSize = 135
Bits on { (807) }

local defines bitVector :bitvector Size = 1073 bSize = 135
Bits on { (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) }

pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

in pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

inDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1034) (1039) (1044) (1049) (1050) }

outDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (997) (999) (1034) (1039) (1044) (1049) (1050) }

usesDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) }

----------------------------------------------------------------
intro.c(l81:s446:k787:d1:s0)		send 0x80 {const-unsigned-char literal}{argreg = 1}
intro.c(l81:s447:k788:d1:s0)		iTemp559 [k577 lr447:447 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l82:s448:k789:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l82:s449:k790:d1:s0)		iTemp560 [k578 lr449:449 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l83:s450:k791:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l83:s451:k792:d1:s0)		iTemp561 [k579 lr451:451 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l84:s452:k793:d1:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
intro.c(l84:s453:k794:d1:s0)		iTemp562 [k580 lr453:453 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l85:s454:k795:d1:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
intro.c(l85:s455:k796:d1:s0)		iTemp563 [k581 lr455:455 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l86:s456:k797:d1:s0)		send 0xc0 {const-unsigned-char literal}{argreg = 1}
intro.c(l86:s457:k798:d1:s0)		iTemp564 [k582 lr457:457 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l87:s458:k799:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l87:s459:k800:d1:s0)		iTemp565 [k583 lr459:459 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l88:s460:k801:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l88:s461:k802:d1:s0)		iTemp566 [k584 lr461:461 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l89:s462:k803:d1:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
intro.c(l89:s463:k804:d1:s0)		iTemp567 [k585 lr463:463 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l90:s464:k805:d1:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
intro.c(l90:s465:k806:d1:s0)		iTemp568 [k586 lr465:465 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l91:s466:k807:d1:s0)		iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15}[r0x00 r0x01 ] := 0x1 {unsigned-int literal}
intro.c(l92:s467:k808:d1:s0)		 goto _forcontinue_0($45)
intro.c(l93:s468:k809:d1:s0)	 _case_0_1($8) :
intro.c(l94:s469:k1035:d1:s0)		iTemp589 [k607 lr469:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] := 0x0 {const-unsigned-char literal}
intro.c(l94:s470:k1038:d1:s0)		iTemp571 [k589 lr470:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] := 0x0 {unsigned-int literal}
intro.c(l95:s472:k1008:d13:s0)	 preHeaderLbl3($57) :
intro.c(l95:s473:k829:d13:s0)		iTemp578 [k596 lr473:474 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register}[r0x06 ] = iTemp589 [k607 lr469:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] - 0x4 {const-unsigned-char literal}
intro.c(l95:s474:k830:d13:s0)		iTemp579 [k597 lr474:475 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x06 r0x07 ] = iTemp578 [k596 lr473:474 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register}[r0x06 ] * 0x8 {const-unsigned-char literal}
intro.c(l95:s475:k831:d13:s0)		iTemp580 [k598 lr475:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] = iTemp280 [k286 lr218:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp579 [k597 lr474:475 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x06 r0x07 ]
intro.c(l95:s476:k820:d13:s0)		iTemp572 [k590 lr476:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x08 r0x09 ] = iTemp192 [k197 lr152:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp571 [k589 lr470:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ]
intro.c(l95:s477:k814:d13:s0)		iTemp569 [k587 lr477:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0a ] = iTemp589 [k607 lr469:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x4 {const-unsigned-char literal}
intro.c(l95:s478:k1021:d13:s0)		iTemp586 [k604 lr478:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] := 0x0 {const-unsigned-char literal}
intro.c(l95:s480:k813:d14:s0)	 _forbody_5($32) :
intro.c(l96:s481:k815:d14:s0)		if iTemp569 [k587 lr477:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0a ] == 0 goto _iffalse_1($10)
intro.c(l97:s482:k822:d14:s0)		iTemp574 [k592 lr482:483 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] = iTemp572 [k590 lr476:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x08 r0x09 ] + iTemp586 [k604 lr478:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ]
intro.c(l97:s483:k823:d14:s0)		iTemp575 [k593 lr483:484 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ] = @[iTemp574 [k592 lr482:483 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] + 0x0 {const-unsigned-char literal}]
intro.c(l97:s484:k824:d14:s0)		send iTemp575 [k593 lr483:484 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ]{argreg = 1}
intro.c(l97:s485:k825:d14:s0)		iTemp576 [k594 lr485:485 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l97:s486:k826:d14:s0)		 goto _forcontinue_5($33)
intro.c(l97:s487:k827:d14:s0)	 _iffalse_1($10) :
intro.c(l99:s488:k833:d14:s0)		iTemp582 [k600 lr488:489 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] = iTemp580 [k598 lr475:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] + iTemp586 [k604 lr478:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ]
intro.c(l99:s489:k834:d14:s0)		iTemp583 [k601 lr489:490 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ] = @[iTemp582 [k600 lr488:489 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] + 0x0 {const-unsigned-char literal}]
intro.c(l99:s490:k835:d14:s0)		send iTemp583 [k601 lr489:490 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ]{argreg = 1}
intro.c(l99:s491:k836:d14:s0)		iTemp584 [k602 lr491:491 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l99:s492:k838:d14:s0)	 _forcontinue_5($33) :
intro.c(l95:s493:k840:d14:s0)		iTemp586 [k604 lr478:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] = iTemp586 [k604 lr478:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] + 0x1 {const-unsigned-char literal}
intro.c(l95:s494:k842:d14:s0)		iTemp587 [k605 lr494:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp586 [k604 lr478:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] < 0x8 {const-unsigned-char literal}
intro.c(l95:s495:k843:d14:s0)		if iTemp587 [k605 lr494:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forbody_5($32)
intro.c(l94:s496:k1039:d13:s0)		iTemp571 [k589 lr470:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] = iTemp571 [k589 lr470:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] + 0x8 {const-unsigned-char literal}
intro.c(l94:s497:k848:d13:s0)		iTemp589 [k607 lr469:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] = iTemp589 [k607 lr469:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] + 0x1 {const-unsigned-char literal}
intro.c(l94:s498:k850:d13:s0)		iTemp590 [k608 lr498:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp589 [k607 lr469:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x8 {const-unsigned-char literal}
intro.c(l94:s499:k851:d13:s0)		if iTemp590 [k608 lr498:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl3($57)
intro.c(l102:s500:k854:d1:s0)		send 0x84 {const-unsigned-char literal}{argreg = 1}
intro.c(l102:s501:k855:d1:s0)		iTemp591 [k609 lr501:501 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l103:s502:k856:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l103:s503:k857:d1:s0)		iTemp592 [k610 lr503:503 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l104:s504:k858:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l104:s505:k859:d1:s0)		iTemp593 [k611 lr505:505 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l105:s506:k860:d1:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
intro.c(l105:s507:k861:d1:s0)		iTemp594 [k612 lr507:507 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l106:s508:k862:d1:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
intro.c(l106:s509:k863:d1:s0)		iTemp595 [k613 lr509:509 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l107:s510:k864:d1:s0)		send 0xc4 {const-unsigned-char literal}{argreg = 1}
intro.c(l107:s511:k865:d1:s0)		iTemp596 [k614 lr511:511 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l108:s512:k866:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l108:s513:k867:d1:s0)		iTemp597 [k615 lr513:513 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l109:s514:k868:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l109:s515:k869:d1:s0)		iTemp598 [k616 lr515:515 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l110:s516:k870:d1:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
intro.c(l110:s517:k871:d1:s0)		iTemp599 [k617 lr517:517 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l111:s518:k872:d1:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
intro.c(l111:s519:k873:d1:s0)		iTemp600 [k618 lr519:519 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l112:s520:k874:d1:s0)		iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15}[r0x00 r0x01 ] := 0x2 {unsigned-int literal}
intro.c(l113:s521:k875:d1:s0)		 goto _forcontinue_0($45)
intro.c(l114:s522:k876:d1:s0)	 _case_0_2($14) :
intro.c(l115:s523:k1040:d1:s0)		iTemp612 [k630 lr523:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] := 0x0 {const-unsigned-char literal}
intro.c(l115:s524:k1043:d1:s0)		iTemp602 [k620 lr524:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] := 0x0 {unsigned-int literal}
intro.c(l116:s526:k1010:d13:s0)	 preHeaderLbl5($61) :
intro.c(l116:s527:k883:d13:s0)		iTemp603 [k621 lr527:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] = iTemp368 [k375 lr284:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp602 [k620 lr524:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ]
intro.c(l116:s528:k1024:d13:s0)		iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x08 ] := 0x0 {const-unsigned-char literal}
intro.c(l116:s530:k880:d14:s0)	 _forbody_7($36) :
intro.c(l117:s531:k885:d14:s0)		iTemp605 [k623 lr531:532 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x09 r0x0a ] = iTemp603 [k621 lr527:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] + iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x08 ]
intro.c(l117:s532:k886:d14:s0)		iTemp606 [k624 lr532:533 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x09 ] = @[iTemp605 [k623 lr531:532 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x09 r0x0a ] + 0x0 {const-unsigned-char literal}]
intro.c(l117:s533:k887:d14:s0)		send iTemp606 [k624 lr532:533 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x09 ]{argreg = 1}
intro.c(l117:s534:k888:d14:s0)		iTemp607 [k625 lr534:534 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l116:s535:k891:d14:s0)		iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x08 ] = iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x08 ] + 0x1 {const-unsigned-char literal}
intro.c(l116:s536:k893:d14:s0)		iTemp610 [k628 lr536:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x08 ] < 0x8 {const-unsigned-char literal}
intro.c(l116:s537:k894:d14:s0)		if iTemp610 [k628 lr536:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forbody_7($36)
intro.c(l115:s538:k1044:d13:s0)		iTemp602 [k620 lr524:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] = iTemp602 [k620 lr524:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] + 0x8 {const-unsigned-char literal}
intro.c(l115:s539:k899:d13:s0)		iTemp612 [k630 lr523:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] = iTemp612 [k630 lr523:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] + 0x1 {const-unsigned-char literal}
intro.c(l115:s540:k901:d13:s0)		iTemp613 [k631 lr540:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp612 [k630 lr523:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x4 {const-unsigned-char literal}
intro.c(l115:s541:k902:d13:s0)		if iTemp613 [k631 lr540:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl5($61)
intro.c(l120:s542:k905:d1:s0)		send 0x88 {const-unsigned-char literal}{argreg = 1}
intro.c(l120:s543:k906:d1:s0)		iTemp614 [k632 lr543:543 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l121:s544:k907:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l121:s545:k908:d1:s0)		iTemp615 [k633 lr545:545 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l122:s546:k909:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l122:s547:k910:d1:s0)		iTemp616 [k634 lr547:547 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l123:s548:k911:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l123:s549:k912:d1:s0)		iTemp617 [k635 lr549:549 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l124:s550:k913:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l124:s551:k914:d1:s0)		iTemp618 [k636 lr551:551 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l125:s552:k915:d1:s0)		send 0xc8 {const-unsigned-char literal}{argreg = 1}
intro.c(l125:s553:k916:d1:s0)		iTemp619 [k637 lr553:553 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l126:s554:k917:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l126:s555:k918:d1:s0)		iTemp620 [k638 lr555:555 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l127:s556:k919:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l127:s557:k920:d1:s0)		iTemp621 [k639 lr557:557 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l128:s558:k921:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l128:s559:k922:d1:s0)		iTemp622 [k640 lr559:559 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l129:s560:k923:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l129:s561:k924:d1:s0)		iTemp623 [k641 lr561:561 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l130:s562:k925:d1:s0)		iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15}[r0x00 r0x01 ] := 0x3 {unsigned-int literal}
intro.c(l131:s563:k926:d1:s0)		 goto _forcontinue_0($45)
intro.c(l132:s564:k927:d1:s0)	 _case_0_3($17) :
intro.c(l133:s565:k1045:d1:s0)		iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] := 0x0 {const-unsigned-char literal}
intro.c(l133:s566:k1048:d1:s0)		iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] := 0x0 {unsigned-int literal}
intro.c(l134:s568:k1012:d13:s0)	 preHeaderLbl7($66) :
intro.c(l134:s569:k947:d13:s0)		iTemp633 [k651 lr569:570 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register}[r0x06 ] = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] - 0x4 {const-unsigned-char literal}
intro.c(l134:s570:k948:d13:s0)		iTemp634 [k652 lr570:571 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x06 r0x07 ] = iTemp633 [k651 lr569:570 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register}[r0x06 ] * 0x8 {const-unsigned-char literal}
intro.c(l134:s571:k949:d13:s0)		iTemp635 [k653 lr571:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] = iTemp456 [k464 lr350:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp634 [k652 lr570:571 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x06 r0x07 ]
intro.c(l134:s572:k938:d13:s0)		iTemp627 [k645 lr572:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x08 r0x09 ] = iTemp368 [k375 lr284:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ]
intro.c(l134:s573:k932:d13:s0)		iTemp624 [k642 lr573:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0a ] = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x4 {const-unsigned-char literal}
intro.c(l134:s574:k1027:d13:s0)		iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] := 0x0 {const-unsigned-char literal}
intro.c(l134:s576:k931:d14:s0)	 _forbody_9($40) :
intro.c(l135:s577:k933:d14:s0)		if iTemp624 [k642 lr573:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0a ] == 0 goto _iffalse_2($19)
intro.c(l136:s578:k940:d14:s0)		iTemp629 [k647 lr578:579 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] = iTemp627 [k645 lr572:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x08 r0x09 ] + iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ]
intro.c(l136:s579:k941:d14:s0)		iTemp630 [k648 lr579:580 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ] = @[iTemp629 [k647 lr578:579 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] + 0x0 {const-unsigned-char literal}]
intro.c(l136:s580:k942:d14:s0)		send iTemp630 [k648 lr579:580 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ]{argreg = 1}
intro.c(l136:s581:k943:d14:s0)		iTemp631 [k649 lr581:581 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l136:s582:k944:d14:s0)		 goto _forcontinue_9($41)
intro.c(l136:s583:k945:d14:s0)	 _iffalse_2($19) :
intro.c(l138:s584:k951:d14:s0)		iTemp637 [k655 lr584:585 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] = iTemp635 [k653 lr571:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] + iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ]
intro.c(l138:s585:k952:d14:s0)		iTemp638 [k656 lr585:586 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ] = @[iTemp637 [k655 lr584:585 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] + 0x0 {const-unsigned-char literal}]
intro.c(l138:s586:k953:d14:s0)		send iTemp638 [k656 lr585:586 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ]{argreg = 1}
intro.c(l138:s587:k954:d14:s0)		iTemp639 [k657 lr587:587 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l138:s588:k956:d14:s0)	 _forcontinue_9($41) :
intro.c(l134:s589:k958:d14:s0)		iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] = iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] + 0x1 {const-unsigned-char literal}
intro.c(l134:s590:k960:d14:s0)		iTemp642 [k660 lr590:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] < 0x8 {const-unsigned-char literal}
intro.c(l134:s591:k961:d14:s0)		if iTemp642 [k660 lr590:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forbody_9($40)
intro.c(l133:s592:k1049:d13:s0)		iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] = iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] + 0x8 {const-unsigned-char literal}
intro.c(l133:s593:k966:d13:s0)		iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] + 0x1 {const-unsigned-char literal}
intro.c(l133:s594:k968:d13:s0)		iTemp645 [k663 lr594:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x8 {const-unsigned-char literal}
intro.c(l133:s595:k969:d13:s0)		if iTemp645 [k663 lr594:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl7($66)
intro.c(l141:s596:k972:d1:s0)		send 0x8c {const-unsigned-char literal}{argreg = 1}
intro.c(l141:s597:k973:d1:s0)		iTemp646 [k664 lr597:597 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l142:s598:k974:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l142:s599:k975:d1:s0)		iTemp647 [k665 lr599:599 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l143:s600:k976:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l143:s601:k977:d1:s0)		iTemp648 [k666 lr601:601 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l144:s602:k978:d1:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
intro.c(l144:s603:k979:d1:s0)		iTemp649 [k667 lr603:603 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l145:s604:k980:d1:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
intro.c(l145:s605:k981:d1:s0)		iTemp650 [k668 lr605:605 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l146:s606:k982:d1:s0)		send 0xcc {const-unsigned-char literal}{argreg = 1}
intro.c(l146:s607:k983:d1:s0)		iTemp651 [k669 lr607:607 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l147:s608:k984:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l147:s609:k985:d1:s0)		iTemp652 [k670 lr609:609 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l148:s610:k986:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l148:s611:k987:d1:s0)		iTemp653 [k671 lr611:611 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l149:s612:k988:d1:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
intro.c(l149:s613:k989:d1:s0)		iTemp654 [k672 lr613:613 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l150:s614:k990:d1:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
intro.c(l150:s615:k991:d1:s0)		iTemp655 [k673 lr615:615 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l151:s616:k992:d1:s0)		iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15}[r0x00 r0x01 ] := 0x0 {unsigned-int literal}
intro.c(l153:s617:k995:d1:s0)	 _forcontinue_0($45) :
intro.c(l67:s618:k997:d1:s0)		iTemp657 [k675 lr400:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_x_1_15}[r0x02 ] = iTemp657 [k675 lr400:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_x_1_15}[r0x02 ] + 0x1 {const-unsigned-char literal}
intro.c(l67:s619:k999:d1:s0)		iTemp658 [k676 lr619:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp657 [k675 lr400:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_x_1_15}[r0x02 ] < 0x64 {const-unsigned-char literal}
intro.c(l67:s620:k1000:d1:s0)		if iTemp658 [k676 lr619:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl0($48)
intro.c(l67:s621:k1003:d0:s0)	 _return($46) :
intro.c(l67:s622:k1004:d0:s0)		eproc _intro [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( ) fixed}

----------------------------------------------------------------
Basic Block _case_0_1 : loop Depth = 1 noPath = 0 , lastinLoop = 0
depth 1st num 18 : bbnum = 17 1st iCode = 468 , last iCode = 470
visited 1 : hasFcall = 0

defines bitVector :bitvector Size = 1073 bSize = 135
Bits on { (1035) (1038) }

local defines bitVector :bitvector Size = 1073 bSize = 135
Bits on { (1035) (1038) }

pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

in pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

inDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1034) (1039) (1044) (1049) (1050) }

outDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1034) (1035) (1038) (1044) (1049) (1050) }

usesDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { }

----------------------------------------------------------------
intro.c(l93:s468:k809:d1:s0)	 _case_0_1($8) :
intro.c(l94:s469:k1035:d1:s0)		iTemp589 [k607 lr469:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] := 0x0 {const-unsigned-char literal}
intro.c(l94:s470:k1038:d1:s0)		iTemp571 [k589 lr470:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] := 0x0 {unsigned-int literal}
intro.c(l95:s472:k1008:d13:s0)	 preHeaderLbl3($57) :
intro.c(l95:s473:k829:d13:s0)		iTemp578 [k596 lr473:474 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register}[r0x06 ] = iTemp589 [k607 lr469:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] - 0x4 {const-unsigned-char literal}
intro.c(l95:s474:k830:d13:s0)		iTemp579 [k597 lr474:475 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x06 r0x07 ] = iTemp578 [k596 lr473:474 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register}[r0x06 ] * 0x8 {const-unsigned-char literal}
intro.c(l95:s475:k831:d13:s0)		iTemp580 [k598 lr475:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] = iTemp280 [k286 lr218:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp579 [k597 lr474:475 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x06 r0x07 ]
intro.c(l95:s476:k820:d13:s0)		iTemp572 [k590 lr476:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x08 r0x09 ] = iTemp192 [k197 lr152:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp571 [k589 lr470:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ]
intro.c(l95:s477:k814:d13:s0)		iTemp569 [k587 lr477:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0a ] = iTemp589 [k607 lr469:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x4 {const-unsigned-char literal}
intro.c(l95:s478:k1021:d13:s0)		iTemp586 [k604 lr478:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] := 0x0 {const-unsigned-char literal}
intro.c(l95:s480:k813:d14:s0)	 _forbody_5($32) :
intro.c(l96:s481:k815:d14:s0)		if iTemp569 [k587 lr477:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0a ] == 0 goto _iffalse_1($10)
intro.c(l97:s482:k822:d14:s0)		iTemp574 [k592 lr482:483 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] = iTemp572 [k590 lr476:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x08 r0x09 ] + iTemp586 [k604 lr478:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ]
intro.c(l97:s483:k823:d14:s0)		iTemp575 [k593 lr483:484 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ] = @[iTemp574 [k592 lr482:483 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] + 0x0 {const-unsigned-char literal}]
intro.c(l97:s484:k824:d14:s0)		send iTemp575 [k593 lr483:484 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ]{argreg = 1}
intro.c(l97:s485:k825:d14:s0)		iTemp576 [k594 lr485:485 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l97:s486:k826:d14:s0)		 goto _forcontinue_5($33)
intro.c(l97:s487:k827:d14:s0)	 _iffalse_1($10) :
intro.c(l99:s488:k833:d14:s0)		iTemp582 [k600 lr488:489 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] = iTemp580 [k598 lr475:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] + iTemp586 [k604 lr478:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ]
intro.c(l99:s489:k834:d14:s0)		iTemp583 [k601 lr489:490 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ] = @[iTemp582 [k600 lr488:489 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] + 0x0 {const-unsigned-char literal}]
intro.c(l99:s490:k835:d14:s0)		send iTemp583 [k601 lr489:490 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ]{argreg = 1}
intro.c(l99:s491:k836:d14:s0)		iTemp584 [k602 lr491:491 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l99:s492:k838:d14:s0)	 _forcontinue_5($33) :
intro.c(l95:s493:k840:d14:s0)		iTemp586 [k604 lr478:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] = iTemp586 [k604 lr478:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] + 0x1 {const-unsigned-char literal}
intro.c(l95:s494:k842:d14:s0)		iTemp587 [k605 lr494:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp586 [k604 lr478:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] < 0x8 {const-unsigned-char literal}
intro.c(l95:s495:k843:d14:s0)		if iTemp587 [k605 lr494:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forbody_5($32)
intro.c(l94:s496:k1039:d13:s0)		iTemp571 [k589 lr470:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] = iTemp571 [k589 lr470:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] + 0x8 {const-unsigned-char literal}
intro.c(l94:s497:k848:d13:s0)		iTemp589 [k607 lr469:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] = iTemp589 [k607 lr469:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] + 0x1 {const-unsigned-char literal}
intro.c(l94:s498:k850:d13:s0)		iTemp590 [k608 lr498:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp589 [k607 lr469:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x8 {const-unsigned-char literal}
intro.c(l94:s499:k851:d13:s0)		if iTemp590 [k608 lr498:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl3($57)
intro.c(l102:s500:k854:d1:s0)		send 0x84 {const-unsigned-char literal}{argreg = 1}
intro.c(l102:s501:k855:d1:s0)		iTemp591 [k609 lr501:501 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l103:s502:k856:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l103:s503:k857:d1:s0)		iTemp592 [k610 lr503:503 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l104:s504:k858:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l104:s505:k859:d1:s0)		iTemp593 [k611 lr505:505 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l105:s506:k860:d1:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
intro.c(l105:s507:k861:d1:s0)		iTemp594 [k612 lr507:507 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l106:s508:k862:d1:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
intro.c(l106:s509:k863:d1:s0)		iTemp595 [k613 lr509:509 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l107:s510:k864:d1:s0)		send 0xc4 {const-unsigned-char literal}{argreg = 1}
intro.c(l107:s511:k865:d1:s0)		iTemp596 [k614 lr511:511 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l108:s512:k866:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l108:s513:k867:d1:s0)		iTemp597 [k615 lr513:513 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l109:s514:k868:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l109:s515:k869:d1:s0)		iTemp598 [k616 lr515:515 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l110:s516:k870:d1:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
intro.c(l110:s517:k871:d1:s0)		iTemp599 [k617 lr517:517 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l111:s518:k872:d1:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
intro.c(l111:s519:k873:d1:s0)		iTemp600 [k618 lr519:519 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l112:s520:k874:d1:s0)		iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15}[r0x00 r0x01 ] := 0x2 {unsigned-int literal}
intro.c(l113:s521:k875:d1:s0)		 goto _forcontinue_0($45)
intro.c(l114:s522:k876:d1:s0)	 _case_0_2($14) :
intro.c(l115:s523:k1040:d1:s0)		iTemp612 [k630 lr523:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] := 0x0 {const-unsigned-char literal}
intro.c(l115:s524:k1043:d1:s0)		iTemp602 [k620 lr524:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] := 0x0 {unsigned-int literal}
intro.c(l116:s526:k1010:d13:s0)	 preHeaderLbl5($61) :
intro.c(l116:s527:k883:d13:s0)		iTemp603 [k621 lr527:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] = iTemp368 [k375 lr284:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp602 [k620 lr524:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ]
intro.c(l116:s528:k1024:d13:s0)		iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x08 ] := 0x0 {const-unsigned-char literal}
intro.c(l116:s530:k880:d14:s0)	 _forbody_7($36) :
intro.c(l117:s531:k885:d14:s0)		iTemp605 [k623 lr531:532 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x09 r0x0a ] = iTemp603 [k621 lr527:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] + iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x08 ]
intro.c(l117:s532:k886:d14:s0)		iTemp606 [k624 lr532:533 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x09 ] = @[iTemp605 [k623 lr531:532 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x09 r0x0a ] + 0x0 {const-unsigned-char literal}]
intro.c(l117:s533:k887:d14:s0)		send iTemp606 [k624 lr532:533 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x09 ]{argreg = 1}
intro.c(l117:s534:k888:d14:s0)		iTemp607 [k625 lr534:534 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l116:s535:k891:d14:s0)		iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x08 ] = iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x08 ] + 0x1 {const-unsigned-char literal}
intro.c(l116:s536:k893:d14:s0)		iTemp610 [k628 lr536:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x08 ] < 0x8 {const-unsigned-char literal}
intro.c(l116:s537:k894:d14:s0)		if iTemp610 [k628 lr536:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forbody_7($36)
intro.c(l115:s538:k1044:d13:s0)		iTemp602 [k620 lr524:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] = iTemp602 [k620 lr524:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] + 0x8 {const-unsigned-char literal}
intro.c(l115:s539:k899:d13:s0)		iTemp612 [k630 lr523:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] = iTemp612 [k630 lr523:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] + 0x1 {const-unsigned-char literal}
intro.c(l115:s540:k901:d13:s0)		iTemp613 [k631 lr540:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp612 [k630 lr523:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x4 {const-unsigned-char literal}
intro.c(l115:s541:k902:d13:s0)		if iTemp613 [k631 lr540:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl5($61)
intro.c(l120:s542:k905:d1:s0)		send 0x88 {const-unsigned-char literal}{argreg = 1}
intro.c(l120:s543:k906:d1:s0)		iTemp614 [k632 lr543:543 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l121:s544:k907:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l121:s545:k908:d1:s0)		iTemp615 [k633 lr545:545 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l122:s546:k909:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l122:s547:k910:d1:s0)		iTemp616 [k634 lr547:547 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l123:s548:k911:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l123:s549:k912:d1:s0)		iTemp617 [k635 lr549:549 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l124:s550:k913:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l124:s551:k914:d1:s0)		iTemp618 [k636 lr551:551 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l125:s552:k915:d1:s0)		send 0xc8 {const-unsigned-char literal}{argreg = 1}
intro.c(l125:s553:k916:d1:s0)		iTemp619 [k637 lr553:553 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l126:s554:k917:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l126:s555:k918:d1:s0)		iTemp620 [k638 lr555:555 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l127:s556:k919:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l127:s557:k920:d1:s0)		iTemp621 [k639 lr557:557 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l128:s558:k921:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l128:s559:k922:d1:s0)		iTemp622 [k640 lr559:559 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l129:s560:k923:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l129:s561:k924:d1:s0)		iTemp623 [k641 lr561:561 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l130:s562:k925:d1:s0)		iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15}[r0x00 r0x01 ] := 0x3 {unsigned-int literal}
intro.c(l131:s563:k926:d1:s0)		 goto _forcontinue_0($45)
intro.c(l132:s564:k927:d1:s0)	 _case_0_3($17) :
intro.c(l133:s565:k1045:d1:s0)		iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] := 0x0 {const-unsigned-char literal}
intro.c(l133:s566:k1048:d1:s0)		iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] := 0x0 {unsigned-int literal}
intro.c(l134:s568:k1012:d13:s0)	 preHeaderLbl7($66) :
intro.c(l134:s569:k947:d13:s0)		iTemp633 [k651 lr569:570 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register}[r0x06 ] = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] - 0x4 {const-unsigned-char literal}
intro.c(l134:s570:k948:d13:s0)		iTemp634 [k652 lr570:571 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x06 r0x07 ] = iTemp633 [k651 lr569:570 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register}[r0x06 ] * 0x8 {const-unsigned-char literal}
intro.c(l134:s571:k949:d13:s0)		iTemp635 [k653 lr571:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] = iTemp456 [k464 lr350:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp634 [k652 lr570:571 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x06 r0x07 ]
intro.c(l134:s572:k938:d13:s0)		iTemp627 [k645 lr572:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x08 r0x09 ] = iTemp368 [k375 lr284:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ]
intro.c(l134:s573:k932:d13:s0)		iTemp624 [k642 lr573:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0a ] = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x4 {const-unsigned-char literal}
intro.c(l134:s574:k1027:d13:s0)		iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] := 0x0 {const-unsigned-char literal}
intro.c(l134:s576:k931:d14:s0)	 _forbody_9($40) :
intro.c(l135:s577:k933:d14:s0)		if iTemp624 [k642 lr573:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0a ] == 0 goto _iffalse_2($19)
intro.c(l136:s578:k940:d14:s0)		iTemp629 [k647 lr578:579 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] = iTemp627 [k645 lr572:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x08 r0x09 ] + iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ]
intro.c(l136:s579:k941:d14:s0)		iTemp630 [k648 lr579:580 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ] = @[iTemp629 [k647 lr578:579 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] + 0x0 {const-unsigned-char literal}]
intro.c(l136:s580:k942:d14:s0)		send iTemp630 [k648 lr579:580 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ]{argreg = 1}
intro.c(l136:s581:k943:d14:s0)		iTemp631 [k649 lr581:581 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l136:s582:k944:d14:s0)		 goto _forcontinue_9($41)
intro.c(l136:s583:k945:d14:s0)	 _iffalse_2($19) :
intro.c(l138:s584:k951:d14:s0)		iTemp637 [k655 lr584:585 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] = iTemp635 [k653 lr571:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] + iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ]
intro.c(l138:s585:k952:d14:s0)		iTemp638 [k656 lr585:586 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ] = @[iTemp637 [k655 lr584:585 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] + 0x0 {const-unsigned-char literal}]
intro.c(l138:s586:k953:d14:s0)		send iTemp638 [k656 lr585:586 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ]{argreg = 1}
intro.c(l138:s587:k954:d14:s0)		iTemp639 [k657 lr587:587 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l138:s588:k956:d14:s0)	 _forcontinue_9($41) :
intro.c(l134:s589:k958:d14:s0)		iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] = iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] + 0x1 {const-unsigned-char literal}
intro.c(l134:s590:k960:d14:s0)		iTemp642 [k660 lr590:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] < 0x8 {const-unsigned-char literal}
intro.c(l134:s591:k961:d14:s0)		if iTemp642 [k660 lr590:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forbody_9($40)
intro.c(l133:s592:k1049:d13:s0)		iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] = iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] + 0x8 {const-unsigned-char literal}
intro.c(l133:s593:k966:d13:s0)		iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] + 0x1 {const-unsigned-char literal}
intro.c(l133:s594:k968:d13:s0)		iTemp645 [k663 lr594:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x8 {const-unsigned-char literal}
intro.c(l133:s595:k969:d13:s0)		if iTemp645 [k663 lr594:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl7($66)
intro.c(l141:s596:k972:d1:s0)		send 0x8c {const-unsigned-char literal}{argreg = 1}
intro.c(l141:s597:k973:d1:s0)		iTemp646 [k664 lr597:597 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l142:s598:k974:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l142:s599:k975:d1:s0)		iTemp647 [k665 lr599:599 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l143:s600:k976:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l143:s601:k977:d1:s0)		iTemp648 [k666 lr601:601 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l144:s602:k978:d1:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
intro.c(l144:s603:k979:d1:s0)		iTemp649 [k667 lr603:603 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l145:s604:k980:d1:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
intro.c(l145:s605:k981:d1:s0)		iTemp650 [k668 lr605:605 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l146:s606:k982:d1:s0)		send 0xcc {const-unsigned-char literal}{argreg = 1}
intro.c(l146:s607:k983:d1:s0)		iTemp651 [k669 lr607:607 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l147:s608:k984:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l147:s609:k985:d1:s0)		iTemp652 [k670 lr609:609 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l148:s610:k986:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l148:s611:k987:d1:s0)		iTemp653 [k671 lr611:611 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l149:s612:k988:d1:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
intro.c(l149:s613:k989:d1:s0)		iTemp654 [k672 lr613:613 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l150:s614:k990:d1:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
intro.c(l150:s615:k991:d1:s0)		iTemp655 [k673 lr615:615 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l151:s616:k992:d1:s0)		iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15}[r0x00 r0x01 ] := 0x0 {unsigned-int literal}
intro.c(l153:s617:k995:d1:s0)	 _forcontinue_0($45) :
intro.c(l67:s618:k997:d1:s0)		iTemp657 [k675 lr400:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_x_1_15}[r0x02 ] = iTemp657 [k675 lr400:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_x_1_15}[r0x02 ] + 0x1 {const-unsigned-char literal}
intro.c(l67:s619:k999:d1:s0)		iTemp658 [k676 lr619:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp657 [k675 lr400:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_x_1_15}[r0x02 ] < 0x64 {const-unsigned-char literal}
intro.c(l67:s620:k1000:d1:s0)		if iTemp658 [k676 lr619:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl0($48)
intro.c(l67:s621:k1003:d0:s0)	 _return($46) :
intro.c(l67:s622:k1004:d0:s0)		eproc _intro [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( ) fixed}

----------------------------------------------------------------
Basic Block preHeaderLbl34 : loop Depth = 1 noPath = 0 , lastinLoop = 0
depth 1st num 19 : bbnum = 18 1st iCode = 471 , last iCode = 471
visited 1 : hasFcall = 0

defines bitVector :bitvector Size = 1073 bSize = 135
Bits on { }

local defines bitVector :
pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

in pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

inDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1034) (1035) (1038) (1044) (1049) (1050) }

outDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1034) (1035) (1038) (1044) (1049) (1050) }

usesDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { }

----------------------------------------------------------------
intro.c(l95:s471:k1067:d1:s0)	 preHeaderLbl34($115) :
intro.c(l95:s472:k1008:d13:s0)	 preHeaderLbl3($57) :
intro.c(l95:s473:k829:d13:s0)		iTemp578 [k596 lr473:474 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register}[r0x06 ] = iTemp589 [k607 lr469:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] - 0x4 {const-unsigned-char literal}
intro.c(l95:s474:k830:d13:s0)		iTemp579 [k597 lr474:475 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x06 r0x07 ] = iTemp578 [k596 lr473:474 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register}[r0x06 ] * 0x8 {const-unsigned-char literal}
intro.c(l95:s475:k831:d13:s0)		iTemp580 [k598 lr475:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] = iTemp280 [k286 lr218:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp579 [k597 lr474:475 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x06 r0x07 ]
intro.c(l95:s476:k820:d13:s0)		iTemp572 [k590 lr476:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x08 r0x09 ] = iTemp192 [k197 lr152:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp571 [k589 lr470:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ]
intro.c(l95:s477:k814:d13:s0)		iTemp569 [k587 lr477:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0a ] = iTemp589 [k607 lr469:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x4 {const-unsigned-char literal}
intro.c(l95:s478:k1021:d13:s0)		iTemp586 [k604 lr478:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] := 0x0 {const-unsigned-char literal}
intro.c(l95:s480:k813:d14:s0)	 _forbody_5($32) :
intro.c(l96:s481:k815:d14:s0)		if iTemp569 [k587 lr477:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0a ] == 0 goto _iffalse_1($10)
intro.c(l97:s482:k822:d14:s0)		iTemp574 [k592 lr482:483 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] = iTemp572 [k590 lr476:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x08 r0x09 ] + iTemp586 [k604 lr478:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ]
intro.c(l97:s483:k823:d14:s0)		iTemp575 [k593 lr483:484 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ] = @[iTemp574 [k592 lr482:483 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] + 0x0 {const-unsigned-char literal}]
intro.c(l97:s484:k824:d14:s0)		send iTemp575 [k593 lr483:484 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ]{argreg = 1}
intro.c(l97:s485:k825:d14:s0)		iTemp576 [k594 lr485:485 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l97:s486:k826:d14:s0)		 goto _forcontinue_5($33)
intro.c(l97:s487:k827:d14:s0)	 _iffalse_1($10) :
intro.c(l99:s488:k833:d14:s0)		iTemp582 [k600 lr488:489 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] = iTemp580 [k598 lr475:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] + iTemp586 [k604 lr478:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ]
intro.c(l99:s489:k834:d14:s0)		iTemp583 [k601 lr489:490 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ] = @[iTemp582 [k600 lr488:489 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] + 0x0 {const-unsigned-char literal}]
intro.c(l99:s490:k835:d14:s0)		send iTemp583 [k601 lr489:490 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ]{argreg = 1}
intro.c(l99:s491:k836:d14:s0)		iTemp584 [k602 lr491:491 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l99:s492:k838:d14:s0)	 _forcontinue_5($33) :
intro.c(l95:s493:k840:d14:s0)		iTemp586 [k604 lr478:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] = iTemp586 [k604 lr478:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] + 0x1 {const-unsigned-char literal}
intro.c(l95:s494:k842:d14:s0)		iTemp587 [k605 lr494:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp586 [k604 lr478:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] < 0x8 {const-unsigned-char literal}
intro.c(l95:s495:k843:d14:s0)		if iTemp587 [k605 lr494:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forbody_5($32)
intro.c(l94:s496:k1039:d13:s0)		iTemp571 [k589 lr470:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] = iTemp571 [k589 lr470:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] + 0x8 {const-unsigned-char literal}
intro.c(l94:s497:k848:d13:s0)		iTemp589 [k607 lr469:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] = iTemp589 [k607 lr469:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] + 0x1 {const-unsigned-char literal}
intro.c(l94:s498:k850:d13:s0)		iTemp590 [k608 lr498:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp589 [k607 lr469:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x8 {const-unsigned-char literal}
intro.c(l94:s499:k851:d13:s0)		if iTemp590 [k608 lr498:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl3($57)
intro.c(l102:s500:k854:d1:s0)		send 0x84 {const-unsigned-char literal}{argreg = 1}
intro.c(l102:s501:k855:d1:s0)		iTemp591 [k609 lr501:501 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l103:s502:k856:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l103:s503:k857:d1:s0)		iTemp592 [k610 lr503:503 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l104:s504:k858:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l104:s505:k859:d1:s0)		iTemp593 [k611 lr505:505 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l105:s506:k860:d1:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
intro.c(l105:s507:k861:d1:s0)		iTemp594 [k612 lr507:507 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l106:s508:k862:d1:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
intro.c(l106:s509:k863:d1:s0)		iTemp595 [k613 lr509:509 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l107:s510:k864:d1:s0)		send 0xc4 {const-unsigned-char literal}{argreg = 1}
intro.c(l107:s511:k865:d1:s0)		iTemp596 [k614 lr511:511 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l108:s512:k866:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l108:s513:k867:d1:s0)		iTemp597 [k615 lr513:513 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l109:s514:k868:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l109:s515:k869:d1:s0)		iTemp598 [k616 lr515:515 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l110:s516:k870:d1:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
intro.c(l110:s517:k871:d1:s0)		iTemp599 [k617 lr517:517 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l111:s518:k872:d1:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
intro.c(l111:s519:k873:d1:s0)		iTemp600 [k618 lr519:519 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l112:s520:k874:d1:s0)		iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15}[r0x00 r0x01 ] := 0x2 {unsigned-int literal}
intro.c(l113:s521:k875:d1:s0)		 goto _forcontinue_0($45)
intro.c(l114:s522:k876:d1:s0)	 _case_0_2($14) :
intro.c(l115:s523:k1040:d1:s0)		iTemp612 [k630 lr523:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] := 0x0 {const-unsigned-char literal}
intro.c(l115:s524:k1043:d1:s0)		iTemp602 [k620 lr524:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] := 0x0 {unsigned-int literal}
intro.c(l116:s526:k1010:d13:s0)	 preHeaderLbl5($61) :
intro.c(l116:s527:k883:d13:s0)		iTemp603 [k621 lr527:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] = iTemp368 [k375 lr284:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp602 [k620 lr524:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ]
intro.c(l116:s528:k1024:d13:s0)		iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x08 ] := 0x0 {const-unsigned-char literal}
intro.c(l116:s530:k880:d14:s0)	 _forbody_7($36) :
intro.c(l117:s531:k885:d14:s0)		iTemp605 [k623 lr531:532 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x09 r0x0a ] = iTemp603 [k621 lr527:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] + iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x08 ]
intro.c(l117:s532:k886:d14:s0)		iTemp606 [k624 lr532:533 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x09 ] = @[iTemp605 [k623 lr531:532 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x09 r0x0a ] + 0x0 {const-unsigned-char literal}]
intro.c(l117:s533:k887:d14:s0)		send iTemp606 [k624 lr532:533 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x09 ]{argreg = 1}
intro.c(l117:s534:k888:d14:s0)		iTemp607 [k625 lr534:534 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l116:s535:k891:d14:s0)		iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x08 ] = iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x08 ] + 0x1 {const-unsigned-char literal}
intro.c(l116:s536:k893:d14:s0)		iTemp610 [k628 lr536:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x08 ] < 0x8 {const-unsigned-char literal}
intro.c(l116:s537:k894:d14:s0)		if iTemp610 [k628 lr536:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forbody_7($36)
intro.c(l115:s538:k1044:d13:s0)		iTemp602 [k620 lr524:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] = iTemp602 [k620 lr524:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] + 0x8 {const-unsigned-char literal}
intro.c(l115:s539:k899:d13:s0)		iTemp612 [k630 lr523:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] = iTemp612 [k630 lr523:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] + 0x1 {const-unsigned-char literal}
intro.c(l115:s540:k901:d13:s0)		iTemp613 [k631 lr540:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp612 [k630 lr523:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x4 {const-unsigned-char literal}
intro.c(l115:s541:k902:d13:s0)		if iTemp613 [k631 lr540:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl5($61)
intro.c(l120:s542:k905:d1:s0)		send 0x88 {const-unsigned-char literal}{argreg = 1}
intro.c(l120:s543:k906:d1:s0)		iTemp614 [k632 lr543:543 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l121:s544:k907:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l121:s545:k908:d1:s0)		iTemp615 [k633 lr545:545 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l122:s546:k909:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l122:s547:k910:d1:s0)		iTemp616 [k634 lr547:547 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l123:s548:k911:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l123:s549:k912:d1:s0)		iTemp617 [k635 lr549:549 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l124:s550:k913:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l124:s551:k914:d1:s0)		iTemp618 [k636 lr551:551 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l125:s552:k915:d1:s0)		send 0xc8 {const-unsigned-char literal}{argreg = 1}
intro.c(l125:s553:k916:d1:s0)		iTemp619 [k637 lr553:553 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l126:s554:k917:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l126:s555:k918:d1:s0)		iTemp620 [k638 lr555:555 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l127:s556:k919:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l127:s557:k920:d1:s0)		iTemp621 [k639 lr557:557 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l128:s558:k921:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l128:s559:k922:d1:s0)		iTemp622 [k640 lr559:559 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l129:s560:k923:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l129:s561:k924:d1:s0)		iTemp623 [k641 lr561:561 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l130:s562:k925:d1:s0)		iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15}[r0x00 r0x01 ] := 0x3 {unsigned-int literal}
intro.c(l131:s563:k926:d1:s0)		 goto _forcontinue_0($45)
intro.c(l132:s564:k927:d1:s0)	 _case_0_3($17) :
intro.c(l133:s565:k1045:d1:s0)		iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] := 0x0 {const-unsigned-char literal}
intro.c(l133:s566:k1048:d1:s0)		iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] := 0x0 {unsigned-int literal}
intro.c(l134:s568:k1012:d13:s0)	 preHeaderLbl7($66) :
intro.c(l134:s569:k947:d13:s0)		iTemp633 [k651 lr569:570 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register}[r0x06 ] = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] - 0x4 {const-unsigned-char literal}
intro.c(l134:s570:k948:d13:s0)		iTemp634 [k652 lr570:571 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x06 r0x07 ] = iTemp633 [k651 lr569:570 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register}[r0x06 ] * 0x8 {const-unsigned-char literal}
intro.c(l134:s571:k949:d13:s0)		iTemp635 [k653 lr571:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] = iTemp456 [k464 lr350:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp634 [k652 lr570:571 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x06 r0x07 ]
intro.c(l134:s572:k938:d13:s0)		iTemp627 [k645 lr572:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x08 r0x09 ] = iTemp368 [k375 lr284:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ]
intro.c(l134:s573:k932:d13:s0)		iTemp624 [k642 lr573:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0a ] = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x4 {const-unsigned-char literal}
intro.c(l134:s574:k1027:d13:s0)		iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] := 0x0 {const-unsigned-char literal}
intro.c(l134:s576:k931:d14:s0)	 _forbody_9($40) :
intro.c(l135:s577:k933:d14:s0)		if iTemp624 [k642 lr573:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0a ] == 0 goto _iffalse_2($19)
intro.c(l136:s578:k940:d14:s0)		iTemp629 [k647 lr578:579 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] = iTemp627 [k645 lr572:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x08 r0x09 ] + iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ]
intro.c(l136:s579:k941:d14:s0)		iTemp630 [k648 lr579:580 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ] = @[iTemp629 [k647 lr578:579 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] + 0x0 {const-unsigned-char literal}]
intro.c(l136:s580:k942:d14:s0)		send iTemp630 [k648 lr579:580 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ]{argreg = 1}
intro.c(l136:s581:k943:d14:s0)		iTemp631 [k649 lr581:581 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l136:s582:k944:d14:s0)		 goto _forcontinue_9($41)
intro.c(l136:s583:k945:d14:s0)	 _iffalse_2($19) :
intro.c(l138:s584:k951:d14:s0)		iTemp637 [k655 lr584:585 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] = iTemp635 [k653 lr571:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] + iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ]
intro.c(l138:s585:k952:d14:s0)		iTemp638 [k656 lr585:586 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ] = @[iTemp637 [k655 lr584:585 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] + 0x0 {const-unsigned-char literal}]
intro.c(l138:s586:k953:d14:s0)		send iTemp638 [k656 lr585:586 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ]{argreg = 1}
intro.c(l138:s587:k954:d14:s0)		iTemp639 [k657 lr587:587 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l138:s588:k956:d14:s0)	 _forcontinue_9($41) :
intro.c(l134:s589:k958:d14:s0)		iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] = iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] + 0x1 {const-unsigned-char literal}
intro.c(l134:s590:k960:d14:s0)		iTemp642 [k660 lr590:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] < 0x8 {const-unsigned-char literal}
intro.c(l134:s591:k961:d14:s0)		if iTemp642 [k660 lr590:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forbody_9($40)
intro.c(l133:s592:k1049:d13:s0)		iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] = iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] + 0x8 {const-unsigned-char literal}
intro.c(l133:s593:k966:d13:s0)		iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] + 0x1 {const-unsigned-char literal}
intro.c(l133:s594:k968:d13:s0)		iTemp645 [k663 lr594:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x8 {const-unsigned-char literal}
intro.c(l133:s595:k969:d13:s0)		if iTemp645 [k663 lr594:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl7($66)
intro.c(l141:s596:k972:d1:s0)		send 0x8c {const-unsigned-char literal}{argreg = 1}
intro.c(l141:s597:k973:d1:s0)		iTemp646 [k664 lr597:597 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l142:s598:k974:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l142:s599:k975:d1:s0)		iTemp647 [k665 lr599:599 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l143:s600:k976:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l143:s601:k977:d1:s0)		iTemp648 [k666 lr601:601 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l144:s602:k978:d1:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
intro.c(l144:s603:k979:d1:s0)		iTemp649 [k667 lr603:603 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l145:s604:k980:d1:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
intro.c(l145:s605:k981:d1:s0)		iTemp650 [k668 lr605:605 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l146:s606:k982:d1:s0)		send 0xcc {const-unsigned-char literal}{argreg = 1}
intro.c(l146:s607:k983:d1:s0)		iTemp651 [k669 lr607:607 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l147:s608:k984:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l147:s609:k985:d1:s0)		iTemp652 [k670 lr609:609 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l148:s610:k986:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l148:s611:k987:d1:s0)		iTemp653 [k671 lr611:611 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l149:s612:k988:d1:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
intro.c(l149:s613:k989:d1:s0)		iTemp654 [k672 lr613:613 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l150:s614:k990:d1:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
intro.c(l150:s615:k991:d1:s0)		iTemp655 [k673 lr615:615 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l151:s616:k992:d1:s0)		iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15}[r0x00 r0x01 ] := 0x0 {unsigned-int literal}
intro.c(l153:s617:k995:d1:s0)	 _forcontinue_0($45) :
intro.c(l67:s618:k997:d1:s0)		iTemp657 [k675 lr400:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_x_1_15}[r0x02 ] = iTemp657 [k675 lr400:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_x_1_15}[r0x02 ] + 0x1 {const-unsigned-char literal}
intro.c(l67:s619:k999:d1:s0)		iTemp658 [k676 lr619:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp657 [k675 lr400:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_x_1_15}[r0x02 ] < 0x64 {const-unsigned-char literal}
intro.c(l67:s620:k1000:d1:s0)		if iTemp658 [k676 lr619:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl0($48)
intro.c(l67:s621:k1003:d0:s0)	 _return($46) :
intro.c(l67:s622:k1004:d0:s0)		eproc _intro [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( ) fixed}

----------------------------------------------------------------
Basic Block preHeaderLbl3 : loop Depth = 13 noPath = 0 , lastinLoop = 0
depth 1st num 20 : bbnum = 19 1st iCode = 472 , last iCode = 478
visited 1 : hasFcall = 0

defines bitVector :bitvector Size = 1073 bSize = 135
Bits on { (814) (820) (829) (830) (831) (1021) }

local defines bitVector :bitvector Size = 1073 bSize = 135
Bits on { (814) (820) (829) (830) (831) (1021) }

pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

in pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

inDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1034) (1035) (1038) (1039) (1044) (1049) (1050) }

outDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1021) (1034) (1035) (1038) (1039) (1044) (1049) (1050) }

usesDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (266) (386) (829) (830) (848) (1035) (1038) (1039) }

----------------------------------------------------------------
intro.c(l95:s472:k1008:d13:s0)	 preHeaderLbl3($57) :
intro.c(l95:s473:k829:d13:s0)		iTemp578 [k596 lr473:474 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register}[r0x06 ] = iTemp589 [k607 lr469:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] - 0x4 {const-unsigned-char literal}
intro.c(l95:s474:k830:d13:s0)		iTemp579 [k597 lr474:475 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x06 r0x07 ] = iTemp578 [k596 lr473:474 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register}[r0x06 ] * 0x8 {const-unsigned-char literal}
intro.c(l95:s475:k831:d13:s0)		iTemp580 [k598 lr475:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] = iTemp280 [k286 lr218:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp579 [k597 lr474:475 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x06 r0x07 ]
intro.c(l95:s476:k820:d13:s0)		iTemp572 [k590 lr476:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x08 r0x09 ] = iTemp192 [k197 lr152:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp571 [k589 lr470:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ]
intro.c(l95:s477:k814:d13:s0)		iTemp569 [k587 lr477:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0a ] = iTemp589 [k607 lr469:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x4 {const-unsigned-char literal}
intro.c(l95:s478:k1021:d13:s0)		iTemp586 [k604 lr478:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] := 0x0 {const-unsigned-char literal}
intro.c(l95:s480:k813:d14:s0)	 _forbody_5($32) :
intro.c(l96:s481:k815:d14:s0)		if iTemp569 [k587 lr477:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0a ] == 0 goto _iffalse_1($10)
intro.c(l97:s482:k822:d14:s0)		iTemp574 [k592 lr482:483 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] = iTemp572 [k590 lr476:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x08 r0x09 ] + iTemp586 [k604 lr478:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ]
intro.c(l97:s483:k823:d14:s0)		iTemp575 [k593 lr483:484 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ] = @[iTemp574 [k592 lr482:483 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] + 0x0 {const-unsigned-char literal}]
intro.c(l97:s484:k824:d14:s0)		send iTemp575 [k593 lr483:484 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ]{argreg = 1}
intro.c(l97:s485:k825:d14:s0)		iTemp576 [k594 lr485:485 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l97:s486:k826:d14:s0)		 goto _forcontinue_5($33)
intro.c(l97:s487:k827:d14:s0)	 _iffalse_1($10) :
intro.c(l99:s488:k833:d14:s0)		iTemp582 [k600 lr488:489 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] = iTemp580 [k598 lr475:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] + iTemp586 [k604 lr478:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ]
intro.c(l99:s489:k834:d14:s0)		iTemp583 [k601 lr489:490 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ] = @[iTemp582 [k600 lr488:489 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] + 0x0 {const-unsigned-char literal}]
intro.c(l99:s490:k835:d14:s0)		send iTemp583 [k601 lr489:490 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ]{argreg = 1}
intro.c(l99:s491:k836:d14:s0)		iTemp584 [k602 lr491:491 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l99:s492:k838:d14:s0)	 _forcontinue_5($33) :
intro.c(l95:s493:k840:d14:s0)		iTemp586 [k604 lr478:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] = iTemp586 [k604 lr478:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] + 0x1 {const-unsigned-char literal}
intro.c(l95:s494:k842:d14:s0)		iTemp587 [k605 lr494:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp586 [k604 lr478:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] < 0x8 {const-unsigned-char literal}
intro.c(l95:s495:k843:d14:s0)		if iTemp587 [k605 lr494:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forbody_5($32)
intro.c(l94:s496:k1039:d13:s0)		iTemp571 [k589 lr470:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] = iTemp571 [k589 lr470:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] + 0x8 {const-unsigned-char literal}
intro.c(l94:s497:k848:d13:s0)		iTemp589 [k607 lr469:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] = iTemp589 [k607 lr469:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] + 0x1 {const-unsigned-char literal}
intro.c(l94:s498:k850:d13:s0)		iTemp590 [k608 lr498:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp589 [k607 lr469:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x8 {const-unsigned-char literal}
intro.c(l94:s499:k851:d13:s0)		if iTemp590 [k608 lr498:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl3($57)
intro.c(l102:s500:k854:d1:s0)		send 0x84 {const-unsigned-char literal}{argreg = 1}
intro.c(l102:s501:k855:d1:s0)		iTemp591 [k609 lr501:501 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l103:s502:k856:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l103:s503:k857:d1:s0)		iTemp592 [k610 lr503:503 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l104:s504:k858:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l104:s505:k859:d1:s0)		iTemp593 [k611 lr505:505 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l105:s506:k860:d1:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
intro.c(l105:s507:k861:d1:s0)		iTemp594 [k612 lr507:507 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l106:s508:k862:d1:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
intro.c(l106:s509:k863:d1:s0)		iTemp595 [k613 lr509:509 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l107:s510:k864:d1:s0)		send 0xc4 {const-unsigned-char literal}{argreg = 1}
intro.c(l107:s511:k865:d1:s0)		iTemp596 [k614 lr511:511 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l108:s512:k866:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l108:s513:k867:d1:s0)		iTemp597 [k615 lr513:513 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l109:s514:k868:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l109:s515:k869:d1:s0)		iTemp598 [k616 lr515:515 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l110:s516:k870:d1:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
intro.c(l110:s517:k871:d1:s0)		iTemp599 [k617 lr517:517 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l111:s518:k872:d1:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
intro.c(l111:s519:k873:d1:s0)		iTemp600 [k618 lr519:519 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l112:s520:k874:d1:s0)		iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15}[r0x00 r0x01 ] := 0x2 {unsigned-int literal}
intro.c(l113:s521:k875:d1:s0)		 goto _forcontinue_0($45)
intro.c(l114:s522:k876:d1:s0)	 _case_0_2($14) :
intro.c(l115:s523:k1040:d1:s0)		iTemp612 [k630 lr523:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] := 0x0 {const-unsigned-char literal}
intro.c(l115:s524:k1043:d1:s0)		iTemp602 [k620 lr524:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] := 0x0 {unsigned-int literal}
intro.c(l116:s526:k1010:d13:s0)	 preHeaderLbl5($61) :
intro.c(l116:s527:k883:d13:s0)		iTemp603 [k621 lr527:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] = iTemp368 [k375 lr284:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp602 [k620 lr524:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ]
intro.c(l116:s528:k1024:d13:s0)		iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x08 ] := 0x0 {const-unsigned-char literal}
intro.c(l116:s530:k880:d14:s0)	 _forbody_7($36) :
intro.c(l117:s531:k885:d14:s0)		iTemp605 [k623 lr531:532 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x09 r0x0a ] = iTemp603 [k621 lr527:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] + iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x08 ]
intro.c(l117:s532:k886:d14:s0)		iTemp606 [k624 lr532:533 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x09 ] = @[iTemp605 [k623 lr531:532 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x09 r0x0a ] + 0x0 {const-unsigned-char literal}]
intro.c(l117:s533:k887:d14:s0)		send iTemp606 [k624 lr532:533 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x09 ]{argreg = 1}
intro.c(l117:s534:k888:d14:s0)		iTemp607 [k625 lr534:534 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l116:s535:k891:d14:s0)		iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x08 ] = iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x08 ] + 0x1 {const-unsigned-char literal}
intro.c(l116:s536:k893:d14:s0)		iTemp610 [k628 lr536:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x08 ] < 0x8 {const-unsigned-char literal}
intro.c(l116:s537:k894:d14:s0)		if iTemp610 [k628 lr536:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forbody_7($36)
intro.c(l115:s538:k1044:d13:s0)		iTemp602 [k620 lr524:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] = iTemp602 [k620 lr524:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] + 0x8 {const-unsigned-char literal}
intro.c(l115:s539:k899:d13:s0)		iTemp612 [k630 lr523:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] = iTemp612 [k630 lr523:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] + 0x1 {const-unsigned-char literal}
intro.c(l115:s540:k901:d13:s0)		iTemp613 [k631 lr540:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp612 [k630 lr523:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x4 {const-unsigned-char literal}
intro.c(l115:s541:k902:d13:s0)		if iTemp613 [k631 lr540:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl5($61)
intro.c(l120:s542:k905:d1:s0)		send 0x88 {const-unsigned-char literal}{argreg = 1}
intro.c(l120:s543:k906:d1:s0)		iTemp614 [k632 lr543:543 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l121:s544:k907:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l121:s545:k908:d1:s0)		iTemp615 [k633 lr545:545 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l122:s546:k909:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l122:s547:k910:d1:s0)		iTemp616 [k634 lr547:547 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l123:s548:k911:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l123:s549:k912:d1:s0)		iTemp617 [k635 lr549:549 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l124:s550:k913:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l124:s551:k914:d1:s0)		iTemp618 [k636 lr551:551 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l125:s552:k915:d1:s0)		send 0xc8 {const-unsigned-char literal}{argreg = 1}
intro.c(l125:s553:k916:d1:s0)		iTemp619 [k637 lr553:553 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l126:s554:k917:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l126:s555:k918:d1:s0)		iTemp620 [k638 lr555:555 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l127:s556:k919:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l127:s557:k920:d1:s0)		iTemp621 [k639 lr557:557 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l128:s558:k921:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l128:s559:k922:d1:s0)		iTemp622 [k640 lr559:559 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l129:s560:k923:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l129:s561:k924:d1:s0)		iTemp623 [k641 lr561:561 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l130:s562:k925:d1:s0)		iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15}[r0x00 r0x01 ] := 0x3 {unsigned-int literal}
intro.c(l131:s563:k926:d1:s0)		 goto _forcontinue_0($45)
intro.c(l132:s564:k927:d1:s0)	 _case_0_3($17) :
intro.c(l133:s565:k1045:d1:s0)		iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] := 0x0 {const-unsigned-char literal}
intro.c(l133:s566:k1048:d1:s0)		iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] := 0x0 {unsigned-int literal}
intro.c(l134:s568:k1012:d13:s0)	 preHeaderLbl7($66) :
intro.c(l134:s569:k947:d13:s0)		iTemp633 [k651 lr569:570 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register}[r0x06 ] = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] - 0x4 {const-unsigned-char literal}
intro.c(l134:s570:k948:d13:s0)		iTemp634 [k652 lr570:571 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x06 r0x07 ] = iTemp633 [k651 lr569:570 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register}[r0x06 ] * 0x8 {const-unsigned-char literal}
intro.c(l134:s571:k949:d13:s0)		iTemp635 [k653 lr571:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] = iTemp456 [k464 lr350:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp634 [k652 lr570:571 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x06 r0x07 ]
intro.c(l134:s572:k938:d13:s0)		iTemp627 [k645 lr572:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x08 r0x09 ] = iTemp368 [k375 lr284:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ]
intro.c(l134:s573:k932:d13:s0)		iTemp624 [k642 lr573:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0a ] = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x4 {const-unsigned-char literal}
intro.c(l134:s574:k1027:d13:s0)		iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] := 0x0 {const-unsigned-char literal}
intro.c(l134:s576:k931:d14:s0)	 _forbody_9($40) :
intro.c(l135:s577:k933:d14:s0)		if iTemp624 [k642 lr573:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0a ] == 0 goto _iffalse_2($19)
intro.c(l136:s578:k940:d14:s0)		iTemp629 [k647 lr578:579 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] = iTemp627 [k645 lr572:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x08 r0x09 ] + iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ]
intro.c(l136:s579:k941:d14:s0)		iTemp630 [k648 lr579:580 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ] = @[iTemp629 [k647 lr578:579 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] + 0x0 {const-unsigned-char literal}]
intro.c(l136:s580:k942:d14:s0)		send iTemp630 [k648 lr579:580 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ]{argreg = 1}
intro.c(l136:s581:k943:d14:s0)		iTemp631 [k649 lr581:581 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l136:s582:k944:d14:s0)		 goto _forcontinue_9($41)
intro.c(l136:s583:k945:d14:s0)	 _iffalse_2($19) :
intro.c(l138:s584:k951:d14:s0)		iTemp637 [k655 lr584:585 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] = iTemp635 [k653 lr571:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] + iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ]
intro.c(l138:s585:k952:d14:s0)		iTemp638 [k656 lr585:586 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ] = @[iTemp637 [k655 lr584:585 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] + 0x0 {const-unsigned-char literal}]
intro.c(l138:s586:k953:d14:s0)		send iTemp638 [k656 lr585:586 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ]{argreg = 1}
intro.c(l138:s587:k954:d14:s0)		iTemp639 [k657 lr587:587 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l138:s588:k956:d14:s0)	 _forcontinue_9($41) :
intro.c(l134:s589:k958:d14:s0)		iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] = iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] + 0x1 {const-unsigned-char literal}
intro.c(l134:s590:k960:d14:s0)		iTemp642 [k660 lr590:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] < 0x8 {const-unsigned-char literal}
intro.c(l134:s591:k961:d14:s0)		if iTemp642 [k660 lr590:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forbody_9($40)
intro.c(l133:s592:k1049:d13:s0)		iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] = iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] + 0x8 {const-unsigned-char literal}
intro.c(l133:s593:k966:d13:s0)		iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] + 0x1 {const-unsigned-char literal}
intro.c(l133:s594:k968:d13:s0)		iTemp645 [k663 lr594:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x8 {const-unsigned-char literal}
intro.c(l133:s595:k969:d13:s0)		if iTemp645 [k663 lr594:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl7($66)
intro.c(l141:s596:k972:d1:s0)		send 0x8c {const-unsigned-char literal}{argreg = 1}
intro.c(l141:s597:k973:d1:s0)		iTemp646 [k664 lr597:597 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l142:s598:k974:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l142:s599:k975:d1:s0)		iTemp647 [k665 lr599:599 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l143:s600:k976:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l143:s601:k977:d1:s0)		iTemp648 [k666 lr601:601 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l144:s602:k978:d1:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
intro.c(l144:s603:k979:d1:s0)		iTemp649 [k667 lr603:603 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l145:s604:k980:d1:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
intro.c(l145:s605:k981:d1:s0)		iTemp650 [k668 lr605:605 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l146:s606:k982:d1:s0)		send 0xcc {const-unsigned-char literal}{argreg = 1}
intro.c(l146:s607:k983:d1:s0)		iTemp651 [k669 lr607:607 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l147:s608:k984:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l147:s609:k985:d1:s0)		iTemp652 [k670 lr609:609 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l148:s610:k986:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l148:s611:k987:d1:s0)		iTemp653 [k671 lr611:611 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l149:s612:k988:d1:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
intro.c(l149:s613:k989:d1:s0)		iTemp654 [k672 lr613:613 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l150:s614:k990:d1:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
intro.c(l150:s615:k991:d1:s0)		iTemp655 [k673 lr615:615 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l151:s616:k992:d1:s0)		iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15}[r0x00 r0x01 ] := 0x0 {unsigned-int literal}
intro.c(l153:s617:k995:d1:s0)	 _forcontinue_0($45) :
intro.c(l67:s618:k997:d1:s0)		iTemp657 [k675 lr400:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_x_1_15}[r0x02 ] = iTemp657 [k675 lr400:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_x_1_15}[r0x02 ] + 0x1 {const-unsigned-char literal}
intro.c(l67:s619:k999:d1:s0)		iTemp658 [k676 lr619:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp657 [k675 lr400:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_x_1_15}[r0x02 ] < 0x64 {const-unsigned-char literal}
intro.c(l67:s620:k1000:d1:s0)		if iTemp658 [k676 lr619:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl0($48)
intro.c(l67:s621:k1003:d0:s0)	 _return($46) :
intro.c(l67:s622:k1004:d0:s0)		eproc _intro [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( ) fixed}

----------------------------------------------------------------
Basic Block preHeaderLbl33 : loop Depth = 13 noPath = 0 , lastinLoop = 0
depth 1st num 21 : bbnum = 20 1st iCode = 479 , last iCode = 479
visited 1 : hasFcall = 0

defines bitVector :bitvector Size = 1073 bSize = 135
Bits on { }

local defines bitVector :
pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

in pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

inDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1021) (1034) (1035) (1038) (1039) (1044) (1049) (1050) }

outDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1021) (1034) (1035) (1038) (1039) (1044) (1049) (1050) }

usesDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { }

----------------------------------------------------------------
intro.c(l95:s479:k1066:d13:s0)	 preHeaderLbl33($113) :
intro.c(l95:s480:k813:d14:s0)	 _forbody_5($32) :
intro.c(l96:s481:k815:d14:s0)		if iTemp569 [k587 lr477:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0a ] == 0 goto _iffalse_1($10)
intro.c(l97:s482:k822:d14:s0)		iTemp574 [k592 lr482:483 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] = iTemp572 [k590 lr476:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x08 r0x09 ] + iTemp586 [k604 lr478:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ]
intro.c(l97:s483:k823:d14:s0)		iTemp575 [k593 lr483:484 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ] = @[iTemp574 [k592 lr482:483 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] + 0x0 {const-unsigned-char literal}]
intro.c(l97:s484:k824:d14:s0)		send iTemp575 [k593 lr483:484 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ]{argreg = 1}
intro.c(l97:s485:k825:d14:s0)		iTemp576 [k594 lr485:485 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l97:s486:k826:d14:s0)		 goto _forcontinue_5($33)
intro.c(l97:s487:k827:d14:s0)	 _iffalse_1($10) :
intro.c(l99:s488:k833:d14:s0)		iTemp582 [k600 lr488:489 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] = iTemp580 [k598 lr475:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] + iTemp586 [k604 lr478:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ]
intro.c(l99:s489:k834:d14:s0)		iTemp583 [k601 lr489:490 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ] = @[iTemp582 [k600 lr488:489 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] + 0x0 {const-unsigned-char literal}]
intro.c(l99:s490:k835:d14:s0)		send iTemp583 [k601 lr489:490 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ]{argreg = 1}
intro.c(l99:s491:k836:d14:s0)		iTemp584 [k602 lr491:491 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l99:s492:k838:d14:s0)	 _forcontinue_5($33) :
intro.c(l95:s493:k840:d14:s0)		iTemp586 [k604 lr478:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] = iTemp586 [k604 lr478:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] + 0x1 {const-unsigned-char literal}
intro.c(l95:s494:k842:d14:s0)		iTemp587 [k605 lr494:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp586 [k604 lr478:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] < 0x8 {const-unsigned-char literal}
intro.c(l95:s495:k843:d14:s0)		if iTemp587 [k605 lr494:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forbody_5($32)
intro.c(l94:s496:k1039:d13:s0)		iTemp571 [k589 lr470:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] = iTemp571 [k589 lr470:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] + 0x8 {const-unsigned-char literal}
intro.c(l94:s497:k848:d13:s0)		iTemp589 [k607 lr469:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] = iTemp589 [k607 lr469:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] + 0x1 {const-unsigned-char literal}
intro.c(l94:s498:k850:d13:s0)		iTemp590 [k608 lr498:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp589 [k607 lr469:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x8 {const-unsigned-char literal}
intro.c(l94:s499:k851:d13:s0)		if iTemp590 [k608 lr498:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl3($57)
intro.c(l102:s500:k854:d1:s0)		send 0x84 {const-unsigned-char literal}{argreg = 1}
intro.c(l102:s501:k855:d1:s0)		iTemp591 [k609 lr501:501 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l103:s502:k856:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l103:s503:k857:d1:s0)		iTemp592 [k610 lr503:503 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l104:s504:k858:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l104:s505:k859:d1:s0)		iTemp593 [k611 lr505:505 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l105:s506:k860:d1:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
intro.c(l105:s507:k861:d1:s0)		iTemp594 [k612 lr507:507 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l106:s508:k862:d1:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
intro.c(l106:s509:k863:d1:s0)		iTemp595 [k613 lr509:509 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l107:s510:k864:d1:s0)		send 0xc4 {const-unsigned-char literal}{argreg = 1}
intro.c(l107:s511:k865:d1:s0)		iTemp596 [k614 lr511:511 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l108:s512:k866:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l108:s513:k867:d1:s0)		iTemp597 [k615 lr513:513 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l109:s514:k868:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l109:s515:k869:d1:s0)		iTemp598 [k616 lr515:515 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l110:s516:k870:d1:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
intro.c(l110:s517:k871:d1:s0)		iTemp599 [k617 lr517:517 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l111:s518:k872:d1:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
intro.c(l111:s519:k873:d1:s0)		iTemp600 [k618 lr519:519 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l112:s520:k874:d1:s0)		iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15}[r0x00 r0x01 ] := 0x2 {unsigned-int literal}
intro.c(l113:s521:k875:d1:s0)		 goto _forcontinue_0($45)
intro.c(l114:s522:k876:d1:s0)	 _case_0_2($14) :
intro.c(l115:s523:k1040:d1:s0)		iTemp612 [k630 lr523:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] := 0x0 {const-unsigned-char literal}
intro.c(l115:s524:k1043:d1:s0)		iTemp602 [k620 lr524:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] := 0x0 {unsigned-int literal}
intro.c(l116:s526:k1010:d13:s0)	 preHeaderLbl5($61) :
intro.c(l116:s527:k883:d13:s0)		iTemp603 [k621 lr527:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] = iTemp368 [k375 lr284:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp602 [k620 lr524:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ]
intro.c(l116:s528:k1024:d13:s0)		iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x08 ] := 0x0 {const-unsigned-char literal}
intro.c(l116:s530:k880:d14:s0)	 _forbody_7($36) :
intro.c(l117:s531:k885:d14:s0)		iTemp605 [k623 lr531:532 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x09 r0x0a ] = iTemp603 [k621 lr527:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] + iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x08 ]
intro.c(l117:s532:k886:d14:s0)		iTemp606 [k624 lr532:533 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x09 ] = @[iTemp605 [k623 lr531:532 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x09 r0x0a ] + 0x0 {const-unsigned-char literal}]
intro.c(l117:s533:k887:d14:s0)		send iTemp606 [k624 lr532:533 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x09 ]{argreg = 1}
intro.c(l117:s534:k888:d14:s0)		iTemp607 [k625 lr534:534 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l116:s535:k891:d14:s0)		iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x08 ] = iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x08 ] + 0x1 {const-unsigned-char literal}
intro.c(l116:s536:k893:d14:s0)		iTemp610 [k628 lr536:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x08 ] < 0x8 {const-unsigned-char literal}
intro.c(l116:s537:k894:d14:s0)		if iTemp610 [k628 lr536:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forbody_7($36)
intro.c(l115:s538:k1044:d13:s0)		iTemp602 [k620 lr524:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] = iTemp602 [k620 lr524:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] + 0x8 {const-unsigned-char literal}
intro.c(l115:s539:k899:d13:s0)		iTemp612 [k630 lr523:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] = iTemp612 [k630 lr523:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] + 0x1 {const-unsigned-char literal}
intro.c(l115:s540:k901:d13:s0)		iTemp613 [k631 lr540:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp612 [k630 lr523:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x4 {const-unsigned-char literal}
intro.c(l115:s541:k902:d13:s0)		if iTemp613 [k631 lr540:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl5($61)
intro.c(l120:s542:k905:d1:s0)		send 0x88 {const-unsigned-char literal}{argreg = 1}
intro.c(l120:s543:k906:d1:s0)		iTemp614 [k632 lr543:543 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l121:s544:k907:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l121:s545:k908:d1:s0)		iTemp615 [k633 lr545:545 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l122:s546:k909:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l122:s547:k910:d1:s0)		iTemp616 [k634 lr547:547 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l123:s548:k911:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l123:s549:k912:d1:s0)		iTemp617 [k635 lr549:549 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l124:s550:k913:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l124:s551:k914:d1:s0)		iTemp618 [k636 lr551:551 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l125:s552:k915:d1:s0)		send 0xc8 {const-unsigned-char literal}{argreg = 1}
intro.c(l125:s553:k916:d1:s0)		iTemp619 [k637 lr553:553 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l126:s554:k917:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l126:s555:k918:d1:s0)		iTemp620 [k638 lr555:555 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l127:s556:k919:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l127:s557:k920:d1:s0)		iTemp621 [k639 lr557:557 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l128:s558:k921:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l128:s559:k922:d1:s0)		iTemp622 [k640 lr559:559 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l129:s560:k923:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l129:s561:k924:d1:s0)		iTemp623 [k641 lr561:561 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l130:s562:k925:d1:s0)		iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15}[r0x00 r0x01 ] := 0x3 {unsigned-int literal}
intro.c(l131:s563:k926:d1:s0)		 goto _forcontinue_0($45)
intro.c(l132:s564:k927:d1:s0)	 _case_0_3($17) :
intro.c(l133:s565:k1045:d1:s0)		iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] := 0x0 {const-unsigned-char literal}
intro.c(l133:s566:k1048:d1:s0)		iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] := 0x0 {unsigned-int literal}
intro.c(l134:s568:k1012:d13:s0)	 preHeaderLbl7($66) :
intro.c(l134:s569:k947:d13:s0)		iTemp633 [k651 lr569:570 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register}[r0x06 ] = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] - 0x4 {const-unsigned-char literal}
intro.c(l134:s570:k948:d13:s0)		iTemp634 [k652 lr570:571 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x06 r0x07 ] = iTemp633 [k651 lr569:570 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register}[r0x06 ] * 0x8 {const-unsigned-char literal}
intro.c(l134:s571:k949:d13:s0)		iTemp635 [k653 lr571:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] = iTemp456 [k464 lr350:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp634 [k652 lr570:571 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x06 r0x07 ]
intro.c(l134:s572:k938:d13:s0)		iTemp627 [k645 lr572:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x08 r0x09 ] = iTemp368 [k375 lr284:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ]
intro.c(l134:s573:k932:d13:s0)		iTemp624 [k642 lr573:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0a ] = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x4 {const-unsigned-char literal}
intro.c(l134:s574:k1027:d13:s0)		iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] := 0x0 {const-unsigned-char literal}
intro.c(l134:s576:k931:d14:s0)	 _forbody_9($40) :
intro.c(l135:s577:k933:d14:s0)		if iTemp624 [k642 lr573:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0a ] == 0 goto _iffalse_2($19)
intro.c(l136:s578:k940:d14:s0)		iTemp629 [k647 lr578:579 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] = iTemp627 [k645 lr572:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x08 r0x09 ] + iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ]
intro.c(l136:s579:k941:d14:s0)		iTemp630 [k648 lr579:580 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ] = @[iTemp629 [k647 lr578:579 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] + 0x0 {const-unsigned-char literal}]
intro.c(l136:s580:k942:d14:s0)		send iTemp630 [k648 lr579:580 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ]{argreg = 1}
intro.c(l136:s581:k943:d14:s0)		iTemp631 [k649 lr581:581 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l136:s582:k944:d14:s0)		 goto _forcontinue_9($41)
intro.c(l136:s583:k945:d14:s0)	 _iffalse_2($19) :
intro.c(l138:s584:k951:d14:s0)		iTemp637 [k655 lr584:585 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] = iTemp635 [k653 lr571:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] + iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ]
intro.c(l138:s585:k952:d14:s0)		iTemp638 [k656 lr585:586 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ] = @[iTemp637 [k655 lr584:585 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] + 0x0 {const-unsigned-char literal}]
intro.c(l138:s586:k953:d14:s0)		send iTemp638 [k656 lr585:586 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ]{argreg = 1}
intro.c(l138:s587:k954:d14:s0)		iTemp639 [k657 lr587:587 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l138:s588:k956:d14:s0)	 _forcontinue_9($41) :
intro.c(l134:s589:k958:d14:s0)		iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] = iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] + 0x1 {const-unsigned-char literal}
intro.c(l134:s590:k960:d14:s0)		iTemp642 [k660 lr590:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] < 0x8 {const-unsigned-char literal}
intro.c(l134:s591:k961:d14:s0)		if iTemp642 [k660 lr590:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forbody_9($40)
intro.c(l133:s592:k1049:d13:s0)		iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] = iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] + 0x8 {const-unsigned-char literal}
intro.c(l133:s593:k966:d13:s0)		iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] + 0x1 {const-unsigned-char literal}
intro.c(l133:s594:k968:d13:s0)		iTemp645 [k663 lr594:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x8 {const-unsigned-char literal}
intro.c(l133:s595:k969:d13:s0)		if iTemp645 [k663 lr594:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl7($66)
intro.c(l141:s596:k972:d1:s0)		send 0x8c {const-unsigned-char literal}{argreg = 1}
intro.c(l141:s597:k973:d1:s0)		iTemp646 [k664 lr597:597 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l142:s598:k974:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l142:s599:k975:d1:s0)		iTemp647 [k665 lr599:599 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l143:s600:k976:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l143:s601:k977:d1:s0)		iTemp648 [k666 lr601:601 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l144:s602:k978:d1:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
intro.c(l144:s603:k979:d1:s0)		iTemp649 [k667 lr603:603 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l145:s604:k980:d1:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
intro.c(l145:s605:k981:d1:s0)		iTemp650 [k668 lr605:605 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l146:s606:k982:d1:s0)		send 0xcc {const-unsigned-char literal}{argreg = 1}
intro.c(l146:s607:k983:d1:s0)		iTemp651 [k669 lr607:607 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l147:s608:k984:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l147:s609:k985:d1:s0)		iTemp652 [k670 lr609:609 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l148:s610:k986:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l148:s611:k987:d1:s0)		iTemp653 [k671 lr611:611 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l149:s612:k988:d1:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
intro.c(l149:s613:k989:d1:s0)		iTemp654 [k672 lr613:613 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l150:s614:k990:d1:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
intro.c(l150:s615:k991:d1:s0)		iTemp655 [k673 lr615:615 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l151:s616:k992:d1:s0)		iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15}[r0x00 r0x01 ] := 0x0 {unsigned-int literal}
intro.c(l153:s617:k995:d1:s0)	 _forcontinue_0($45) :
intro.c(l67:s618:k997:d1:s0)		iTemp657 [k675 lr400:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_x_1_15}[r0x02 ] = iTemp657 [k675 lr400:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_x_1_15}[r0x02 ] + 0x1 {const-unsigned-char literal}
intro.c(l67:s619:k999:d1:s0)		iTemp658 [k676 lr619:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp657 [k675 lr400:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_x_1_15}[r0x02 ] < 0x64 {const-unsigned-char literal}
intro.c(l67:s620:k1000:d1:s0)		if iTemp658 [k676 lr619:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl0($48)
intro.c(l67:s621:k1003:d0:s0)	 _return($46) :
intro.c(l67:s622:k1004:d0:s0)		eproc _intro [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( ) fixed}

----------------------------------------------------------------
Basic Block _forbody_5 : loop Depth = 14 noPath = 0 , lastinLoop = 0
depth 1st num 22 : bbnum = 21 1st iCode = 480 , last iCode = 481
visited 1 : hasFcall = 0

defines bitVector :bitvector Size = 1073 bSize = 135
Bits on { }

local defines bitVector :
pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

in pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

inDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1021) (1034) (1035) (1038) (1039) (1044) (1049) (1050) }

outDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1021) (1034) (1035) (1038) (1039) (1044) (1049) (1050) }

usesDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (814) }

----------------------------------------------------------------
intro.c(l95:s480:k813:d14:s0)	 _forbody_5($32) :
intro.c(l96:s481:k815:d14:s0)		if iTemp569 [k587 lr477:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0a ] == 0 goto _iffalse_1($10)
intro.c(l97:s482:k822:d14:s0)		iTemp574 [k592 lr482:483 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] = iTemp572 [k590 lr476:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x08 r0x09 ] + iTemp586 [k604 lr478:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ]
intro.c(l97:s483:k823:d14:s0)		iTemp575 [k593 lr483:484 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ] = @[iTemp574 [k592 lr482:483 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] + 0x0 {const-unsigned-char literal}]
intro.c(l97:s484:k824:d14:s0)		send iTemp575 [k593 lr483:484 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ]{argreg = 1}
intro.c(l97:s485:k825:d14:s0)		iTemp576 [k594 lr485:485 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l97:s486:k826:d14:s0)		 goto _forcontinue_5($33)
intro.c(l97:s487:k827:d14:s0)	 _iffalse_1($10) :
intro.c(l99:s488:k833:d14:s0)		iTemp582 [k600 lr488:489 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] = iTemp580 [k598 lr475:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] + iTemp586 [k604 lr478:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ]
intro.c(l99:s489:k834:d14:s0)		iTemp583 [k601 lr489:490 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ] = @[iTemp582 [k600 lr488:489 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] + 0x0 {const-unsigned-char literal}]
intro.c(l99:s490:k835:d14:s0)		send iTemp583 [k601 lr489:490 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ]{argreg = 1}
intro.c(l99:s491:k836:d14:s0)		iTemp584 [k602 lr491:491 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l99:s492:k838:d14:s0)	 _forcontinue_5($33) :
intro.c(l95:s493:k840:d14:s0)		iTemp586 [k604 lr478:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] = iTemp586 [k604 lr478:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] + 0x1 {const-unsigned-char literal}
intro.c(l95:s494:k842:d14:s0)		iTemp587 [k605 lr494:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp586 [k604 lr478:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] < 0x8 {const-unsigned-char literal}
intro.c(l95:s495:k843:d14:s0)		if iTemp587 [k605 lr494:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forbody_5($32)
intro.c(l94:s496:k1039:d13:s0)		iTemp571 [k589 lr470:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] = iTemp571 [k589 lr470:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] + 0x8 {const-unsigned-char literal}
intro.c(l94:s497:k848:d13:s0)		iTemp589 [k607 lr469:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] = iTemp589 [k607 lr469:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] + 0x1 {const-unsigned-char literal}
intro.c(l94:s498:k850:d13:s0)		iTemp590 [k608 lr498:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp589 [k607 lr469:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x8 {const-unsigned-char literal}
intro.c(l94:s499:k851:d13:s0)		if iTemp590 [k608 lr498:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl3($57)
intro.c(l102:s500:k854:d1:s0)		send 0x84 {const-unsigned-char literal}{argreg = 1}
intro.c(l102:s501:k855:d1:s0)		iTemp591 [k609 lr501:501 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l103:s502:k856:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l103:s503:k857:d1:s0)		iTemp592 [k610 lr503:503 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l104:s504:k858:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l104:s505:k859:d1:s0)		iTemp593 [k611 lr505:505 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l105:s506:k860:d1:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
intro.c(l105:s507:k861:d1:s0)		iTemp594 [k612 lr507:507 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l106:s508:k862:d1:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
intro.c(l106:s509:k863:d1:s0)		iTemp595 [k613 lr509:509 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l107:s510:k864:d1:s0)		send 0xc4 {const-unsigned-char literal}{argreg = 1}
intro.c(l107:s511:k865:d1:s0)		iTemp596 [k614 lr511:511 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l108:s512:k866:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l108:s513:k867:d1:s0)		iTemp597 [k615 lr513:513 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l109:s514:k868:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l109:s515:k869:d1:s0)		iTemp598 [k616 lr515:515 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l110:s516:k870:d1:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
intro.c(l110:s517:k871:d1:s0)		iTemp599 [k617 lr517:517 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l111:s518:k872:d1:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
intro.c(l111:s519:k873:d1:s0)		iTemp600 [k618 lr519:519 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l112:s520:k874:d1:s0)		iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15}[r0x00 r0x01 ] := 0x2 {unsigned-int literal}
intro.c(l113:s521:k875:d1:s0)		 goto _forcontinue_0($45)
intro.c(l114:s522:k876:d1:s0)	 _case_0_2($14) :
intro.c(l115:s523:k1040:d1:s0)		iTemp612 [k630 lr523:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] := 0x0 {const-unsigned-char literal}
intro.c(l115:s524:k1043:d1:s0)		iTemp602 [k620 lr524:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] := 0x0 {unsigned-int literal}
intro.c(l116:s526:k1010:d13:s0)	 preHeaderLbl5($61) :
intro.c(l116:s527:k883:d13:s0)		iTemp603 [k621 lr527:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] = iTemp368 [k375 lr284:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp602 [k620 lr524:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ]
intro.c(l116:s528:k1024:d13:s0)		iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x08 ] := 0x0 {const-unsigned-char literal}
intro.c(l116:s530:k880:d14:s0)	 _forbody_7($36) :
intro.c(l117:s531:k885:d14:s0)		iTemp605 [k623 lr531:532 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x09 r0x0a ] = iTemp603 [k621 lr527:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] + iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x08 ]
intro.c(l117:s532:k886:d14:s0)		iTemp606 [k624 lr532:533 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x09 ] = @[iTemp605 [k623 lr531:532 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x09 r0x0a ] + 0x0 {const-unsigned-char literal}]
intro.c(l117:s533:k887:d14:s0)		send iTemp606 [k624 lr532:533 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x09 ]{argreg = 1}
intro.c(l117:s534:k888:d14:s0)		iTemp607 [k625 lr534:534 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l116:s535:k891:d14:s0)		iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x08 ] = iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x08 ] + 0x1 {const-unsigned-char literal}
intro.c(l116:s536:k893:d14:s0)		iTemp610 [k628 lr536:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x08 ] < 0x8 {const-unsigned-char literal}
intro.c(l116:s537:k894:d14:s0)		if iTemp610 [k628 lr536:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forbody_7($36)
intro.c(l115:s538:k1044:d13:s0)		iTemp602 [k620 lr524:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] = iTemp602 [k620 lr524:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] + 0x8 {const-unsigned-char literal}
intro.c(l115:s539:k899:d13:s0)		iTemp612 [k630 lr523:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] = iTemp612 [k630 lr523:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] + 0x1 {const-unsigned-char literal}
intro.c(l115:s540:k901:d13:s0)		iTemp613 [k631 lr540:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp612 [k630 lr523:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x4 {const-unsigned-char literal}
intro.c(l115:s541:k902:d13:s0)		if iTemp613 [k631 lr540:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl5($61)
intro.c(l120:s542:k905:d1:s0)		send 0x88 {const-unsigned-char literal}{argreg = 1}
intro.c(l120:s543:k906:d1:s0)		iTemp614 [k632 lr543:543 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l121:s544:k907:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l121:s545:k908:d1:s0)		iTemp615 [k633 lr545:545 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l122:s546:k909:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l122:s547:k910:d1:s0)		iTemp616 [k634 lr547:547 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l123:s548:k911:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l123:s549:k912:d1:s0)		iTemp617 [k635 lr549:549 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l124:s550:k913:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l124:s551:k914:d1:s0)		iTemp618 [k636 lr551:551 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l125:s552:k915:d1:s0)		send 0xc8 {const-unsigned-char literal}{argreg = 1}
intro.c(l125:s553:k916:d1:s0)		iTemp619 [k637 lr553:553 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l126:s554:k917:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l126:s555:k918:d1:s0)		iTemp620 [k638 lr555:555 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l127:s556:k919:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l127:s557:k920:d1:s0)		iTemp621 [k639 lr557:557 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l128:s558:k921:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l128:s559:k922:d1:s0)		iTemp622 [k640 lr559:559 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l129:s560:k923:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l129:s561:k924:d1:s0)		iTemp623 [k641 lr561:561 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l130:s562:k925:d1:s0)		iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15}[r0x00 r0x01 ] := 0x3 {unsigned-int literal}
intro.c(l131:s563:k926:d1:s0)		 goto _forcontinue_0($45)
intro.c(l132:s564:k927:d1:s0)	 _case_0_3($17) :
intro.c(l133:s565:k1045:d1:s0)		iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] := 0x0 {const-unsigned-char literal}
intro.c(l133:s566:k1048:d1:s0)		iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] := 0x0 {unsigned-int literal}
intro.c(l134:s568:k1012:d13:s0)	 preHeaderLbl7($66) :
intro.c(l134:s569:k947:d13:s0)		iTemp633 [k651 lr569:570 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register}[r0x06 ] = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] - 0x4 {const-unsigned-char literal}
intro.c(l134:s570:k948:d13:s0)		iTemp634 [k652 lr570:571 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x06 r0x07 ] = iTemp633 [k651 lr569:570 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register}[r0x06 ] * 0x8 {const-unsigned-char literal}
intro.c(l134:s571:k949:d13:s0)		iTemp635 [k653 lr571:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] = iTemp456 [k464 lr350:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp634 [k652 lr570:571 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x06 r0x07 ]
intro.c(l134:s572:k938:d13:s0)		iTemp627 [k645 lr572:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x08 r0x09 ] = iTemp368 [k375 lr284:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ]
intro.c(l134:s573:k932:d13:s0)		iTemp624 [k642 lr573:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0a ] = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x4 {const-unsigned-char literal}
intro.c(l134:s574:k1027:d13:s0)		iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] := 0x0 {const-unsigned-char literal}
intro.c(l134:s576:k931:d14:s0)	 _forbody_9($40) :
intro.c(l135:s577:k933:d14:s0)		if iTemp624 [k642 lr573:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0a ] == 0 goto _iffalse_2($19)
intro.c(l136:s578:k940:d14:s0)		iTemp629 [k647 lr578:579 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] = iTemp627 [k645 lr572:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x08 r0x09 ] + iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ]
intro.c(l136:s579:k941:d14:s0)		iTemp630 [k648 lr579:580 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ] = @[iTemp629 [k647 lr578:579 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] + 0x0 {const-unsigned-char literal}]
intro.c(l136:s580:k942:d14:s0)		send iTemp630 [k648 lr579:580 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ]{argreg = 1}
intro.c(l136:s581:k943:d14:s0)		iTemp631 [k649 lr581:581 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l136:s582:k944:d14:s0)		 goto _forcontinue_9($41)
intro.c(l136:s583:k945:d14:s0)	 _iffalse_2($19) :
intro.c(l138:s584:k951:d14:s0)		iTemp637 [k655 lr584:585 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] = iTemp635 [k653 lr571:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] + iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ]
intro.c(l138:s585:k952:d14:s0)		iTemp638 [k656 lr585:586 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ] = @[iTemp637 [k655 lr584:585 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] + 0x0 {const-unsigned-char literal}]
intro.c(l138:s586:k953:d14:s0)		send iTemp638 [k656 lr585:586 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ]{argreg = 1}
intro.c(l138:s587:k954:d14:s0)		iTemp639 [k657 lr587:587 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l138:s588:k956:d14:s0)	 _forcontinue_9($41) :
intro.c(l134:s589:k958:d14:s0)		iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] = iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] + 0x1 {const-unsigned-char literal}
intro.c(l134:s590:k960:d14:s0)		iTemp642 [k660 lr590:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] < 0x8 {const-unsigned-char literal}
intro.c(l134:s591:k961:d14:s0)		if iTemp642 [k660 lr590:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forbody_9($40)
intro.c(l133:s592:k1049:d13:s0)		iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] = iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] + 0x8 {const-unsigned-char literal}
intro.c(l133:s593:k966:d13:s0)		iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] + 0x1 {const-unsigned-char literal}
intro.c(l133:s594:k968:d13:s0)		iTemp645 [k663 lr594:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x8 {const-unsigned-char literal}
intro.c(l133:s595:k969:d13:s0)		if iTemp645 [k663 lr594:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl7($66)
intro.c(l141:s596:k972:d1:s0)		send 0x8c {const-unsigned-char literal}{argreg = 1}
intro.c(l141:s597:k973:d1:s0)		iTemp646 [k664 lr597:597 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l142:s598:k974:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l142:s599:k975:d1:s0)		iTemp647 [k665 lr599:599 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l143:s600:k976:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l143:s601:k977:d1:s0)		iTemp648 [k666 lr601:601 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l144:s602:k978:d1:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
intro.c(l144:s603:k979:d1:s0)		iTemp649 [k667 lr603:603 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l145:s604:k980:d1:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
intro.c(l145:s605:k981:d1:s0)		iTemp650 [k668 lr605:605 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l146:s606:k982:d1:s0)		send 0xcc {const-unsigned-char literal}{argreg = 1}
intro.c(l146:s607:k983:d1:s0)		iTemp651 [k669 lr607:607 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l147:s608:k984:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l147:s609:k985:d1:s0)		iTemp652 [k670 lr609:609 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l148:s610:k986:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l148:s611:k987:d1:s0)		iTemp653 [k671 lr611:611 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l149:s612:k988:d1:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
intro.c(l149:s613:k989:d1:s0)		iTemp654 [k672 lr613:613 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l150:s614:k990:d1:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
intro.c(l150:s615:k991:d1:s0)		iTemp655 [k673 lr615:615 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l151:s616:k992:d1:s0)		iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15}[r0x00 r0x01 ] := 0x0 {unsigned-int literal}
intro.c(l153:s617:k995:d1:s0)	 _forcontinue_0($45) :
intro.c(l67:s618:k997:d1:s0)		iTemp657 [k675 lr400:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_x_1_15}[r0x02 ] = iTemp657 [k675 lr400:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_x_1_15}[r0x02 ] + 0x1 {const-unsigned-char literal}
intro.c(l67:s619:k999:d1:s0)		iTemp658 [k676 lr619:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp657 [k675 lr400:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_x_1_15}[r0x02 ] < 0x64 {const-unsigned-char literal}
intro.c(l67:s620:k1000:d1:s0)		if iTemp658 [k676 lr619:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl0($48)
intro.c(l67:s621:k1003:d0:s0)	 _return($46) :
intro.c(l67:s622:k1004:d0:s0)		eproc _intro [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( ) fixed}

----------------------------------------------------------------
Basic Block _eBBlock31 : loop Depth = 14 noPath = 0 , lastinLoop = 0
depth 1st num 23 : bbnum = 22 1st iCode = 482 , last iCode = 486
visited 1 : hasFcall = 1

defines bitVector :bitvector Size = 1073 bSize = 135
Bits on { (822) (823) }

local defines bitVector :bitvector Size = 1073 bSize = 135
Bits on { (822) (823) (825) }

pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

in pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

inDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1021) (1034) (1035) (1038) (1039) (1044) (1049) (1050) }

outDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1021) (1034) (1035) (1038) (1039) (1044) (1049) (1050) }

usesDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (820) (822) (823) (825) (840) (1021) }

----------------------------------------------------------------
intro.c(l97:s482:k822:d14:s0)		iTemp574 [k592 lr482:483 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] = iTemp572 [k590 lr476:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x08 r0x09 ] + iTemp586 [k604 lr478:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ]
intro.c(l97:s483:k823:d14:s0)		iTemp575 [k593 lr483:484 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ] = @[iTemp574 [k592 lr482:483 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] + 0x0 {const-unsigned-char literal}]
intro.c(l97:s484:k824:d14:s0)		send iTemp575 [k593 lr483:484 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ]{argreg = 1}
intro.c(l97:s485:k825:d14:s0)		iTemp576 [k594 lr485:485 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l97:s486:k826:d14:s0)		 goto _forcontinue_5($33)
intro.c(l97:s487:k827:d14:s0)	 _iffalse_1($10) :
intro.c(l99:s488:k833:d14:s0)		iTemp582 [k600 lr488:489 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] = iTemp580 [k598 lr475:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] + iTemp586 [k604 lr478:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ]
intro.c(l99:s489:k834:d14:s0)		iTemp583 [k601 lr489:490 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ] = @[iTemp582 [k600 lr488:489 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] + 0x0 {const-unsigned-char literal}]
intro.c(l99:s490:k835:d14:s0)		send iTemp583 [k601 lr489:490 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ]{argreg = 1}
intro.c(l99:s491:k836:d14:s0)		iTemp584 [k602 lr491:491 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l99:s492:k838:d14:s0)	 _forcontinue_5($33) :
intro.c(l95:s493:k840:d14:s0)		iTemp586 [k604 lr478:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] = iTemp586 [k604 lr478:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] + 0x1 {const-unsigned-char literal}
intro.c(l95:s494:k842:d14:s0)		iTemp587 [k605 lr494:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp586 [k604 lr478:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] < 0x8 {const-unsigned-char literal}
intro.c(l95:s495:k843:d14:s0)		if iTemp587 [k605 lr494:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forbody_5($32)
intro.c(l94:s496:k1039:d13:s0)		iTemp571 [k589 lr470:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] = iTemp571 [k589 lr470:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] + 0x8 {const-unsigned-char literal}
intro.c(l94:s497:k848:d13:s0)		iTemp589 [k607 lr469:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] = iTemp589 [k607 lr469:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] + 0x1 {const-unsigned-char literal}
intro.c(l94:s498:k850:d13:s0)		iTemp590 [k608 lr498:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp589 [k607 lr469:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x8 {const-unsigned-char literal}
intro.c(l94:s499:k851:d13:s0)		if iTemp590 [k608 lr498:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl3($57)
intro.c(l102:s500:k854:d1:s0)		send 0x84 {const-unsigned-char literal}{argreg = 1}
intro.c(l102:s501:k855:d1:s0)		iTemp591 [k609 lr501:501 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l103:s502:k856:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l103:s503:k857:d1:s0)		iTemp592 [k610 lr503:503 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l104:s504:k858:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l104:s505:k859:d1:s0)		iTemp593 [k611 lr505:505 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l105:s506:k860:d1:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
intro.c(l105:s507:k861:d1:s0)		iTemp594 [k612 lr507:507 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l106:s508:k862:d1:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
intro.c(l106:s509:k863:d1:s0)		iTemp595 [k613 lr509:509 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l107:s510:k864:d1:s0)		send 0xc4 {const-unsigned-char literal}{argreg = 1}
intro.c(l107:s511:k865:d1:s0)		iTemp596 [k614 lr511:511 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l108:s512:k866:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l108:s513:k867:d1:s0)		iTemp597 [k615 lr513:513 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l109:s514:k868:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l109:s515:k869:d1:s0)		iTemp598 [k616 lr515:515 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l110:s516:k870:d1:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
intro.c(l110:s517:k871:d1:s0)		iTemp599 [k617 lr517:517 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l111:s518:k872:d1:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
intro.c(l111:s519:k873:d1:s0)		iTemp600 [k618 lr519:519 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l112:s520:k874:d1:s0)		iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15}[r0x00 r0x01 ] := 0x2 {unsigned-int literal}
intro.c(l113:s521:k875:d1:s0)		 goto _forcontinue_0($45)
intro.c(l114:s522:k876:d1:s0)	 _case_0_2($14) :
intro.c(l115:s523:k1040:d1:s0)		iTemp612 [k630 lr523:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] := 0x0 {const-unsigned-char literal}
intro.c(l115:s524:k1043:d1:s0)		iTemp602 [k620 lr524:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] := 0x0 {unsigned-int literal}
intro.c(l116:s526:k1010:d13:s0)	 preHeaderLbl5($61) :
intro.c(l116:s527:k883:d13:s0)		iTemp603 [k621 lr527:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] = iTemp368 [k375 lr284:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp602 [k620 lr524:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ]
intro.c(l116:s528:k1024:d13:s0)		iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x08 ] := 0x0 {const-unsigned-char literal}
intro.c(l116:s530:k880:d14:s0)	 _forbody_7($36) :
intro.c(l117:s531:k885:d14:s0)		iTemp605 [k623 lr531:532 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x09 r0x0a ] = iTemp603 [k621 lr527:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] + iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x08 ]
intro.c(l117:s532:k886:d14:s0)		iTemp606 [k624 lr532:533 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x09 ] = @[iTemp605 [k623 lr531:532 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x09 r0x0a ] + 0x0 {const-unsigned-char literal}]
intro.c(l117:s533:k887:d14:s0)		send iTemp606 [k624 lr532:533 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x09 ]{argreg = 1}
intro.c(l117:s534:k888:d14:s0)		iTemp607 [k625 lr534:534 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l116:s535:k891:d14:s0)		iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x08 ] = iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x08 ] + 0x1 {const-unsigned-char literal}
intro.c(l116:s536:k893:d14:s0)		iTemp610 [k628 lr536:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x08 ] < 0x8 {const-unsigned-char literal}
intro.c(l116:s537:k894:d14:s0)		if iTemp610 [k628 lr536:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forbody_7($36)
intro.c(l115:s538:k1044:d13:s0)		iTemp602 [k620 lr524:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] = iTemp602 [k620 lr524:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] + 0x8 {const-unsigned-char literal}
intro.c(l115:s539:k899:d13:s0)		iTemp612 [k630 lr523:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] = iTemp612 [k630 lr523:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] + 0x1 {const-unsigned-char literal}
intro.c(l115:s540:k901:d13:s0)		iTemp613 [k631 lr540:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp612 [k630 lr523:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x4 {const-unsigned-char literal}
intro.c(l115:s541:k902:d13:s0)		if iTemp613 [k631 lr540:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl5($61)
intro.c(l120:s542:k905:d1:s0)		send 0x88 {const-unsigned-char literal}{argreg = 1}
intro.c(l120:s543:k906:d1:s0)		iTemp614 [k632 lr543:543 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l121:s544:k907:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l121:s545:k908:d1:s0)		iTemp615 [k633 lr545:545 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l122:s546:k909:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l122:s547:k910:d1:s0)		iTemp616 [k634 lr547:547 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l123:s548:k911:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l123:s549:k912:d1:s0)		iTemp617 [k635 lr549:549 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l124:s550:k913:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l124:s551:k914:d1:s0)		iTemp618 [k636 lr551:551 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l125:s552:k915:d1:s0)		send 0xc8 {const-unsigned-char literal}{argreg = 1}
intro.c(l125:s553:k916:d1:s0)		iTemp619 [k637 lr553:553 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l126:s554:k917:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l126:s555:k918:d1:s0)		iTemp620 [k638 lr555:555 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l127:s556:k919:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l127:s557:k920:d1:s0)		iTemp621 [k639 lr557:557 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l128:s558:k921:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l128:s559:k922:d1:s0)		iTemp622 [k640 lr559:559 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l129:s560:k923:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l129:s561:k924:d1:s0)		iTemp623 [k641 lr561:561 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l130:s562:k925:d1:s0)		iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15}[r0x00 r0x01 ] := 0x3 {unsigned-int literal}
intro.c(l131:s563:k926:d1:s0)		 goto _forcontinue_0($45)
intro.c(l132:s564:k927:d1:s0)	 _case_0_3($17) :
intro.c(l133:s565:k1045:d1:s0)		iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] := 0x0 {const-unsigned-char literal}
intro.c(l133:s566:k1048:d1:s0)		iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] := 0x0 {unsigned-int literal}
intro.c(l134:s568:k1012:d13:s0)	 preHeaderLbl7($66) :
intro.c(l134:s569:k947:d13:s0)		iTemp633 [k651 lr569:570 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register}[r0x06 ] = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] - 0x4 {const-unsigned-char literal}
intro.c(l134:s570:k948:d13:s0)		iTemp634 [k652 lr570:571 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x06 r0x07 ] = iTemp633 [k651 lr569:570 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register}[r0x06 ] * 0x8 {const-unsigned-char literal}
intro.c(l134:s571:k949:d13:s0)		iTemp635 [k653 lr571:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] = iTemp456 [k464 lr350:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp634 [k652 lr570:571 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x06 r0x07 ]
intro.c(l134:s572:k938:d13:s0)		iTemp627 [k645 lr572:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x08 r0x09 ] = iTemp368 [k375 lr284:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ]
intro.c(l134:s573:k932:d13:s0)		iTemp624 [k642 lr573:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0a ] = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x4 {const-unsigned-char literal}
intro.c(l134:s574:k1027:d13:s0)		iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] := 0x0 {const-unsigned-char literal}
intro.c(l134:s576:k931:d14:s0)	 _forbody_9($40) :
intro.c(l135:s577:k933:d14:s0)		if iTemp624 [k642 lr573:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0a ] == 0 goto _iffalse_2($19)
intro.c(l136:s578:k940:d14:s0)		iTemp629 [k647 lr578:579 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] = iTemp627 [k645 lr572:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x08 r0x09 ] + iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ]
intro.c(l136:s579:k941:d14:s0)		iTemp630 [k648 lr579:580 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ] = @[iTemp629 [k647 lr578:579 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] + 0x0 {const-unsigned-char literal}]
intro.c(l136:s580:k942:d14:s0)		send iTemp630 [k648 lr579:580 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ]{argreg = 1}
intro.c(l136:s581:k943:d14:s0)		iTemp631 [k649 lr581:581 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l136:s582:k944:d14:s0)		 goto _forcontinue_9($41)
intro.c(l136:s583:k945:d14:s0)	 _iffalse_2($19) :
intro.c(l138:s584:k951:d14:s0)		iTemp637 [k655 lr584:585 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] = iTemp635 [k653 lr571:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] + iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ]
intro.c(l138:s585:k952:d14:s0)		iTemp638 [k656 lr585:586 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ] = @[iTemp637 [k655 lr584:585 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] + 0x0 {const-unsigned-char literal}]
intro.c(l138:s586:k953:d14:s0)		send iTemp638 [k656 lr585:586 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ]{argreg = 1}
intro.c(l138:s587:k954:d14:s0)		iTemp639 [k657 lr587:587 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l138:s588:k956:d14:s0)	 _forcontinue_9($41) :
intro.c(l134:s589:k958:d14:s0)		iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] = iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] + 0x1 {const-unsigned-char literal}
intro.c(l134:s590:k960:d14:s0)		iTemp642 [k660 lr590:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] < 0x8 {const-unsigned-char literal}
intro.c(l134:s591:k961:d14:s0)		if iTemp642 [k660 lr590:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forbody_9($40)
intro.c(l133:s592:k1049:d13:s0)		iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] = iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] + 0x8 {const-unsigned-char literal}
intro.c(l133:s593:k966:d13:s0)		iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] + 0x1 {const-unsigned-char literal}
intro.c(l133:s594:k968:d13:s0)		iTemp645 [k663 lr594:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x8 {const-unsigned-char literal}
intro.c(l133:s595:k969:d13:s0)		if iTemp645 [k663 lr594:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl7($66)
intro.c(l141:s596:k972:d1:s0)		send 0x8c {const-unsigned-char literal}{argreg = 1}
intro.c(l141:s597:k973:d1:s0)		iTemp646 [k664 lr597:597 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l142:s598:k974:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l142:s599:k975:d1:s0)		iTemp647 [k665 lr599:599 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l143:s600:k976:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l143:s601:k977:d1:s0)		iTemp648 [k666 lr601:601 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l144:s602:k978:d1:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
intro.c(l144:s603:k979:d1:s0)		iTemp649 [k667 lr603:603 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l145:s604:k980:d1:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
intro.c(l145:s605:k981:d1:s0)		iTemp650 [k668 lr605:605 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l146:s606:k982:d1:s0)		send 0xcc {const-unsigned-char literal}{argreg = 1}
intro.c(l146:s607:k983:d1:s0)		iTemp651 [k669 lr607:607 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l147:s608:k984:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l147:s609:k985:d1:s0)		iTemp652 [k670 lr609:609 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l148:s610:k986:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l148:s611:k987:d1:s0)		iTemp653 [k671 lr611:611 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l149:s612:k988:d1:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
intro.c(l149:s613:k989:d1:s0)		iTemp654 [k672 lr613:613 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l150:s614:k990:d1:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
intro.c(l150:s615:k991:d1:s0)		iTemp655 [k673 lr615:615 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l151:s616:k992:d1:s0)		iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15}[r0x00 r0x01 ] := 0x0 {unsigned-int literal}
intro.c(l153:s617:k995:d1:s0)	 _forcontinue_0($45) :
intro.c(l67:s618:k997:d1:s0)		iTemp657 [k675 lr400:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_x_1_15}[r0x02 ] = iTemp657 [k675 lr400:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_x_1_15}[r0x02 ] + 0x1 {const-unsigned-char literal}
intro.c(l67:s619:k999:d1:s0)		iTemp658 [k676 lr619:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp657 [k675 lr400:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_x_1_15}[r0x02 ] < 0x64 {const-unsigned-char literal}
intro.c(l67:s620:k1000:d1:s0)		if iTemp658 [k676 lr619:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl0($48)
intro.c(l67:s621:k1003:d0:s0)	 _return($46) :
intro.c(l67:s622:k1004:d0:s0)		eproc _intro [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( ) fixed}

----------------------------------------------------------------
Basic Block _iffalse_1 : loop Depth = 14 noPath = 0 , lastinLoop = 0
depth 1st num 24 : bbnum = 23 1st iCode = 487 , last iCode = 491
visited 1 : hasFcall = 1

defines bitVector :bitvector Size = 1073 bSize = 135
Bits on { (833) (834) }

local defines bitVector :bitvector Size = 1073 bSize = 135
Bits on { (833) (834) (836) }

pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

in pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

inDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1021) (1034) (1035) (1038) (1039) (1044) (1049) (1050) }

outDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1021) (1034) (1035) (1038) (1039) (1044) (1049) (1050) }

usesDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (831) (833) (834) (836) (840) (1021) }

----------------------------------------------------------------
intro.c(l97:s487:k827:d14:s0)	 _iffalse_1($10) :
intro.c(l99:s488:k833:d14:s0)		iTemp582 [k600 lr488:489 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] = iTemp580 [k598 lr475:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] + iTemp586 [k604 lr478:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ]
intro.c(l99:s489:k834:d14:s0)		iTemp583 [k601 lr489:490 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ] = @[iTemp582 [k600 lr488:489 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] + 0x0 {const-unsigned-char literal}]
intro.c(l99:s490:k835:d14:s0)		send iTemp583 [k601 lr489:490 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ]{argreg = 1}
intro.c(l99:s491:k836:d14:s0)		iTemp584 [k602 lr491:491 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l99:s492:k838:d14:s0)	 _forcontinue_5($33) :
intro.c(l95:s493:k840:d14:s0)		iTemp586 [k604 lr478:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] = iTemp586 [k604 lr478:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] + 0x1 {const-unsigned-char literal}
intro.c(l95:s494:k842:d14:s0)		iTemp587 [k605 lr494:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp586 [k604 lr478:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] < 0x8 {const-unsigned-char literal}
intro.c(l95:s495:k843:d14:s0)		if iTemp587 [k605 lr494:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forbody_5($32)
intro.c(l94:s496:k1039:d13:s0)		iTemp571 [k589 lr470:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] = iTemp571 [k589 lr470:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] + 0x8 {const-unsigned-char literal}
intro.c(l94:s497:k848:d13:s0)		iTemp589 [k607 lr469:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] = iTemp589 [k607 lr469:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] + 0x1 {const-unsigned-char literal}
intro.c(l94:s498:k850:d13:s0)		iTemp590 [k608 lr498:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp589 [k607 lr469:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x8 {const-unsigned-char literal}
intro.c(l94:s499:k851:d13:s0)		if iTemp590 [k608 lr498:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl3($57)
intro.c(l102:s500:k854:d1:s0)		send 0x84 {const-unsigned-char literal}{argreg = 1}
intro.c(l102:s501:k855:d1:s0)		iTemp591 [k609 lr501:501 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l103:s502:k856:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l103:s503:k857:d1:s0)		iTemp592 [k610 lr503:503 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l104:s504:k858:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l104:s505:k859:d1:s0)		iTemp593 [k611 lr505:505 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l105:s506:k860:d1:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
intro.c(l105:s507:k861:d1:s0)		iTemp594 [k612 lr507:507 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l106:s508:k862:d1:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
intro.c(l106:s509:k863:d1:s0)		iTemp595 [k613 lr509:509 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l107:s510:k864:d1:s0)		send 0xc4 {const-unsigned-char literal}{argreg = 1}
intro.c(l107:s511:k865:d1:s0)		iTemp596 [k614 lr511:511 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l108:s512:k866:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l108:s513:k867:d1:s0)		iTemp597 [k615 lr513:513 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l109:s514:k868:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l109:s515:k869:d1:s0)		iTemp598 [k616 lr515:515 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l110:s516:k870:d1:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
intro.c(l110:s517:k871:d1:s0)		iTemp599 [k617 lr517:517 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l111:s518:k872:d1:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
intro.c(l111:s519:k873:d1:s0)		iTemp600 [k618 lr519:519 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l112:s520:k874:d1:s0)		iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15}[r0x00 r0x01 ] := 0x2 {unsigned-int literal}
intro.c(l113:s521:k875:d1:s0)		 goto _forcontinue_0($45)
intro.c(l114:s522:k876:d1:s0)	 _case_0_2($14) :
intro.c(l115:s523:k1040:d1:s0)		iTemp612 [k630 lr523:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] := 0x0 {const-unsigned-char literal}
intro.c(l115:s524:k1043:d1:s0)		iTemp602 [k620 lr524:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] := 0x0 {unsigned-int literal}
intro.c(l116:s526:k1010:d13:s0)	 preHeaderLbl5($61) :
intro.c(l116:s527:k883:d13:s0)		iTemp603 [k621 lr527:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] = iTemp368 [k375 lr284:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp602 [k620 lr524:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ]
intro.c(l116:s528:k1024:d13:s0)		iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x08 ] := 0x0 {const-unsigned-char literal}
intro.c(l116:s530:k880:d14:s0)	 _forbody_7($36) :
intro.c(l117:s531:k885:d14:s0)		iTemp605 [k623 lr531:532 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x09 r0x0a ] = iTemp603 [k621 lr527:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] + iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x08 ]
intro.c(l117:s532:k886:d14:s0)		iTemp606 [k624 lr532:533 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x09 ] = @[iTemp605 [k623 lr531:532 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x09 r0x0a ] + 0x0 {const-unsigned-char literal}]
intro.c(l117:s533:k887:d14:s0)		send iTemp606 [k624 lr532:533 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x09 ]{argreg = 1}
intro.c(l117:s534:k888:d14:s0)		iTemp607 [k625 lr534:534 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l116:s535:k891:d14:s0)		iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x08 ] = iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x08 ] + 0x1 {const-unsigned-char literal}
intro.c(l116:s536:k893:d14:s0)		iTemp610 [k628 lr536:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x08 ] < 0x8 {const-unsigned-char literal}
intro.c(l116:s537:k894:d14:s0)		if iTemp610 [k628 lr536:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forbody_7($36)
intro.c(l115:s538:k1044:d13:s0)		iTemp602 [k620 lr524:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] = iTemp602 [k620 lr524:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] + 0x8 {const-unsigned-char literal}
intro.c(l115:s539:k899:d13:s0)		iTemp612 [k630 lr523:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] = iTemp612 [k630 lr523:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] + 0x1 {const-unsigned-char literal}
intro.c(l115:s540:k901:d13:s0)		iTemp613 [k631 lr540:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp612 [k630 lr523:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x4 {const-unsigned-char literal}
intro.c(l115:s541:k902:d13:s0)		if iTemp613 [k631 lr540:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl5($61)
intro.c(l120:s542:k905:d1:s0)		send 0x88 {const-unsigned-char literal}{argreg = 1}
intro.c(l120:s543:k906:d1:s0)		iTemp614 [k632 lr543:543 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l121:s544:k907:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l121:s545:k908:d1:s0)		iTemp615 [k633 lr545:545 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l122:s546:k909:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l122:s547:k910:d1:s0)		iTemp616 [k634 lr547:547 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l123:s548:k911:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l123:s549:k912:d1:s0)		iTemp617 [k635 lr549:549 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l124:s550:k913:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l124:s551:k914:d1:s0)		iTemp618 [k636 lr551:551 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l125:s552:k915:d1:s0)		send 0xc8 {const-unsigned-char literal}{argreg = 1}
intro.c(l125:s553:k916:d1:s0)		iTemp619 [k637 lr553:553 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l126:s554:k917:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l126:s555:k918:d1:s0)		iTemp620 [k638 lr555:555 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l127:s556:k919:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l127:s557:k920:d1:s0)		iTemp621 [k639 lr557:557 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l128:s558:k921:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l128:s559:k922:d1:s0)		iTemp622 [k640 lr559:559 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l129:s560:k923:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l129:s561:k924:d1:s0)		iTemp623 [k641 lr561:561 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l130:s562:k925:d1:s0)		iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15}[r0x00 r0x01 ] := 0x3 {unsigned-int literal}
intro.c(l131:s563:k926:d1:s0)		 goto _forcontinue_0($45)
intro.c(l132:s564:k927:d1:s0)	 _case_0_3($17) :
intro.c(l133:s565:k1045:d1:s0)		iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] := 0x0 {const-unsigned-char literal}
intro.c(l133:s566:k1048:d1:s0)		iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] := 0x0 {unsigned-int literal}
intro.c(l134:s568:k1012:d13:s0)	 preHeaderLbl7($66) :
intro.c(l134:s569:k947:d13:s0)		iTemp633 [k651 lr569:570 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register}[r0x06 ] = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] - 0x4 {const-unsigned-char literal}
intro.c(l134:s570:k948:d13:s0)		iTemp634 [k652 lr570:571 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x06 r0x07 ] = iTemp633 [k651 lr569:570 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register}[r0x06 ] * 0x8 {const-unsigned-char literal}
intro.c(l134:s571:k949:d13:s0)		iTemp635 [k653 lr571:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] = iTemp456 [k464 lr350:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp634 [k652 lr570:571 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x06 r0x07 ]
intro.c(l134:s572:k938:d13:s0)		iTemp627 [k645 lr572:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x08 r0x09 ] = iTemp368 [k375 lr284:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ]
intro.c(l134:s573:k932:d13:s0)		iTemp624 [k642 lr573:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0a ] = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x4 {const-unsigned-char literal}
intro.c(l134:s574:k1027:d13:s0)		iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] := 0x0 {const-unsigned-char literal}
intro.c(l134:s576:k931:d14:s0)	 _forbody_9($40) :
intro.c(l135:s577:k933:d14:s0)		if iTemp624 [k642 lr573:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0a ] == 0 goto _iffalse_2($19)
intro.c(l136:s578:k940:d14:s0)		iTemp629 [k647 lr578:579 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] = iTemp627 [k645 lr572:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x08 r0x09 ] + iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ]
intro.c(l136:s579:k941:d14:s0)		iTemp630 [k648 lr579:580 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ] = @[iTemp629 [k647 lr578:579 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] + 0x0 {const-unsigned-char literal}]
intro.c(l136:s580:k942:d14:s0)		send iTemp630 [k648 lr579:580 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ]{argreg = 1}
intro.c(l136:s581:k943:d14:s0)		iTemp631 [k649 lr581:581 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l136:s582:k944:d14:s0)		 goto _forcontinue_9($41)
intro.c(l136:s583:k945:d14:s0)	 _iffalse_2($19) :
intro.c(l138:s584:k951:d14:s0)		iTemp637 [k655 lr584:585 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] = iTemp635 [k653 lr571:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] + iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ]
intro.c(l138:s585:k952:d14:s0)		iTemp638 [k656 lr585:586 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ] = @[iTemp637 [k655 lr584:585 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] + 0x0 {const-unsigned-char literal}]
intro.c(l138:s586:k953:d14:s0)		send iTemp638 [k656 lr585:586 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ]{argreg = 1}
intro.c(l138:s587:k954:d14:s0)		iTemp639 [k657 lr587:587 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l138:s588:k956:d14:s0)	 _forcontinue_9($41) :
intro.c(l134:s589:k958:d14:s0)		iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] = iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] + 0x1 {const-unsigned-char literal}
intro.c(l134:s590:k960:d14:s0)		iTemp642 [k660 lr590:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] < 0x8 {const-unsigned-char literal}
intro.c(l134:s591:k961:d14:s0)		if iTemp642 [k660 lr590:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forbody_9($40)
intro.c(l133:s592:k1049:d13:s0)		iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] = iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] + 0x8 {const-unsigned-char literal}
intro.c(l133:s593:k966:d13:s0)		iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] + 0x1 {const-unsigned-char literal}
intro.c(l133:s594:k968:d13:s0)		iTemp645 [k663 lr594:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x8 {const-unsigned-char literal}
intro.c(l133:s595:k969:d13:s0)		if iTemp645 [k663 lr594:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl7($66)
intro.c(l141:s596:k972:d1:s0)		send 0x8c {const-unsigned-char literal}{argreg = 1}
intro.c(l141:s597:k973:d1:s0)		iTemp646 [k664 lr597:597 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l142:s598:k974:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l142:s599:k975:d1:s0)		iTemp647 [k665 lr599:599 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l143:s600:k976:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l143:s601:k977:d1:s0)		iTemp648 [k666 lr601:601 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l144:s602:k978:d1:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
intro.c(l144:s603:k979:d1:s0)		iTemp649 [k667 lr603:603 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l145:s604:k980:d1:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
intro.c(l145:s605:k981:d1:s0)		iTemp650 [k668 lr605:605 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l146:s606:k982:d1:s0)		send 0xcc {const-unsigned-char literal}{argreg = 1}
intro.c(l146:s607:k983:d1:s0)		iTemp651 [k669 lr607:607 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l147:s608:k984:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l147:s609:k985:d1:s0)		iTemp652 [k670 lr609:609 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l148:s610:k986:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l148:s611:k987:d1:s0)		iTemp653 [k671 lr611:611 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l149:s612:k988:d1:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
intro.c(l149:s613:k989:d1:s0)		iTemp654 [k672 lr613:613 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l150:s614:k990:d1:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
intro.c(l150:s615:k991:d1:s0)		iTemp655 [k673 lr615:615 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l151:s616:k992:d1:s0)		iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15}[r0x00 r0x01 ] := 0x0 {unsigned-int literal}
intro.c(l153:s617:k995:d1:s0)	 _forcontinue_0($45) :
intro.c(l67:s618:k997:d1:s0)		iTemp657 [k675 lr400:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_x_1_15}[r0x02 ] = iTemp657 [k675 lr400:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_x_1_15}[r0x02 ] + 0x1 {const-unsigned-char literal}
intro.c(l67:s619:k999:d1:s0)		iTemp658 [k676 lr619:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp657 [k675 lr400:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_x_1_15}[r0x02 ] < 0x64 {const-unsigned-char literal}
intro.c(l67:s620:k1000:d1:s0)		if iTemp658 [k676 lr619:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl0($48)
intro.c(l67:s621:k1003:d0:s0)	 _return($46) :
intro.c(l67:s622:k1004:d0:s0)		eproc _intro [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( ) fixed}

----------------------------------------------------------------
Basic Block _forcontinue_5 : loop Depth = 14 noPath = 0 , lastinLoop = 0
depth 1st num 25 : bbnum = 24 1st iCode = 492 , last iCode = 495
visited 1 : hasFcall = 0

defines bitVector :bitvector Size = 1073 bSize = 135
Bits on { (840) (842) }

local defines bitVector :bitvector Size = 1073 bSize = 135
Bits on { (840) (842) }

pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

in pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

inDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1021) (1034) (1035) (1038) (1039) (1044) (1049) (1050) }

outDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1034) (1035) (1038) (1039) (1044) (1049) (1050) }

usesDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (840) (842) (1021) }

----------------------------------------------------------------
intro.c(l99:s492:k838:d14:s0)	 _forcontinue_5($33) :
intro.c(l95:s493:k840:d14:s0)		iTemp586 [k604 lr478:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] = iTemp586 [k604 lr478:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] + 0x1 {const-unsigned-char literal}
intro.c(l95:s494:k842:d14:s0)		iTemp587 [k605 lr494:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp586 [k604 lr478:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] < 0x8 {const-unsigned-char literal}
intro.c(l95:s495:k843:d14:s0)		if iTemp587 [k605 lr494:495 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forbody_5($32)
intro.c(l94:s496:k1039:d13:s0)		iTemp571 [k589 lr470:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] = iTemp571 [k589 lr470:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] + 0x8 {const-unsigned-char literal}
intro.c(l94:s497:k848:d13:s0)		iTemp589 [k607 lr469:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] = iTemp589 [k607 lr469:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] + 0x1 {const-unsigned-char literal}
intro.c(l94:s498:k850:d13:s0)		iTemp590 [k608 lr498:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp589 [k607 lr469:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x8 {const-unsigned-char literal}
intro.c(l94:s499:k851:d13:s0)		if iTemp590 [k608 lr498:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl3($57)
intro.c(l102:s500:k854:d1:s0)		send 0x84 {const-unsigned-char literal}{argreg = 1}
intro.c(l102:s501:k855:d1:s0)		iTemp591 [k609 lr501:501 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l103:s502:k856:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l103:s503:k857:d1:s0)		iTemp592 [k610 lr503:503 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l104:s504:k858:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l104:s505:k859:d1:s0)		iTemp593 [k611 lr505:505 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l105:s506:k860:d1:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
intro.c(l105:s507:k861:d1:s0)		iTemp594 [k612 lr507:507 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l106:s508:k862:d1:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
intro.c(l106:s509:k863:d1:s0)		iTemp595 [k613 lr509:509 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l107:s510:k864:d1:s0)		send 0xc4 {const-unsigned-char literal}{argreg = 1}
intro.c(l107:s511:k865:d1:s0)		iTemp596 [k614 lr511:511 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l108:s512:k866:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l108:s513:k867:d1:s0)		iTemp597 [k615 lr513:513 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l109:s514:k868:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l109:s515:k869:d1:s0)		iTemp598 [k616 lr515:515 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l110:s516:k870:d1:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
intro.c(l110:s517:k871:d1:s0)		iTemp599 [k617 lr517:517 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l111:s518:k872:d1:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
intro.c(l111:s519:k873:d1:s0)		iTemp600 [k618 lr519:519 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l112:s520:k874:d1:s0)		iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15}[r0x00 r0x01 ] := 0x2 {unsigned-int literal}
intro.c(l113:s521:k875:d1:s0)		 goto _forcontinue_0($45)
intro.c(l114:s522:k876:d1:s0)	 _case_0_2($14) :
intro.c(l115:s523:k1040:d1:s0)		iTemp612 [k630 lr523:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] := 0x0 {const-unsigned-char literal}
intro.c(l115:s524:k1043:d1:s0)		iTemp602 [k620 lr524:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] := 0x0 {unsigned-int literal}
intro.c(l116:s526:k1010:d13:s0)	 preHeaderLbl5($61) :
intro.c(l116:s527:k883:d13:s0)		iTemp603 [k621 lr527:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] = iTemp368 [k375 lr284:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp602 [k620 lr524:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ]
intro.c(l116:s528:k1024:d13:s0)		iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x08 ] := 0x0 {const-unsigned-char literal}
intro.c(l116:s530:k880:d14:s0)	 _forbody_7($36) :
intro.c(l117:s531:k885:d14:s0)		iTemp605 [k623 lr531:532 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x09 r0x0a ] = iTemp603 [k621 lr527:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] + iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x08 ]
intro.c(l117:s532:k886:d14:s0)		iTemp606 [k624 lr532:533 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x09 ] = @[iTemp605 [k623 lr531:532 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x09 r0x0a ] + 0x0 {const-unsigned-char literal}]
intro.c(l117:s533:k887:d14:s0)		send iTemp606 [k624 lr532:533 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x09 ]{argreg = 1}
intro.c(l117:s534:k888:d14:s0)		iTemp607 [k625 lr534:534 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l116:s535:k891:d14:s0)		iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x08 ] = iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x08 ] + 0x1 {const-unsigned-char literal}
intro.c(l116:s536:k893:d14:s0)		iTemp610 [k628 lr536:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x08 ] < 0x8 {const-unsigned-char literal}
intro.c(l116:s537:k894:d14:s0)		if iTemp610 [k628 lr536:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forbody_7($36)
intro.c(l115:s538:k1044:d13:s0)		iTemp602 [k620 lr524:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] = iTemp602 [k620 lr524:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] + 0x8 {const-unsigned-char literal}
intro.c(l115:s539:k899:d13:s0)		iTemp612 [k630 lr523:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] = iTemp612 [k630 lr523:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] + 0x1 {const-unsigned-char literal}
intro.c(l115:s540:k901:d13:s0)		iTemp613 [k631 lr540:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp612 [k630 lr523:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x4 {const-unsigned-char literal}
intro.c(l115:s541:k902:d13:s0)		if iTemp613 [k631 lr540:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl5($61)
intro.c(l120:s542:k905:d1:s0)		send 0x88 {const-unsigned-char literal}{argreg = 1}
intro.c(l120:s543:k906:d1:s0)		iTemp614 [k632 lr543:543 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l121:s544:k907:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l121:s545:k908:d1:s0)		iTemp615 [k633 lr545:545 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l122:s546:k909:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l122:s547:k910:d1:s0)		iTemp616 [k634 lr547:547 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l123:s548:k911:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l123:s549:k912:d1:s0)		iTemp617 [k635 lr549:549 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l124:s550:k913:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l124:s551:k914:d1:s0)		iTemp618 [k636 lr551:551 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l125:s552:k915:d1:s0)		send 0xc8 {const-unsigned-char literal}{argreg = 1}
intro.c(l125:s553:k916:d1:s0)		iTemp619 [k637 lr553:553 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l126:s554:k917:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l126:s555:k918:d1:s0)		iTemp620 [k638 lr555:555 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l127:s556:k919:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l127:s557:k920:d1:s0)		iTemp621 [k639 lr557:557 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l128:s558:k921:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l128:s559:k922:d1:s0)		iTemp622 [k640 lr559:559 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l129:s560:k923:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l129:s561:k924:d1:s0)		iTemp623 [k641 lr561:561 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l130:s562:k925:d1:s0)		iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15}[r0x00 r0x01 ] := 0x3 {unsigned-int literal}
intro.c(l131:s563:k926:d1:s0)		 goto _forcontinue_0($45)
intro.c(l132:s564:k927:d1:s0)	 _case_0_3($17) :
intro.c(l133:s565:k1045:d1:s0)		iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] := 0x0 {const-unsigned-char literal}
intro.c(l133:s566:k1048:d1:s0)		iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] := 0x0 {unsigned-int literal}
intro.c(l134:s568:k1012:d13:s0)	 preHeaderLbl7($66) :
intro.c(l134:s569:k947:d13:s0)		iTemp633 [k651 lr569:570 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register}[r0x06 ] = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] - 0x4 {const-unsigned-char literal}
intro.c(l134:s570:k948:d13:s0)		iTemp634 [k652 lr570:571 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x06 r0x07 ] = iTemp633 [k651 lr569:570 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register}[r0x06 ] * 0x8 {const-unsigned-char literal}
intro.c(l134:s571:k949:d13:s0)		iTemp635 [k653 lr571:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] = iTemp456 [k464 lr350:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp634 [k652 lr570:571 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x06 r0x07 ]
intro.c(l134:s572:k938:d13:s0)		iTemp627 [k645 lr572:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x08 r0x09 ] = iTemp368 [k375 lr284:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ]
intro.c(l134:s573:k932:d13:s0)		iTemp624 [k642 lr573:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0a ] = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x4 {const-unsigned-char literal}
intro.c(l134:s574:k1027:d13:s0)		iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] := 0x0 {const-unsigned-char literal}
intro.c(l134:s576:k931:d14:s0)	 _forbody_9($40) :
intro.c(l135:s577:k933:d14:s0)		if iTemp624 [k642 lr573:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0a ] == 0 goto _iffalse_2($19)
intro.c(l136:s578:k940:d14:s0)		iTemp629 [k647 lr578:579 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] = iTemp627 [k645 lr572:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x08 r0x09 ] + iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ]
intro.c(l136:s579:k941:d14:s0)		iTemp630 [k648 lr579:580 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ] = @[iTemp629 [k647 lr578:579 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] + 0x0 {const-unsigned-char literal}]
intro.c(l136:s580:k942:d14:s0)		send iTemp630 [k648 lr579:580 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ]{argreg = 1}
intro.c(l136:s581:k943:d14:s0)		iTemp631 [k649 lr581:581 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l136:s582:k944:d14:s0)		 goto _forcontinue_9($41)
intro.c(l136:s583:k945:d14:s0)	 _iffalse_2($19) :
intro.c(l138:s584:k951:d14:s0)		iTemp637 [k655 lr584:585 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] = iTemp635 [k653 lr571:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] + iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ]
intro.c(l138:s585:k952:d14:s0)		iTemp638 [k656 lr585:586 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ] = @[iTemp637 [k655 lr584:585 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] + 0x0 {const-unsigned-char literal}]
intro.c(l138:s586:k953:d14:s0)		send iTemp638 [k656 lr585:586 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ]{argreg = 1}
intro.c(l138:s587:k954:d14:s0)		iTemp639 [k657 lr587:587 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l138:s588:k956:d14:s0)	 _forcontinue_9($41) :
intro.c(l134:s589:k958:d14:s0)		iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] = iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] + 0x1 {const-unsigned-char literal}
intro.c(l134:s590:k960:d14:s0)		iTemp642 [k660 lr590:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] < 0x8 {const-unsigned-char literal}
intro.c(l134:s591:k961:d14:s0)		if iTemp642 [k660 lr590:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forbody_9($40)
intro.c(l133:s592:k1049:d13:s0)		iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] = iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] + 0x8 {const-unsigned-char literal}
intro.c(l133:s593:k966:d13:s0)		iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] + 0x1 {const-unsigned-char literal}
intro.c(l133:s594:k968:d13:s0)		iTemp645 [k663 lr594:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x8 {const-unsigned-char literal}
intro.c(l133:s595:k969:d13:s0)		if iTemp645 [k663 lr594:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl7($66)
intro.c(l141:s596:k972:d1:s0)		send 0x8c {const-unsigned-char literal}{argreg = 1}
intro.c(l141:s597:k973:d1:s0)		iTemp646 [k664 lr597:597 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l142:s598:k974:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l142:s599:k975:d1:s0)		iTemp647 [k665 lr599:599 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l143:s600:k976:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l143:s601:k977:d1:s0)		iTemp648 [k666 lr601:601 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l144:s602:k978:d1:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
intro.c(l144:s603:k979:d1:s0)		iTemp649 [k667 lr603:603 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l145:s604:k980:d1:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
intro.c(l145:s605:k981:d1:s0)		iTemp650 [k668 lr605:605 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l146:s606:k982:d1:s0)		send 0xcc {const-unsigned-char literal}{argreg = 1}
intro.c(l146:s607:k983:d1:s0)		iTemp651 [k669 lr607:607 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l147:s608:k984:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l147:s609:k985:d1:s0)		iTemp652 [k670 lr609:609 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l148:s610:k986:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l148:s611:k987:d1:s0)		iTemp653 [k671 lr611:611 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l149:s612:k988:d1:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
intro.c(l149:s613:k989:d1:s0)		iTemp654 [k672 lr613:613 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l150:s614:k990:d1:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
intro.c(l150:s615:k991:d1:s0)		iTemp655 [k673 lr615:615 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l151:s616:k992:d1:s0)		iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15}[r0x00 r0x01 ] := 0x0 {unsigned-int literal}
intro.c(l153:s617:k995:d1:s0)	 _forcontinue_0($45) :
intro.c(l67:s618:k997:d1:s0)		iTemp657 [k675 lr400:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_x_1_15}[r0x02 ] = iTemp657 [k675 lr400:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_x_1_15}[r0x02 ] + 0x1 {const-unsigned-char literal}
intro.c(l67:s619:k999:d1:s0)		iTemp658 [k676 lr619:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp657 [k675 lr400:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_x_1_15}[r0x02 ] < 0x64 {const-unsigned-char literal}
intro.c(l67:s620:k1000:d1:s0)		if iTemp658 [k676 lr619:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl0($48)
intro.c(l67:s621:k1003:d0:s0)	 _return($46) :
intro.c(l67:s622:k1004:d0:s0)		eproc _intro [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( ) fixed}

----------------------------------------------------------------
Basic Block _eBBlock32 : loop Depth = 13 noPath = 0 , lastinLoop = 0
depth 1st num 26 : bbnum = 25 1st iCode = 496 , last iCode = 499
visited 1 : hasFcall = 0

defines bitVector :bitvector Size = 1073 bSize = 135
Bits on { (848) (850) (1039) }

local defines bitVector :bitvector Size = 1073 bSize = 135
Bits on { (848) (850) (1039) }

pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

in pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

inDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1034) (1035) (1038) (1039) (1044) (1049) (1050) }

outDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1034) (1039) (1044) (1049) (1050) }

usesDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (848) (850) (1035) (1038) }

----------------------------------------------------------------
intro.c(l94:s496:k1039:d13:s0)		iTemp571 [k589 lr470:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] = iTemp571 [k589 lr470:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] + 0x8 {const-unsigned-char literal}
intro.c(l94:s497:k848:d13:s0)		iTemp589 [k607 lr469:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] = iTemp589 [k607 lr469:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] + 0x1 {const-unsigned-char literal}
intro.c(l94:s498:k850:d13:s0)		iTemp590 [k608 lr498:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp589 [k607 lr469:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x8 {const-unsigned-char literal}
intro.c(l94:s499:k851:d13:s0)		if iTemp590 [k608 lr498:499 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl3($57)
intro.c(l102:s500:k854:d1:s0)		send 0x84 {const-unsigned-char literal}{argreg = 1}
intro.c(l102:s501:k855:d1:s0)		iTemp591 [k609 lr501:501 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l103:s502:k856:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l103:s503:k857:d1:s0)		iTemp592 [k610 lr503:503 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l104:s504:k858:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l104:s505:k859:d1:s0)		iTemp593 [k611 lr505:505 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l105:s506:k860:d1:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
intro.c(l105:s507:k861:d1:s0)		iTemp594 [k612 lr507:507 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l106:s508:k862:d1:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
intro.c(l106:s509:k863:d1:s0)		iTemp595 [k613 lr509:509 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l107:s510:k864:d1:s0)		send 0xc4 {const-unsigned-char literal}{argreg = 1}
intro.c(l107:s511:k865:d1:s0)		iTemp596 [k614 lr511:511 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l108:s512:k866:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l108:s513:k867:d1:s0)		iTemp597 [k615 lr513:513 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l109:s514:k868:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l109:s515:k869:d1:s0)		iTemp598 [k616 lr515:515 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l110:s516:k870:d1:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
intro.c(l110:s517:k871:d1:s0)		iTemp599 [k617 lr517:517 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l111:s518:k872:d1:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
intro.c(l111:s519:k873:d1:s0)		iTemp600 [k618 lr519:519 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l112:s520:k874:d1:s0)		iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15}[r0x00 r0x01 ] := 0x2 {unsigned-int literal}
intro.c(l113:s521:k875:d1:s0)		 goto _forcontinue_0($45)
intro.c(l114:s522:k876:d1:s0)	 _case_0_2($14) :
intro.c(l115:s523:k1040:d1:s0)		iTemp612 [k630 lr523:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] := 0x0 {const-unsigned-char literal}
intro.c(l115:s524:k1043:d1:s0)		iTemp602 [k620 lr524:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] := 0x0 {unsigned-int literal}
intro.c(l116:s526:k1010:d13:s0)	 preHeaderLbl5($61) :
intro.c(l116:s527:k883:d13:s0)		iTemp603 [k621 lr527:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] = iTemp368 [k375 lr284:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp602 [k620 lr524:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ]
intro.c(l116:s528:k1024:d13:s0)		iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x08 ] := 0x0 {const-unsigned-char literal}
intro.c(l116:s530:k880:d14:s0)	 _forbody_7($36) :
intro.c(l117:s531:k885:d14:s0)		iTemp605 [k623 lr531:532 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x09 r0x0a ] = iTemp603 [k621 lr527:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] + iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x08 ]
intro.c(l117:s532:k886:d14:s0)		iTemp606 [k624 lr532:533 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x09 ] = @[iTemp605 [k623 lr531:532 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x09 r0x0a ] + 0x0 {const-unsigned-char literal}]
intro.c(l117:s533:k887:d14:s0)		send iTemp606 [k624 lr532:533 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x09 ]{argreg = 1}
intro.c(l117:s534:k888:d14:s0)		iTemp607 [k625 lr534:534 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l116:s535:k891:d14:s0)		iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x08 ] = iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x08 ] + 0x1 {const-unsigned-char literal}
intro.c(l116:s536:k893:d14:s0)		iTemp610 [k628 lr536:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x08 ] < 0x8 {const-unsigned-char literal}
intro.c(l116:s537:k894:d14:s0)		if iTemp610 [k628 lr536:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forbody_7($36)
intro.c(l115:s538:k1044:d13:s0)		iTemp602 [k620 lr524:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] = iTemp602 [k620 lr524:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] + 0x8 {const-unsigned-char literal}
intro.c(l115:s539:k899:d13:s0)		iTemp612 [k630 lr523:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] = iTemp612 [k630 lr523:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] + 0x1 {const-unsigned-char literal}
intro.c(l115:s540:k901:d13:s0)		iTemp613 [k631 lr540:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp612 [k630 lr523:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x4 {const-unsigned-char literal}
intro.c(l115:s541:k902:d13:s0)		if iTemp613 [k631 lr540:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl5($61)
intro.c(l120:s542:k905:d1:s0)		send 0x88 {const-unsigned-char literal}{argreg = 1}
intro.c(l120:s543:k906:d1:s0)		iTemp614 [k632 lr543:543 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l121:s544:k907:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l121:s545:k908:d1:s0)		iTemp615 [k633 lr545:545 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l122:s546:k909:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l122:s547:k910:d1:s0)		iTemp616 [k634 lr547:547 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l123:s548:k911:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l123:s549:k912:d1:s0)		iTemp617 [k635 lr549:549 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l124:s550:k913:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l124:s551:k914:d1:s0)		iTemp618 [k636 lr551:551 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l125:s552:k915:d1:s0)		send 0xc8 {const-unsigned-char literal}{argreg = 1}
intro.c(l125:s553:k916:d1:s0)		iTemp619 [k637 lr553:553 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l126:s554:k917:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l126:s555:k918:d1:s0)		iTemp620 [k638 lr555:555 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l127:s556:k919:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l127:s557:k920:d1:s0)		iTemp621 [k639 lr557:557 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l128:s558:k921:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l128:s559:k922:d1:s0)		iTemp622 [k640 lr559:559 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l129:s560:k923:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l129:s561:k924:d1:s0)		iTemp623 [k641 lr561:561 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l130:s562:k925:d1:s0)		iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15}[r0x00 r0x01 ] := 0x3 {unsigned-int literal}
intro.c(l131:s563:k926:d1:s0)		 goto _forcontinue_0($45)
intro.c(l132:s564:k927:d1:s0)	 _case_0_3($17) :
intro.c(l133:s565:k1045:d1:s0)		iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] := 0x0 {const-unsigned-char literal}
intro.c(l133:s566:k1048:d1:s0)		iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] := 0x0 {unsigned-int literal}
intro.c(l134:s568:k1012:d13:s0)	 preHeaderLbl7($66) :
intro.c(l134:s569:k947:d13:s0)		iTemp633 [k651 lr569:570 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register}[r0x06 ] = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] - 0x4 {const-unsigned-char literal}
intro.c(l134:s570:k948:d13:s0)		iTemp634 [k652 lr570:571 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x06 r0x07 ] = iTemp633 [k651 lr569:570 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register}[r0x06 ] * 0x8 {const-unsigned-char literal}
intro.c(l134:s571:k949:d13:s0)		iTemp635 [k653 lr571:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] = iTemp456 [k464 lr350:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp634 [k652 lr570:571 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x06 r0x07 ]
intro.c(l134:s572:k938:d13:s0)		iTemp627 [k645 lr572:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x08 r0x09 ] = iTemp368 [k375 lr284:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ]
intro.c(l134:s573:k932:d13:s0)		iTemp624 [k642 lr573:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0a ] = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x4 {const-unsigned-char literal}
intro.c(l134:s574:k1027:d13:s0)		iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] := 0x0 {const-unsigned-char literal}
intro.c(l134:s576:k931:d14:s0)	 _forbody_9($40) :
intro.c(l135:s577:k933:d14:s0)		if iTemp624 [k642 lr573:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0a ] == 0 goto _iffalse_2($19)
intro.c(l136:s578:k940:d14:s0)		iTemp629 [k647 lr578:579 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] = iTemp627 [k645 lr572:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x08 r0x09 ] + iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ]
intro.c(l136:s579:k941:d14:s0)		iTemp630 [k648 lr579:580 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ] = @[iTemp629 [k647 lr578:579 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] + 0x0 {const-unsigned-char literal}]
intro.c(l136:s580:k942:d14:s0)		send iTemp630 [k648 lr579:580 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ]{argreg = 1}
intro.c(l136:s581:k943:d14:s0)		iTemp631 [k649 lr581:581 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l136:s582:k944:d14:s0)		 goto _forcontinue_9($41)
intro.c(l136:s583:k945:d14:s0)	 _iffalse_2($19) :
intro.c(l138:s584:k951:d14:s0)		iTemp637 [k655 lr584:585 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] = iTemp635 [k653 lr571:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] + iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ]
intro.c(l138:s585:k952:d14:s0)		iTemp638 [k656 lr585:586 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ] = @[iTemp637 [k655 lr584:585 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] + 0x0 {const-unsigned-char literal}]
intro.c(l138:s586:k953:d14:s0)		send iTemp638 [k656 lr585:586 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ]{argreg = 1}
intro.c(l138:s587:k954:d14:s0)		iTemp639 [k657 lr587:587 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l138:s588:k956:d14:s0)	 _forcontinue_9($41) :
intro.c(l134:s589:k958:d14:s0)		iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] = iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] + 0x1 {const-unsigned-char literal}
intro.c(l134:s590:k960:d14:s0)		iTemp642 [k660 lr590:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] < 0x8 {const-unsigned-char literal}
intro.c(l134:s591:k961:d14:s0)		if iTemp642 [k660 lr590:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forbody_9($40)
intro.c(l133:s592:k1049:d13:s0)		iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] = iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] + 0x8 {const-unsigned-char literal}
intro.c(l133:s593:k966:d13:s0)		iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] + 0x1 {const-unsigned-char literal}
intro.c(l133:s594:k968:d13:s0)		iTemp645 [k663 lr594:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x8 {const-unsigned-char literal}
intro.c(l133:s595:k969:d13:s0)		if iTemp645 [k663 lr594:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl7($66)
intro.c(l141:s596:k972:d1:s0)		send 0x8c {const-unsigned-char literal}{argreg = 1}
intro.c(l141:s597:k973:d1:s0)		iTemp646 [k664 lr597:597 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l142:s598:k974:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l142:s599:k975:d1:s0)		iTemp647 [k665 lr599:599 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l143:s600:k976:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l143:s601:k977:d1:s0)		iTemp648 [k666 lr601:601 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l144:s602:k978:d1:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
intro.c(l144:s603:k979:d1:s0)		iTemp649 [k667 lr603:603 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l145:s604:k980:d1:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
intro.c(l145:s605:k981:d1:s0)		iTemp650 [k668 lr605:605 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l146:s606:k982:d1:s0)		send 0xcc {const-unsigned-char literal}{argreg = 1}
intro.c(l146:s607:k983:d1:s0)		iTemp651 [k669 lr607:607 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l147:s608:k984:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l147:s609:k985:d1:s0)		iTemp652 [k670 lr609:609 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l148:s610:k986:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l148:s611:k987:d1:s0)		iTemp653 [k671 lr611:611 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l149:s612:k988:d1:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
intro.c(l149:s613:k989:d1:s0)		iTemp654 [k672 lr613:613 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l150:s614:k990:d1:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
intro.c(l150:s615:k991:d1:s0)		iTemp655 [k673 lr615:615 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l151:s616:k992:d1:s0)		iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15}[r0x00 r0x01 ] := 0x0 {unsigned-int literal}
intro.c(l153:s617:k995:d1:s0)	 _forcontinue_0($45) :
intro.c(l67:s618:k997:d1:s0)		iTemp657 [k675 lr400:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_x_1_15}[r0x02 ] = iTemp657 [k675 lr400:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_x_1_15}[r0x02 ] + 0x1 {const-unsigned-char literal}
intro.c(l67:s619:k999:d1:s0)		iTemp658 [k676 lr619:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp657 [k675 lr400:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_x_1_15}[r0x02 ] < 0x64 {const-unsigned-char literal}
intro.c(l67:s620:k1000:d1:s0)		if iTemp658 [k676 lr619:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl0($48)
intro.c(l67:s621:k1003:d0:s0)	 _return($46) :
intro.c(l67:s622:k1004:d0:s0)		eproc _intro [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( ) fixed}

----------------------------------------------------------------
Basic Block _eBBlock33 : loop Depth = 1 noPath = 0 , lastinLoop = 0
depth 1st num 27 : bbnum = 26 1st iCode = 500 , last iCode = 521
visited 1 : hasFcall = 1

defines bitVector :bitvector Size = 1073 bSize = 135
Bits on { (874) }

local defines bitVector :bitvector Size = 1073 bSize = 135
Bits on { (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) }

pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

in pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

inDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1034) (1039) (1044) (1049) (1050) }

outDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (997) (999) (1034) (1039) (1044) (1049) (1050) }

usesDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) }

----------------------------------------------------------------
intro.c(l102:s500:k854:d1:s0)		send 0x84 {const-unsigned-char literal}{argreg = 1}
intro.c(l102:s501:k855:d1:s0)		iTemp591 [k609 lr501:501 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l103:s502:k856:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l103:s503:k857:d1:s0)		iTemp592 [k610 lr503:503 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l104:s504:k858:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l104:s505:k859:d1:s0)		iTemp593 [k611 lr505:505 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l105:s506:k860:d1:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
intro.c(l105:s507:k861:d1:s0)		iTemp594 [k612 lr507:507 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l106:s508:k862:d1:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
intro.c(l106:s509:k863:d1:s0)		iTemp595 [k613 lr509:509 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l107:s510:k864:d1:s0)		send 0xc4 {const-unsigned-char literal}{argreg = 1}
intro.c(l107:s511:k865:d1:s0)		iTemp596 [k614 lr511:511 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l108:s512:k866:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l108:s513:k867:d1:s0)		iTemp597 [k615 lr513:513 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l109:s514:k868:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l109:s515:k869:d1:s0)		iTemp598 [k616 lr515:515 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l110:s516:k870:d1:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
intro.c(l110:s517:k871:d1:s0)		iTemp599 [k617 lr517:517 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l111:s518:k872:d1:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
intro.c(l111:s519:k873:d1:s0)		iTemp600 [k618 lr519:519 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l112:s520:k874:d1:s0)		iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15}[r0x00 r0x01 ] := 0x2 {unsigned-int literal}
intro.c(l113:s521:k875:d1:s0)		 goto _forcontinue_0($45)
intro.c(l114:s522:k876:d1:s0)	 _case_0_2($14) :
intro.c(l115:s523:k1040:d1:s0)		iTemp612 [k630 lr523:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] := 0x0 {const-unsigned-char literal}
intro.c(l115:s524:k1043:d1:s0)		iTemp602 [k620 lr524:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] := 0x0 {unsigned-int literal}
intro.c(l116:s526:k1010:d13:s0)	 preHeaderLbl5($61) :
intro.c(l116:s527:k883:d13:s0)		iTemp603 [k621 lr527:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] = iTemp368 [k375 lr284:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp602 [k620 lr524:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ]
intro.c(l116:s528:k1024:d13:s0)		iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x08 ] := 0x0 {const-unsigned-char literal}
intro.c(l116:s530:k880:d14:s0)	 _forbody_7($36) :
intro.c(l117:s531:k885:d14:s0)		iTemp605 [k623 lr531:532 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x09 r0x0a ] = iTemp603 [k621 lr527:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] + iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x08 ]
intro.c(l117:s532:k886:d14:s0)		iTemp606 [k624 lr532:533 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x09 ] = @[iTemp605 [k623 lr531:532 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x09 r0x0a ] + 0x0 {const-unsigned-char literal}]
intro.c(l117:s533:k887:d14:s0)		send iTemp606 [k624 lr532:533 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x09 ]{argreg = 1}
intro.c(l117:s534:k888:d14:s0)		iTemp607 [k625 lr534:534 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l116:s535:k891:d14:s0)		iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x08 ] = iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x08 ] + 0x1 {const-unsigned-char literal}
intro.c(l116:s536:k893:d14:s0)		iTemp610 [k628 lr536:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x08 ] < 0x8 {const-unsigned-char literal}
intro.c(l116:s537:k894:d14:s0)		if iTemp610 [k628 lr536:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forbody_7($36)
intro.c(l115:s538:k1044:d13:s0)		iTemp602 [k620 lr524:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] = iTemp602 [k620 lr524:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] + 0x8 {const-unsigned-char literal}
intro.c(l115:s539:k899:d13:s0)		iTemp612 [k630 lr523:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] = iTemp612 [k630 lr523:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] + 0x1 {const-unsigned-char literal}
intro.c(l115:s540:k901:d13:s0)		iTemp613 [k631 lr540:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp612 [k630 lr523:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x4 {const-unsigned-char literal}
intro.c(l115:s541:k902:d13:s0)		if iTemp613 [k631 lr540:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl5($61)
intro.c(l120:s542:k905:d1:s0)		send 0x88 {const-unsigned-char literal}{argreg = 1}
intro.c(l120:s543:k906:d1:s0)		iTemp614 [k632 lr543:543 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l121:s544:k907:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l121:s545:k908:d1:s0)		iTemp615 [k633 lr545:545 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l122:s546:k909:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l122:s547:k910:d1:s0)		iTemp616 [k634 lr547:547 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l123:s548:k911:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l123:s549:k912:d1:s0)		iTemp617 [k635 lr549:549 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l124:s550:k913:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l124:s551:k914:d1:s0)		iTemp618 [k636 lr551:551 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l125:s552:k915:d1:s0)		send 0xc8 {const-unsigned-char literal}{argreg = 1}
intro.c(l125:s553:k916:d1:s0)		iTemp619 [k637 lr553:553 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l126:s554:k917:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l126:s555:k918:d1:s0)		iTemp620 [k638 lr555:555 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l127:s556:k919:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l127:s557:k920:d1:s0)		iTemp621 [k639 lr557:557 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l128:s558:k921:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l128:s559:k922:d1:s0)		iTemp622 [k640 lr559:559 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l129:s560:k923:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l129:s561:k924:d1:s0)		iTemp623 [k641 lr561:561 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l130:s562:k925:d1:s0)		iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15}[r0x00 r0x01 ] := 0x3 {unsigned-int literal}
intro.c(l131:s563:k926:d1:s0)		 goto _forcontinue_0($45)
intro.c(l132:s564:k927:d1:s0)	 _case_0_3($17) :
intro.c(l133:s565:k1045:d1:s0)		iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] := 0x0 {const-unsigned-char literal}
intro.c(l133:s566:k1048:d1:s0)		iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] := 0x0 {unsigned-int literal}
intro.c(l134:s568:k1012:d13:s0)	 preHeaderLbl7($66) :
intro.c(l134:s569:k947:d13:s0)		iTemp633 [k651 lr569:570 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register}[r0x06 ] = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] - 0x4 {const-unsigned-char literal}
intro.c(l134:s570:k948:d13:s0)		iTemp634 [k652 lr570:571 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x06 r0x07 ] = iTemp633 [k651 lr569:570 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register}[r0x06 ] * 0x8 {const-unsigned-char literal}
intro.c(l134:s571:k949:d13:s0)		iTemp635 [k653 lr571:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] = iTemp456 [k464 lr350:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp634 [k652 lr570:571 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x06 r0x07 ]
intro.c(l134:s572:k938:d13:s0)		iTemp627 [k645 lr572:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x08 r0x09 ] = iTemp368 [k375 lr284:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ]
intro.c(l134:s573:k932:d13:s0)		iTemp624 [k642 lr573:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0a ] = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x4 {const-unsigned-char literal}
intro.c(l134:s574:k1027:d13:s0)		iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] := 0x0 {const-unsigned-char literal}
intro.c(l134:s576:k931:d14:s0)	 _forbody_9($40) :
intro.c(l135:s577:k933:d14:s0)		if iTemp624 [k642 lr573:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0a ] == 0 goto _iffalse_2($19)
intro.c(l136:s578:k940:d14:s0)		iTemp629 [k647 lr578:579 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] = iTemp627 [k645 lr572:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x08 r0x09 ] + iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ]
intro.c(l136:s579:k941:d14:s0)		iTemp630 [k648 lr579:580 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ] = @[iTemp629 [k647 lr578:579 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] + 0x0 {const-unsigned-char literal}]
intro.c(l136:s580:k942:d14:s0)		send iTemp630 [k648 lr579:580 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ]{argreg = 1}
intro.c(l136:s581:k943:d14:s0)		iTemp631 [k649 lr581:581 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l136:s582:k944:d14:s0)		 goto _forcontinue_9($41)
intro.c(l136:s583:k945:d14:s0)	 _iffalse_2($19) :
intro.c(l138:s584:k951:d14:s0)		iTemp637 [k655 lr584:585 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] = iTemp635 [k653 lr571:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] + iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ]
intro.c(l138:s585:k952:d14:s0)		iTemp638 [k656 lr585:586 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ] = @[iTemp637 [k655 lr584:585 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] + 0x0 {const-unsigned-char literal}]
intro.c(l138:s586:k953:d14:s0)		send iTemp638 [k656 lr585:586 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ]{argreg = 1}
intro.c(l138:s587:k954:d14:s0)		iTemp639 [k657 lr587:587 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l138:s588:k956:d14:s0)	 _forcontinue_9($41) :
intro.c(l134:s589:k958:d14:s0)		iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] = iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] + 0x1 {const-unsigned-char literal}
intro.c(l134:s590:k960:d14:s0)		iTemp642 [k660 lr590:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] < 0x8 {const-unsigned-char literal}
intro.c(l134:s591:k961:d14:s0)		if iTemp642 [k660 lr590:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forbody_9($40)
intro.c(l133:s592:k1049:d13:s0)		iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] = iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] + 0x8 {const-unsigned-char literal}
intro.c(l133:s593:k966:d13:s0)		iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] + 0x1 {const-unsigned-char literal}
intro.c(l133:s594:k968:d13:s0)		iTemp645 [k663 lr594:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x8 {const-unsigned-char literal}
intro.c(l133:s595:k969:d13:s0)		if iTemp645 [k663 lr594:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl7($66)
intro.c(l141:s596:k972:d1:s0)		send 0x8c {const-unsigned-char literal}{argreg = 1}
intro.c(l141:s597:k973:d1:s0)		iTemp646 [k664 lr597:597 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l142:s598:k974:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l142:s599:k975:d1:s0)		iTemp647 [k665 lr599:599 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l143:s600:k976:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l143:s601:k977:d1:s0)		iTemp648 [k666 lr601:601 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l144:s602:k978:d1:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
intro.c(l144:s603:k979:d1:s0)		iTemp649 [k667 lr603:603 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l145:s604:k980:d1:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
intro.c(l145:s605:k981:d1:s0)		iTemp650 [k668 lr605:605 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l146:s606:k982:d1:s0)		send 0xcc {const-unsigned-char literal}{argreg = 1}
intro.c(l146:s607:k983:d1:s0)		iTemp651 [k669 lr607:607 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l147:s608:k984:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l147:s609:k985:d1:s0)		iTemp652 [k670 lr609:609 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l148:s610:k986:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l148:s611:k987:d1:s0)		iTemp653 [k671 lr611:611 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l149:s612:k988:d1:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
intro.c(l149:s613:k989:d1:s0)		iTemp654 [k672 lr613:613 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l150:s614:k990:d1:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
intro.c(l150:s615:k991:d1:s0)		iTemp655 [k673 lr615:615 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l151:s616:k992:d1:s0)		iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15}[r0x00 r0x01 ] := 0x0 {unsigned-int literal}
intro.c(l153:s617:k995:d1:s0)	 _forcontinue_0($45) :
intro.c(l67:s618:k997:d1:s0)		iTemp657 [k675 lr400:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_x_1_15}[r0x02 ] = iTemp657 [k675 lr400:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_x_1_15}[r0x02 ] + 0x1 {const-unsigned-char literal}
intro.c(l67:s619:k999:d1:s0)		iTemp658 [k676 lr619:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp657 [k675 lr400:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_x_1_15}[r0x02 ] < 0x64 {const-unsigned-char literal}
intro.c(l67:s620:k1000:d1:s0)		if iTemp658 [k676 lr619:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl0($48)
intro.c(l67:s621:k1003:d0:s0)	 _return($46) :
intro.c(l67:s622:k1004:d0:s0)		eproc _intro [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( ) fixed}

----------------------------------------------------------------
Basic Block _case_0_2 : loop Depth = 1 noPath = 0 , lastinLoop = 0
depth 1st num 28 : bbnum = 27 1st iCode = 522 , last iCode = 524
visited 1 : hasFcall = 0

defines bitVector :bitvector Size = 1073 bSize = 135
Bits on { (1040) (1043) }

local defines bitVector :bitvector Size = 1073 bSize = 135
Bits on { (1040) (1043) }

pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

in pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

inDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1034) (1039) (1044) (1049) (1050) }

outDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1034) (1039) (1040) (1043) (1049) (1050) }

usesDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { }

----------------------------------------------------------------
intro.c(l114:s522:k876:d1:s0)	 _case_0_2($14) :
intro.c(l115:s523:k1040:d1:s0)		iTemp612 [k630 lr523:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] := 0x0 {const-unsigned-char literal}
intro.c(l115:s524:k1043:d1:s0)		iTemp602 [k620 lr524:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] := 0x0 {unsigned-int literal}
intro.c(l116:s526:k1010:d13:s0)	 preHeaderLbl5($61) :
intro.c(l116:s527:k883:d13:s0)		iTemp603 [k621 lr527:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] = iTemp368 [k375 lr284:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp602 [k620 lr524:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ]
intro.c(l116:s528:k1024:d13:s0)		iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x08 ] := 0x0 {const-unsigned-char literal}
intro.c(l116:s530:k880:d14:s0)	 _forbody_7($36) :
intro.c(l117:s531:k885:d14:s0)		iTemp605 [k623 lr531:532 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x09 r0x0a ] = iTemp603 [k621 lr527:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] + iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x08 ]
intro.c(l117:s532:k886:d14:s0)		iTemp606 [k624 lr532:533 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x09 ] = @[iTemp605 [k623 lr531:532 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x09 r0x0a ] + 0x0 {const-unsigned-char literal}]
intro.c(l117:s533:k887:d14:s0)		send iTemp606 [k624 lr532:533 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x09 ]{argreg = 1}
intro.c(l117:s534:k888:d14:s0)		iTemp607 [k625 lr534:534 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l116:s535:k891:d14:s0)		iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x08 ] = iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x08 ] + 0x1 {const-unsigned-char literal}
intro.c(l116:s536:k893:d14:s0)		iTemp610 [k628 lr536:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x08 ] < 0x8 {const-unsigned-char literal}
intro.c(l116:s537:k894:d14:s0)		if iTemp610 [k628 lr536:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forbody_7($36)
intro.c(l115:s538:k1044:d13:s0)		iTemp602 [k620 lr524:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] = iTemp602 [k620 lr524:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] + 0x8 {const-unsigned-char literal}
intro.c(l115:s539:k899:d13:s0)		iTemp612 [k630 lr523:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] = iTemp612 [k630 lr523:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] + 0x1 {const-unsigned-char literal}
intro.c(l115:s540:k901:d13:s0)		iTemp613 [k631 lr540:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp612 [k630 lr523:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x4 {const-unsigned-char literal}
intro.c(l115:s541:k902:d13:s0)		if iTemp613 [k631 lr540:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl5($61)
intro.c(l120:s542:k905:d1:s0)		send 0x88 {const-unsigned-char literal}{argreg = 1}
intro.c(l120:s543:k906:d1:s0)		iTemp614 [k632 lr543:543 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l121:s544:k907:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l121:s545:k908:d1:s0)		iTemp615 [k633 lr545:545 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l122:s546:k909:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l122:s547:k910:d1:s0)		iTemp616 [k634 lr547:547 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l123:s548:k911:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l123:s549:k912:d1:s0)		iTemp617 [k635 lr549:549 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l124:s550:k913:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l124:s551:k914:d1:s0)		iTemp618 [k636 lr551:551 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l125:s552:k915:d1:s0)		send 0xc8 {const-unsigned-char literal}{argreg = 1}
intro.c(l125:s553:k916:d1:s0)		iTemp619 [k637 lr553:553 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l126:s554:k917:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l126:s555:k918:d1:s0)		iTemp620 [k638 lr555:555 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l127:s556:k919:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l127:s557:k920:d1:s0)		iTemp621 [k639 lr557:557 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l128:s558:k921:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l128:s559:k922:d1:s0)		iTemp622 [k640 lr559:559 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l129:s560:k923:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l129:s561:k924:d1:s0)		iTemp623 [k641 lr561:561 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l130:s562:k925:d1:s0)		iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15}[r0x00 r0x01 ] := 0x3 {unsigned-int literal}
intro.c(l131:s563:k926:d1:s0)		 goto _forcontinue_0($45)
intro.c(l132:s564:k927:d1:s0)	 _case_0_3($17) :
intro.c(l133:s565:k1045:d1:s0)		iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] := 0x0 {const-unsigned-char literal}
intro.c(l133:s566:k1048:d1:s0)		iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] := 0x0 {unsigned-int literal}
intro.c(l134:s568:k1012:d13:s0)	 preHeaderLbl7($66) :
intro.c(l134:s569:k947:d13:s0)		iTemp633 [k651 lr569:570 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register}[r0x06 ] = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] - 0x4 {const-unsigned-char literal}
intro.c(l134:s570:k948:d13:s0)		iTemp634 [k652 lr570:571 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x06 r0x07 ] = iTemp633 [k651 lr569:570 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register}[r0x06 ] * 0x8 {const-unsigned-char literal}
intro.c(l134:s571:k949:d13:s0)		iTemp635 [k653 lr571:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] = iTemp456 [k464 lr350:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp634 [k652 lr570:571 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x06 r0x07 ]
intro.c(l134:s572:k938:d13:s0)		iTemp627 [k645 lr572:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x08 r0x09 ] = iTemp368 [k375 lr284:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ]
intro.c(l134:s573:k932:d13:s0)		iTemp624 [k642 lr573:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0a ] = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x4 {const-unsigned-char literal}
intro.c(l134:s574:k1027:d13:s0)		iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] := 0x0 {const-unsigned-char literal}
intro.c(l134:s576:k931:d14:s0)	 _forbody_9($40) :
intro.c(l135:s577:k933:d14:s0)		if iTemp624 [k642 lr573:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0a ] == 0 goto _iffalse_2($19)
intro.c(l136:s578:k940:d14:s0)		iTemp629 [k647 lr578:579 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] = iTemp627 [k645 lr572:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x08 r0x09 ] + iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ]
intro.c(l136:s579:k941:d14:s0)		iTemp630 [k648 lr579:580 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ] = @[iTemp629 [k647 lr578:579 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] + 0x0 {const-unsigned-char literal}]
intro.c(l136:s580:k942:d14:s0)		send iTemp630 [k648 lr579:580 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ]{argreg = 1}
intro.c(l136:s581:k943:d14:s0)		iTemp631 [k649 lr581:581 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l136:s582:k944:d14:s0)		 goto _forcontinue_9($41)
intro.c(l136:s583:k945:d14:s0)	 _iffalse_2($19) :
intro.c(l138:s584:k951:d14:s0)		iTemp637 [k655 lr584:585 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] = iTemp635 [k653 lr571:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] + iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ]
intro.c(l138:s585:k952:d14:s0)		iTemp638 [k656 lr585:586 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ] = @[iTemp637 [k655 lr584:585 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] + 0x0 {const-unsigned-char literal}]
intro.c(l138:s586:k953:d14:s0)		send iTemp638 [k656 lr585:586 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ]{argreg = 1}
intro.c(l138:s587:k954:d14:s0)		iTemp639 [k657 lr587:587 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l138:s588:k956:d14:s0)	 _forcontinue_9($41) :
intro.c(l134:s589:k958:d14:s0)		iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] = iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] + 0x1 {const-unsigned-char literal}
intro.c(l134:s590:k960:d14:s0)		iTemp642 [k660 lr590:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] < 0x8 {const-unsigned-char literal}
intro.c(l134:s591:k961:d14:s0)		if iTemp642 [k660 lr590:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forbody_9($40)
intro.c(l133:s592:k1049:d13:s0)		iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] = iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] + 0x8 {const-unsigned-char literal}
intro.c(l133:s593:k966:d13:s0)		iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] + 0x1 {const-unsigned-char literal}
intro.c(l133:s594:k968:d13:s0)		iTemp645 [k663 lr594:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x8 {const-unsigned-char literal}
intro.c(l133:s595:k969:d13:s0)		if iTemp645 [k663 lr594:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl7($66)
intro.c(l141:s596:k972:d1:s0)		send 0x8c {const-unsigned-char literal}{argreg = 1}
intro.c(l141:s597:k973:d1:s0)		iTemp646 [k664 lr597:597 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l142:s598:k974:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l142:s599:k975:d1:s0)		iTemp647 [k665 lr599:599 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l143:s600:k976:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l143:s601:k977:d1:s0)		iTemp648 [k666 lr601:601 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l144:s602:k978:d1:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
intro.c(l144:s603:k979:d1:s0)		iTemp649 [k667 lr603:603 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l145:s604:k980:d1:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
intro.c(l145:s605:k981:d1:s0)		iTemp650 [k668 lr605:605 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l146:s606:k982:d1:s0)		send 0xcc {const-unsigned-char literal}{argreg = 1}
intro.c(l146:s607:k983:d1:s0)		iTemp651 [k669 lr607:607 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l147:s608:k984:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l147:s609:k985:d1:s0)		iTemp652 [k670 lr609:609 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l148:s610:k986:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l148:s611:k987:d1:s0)		iTemp653 [k671 lr611:611 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l149:s612:k988:d1:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
intro.c(l149:s613:k989:d1:s0)		iTemp654 [k672 lr613:613 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l150:s614:k990:d1:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
intro.c(l150:s615:k991:d1:s0)		iTemp655 [k673 lr615:615 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l151:s616:k992:d1:s0)		iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15}[r0x00 r0x01 ] := 0x0 {unsigned-int literal}
intro.c(l153:s617:k995:d1:s0)	 _forcontinue_0($45) :
intro.c(l67:s618:k997:d1:s0)		iTemp657 [k675 lr400:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_x_1_15}[r0x02 ] = iTemp657 [k675 lr400:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_x_1_15}[r0x02 ] + 0x1 {const-unsigned-char literal}
intro.c(l67:s619:k999:d1:s0)		iTemp658 [k676 lr619:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp657 [k675 lr400:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_x_1_15}[r0x02 ] < 0x64 {const-unsigned-char literal}
intro.c(l67:s620:k1000:d1:s0)		if iTemp658 [k676 lr619:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl0($48)
intro.c(l67:s621:k1003:d0:s0)	 _return($46) :
intro.c(l67:s622:k1004:d0:s0)		eproc _intro [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( ) fixed}

----------------------------------------------------------------
Basic Block preHeaderLbl36 : loop Depth = 1 noPath = 0 , lastinLoop = 0
depth 1st num 29 : bbnum = 28 1st iCode = 525 , last iCode = 525
visited 1 : hasFcall = 0

defines bitVector :bitvector Size = 1073 bSize = 135
Bits on { }

local defines bitVector :
pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

in pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

inDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1034) (1039) (1040) (1043) (1049) (1050) }

outDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1034) (1039) (1040) (1043) (1049) (1050) }

usesDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { }

----------------------------------------------------------------
intro.c(l116:s525:k1069:d1:s0)	 preHeaderLbl36($119) :
intro.c(l116:s526:k1010:d13:s0)	 preHeaderLbl5($61) :
intro.c(l116:s527:k883:d13:s0)		iTemp603 [k621 lr527:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] = iTemp368 [k375 lr284:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp602 [k620 lr524:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ]
intro.c(l116:s528:k1024:d13:s0)		iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x08 ] := 0x0 {const-unsigned-char literal}
intro.c(l116:s530:k880:d14:s0)	 _forbody_7($36) :
intro.c(l117:s531:k885:d14:s0)		iTemp605 [k623 lr531:532 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x09 r0x0a ] = iTemp603 [k621 lr527:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] + iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x08 ]
intro.c(l117:s532:k886:d14:s0)		iTemp606 [k624 lr532:533 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x09 ] = @[iTemp605 [k623 lr531:532 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x09 r0x0a ] + 0x0 {const-unsigned-char literal}]
intro.c(l117:s533:k887:d14:s0)		send iTemp606 [k624 lr532:533 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x09 ]{argreg = 1}
intro.c(l117:s534:k888:d14:s0)		iTemp607 [k625 lr534:534 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l116:s535:k891:d14:s0)		iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x08 ] = iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x08 ] + 0x1 {const-unsigned-char literal}
intro.c(l116:s536:k893:d14:s0)		iTemp610 [k628 lr536:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x08 ] < 0x8 {const-unsigned-char literal}
intro.c(l116:s537:k894:d14:s0)		if iTemp610 [k628 lr536:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forbody_7($36)
intro.c(l115:s538:k1044:d13:s0)		iTemp602 [k620 lr524:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] = iTemp602 [k620 lr524:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] + 0x8 {const-unsigned-char literal}
intro.c(l115:s539:k899:d13:s0)		iTemp612 [k630 lr523:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] = iTemp612 [k630 lr523:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] + 0x1 {const-unsigned-char literal}
intro.c(l115:s540:k901:d13:s0)		iTemp613 [k631 lr540:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp612 [k630 lr523:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x4 {const-unsigned-char literal}
intro.c(l115:s541:k902:d13:s0)		if iTemp613 [k631 lr540:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl5($61)
intro.c(l120:s542:k905:d1:s0)		send 0x88 {const-unsigned-char literal}{argreg = 1}
intro.c(l120:s543:k906:d1:s0)		iTemp614 [k632 lr543:543 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l121:s544:k907:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l121:s545:k908:d1:s0)		iTemp615 [k633 lr545:545 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l122:s546:k909:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l122:s547:k910:d1:s0)		iTemp616 [k634 lr547:547 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l123:s548:k911:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l123:s549:k912:d1:s0)		iTemp617 [k635 lr549:549 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l124:s550:k913:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l124:s551:k914:d1:s0)		iTemp618 [k636 lr551:551 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l125:s552:k915:d1:s0)		send 0xc8 {const-unsigned-char literal}{argreg = 1}
intro.c(l125:s553:k916:d1:s0)		iTemp619 [k637 lr553:553 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l126:s554:k917:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l126:s555:k918:d1:s0)		iTemp620 [k638 lr555:555 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l127:s556:k919:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l127:s557:k920:d1:s0)		iTemp621 [k639 lr557:557 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l128:s558:k921:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l128:s559:k922:d1:s0)		iTemp622 [k640 lr559:559 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l129:s560:k923:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l129:s561:k924:d1:s0)		iTemp623 [k641 lr561:561 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l130:s562:k925:d1:s0)		iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15}[r0x00 r0x01 ] := 0x3 {unsigned-int literal}
intro.c(l131:s563:k926:d1:s0)		 goto _forcontinue_0($45)
intro.c(l132:s564:k927:d1:s0)	 _case_0_3($17) :
intro.c(l133:s565:k1045:d1:s0)		iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] := 0x0 {const-unsigned-char literal}
intro.c(l133:s566:k1048:d1:s0)		iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] := 0x0 {unsigned-int literal}
intro.c(l134:s568:k1012:d13:s0)	 preHeaderLbl7($66) :
intro.c(l134:s569:k947:d13:s0)		iTemp633 [k651 lr569:570 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register}[r0x06 ] = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] - 0x4 {const-unsigned-char literal}
intro.c(l134:s570:k948:d13:s0)		iTemp634 [k652 lr570:571 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x06 r0x07 ] = iTemp633 [k651 lr569:570 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register}[r0x06 ] * 0x8 {const-unsigned-char literal}
intro.c(l134:s571:k949:d13:s0)		iTemp635 [k653 lr571:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] = iTemp456 [k464 lr350:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp634 [k652 lr570:571 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x06 r0x07 ]
intro.c(l134:s572:k938:d13:s0)		iTemp627 [k645 lr572:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x08 r0x09 ] = iTemp368 [k375 lr284:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ]
intro.c(l134:s573:k932:d13:s0)		iTemp624 [k642 lr573:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0a ] = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x4 {const-unsigned-char literal}
intro.c(l134:s574:k1027:d13:s0)		iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] := 0x0 {const-unsigned-char literal}
intro.c(l134:s576:k931:d14:s0)	 _forbody_9($40) :
intro.c(l135:s577:k933:d14:s0)		if iTemp624 [k642 lr573:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0a ] == 0 goto _iffalse_2($19)
intro.c(l136:s578:k940:d14:s0)		iTemp629 [k647 lr578:579 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] = iTemp627 [k645 lr572:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x08 r0x09 ] + iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ]
intro.c(l136:s579:k941:d14:s0)		iTemp630 [k648 lr579:580 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ] = @[iTemp629 [k647 lr578:579 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] + 0x0 {const-unsigned-char literal}]
intro.c(l136:s580:k942:d14:s0)		send iTemp630 [k648 lr579:580 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ]{argreg = 1}
intro.c(l136:s581:k943:d14:s0)		iTemp631 [k649 lr581:581 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l136:s582:k944:d14:s0)		 goto _forcontinue_9($41)
intro.c(l136:s583:k945:d14:s0)	 _iffalse_2($19) :
intro.c(l138:s584:k951:d14:s0)		iTemp637 [k655 lr584:585 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] = iTemp635 [k653 lr571:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] + iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ]
intro.c(l138:s585:k952:d14:s0)		iTemp638 [k656 lr585:586 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ] = @[iTemp637 [k655 lr584:585 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] + 0x0 {const-unsigned-char literal}]
intro.c(l138:s586:k953:d14:s0)		send iTemp638 [k656 lr585:586 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ]{argreg = 1}
intro.c(l138:s587:k954:d14:s0)		iTemp639 [k657 lr587:587 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l138:s588:k956:d14:s0)	 _forcontinue_9($41) :
intro.c(l134:s589:k958:d14:s0)		iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] = iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] + 0x1 {const-unsigned-char literal}
intro.c(l134:s590:k960:d14:s0)		iTemp642 [k660 lr590:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] < 0x8 {const-unsigned-char literal}
intro.c(l134:s591:k961:d14:s0)		if iTemp642 [k660 lr590:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forbody_9($40)
intro.c(l133:s592:k1049:d13:s0)		iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] = iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] + 0x8 {const-unsigned-char literal}
intro.c(l133:s593:k966:d13:s0)		iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] + 0x1 {const-unsigned-char literal}
intro.c(l133:s594:k968:d13:s0)		iTemp645 [k663 lr594:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x8 {const-unsigned-char literal}
intro.c(l133:s595:k969:d13:s0)		if iTemp645 [k663 lr594:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl7($66)
intro.c(l141:s596:k972:d1:s0)		send 0x8c {const-unsigned-char literal}{argreg = 1}
intro.c(l141:s597:k973:d1:s0)		iTemp646 [k664 lr597:597 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l142:s598:k974:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l142:s599:k975:d1:s0)		iTemp647 [k665 lr599:599 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l143:s600:k976:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l143:s601:k977:d1:s0)		iTemp648 [k666 lr601:601 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l144:s602:k978:d1:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
intro.c(l144:s603:k979:d1:s0)		iTemp649 [k667 lr603:603 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l145:s604:k980:d1:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
intro.c(l145:s605:k981:d1:s0)		iTemp650 [k668 lr605:605 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l146:s606:k982:d1:s0)		send 0xcc {const-unsigned-char literal}{argreg = 1}
intro.c(l146:s607:k983:d1:s0)		iTemp651 [k669 lr607:607 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l147:s608:k984:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l147:s609:k985:d1:s0)		iTemp652 [k670 lr609:609 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l148:s610:k986:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l148:s611:k987:d1:s0)		iTemp653 [k671 lr611:611 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l149:s612:k988:d1:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
intro.c(l149:s613:k989:d1:s0)		iTemp654 [k672 lr613:613 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l150:s614:k990:d1:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
intro.c(l150:s615:k991:d1:s0)		iTemp655 [k673 lr615:615 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l151:s616:k992:d1:s0)		iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15}[r0x00 r0x01 ] := 0x0 {unsigned-int literal}
intro.c(l153:s617:k995:d1:s0)	 _forcontinue_0($45) :
intro.c(l67:s618:k997:d1:s0)		iTemp657 [k675 lr400:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_x_1_15}[r0x02 ] = iTemp657 [k675 lr400:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_x_1_15}[r0x02 ] + 0x1 {const-unsigned-char literal}
intro.c(l67:s619:k999:d1:s0)		iTemp658 [k676 lr619:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp657 [k675 lr400:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_x_1_15}[r0x02 ] < 0x64 {const-unsigned-char literal}
intro.c(l67:s620:k1000:d1:s0)		if iTemp658 [k676 lr619:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl0($48)
intro.c(l67:s621:k1003:d0:s0)	 _return($46) :
intro.c(l67:s622:k1004:d0:s0)		eproc _intro [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( ) fixed}

----------------------------------------------------------------
Basic Block preHeaderLbl5 : loop Depth = 13 noPath = 0 , lastinLoop = 0
depth 1st num 30 : bbnum = 29 1st iCode = 526 , last iCode = 528
visited 1 : hasFcall = 0

defines bitVector :bitvector Size = 1073 bSize = 135
Bits on { (883) (1024) }

local defines bitVector :bitvector Size = 1073 bSize = 135
Bits on { (883) (1024) }

pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

in pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

inDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1034) (1039) (1040) (1043) (1044) (1049) (1050) }

outDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1024) (1034) (1039) (1040) (1043) (1044) (1049) (1050) }

usesDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (506) (1043) (1044) }

----------------------------------------------------------------
intro.c(l116:s526:k1010:d13:s0)	 preHeaderLbl5($61) :
intro.c(l116:s527:k883:d13:s0)		iTemp603 [k621 lr527:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] = iTemp368 [k375 lr284:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp602 [k620 lr524:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ]
intro.c(l116:s528:k1024:d13:s0)		iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x08 ] := 0x0 {const-unsigned-char literal}
intro.c(l116:s530:k880:d14:s0)	 _forbody_7($36) :
intro.c(l117:s531:k885:d14:s0)		iTemp605 [k623 lr531:532 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x09 r0x0a ] = iTemp603 [k621 lr527:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] + iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x08 ]
intro.c(l117:s532:k886:d14:s0)		iTemp606 [k624 lr532:533 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x09 ] = @[iTemp605 [k623 lr531:532 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x09 r0x0a ] + 0x0 {const-unsigned-char literal}]
intro.c(l117:s533:k887:d14:s0)		send iTemp606 [k624 lr532:533 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x09 ]{argreg = 1}
intro.c(l117:s534:k888:d14:s0)		iTemp607 [k625 lr534:534 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l116:s535:k891:d14:s0)		iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x08 ] = iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x08 ] + 0x1 {const-unsigned-char literal}
intro.c(l116:s536:k893:d14:s0)		iTemp610 [k628 lr536:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x08 ] < 0x8 {const-unsigned-char literal}
intro.c(l116:s537:k894:d14:s0)		if iTemp610 [k628 lr536:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forbody_7($36)
intro.c(l115:s538:k1044:d13:s0)		iTemp602 [k620 lr524:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] = iTemp602 [k620 lr524:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] + 0x8 {const-unsigned-char literal}
intro.c(l115:s539:k899:d13:s0)		iTemp612 [k630 lr523:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] = iTemp612 [k630 lr523:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] + 0x1 {const-unsigned-char literal}
intro.c(l115:s540:k901:d13:s0)		iTemp613 [k631 lr540:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp612 [k630 lr523:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x4 {const-unsigned-char literal}
intro.c(l115:s541:k902:d13:s0)		if iTemp613 [k631 lr540:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl5($61)
intro.c(l120:s542:k905:d1:s0)		send 0x88 {const-unsigned-char literal}{argreg = 1}
intro.c(l120:s543:k906:d1:s0)		iTemp614 [k632 lr543:543 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l121:s544:k907:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l121:s545:k908:d1:s0)		iTemp615 [k633 lr545:545 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l122:s546:k909:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l122:s547:k910:d1:s0)		iTemp616 [k634 lr547:547 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l123:s548:k911:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l123:s549:k912:d1:s0)		iTemp617 [k635 lr549:549 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l124:s550:k913:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l124:s551:k914:d1:s0)		iTemp618 [k636 lr551:551 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l125:s552:k915:d1:s0)		send 0xc8 {const-unsigned-char literal}{argreg = 1}
intro.c(l125:s553:k916:d1:s0)		iTemp619 [k637 lr553:553 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l126:s554:k917:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l126:s555:k918:d1:s0)		iTemp620 [k638 lr555:555 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l127:s556:k919:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l127:s557:k920:d1:s0)		iTemp621 [k639 lr557:557 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l128:s558:k921:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l128:s559:k922:d1:s0)		iTemp622 [k640 lr559:559 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l129:s560:k923:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l129:s561:k924:d1:s0)		iTemp623 [k641 lr561:561 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l130:s562:k925:d1:s0)		iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15}[r0x00 r0x01 ] := 0x3 {unsigned-int literal}
intro.c(l131:s563:k926:d1:s0)		 goto _forcontinue_0($45)
intro.c(l132:s564:k927:d1:s0)	 _case_0_3($17) :
intro.c(l133:s565:k1045:d1:s0)		iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] := 0x0 {const-unsigned-char literal}
intro.c(l133:s566:k1048:d1:s0)		iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] := 0x0 {unsigned-int literal}
intro.c(l134:s568:k1012:d13:s0)	 preHeaderLbl7($66) :
intro.c(l134:s569:k947:d13:s0)		iTemp633 [k651 lr569:570 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register}[r0x06 ] = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] - 0x4 {const-unsigned-char literal}
intro.c(l134:s570:k948:d13:s0)		iTemp634 [k652 lr570:571 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x06 r0x07 ] = iTemp633 [k651 lr569:570 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register}[r0x06 ] * 0x8 {const-unsigned-char literal}
intro.c(l134:s571:k949:d13:s0)		iTemp635 [k653 lr571:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] = iTemp456 [k464 lr350:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp634 [k652 lr570:571 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x06 r0x07 ]
intro.c(l134:s572:k938:d13:s0)		iTemp627 [k645 lr572:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x08 r0x09 ] = iTemp368 [k375 lr284:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ]
intro.c(l134:s573:k932:d13:s0)		iTemp624 [k642 lr573:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0a ] = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x4 {const-unsigned-char literal}
intro.c(l134:s574:k1027:d13:s0)		iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] := 0x0 {const-unsigned-char literal}
intro.c(l134:s576:k931:d14:s0)	 _forbody_9($40) :
intro.c(l135:s577:k933:d14:s0)		if iTemp624 [k642 lr573:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0a ] == 0 goto _iffalse_2($19)
intro.c(l136:s578:k940:d14:s0)		iTemp629 [k647 lr578:579 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] = iTemp627 [k645 lr572:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x08 r0x09 ] + iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ]
intro.c(l136:s579:k941:d14:s0)		iTemp630 [k648 lr579:580 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ] = @[iTemp629 [k647 lr578:579 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] + 0x0 {const-unsigned-char literal}]
intro.c(l136:s580:k942:d14:s0)		send iTemp630 [k648 lr579:580 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ]{argreg = 1}
intro.c(l136:s581:k943:d14:s0)		iTemp631 [k649 lr581:581 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l136:s582:k944:d14:s0)		 goto _forcontinue_9($41)
intro.c(l136:s583:k945:d14:s0)	 _iffalse_2($19) :
intro.c(l138:s584:k951:d14:s0)		iTemp637 [k655 lr584:585 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] = iTemp635 [k653 lr571:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] + iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ]
intro.c(l138:s585:k952:d14:s0)		iTemp638 [k656 lr585:586 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ] = @[iTemp637 [k655 lr584:585 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] + 0x0 {const-unsigned-char literal}]
intro.c(l138:s586:k953:d14:s0)		send iTemp638 [k656 lr585:586 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ]{argreg = 1}
intro.c(l138:s587:k954:d14:s0)		iTemp639 [k657 lr587:587 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l138:s588:k956:d14:s0)	 _forcontinue_9($41) :
intro.c(l134:s589:k958:d14:s0)		iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] = iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] + 0x1 {const-unsigned-char literal}
intro.c(l134:s590:k960:d14:s0)		iTemp642 [k660 lr590:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] < 0x8 {const-unsigned-char literal}
intro.c(l134:s591:k961:d14:s0)		if iTemp642 [k660 lr590:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forbody_9($40)
intro.c(l133:s592:k1049:d13:s0)		iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] = iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] + 0x8 {const-unsigned-char literal}
intro.c(l133:s593:k966:d13:s0)		iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] + 0x1 {const-unsigned-char literal}
intro.c(l133:s594:k968:d13:s0)		iTemp645 [k663 lr594:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x8 {const-unsigned-char literal}
intro.c(l133:s595:k969:d13:s0)		if iTemp645 [k663 lr594:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl7($66)
intro.c(l141:s596:k972:d1:s0)		send 0x8c {const-unsigned-char literal}{argreg = 1}
intro.c(l141:s597:k973:d1:s0)		iTemp646 [k664 lr597:597 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l142:s598:k974:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l142:s599:k975:d1:s0)		iTemp647 [k665 lr599:599 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l143:s600:k976:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l143:s601:k977:d1:s0)		iTemp648 [k666 lr601:601 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l144:s602:k978:d1:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
intro.c(l144:s603:k979:d1:s0)		iTemp649 [k667 lr603:603 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l145:s604:k980:d1:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
intro.c(l145:s605:k981:d1:s0)		iTemp650 [k668 lr605:605 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l146:s606:k982:d1:s0)		send 0xcc {const-unsigned-char literal}{argreg = 1}
intro.c(l146:s607:k983:d1:s0)		iTemp651 [k669 lr607:607 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l147:s608:k984:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l147:s609:k985:d1:s0)		iTemp652 [k670 lr609:609 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l148:s610:k986:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l148:s611:k987:d1:s0)		iTemp653 [k671 lr611:611 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l149:s612:k988:d1:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
intro.c(l149:s613:k989:d1:s0)		iTemp654 [k672 lr613:613 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l150:s614:k990:d1:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
intro.c(l150:s615:k991:d1:s0)		iTemp655 [k673 lr615:615 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l151:s616:k992:d1:s0)		iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15}[r0x00 r0x01 ] := 0x0 {unsigned-int literal}
intro.c(l153:s617:k995:d1:s0)	 _forcontinue_0($45) :
intro.c(l67:s618:k997:d1:s0)		iTemp657 [k675 lr400:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_x_1_15}[r0x02 ] = iTemp657 [k675 lr400:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_x_1_15}[r0x02 ] + 0x1 {const-unsigned-char literal}
intro.c(l67:s619:k999:d1:s0)		iTemp658 [k676 lr619:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp657 [k675 lr400:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_x_1_15}[r0x02 ] < 0x64 {const-unsigned-char literal}
intro.c(l67:s620:k1000:d1:s0)		if iTemp658 [k676 lr619:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl0($48)
intro.c(l67:s621:k1003:d0:s0)	 _return($46) :
intro.c(l67:s622:k1004:d0:s0)		eproc _intro [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( ) fixed}

----------------------------------------------------------------
Basic Block preHeaderLbl35 : loop Depth = 13 noPath = 0 , lastinLoop = 0
depth 1st num 31 : bbnum = 30 1st iCode = 529 , last iCode = 529
visited 1 : hasFcall = 0

defines bitVector :bitvector Size = 1073 bSize = 135
Bits on { }

local defines bitVector :
pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

in pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

inDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1024) (1034) (1039) (1040) (1043) (1044) (1049) (1050) }

outDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1024) (1034) (1039) (1040) (1043) (1044) (1049) (1050) }

usesDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { }

----------------------------------------------------------------
intro.c(l116:s529:k1068:d13:s0)	 preHeaderLbl35($117) :
intro.c(l116:s530:k880:d14:s0)	 _forbody_7($36) :
intro.c(l117:s531:k885:d14:s0)		iTemp605 [k623 lr531:532 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x09 r0x0a ] = iTemp603 [k621 lr527:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] + iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x08 ]
intro.c(l117:s532:k886:d14:s0)		iTemp606 [k624 lr532:533 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x09 ] = @[iTemp605 [k623 lr531:532 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x09 r0x0a ] + 0x0 {const-unsigned-char literal}]
intro.c(l117:s533:k887:d14:s0)		send iTemp606 [k624 lr532:533 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x09 ]{argreg = 1}
intro.c(l117:s534:k888:d14:s0)		iTemp607 [k625 lr534:534 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l116:s535:k891:d14:s0)		iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x08 ] = iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x08 ] + 0x1 {const-unsigned-char literal}
intro.c(l116:s536:k893:d14:s0)		iTemp610 [k628 lr536:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x08 ] < 0x8 {const-unsigned-char literal}
intro.c(l116:s537:k894:d14:s0)		if iTemp610 [k628 lr536:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forbody_7($36)
intro.c(l115:s538:k1044:d13:s0)		iTemp602 [k620 lr524:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] = iTemp602 [k620 lr524:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] + 0x8 {const-unsigned-char literal}
intro.c(l115:s539:k899:d13:s0)		iTemp612 [k630 lr523:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] = iTemp612 [k630 lr523:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] + 0x1 {const-unsigned-char literal}
intro.c(l115:s540:k901:d13:s0)		iTemp613 [k631 lr540:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp612 [k630 lr523:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x4 {const-unsigned-char literal}
intro.c(l115:s541:k902:d13:s0)		if iTemp613 [k631 lr540:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl5($61)
intro.c(l120:s542:k905:d1:s0)		send 0x88 {const-unsigned-char literal}{argreg = 1}
intro.c(l120:s543:k906:d1:s0)		iTemp614 [k632 lr543:543 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l121:s544:k907:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l121:s545:k908:d1:s0)		iTemp615 [k633 lr545:545 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l122:s546:k909:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l122:s547:k910:d1:s0)		iTemp616 [k634 lr547:547 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l123:s548:k911:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l123:s549:k912:d1:s0)		iTemp617 [k635 lr549:549 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l124:s550:k913:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l124:s551:k914:d1:s0)		iTemp618 [k636 lr551:551 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l125:s552:k915:d1:s0)		send 0xc8 {const-unsigned-char literal}{argreg = 1}
intro.c(l125:s553:k916:d1:s0)		iTemp619 [k637 lr553:553 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l126:s554:k917:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l126:s555:k918:d1:s0)		iTemp620 [k638 lr555:555 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l127:s556:k919:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l127:s557:k920:d1:s0)		iTemp621 [k639 lr557:557 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l128:s558:k921:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l128:s559:k922:d1:s0)		iTemp622 [k640 lr559:559 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l129:s560:k923:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l129:s561:k924:d1:s0)		iTemp623 [k641 lr561:561 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l130:s562:k925:d1:s0)		iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15}[r0x00 r0x01 ] := 0x3 {unsigned-int literal}
intro.c(l131:s563:k926:d1:s0)		 goto _forcontinue_0($45)
intro.c(l132:s564:k927:d1:s0)	 _case_0_3($17) :
intro.c(l133:s565:k1045:d1:s0)		iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] := 0x0 {const-unsigned-char literal}
intro.c(l133:s566:k1048:d1:s0)		iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] := 0x0 {unsigned-int literal}
intro.c(l134:s568:k1012:d13:s0)	 preHeaderLbl7($66) :
intro.c(l134:s569:k947:d13:s0)		iTemp633 [k651 lr569:570 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register}[r0x06 ] = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] - 0x4 {const-unsigned-char literal}
intro.c(l134:s570:k948:d13:s0)		iTemp634 [k652 lr570:571 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x06 r0x07 ] = iTemp633 [k651 lr569:570 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register}[r0x06 ] * 0x8 {const-unsigned-char literal}
intro.c(l134:s571:k949:d13:s0)		iTemp635 [k653 lr571:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] = iTemp456 [k464 lr350:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp634 [k652 lr570:571 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x06 r0x07 ]
intro.c(l134:s572:k938:d13:s0)		iTemp627 [k645 lr572:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x08 r0x09 ] = iTemp368 [k375 lr284:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ]
intro.c(l134:s573:k932:d13:s0)		iTemp624 [k642 lr573:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0a ] = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x4 {const-unsigned-char literal}
intro.c(l134:s574:k1027:d13:s0)		iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] := 0x0 {const-unsigned-char literal}
intro.c(l134:s576:k931:d14:s0)	 _forbody_9($40) :
intro.c(l135:s577:k933:d14:s0)		if iTemp624 [k642 lr573:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0a ] == 0 goto _iffalse_2($19)
intro.c(l136:s578:k940:d14:s0)		iTemp629 [k647 lr578:579 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] = iTemp627 [k645 lr572:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x08 r0x09 ] + iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ]
intro.c(l136:s579:k941:d14:s0)		iTemp630 [k648 lr579:580 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ] = @[iTemp629 [k647 lr578:579 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] + 0x0 {const-unsigned-char literal}]
intro.c(l136:s580:k942:d14:s0)		send iTemp630 [k648 lr579:580 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ]{argreg = 1}
intro.c(l136:s581:k943:d14:s0)		iTemp631 [k649 lr581:581 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l136:s582:k944:d14:s0)		 goto _forcontinue_9($41)
intro.c(l136:s583:k945:d14:s0)	 _iffalse_2($19) :
intro.c(l138:s584:k951:d14:s0)		iTemp637 [k655 lr584:585 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] = iTemp635 [k653 lr571:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] + iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ]
intro.c(l138:s585:k952:d14:s0)		iTemp638 [k656 lr585:586 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ] = @[iTemp637 [k655 lr584:585 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] + 0x0 {const-unsigned-char literal}]
intro.c(l138:s586:k953:d14:s0)		send iTemp638 [k656 lr585:586 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ]{argreg = 1}
intro.c(l138:s587:k954:d14:s0)		iTemp639 [k657 lr587:587 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l138:s588:k956:d14:s0)	 _forcontinue_9($41) :
intro.c(l134:s589:k958:d14:s0)		iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] = iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] + 0x1 {const-unsigned-char literal}
intro.c(l134:s590:k960:d14:s0)		iTemp642 [k660 lr590:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] < 0x8 {const-unsigned-char literal}
intro.c(l134:s591:k961:d14:s0)		if iTemp642 [k660 lr590:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forbody_9($40)
intro.c(l133:s592:k1049:d13:s0)		iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] = iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] + 0x8 {const-unsigned-char literal}
intro.c(l133:s593:k966:d13:s0)		iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] + 0x1 {const-unsigned-char literal}
intro.c(l133:s594:k968:d13:s0)		iTemp645 [k663 lr594:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x8 {const-unsigned-char literal}
intro.c(l133:s595:k969:d13:s0)		if iTemp645 [k663 lr594:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl7($66)
intro.c(l141:s596:k972:d1:s0)		send 0x8c {const-unsigned-char literal}{argreg = 1}
intro.c(l141:s597:k973:d1:s0)		iTemp646 [k664 lr597:597 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l142:s598:k974:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l142:s599:k975:d1:s0)		iTemp647 [k665 lr599:599 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l143:s600:k976:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l143:s601:k977:d1:s0)		iTemp648 [k666 lr601:601 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l144:s602:k978:d1:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
intro.c(l144:s603:k979:d1:s0)		iTemp649 [k667 lr603:603 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l145:s604:k980:d1:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
intro.c(l145:s605:k981:d1:s0)		iTemp650 [k668 lr605:605 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l146:s606:k982:d1:s0)		send 0xcc {const-unsigned-char literal}{argreg = 1}
intro.c(l146:s607:k983:d1:s0)		iTemp651 [k669 lr607:607 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l147:s608:k984:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l147:s609:k985:d1:s0)		iTemp652 [k670 lr609:609 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l148:s610:k986:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l148:s611:k987:d1:s0)		iTemp653 [k671 lr611:611 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l149:s612:k988:d1:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
intro.c(l149:s613:k989:d1:s0)		iTemp654 [k672 lr613:613 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l150:s614:k990:d1:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
intro.c(l150:s615:k991:d1:s0)		iTemp655 [k673 lr615:615 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l151:s616:k992:d1:s0)		iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15}[r0x00 r0x01 ] := 0x0 {unsigned-int literal}
intro.c(l153:s617:k995:d1:s0)	 _forcontinue_0($45) :
intro.c(l67:s618:k997:d1:s0)		iTemp657 [k675 lr400:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_x_1_15}[r0x02 ] = iTemp657 [k675 lr400:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_x_1_15}[r0x02 ] + 0x1 {const-unsigned-char literal}
intro.c(l67:s619:k999:d1:s0)		iTemp658 [k676 lr619:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp657 [k675 lr400:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_x_1_15}[r0x02 ] < 0x64 {const-unsigned-char literal}
intro.c(l67:s620:k1000:d1:s0)		if iTemp658 [k676 lr619:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl0($48)
intro.c(l67:s621:k1003:d0:s0)	 _return($46) :
intro.c(l67:s622:k1004:d0:s0)		eproc _intro [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( ) fixed}

----------------------------------------------------------------
Basic Block _forbody_7 : loop Depth = 14 noPath = 0 , lastinLoop = 0
depth 1st num 32 : bbnum = 31 1st iCode = 530 , last iCode = 537
visited 1 : hasFcall = 1

defines bitVector :bitvector Size = 1073 bSize = 135
Bits on { (885) (886) (891) (893) }

local defines bitVector :bitvector Size = 1073 bSize = 135
Bits on { (885) (886) (888) (891) (893) }

pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

in pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

inDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1024) (1034) (1039) (1040) (1043) (1044) (1049) (1050) }

outDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1034) (1039) (1040) (1043) (1044) (1049) (1050) }

usesDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (883) (885) (886) (888) (891) (893) (1024) }

----------------------------------------------------------------
intro.c(l116:s530:k880:d14:s0)	 _forbody_7($36) :
intro.c(l117:s531:k885:d14:s0)		iTemp605 [k623 lr531:532 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x09 r0x0a ] = iTemp603 [k621 lr527:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] + iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x08 ]
intro.c(l117:s532:k886:d14:s0)		iTemp606 [k624 lr532:533 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x09 ] = @[iTemp605 [k623 lr531:532 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x09 r0x0a ] + 0x0 {const-unsigned-char literal}]
intro.c(l117:s533:k887:d14:s0)		send iTemp606 [k624 lr532:533 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x09 ]{argreg = 1}
intro.c(l117:s534:k888:d14:s0)		iTemp607 [k625 lr534:534 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l116:s535:k891:d14:s0)		iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x08 ] = iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x08 ] + 0x1 {const-unsigned-char literal}
intro.c(l116:s536:k893:d14:s0)		iTemp610 [k628 lr536:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp609 [k627 lr528:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x08 ] < 0x8 {const-unsigned-char literal}
intro.c(l116:s537:k894:d14:s0)		if iTemp610 [k628 lr536:537 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forbody_7($36)
intro.c(l115:s538:k1044:d13:s0)		iTemp602 [k620 lr524:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] = iTemp602 [k620 lr524:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] + 0x8 {const-unsigned-char literal}
intro.c(l115:s539:k899:d13:s0)		iTemp612 [k630 lr523:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] = iTemp612 [k630 lr523:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] + 0x1 {const-unsigned-char literal}
intro.c(l115:s540:k901:d13:s0)		iTemp613 [k631 lr540:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp612 [k630 lr523:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x4 {const-unsigned-char literal}
intro.c(l115:s541:k902:d13:s0)		if iTemp613 [k631 lr540:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl5($61)
intro.c(l120:s542:k905:d1:s0)		send 0x88 {const-unsigned-char literal}{argreg = 1}
intro.c(l120:s543:k906:d1:s0)		iTemp614 [k632 lr543:543 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l121:s544:k907:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l121:s545:k908:d1:s0)		iTemp615 [k633 lr545:545 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l122:s546:k909:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l122:s547:k910:d1:s0)		iTemp616 [k634 lr547:547 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l123:s548:k911:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l123:s549:k912:d1:s0)		iTemp617 [k635 lr549:549 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l124:s550:k913:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l124:s551:k914:d1:s0)		iTemp618 [k636 lr551:551 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l125:s552:k915:d1:s0)		send 0xc8 {const-unsigned-char literal}{argreg = 1}
intro.c(l125:s553:k916:d1:s0)		iTemp619 [k637 lr553:553 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l126:s554:k917:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l126:s555:k918:d1:s0)		iTemp620 [k638 lr555:555 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l127:s556:k919:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l127:s557:k920:d1:s0)		iTemp621 [k639 lr557:557 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l128:s558:k921:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l128:s559:k922:d1:s0)		iTemp622 [k640 lr559:559 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l129:s560:k923:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l129:s561:k924:d1:s0)		iTemp623 [k641 lr561:561 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l130:s562:k925:d1:s0)		iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15}[r0x00 r0x01 ] := 0x3 {unsigned-int literal}
intro.c(l131:s563:k926:d1:s0)		 goto _forcontinue_0($45)
intro.c(l132:s564:k927:d1:s0)	 _case_0_3($17) :
intro.c(l133:s565:k1045:d1:s0)		iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] := 0x0 {const-unsigned-char literal}
intro.c(l133:s566:k1048:d1:s0)		iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] := 0x0 {unsigned-int literal}
intro.c(l134:s568:k1012:d13:s0)	 preHeaderLbl7($66) :
intro.c(l134:s569:k947:d13:s0)		iTemp633 [k651 lr569:570 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register}[r0x06 ] = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] - 0x4 {const-unsigned-char literal}
intro.c(l134:s570:k948:d13:s0)		iTemp634 [k652 lr570:571 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x06 r0x07 ] = iTemp633 [k651 lr569:570 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register}[r0x06 ] * 0x8 {const-unsigned-char literal}
intro.c(l134:s571:k949:d13:s0)		iTemp635 [k653 lr571:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] = iTemp456 [k464 lr350:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp634 [k652 lr570:571 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x06 r0x07 ]
intro.c(l134:s572:k938:d13:s0)		iTemp627 [k645 lr572:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x08 r0x09 ] = iTemp368 [k375 lr284:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ]
intro.c(l134:s573:k932:d13:s0)		iTemp624 [k642 lr573:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0a ] = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x4 {const-unsigned-char literal}
intro.c(l134:s574:k1027:d13:s0)		iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] := 0x0 {const-unsigned-char literal}
intro.c(l134:s576:k931:d14:s0)	 _forbody_9($40) :
intro.c(l135:s577:k933:d14:s0)		if iTemp624 [k642 lr573:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0a ] == 0 goto _iffalse_2($19)
intro.c(l136:s578:k940:d14:s0)		iTemp629 [k647 lr578:579 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] = iTemp627 [k645 lr572:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x08 r0x09 ] + iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ]
intro.c(l136:s579:k941:d14:s0)		iTemp630 [k648 lr579:580 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ] = @[iTemp629 [k647 lr578:579 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] + 0x0 {const-unsigned-char literal}]
intro.c(l136:s580:k942:d14:s0)		send iTemp630 [k648 lr579:580 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ]{argreg = 1}
intro.c(l136:s581:k943:d14:s0)		iTemp631 [k649 lr581:581 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l136:s582:k944:d14:s0)		 goto _forcontinue_9($41)
intro.c(l136:s583:k945:d14:s0)	 _iffalse_2($19) :
intro.c(l138:s584:k951:d14:s0)		iTemp637 [k655 lr584:585 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] = iTemp635 [k653 lr571:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] + iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ]
intro.c(l138:s585:k952:d14:s0)		iTemp638 [k656 lr585:586 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ] = @[iTemp637 [k655 lr584:585 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] + 0x0 {const-unsigned-char literal}]
intro.c(l138:s586:k953:d14:s0)		send iTemp638 [k656 lr585:586 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ]{argreg = 1}
intro.c(l138:s587:k954:d14:s0)		iTemp639 [k657 lr587:587 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l138:s588:k956:d14:s0)	 _forcontinue_9($41) :
intro.c(l134:s589:k958:d14:s0)		iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] = iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] + 0x1 {const-unsigned-char literal}
intro.c(l134:s590:k960:d14:s0)		iTemp642 [k660 lr590:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] < 0x8 {const-unsigned-char literal}
intro.c(l134:s591:k961:d14:s0)		if iTemp642 [k660 lr590:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forbody_9($40)
intro.c(l133:s592:k1049:d13:s0)		iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] = iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] + 0x8 {const-unsigned-char literal}
intro.c(l133:s593:k966:d13:s0)		iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] + 0x1 {const-unsigned-char literal}
intro.c(l133:s594:k968:d13:s0)		iTemp645 [k663 lr594:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x8 {const-unsigned-char literal}
intro.c(l133:s595:k969:d13:s0)		if iTemp645 [k663 lr594:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl7($66)
intro.c(l141:s596:k972:d1:s0)		send 0x8c {const-unsigned-char literal}{argreg = 1}
intro.c(l141:s597:k973:d1:s0)		iTemp646 [k664 lr597:597 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l142:s598:k974:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l142:s599:k975:d1:s0)		iTemp647 [k665 lr599:599 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l143:s600:k976:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l143:s601:k977:d1:s0)		iTemp648 [k666 lr601:601 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l144:s602:k978:d1:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
intro.c(l144:s603:k979:d1:s0)		iTemp649 [k667 lr603:603 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l145:s604:k980:d1:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
intro.c(l145:s605:k981:d1:s0)		iTemp650 [k668 lr605:605 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l146:s606:k982:d1:s0)		send 0xcc {const-unsigned-char literal}{argreg = 1}
intro.c(l146:s607:k983:d1:s0)		iTemp651 [k669 lr607:607 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l147:s608:k984:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l147:s609:k985:d1:s0)		iTemp652 [k670 lr609:609 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l148:s610:k986:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l148:s611:k987:d1:s0)		iTemp653 [k671 lr611:611 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l149:s612:k988:d1:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
intro.c(l149:s613:k989:d1:s0)		iTemp654 [k672 lr613:613 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l150:s614:k990:d1:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
intro.c(l150:s615:k991:d1:s0)		iTemp655 [k673 lr615:615 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l151:s616:k992:d1:s0)		iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15}[r0x00 r0x01 ] := 0x0 {unsigned-int literal}
intro.c(l153:s617:k995:d1:s0)	 _forcontinue_0($45) :
intro.c(l67:s618:k997:d1:s0)		iTemp657 [k675 lr400:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_x_1_15}[r0x02 ] = iTemp657 [k675 lr400:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_x_1_15}[r0x02 ] + 0x1 {const-unsigned-char literal}
intro.c(l67:s619:k999:d1:s0)		iTemp658 [k676 lr619:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp657 [k675 lr400:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_x_1_15}[r0x02 ] < 0x64 {const-unsigned-char literal}
intro.c(l67:s620:k1000:d1:s0)		if iTemp658 [k676 lr619:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl0($48)
intro.c(l67:s621:k1003:d0:s0)	 _return($46) :
intro.c(l67:s622:k1004:d0:s0)		eproc _intro [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( ) fixed}

----------------------------------------------------------------
Basic Block _eBBlock34 : loop Depth = 13 noPath = 0 , lastinLoop = 0
depth 1st num 33 : bbnum = 32 1st iCode = 538 , last iCode = 541
visited 1 : hasFcall = 0

defines bitVector :bitvector Size = 1073 bSize = 135
Bits on { (899) (901) (1044) }

local defines bitVector :bitvector Size = 1073 bSize = 135
Bits on { (899) (901) (1044) }

pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

in pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

inDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1034) (1039) (1040) (1043) (1044) (1049) (1050) }

outDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1034) (1039) (1044) (1049) (1050) }

usesDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (899) (901) (1040) (1043) }

----------------------------------------------------------------
intro.c(l115:s538:k1044:d13:s0)		iTemp602 [k620 lr524:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] = iTemp602 [k620 lr524:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] + 0x8 {const-unsigned-char literal}
intro.c(l115:s539:k899:d13:s0)		iTemp612 [k630 lr523:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] = iTemp612 [k630 lr523:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] + 0x1 {const-unsigned-char literal}
intro.c(l115:s540:k901:d13:s0)		iTemp613 [k631 lr540:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp612 [k630 lr523:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x4 {const-unsigned-char literal}
intro.c(l115:s541:k902:d13:s0)		if iTemp613 [k631 lr540:541 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl5($61)
intro.c(l120:s542:k905:d1:s0)		send 0x88 {const-unsigned-char literal}{argreg = 1}
intro.c(l120:s543:k906:d1:s0)		iTemp614 [k632 lr543:543 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l121:s544:k907:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l121:s545:k908:d1:s0)		iTemp615 [k633 lr545:545 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l122:s546:k909:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l122:s547:k910:d1:s0)		iTemp616 [k634 lr547:547 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l123:s548:k911:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l123:s549:k912:d1:s0)		iTemp617 [k635 lr549:549 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l124:s550:k913:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l124:s551:k914:d1:s0)		iTemp618 [k636 lr551:551 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l125:s552:k915:d1:s0)		send 0xc8 {const-unsigned-char literal}{argreg = 1}
intro.c(l125:s553:k916:d1:s0)		iTemp619 [k637 lr553:553 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l126:s554:k917:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l126:s555:k918:d1:s0)		iTemp620 [k638 lr555:555 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l127:s556:k919:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l127:s557:k920:d1:s0)		iTemp621 [k639 lr557:557 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l128:s558:k921:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l128:s559:k922:d1:s0)		iTemp622 [k640 lr559:559 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l129:s560:k923:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l129:s561:k924:d1:s0)		iTemp623 [k641 lr561:561 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l130:s562:k925:d1:s0)		iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15}[r0x00 r0x01 ] := 0x3 {unsigned-int literal}
intro.c(l131:s563:k926:d1:s0)		 goto _forcontinue_0($45)
intro.c(l132:s564:k927:d1:s0)	 _case_0_3($17) :
intro.c(l133:s565:k1045:d1:s0)		iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] := 0x0 {const-unsigned-char literal}
intro.c(l133:s566:k1048:d1:s0)		iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] := 0x0 {unsigned-int literal}
intro.c(l134:s568:k1012:d13:s0)	 preHeaderLbl7($66) :
intro.c(l134:s569:k947:d13:s0)		iTemp633 [k651 lr569:570 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register}[r0x06 ] = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] - 0x4 {const-unsigned-char literal}
intro.c(l134:s570:k948:d13:s0)		iTemp634 [k652 lr570:571 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x06 r0x07 ] = iTemp633 [k651 lr569:570 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register}[r0x06 ] * 0x8 {const-unsigned-char literal}
intro.c(l134:s571:k949:d13:s0)		iTemp635 [k653 lr571:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] = iTemp456 [k464 lr350:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp634 [k652 lr570:571 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x06 r0x07 ]
intro.c(l134:s572:k938:d13:s0)		iTemp627 [k645 lr572:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x08 r0x09 ] = iTemp368 [k375 lr284:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ]
intro.c(l134:s573:k932:d13:s0)		iTemp624 [k642 lr573:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0a ] = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x4 {const-unsigned-char literal}
intro.c(l134:s574:k1027:d13:s0)		iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] := 0x0 {const-unsigned-char literal}
intro.c(l134:s576:k931:d14:s0)	 _forbody_9($40) :
intro.c(l135:s577:k933:d14:s0)		if iTemp624 [k642 lr573:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0a ] == 0 goto _iffalse_2($19)
intro.c(l136:s578:k940:d14:s0)		iTemp629 [k647 lr578:579 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] = iTemp627 [k645 lr572:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x08 r0x09 ] + iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ]
intro.c(l136:s579:k941:d14:s0)		iTemp630 [k648 lr579:580 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ] = @[iTemp629 [k647 lr578:579 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] + 0x0 {const-unsigned-char literal}]
intro.c(l136:s580:k942:d14:s0)		send iTemp630 [k648 lr579:580 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ]{argreg = 1}
intro.c(l136:s581:k943:d14:s0)		iTemp631 [k649 lr581:581 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l136:s582:k944:d14:s0)		 goto _forcontinue_9($41)
intro.c(l136:s583:k945:d14:s0)	 _iffalse_2($19) :
intro.c(l138:s584:k951:d14:s0)		iTemp637 [k655 lr584:585 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] = iTemp635 [k653 lr571:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] + iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ]
intro.c(l138:s585:k952:d14:s0)		iTemp638 [k656 lr585:586 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ] = @[iTemp637 [k655 lr584:585 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] + 0x0 {const-unsigned-char literal}]
intro.c(l138:s586:k953:d14:s0)		send iTemp638 [k656 lr585:586 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ]{argreg = 1}
intro.c(l138:s587:k954:d14:s0)		iTemp639 [k657 lr587:587 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l138:s588:k956:d14:s0)	 _forcontinue_9($41) :
intro.c(l134:s589:k958:d14:s0)		iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] = iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] + 0x1 {const-unsigned-char literal}
intro.c(l134:s590:k960:d14:s0)		iTemp642 [k660 lr590:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] < 0x8 {const-unsigned-char literal}
intro.c(l134:s591:k961:d14:s0)		if iTemp642 [k660 lr590:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forbody_9($40)
intro.c(l133:s592:k1049:d13:s0)		iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] = iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] + 0x8 {const-unsigned-char literal}
intro.c(l133:s593:k966:d13:s0)		iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] + 0x1 {const-unsigned-char literal}
intro.c(l133:s594:k968:d13:s0)		iTemp645 [k663 lr594:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x8 {const-unsigned-char literal}
intro.c(l133:s595:k969:d13:s0)		if iTemp645 [k663 lr594:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl7($66)
intro.c(l141:s596:k972:d1:s0)		send 0x8c {const-unsigned-char literal}{argreg = 1}
intro.c(l141:s597:k973:d1:s0)		iTemp646 [k664 lr597:597 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l142:s598:k974:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l142:s599:k975:d1:s0)		iTemp647 [k665 lr599:599 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l143:s600:k976:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l143:s601:k977:d1:s0)		iTemp648 [k666 lr601:601 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l144:s602:k978:d1:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
intro.c(l144:s603:k979:d1:s0)		iTemp649 [k667 lr603:603 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l145:s604:k980:d1:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
intro.c(l145:s605:k981:d1:s0)		iTemp650 [k668 lr605:605 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l146:s606:k982:d1:s0)		send 0xcc {const-unsigned-char literal}{argreg = 1}
intro.c(l146:s607:k983:d1:s0)		iTemp651 [k669 lr607:607 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l147:s608:k984:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l147:s609:k985:d1:s0)		iTemp652 [k670 lr609:609 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l148:s610:k986:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l148:s611:k987:d1:s0)		iTemp653 [k671 lr611:611 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l149:s612:k988:d1:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
intro.c(l149:s613:k989:d1:s0)		iTemp654 [k672 lr613:613 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l150:s614:k990:d1:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
intro.c(l150:s615:k991:d1:s0)		iTemp655 [k673 lr615:615 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l151:s616:k992:d1:s0)		iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15}[r0x00 r0x01 ] := 0x0 {unsigned-int literal}
intro.c(l153:s617:k995:d1:s0)	 _forcontinue_0($45) :
intro.c(l67:s618:k997:d1:s0)		iTemp657 [k675 lr400:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_x_1_15}[r0x02 ] = iTemp657 [k675 lr400:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_x_1_15}[r0x02 ] + 0x1 {const-unsigned-char literal}
intro.c(l67:s619:k999:d1:s0)		iTemp658 [k676 lr619:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp657 [k675 lr400:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_x_1_15}[r0x02 ] < 0x64 {const-unsigned-char literal}
intro.c(l67:s620:k1000:d1:s0)		if iTemp658 [k676 lr619:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl0($48)
intro.c(l67:s621:k1003:d0:s0)	 _return($46) :
intro.c(l67:s622:k1004:d0:s0)		eproc _intro [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( ) fixed}

----------------------------------------------------------------
Basic Block _eBBlock35 : loop Depth = 1 noPath = 0 , lastinLoop = 0
depth 1st num 34 : bbnum = 33 1st iCode = 542 , last iCode = 563
visited 1 : hasFcall = 1

defines bitVector :bitvector Size = 1073 bSize = 135
Bits on { (925) }

local defines bitVector :bitvector Size = 1073 bSize = 135
Bits on { (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) }

pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

in pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

inDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1034) (1039) (1044) (1049) (1050) }

outDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (997) (999) (1034) (1039) (1044) (1049) (1050) }

usesDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) }

----------------------------------------------------------------
intro.c(l120:s542:k905:d1:s0)		send 0x88 {const-unsigned-char literal}{argreg = 1}
intro.c(l120:s543:k906:d1:s0)		iTemp614 [k632 lr543:543 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l121:s544:k907:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l121:s545:k908:d1:s0)		iTemp615 [k633 lr545:545 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l122:s546:k909:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l122:s547:k910:d1:s0)		iTemp616 [k634 lr547:547 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l123:s548:k911:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l123:s549:k912:d1:s0)		iTemp617 [k635 lr549:549 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l124:s550:k913:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l124:s551:k914:d1:s0)		iTemp618 [k636 lr551:551 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l125:s552:k915:d1:s0)		send 0xc8 {const-unsigned-char literal}{argreg = 1}
intro.c(l125:s553:k916:d1:s0)		iTemp619 [k637 lr553:553 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l126:s554:k917:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l126:s555:k918:d1:s0)		iTemp620 [k638 lr555:555 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l127:s556:k919:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l127:s557:k920:d1:s0)		iTemp621 [k639 lr557:557 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l128:s558:k921:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l128:s559:k922:d1:s0)		iTemp622 [k640 lr559:559 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l129:s560:k923:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l129:s561:k924:d1:s0)		iTemp623 [k641 lr561:561 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l130:s562:k925:d1:s0)		iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15}[r0x00 r0x01 ] := 0x3 {unsigned-int literal}
intro.c(l131:s563:k926:d1:s0)		 goto _forcontinue_0($45)
intro.c(l132:s564:k927:d1:s0)	 _case_0_3($17) :
intro.c(l133:s565:k1045:d1:s0)		iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] := 0x0 {const-unsigned-char literal}
intro.c(l133:s566:k1048:d1:s0)		iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] := 0x0 {unsigned-int literal}
intro.c(l134:s568:k1012:d13:s0)	 preHeaderLbl7($66) :
intro.c(l134:s569:k947:d13:s0)		iTemp633 [k651 lr569:570 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register}[r0x06 ] = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] - 0x4 {const-unsigned-char literal}
intro.c(l134:s570:k948:d13:s0)		iTemp634 [k652 lr570:571 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x06 r0x07 ] = iTemp633 [k651 lr569:570 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register}[r0x06 ] * 0x8 {const-unsigned-char literal}
intro.c(l134:s571:k949:d13:s0)		iTemp635 [k653 lr571:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] = iTemp456 [k464 lr350:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp634 [k652 lr570:571 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x06 r0x07 ]
intro.c(l134:s572:k938:d13:s0)		iTemp627 [k645 lr572:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x08 r0x09 ] = iTemp368 [k375 lr284:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ]
intro.c(l134:s573:k932:d13:s0)		iTemp624 [k642 lr573:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0a ] = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x4 {const-unsigned-char literal}
intro.c(l134:s574:k1027:d13:s0)		iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] := 0x0 {const-unsigned-char literal}
intro.c(l134:s576:k931:d14:s0)	 _forbody_9($40) :
intro.c(l135:s577:k933:d14:s0)		if iTemp624 [k642 lr573:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0a ] == 0 goto _iffalse_2($19)
intro.c(l136:s578:k940:d14:s0)		iTemp629 [k647 lr578:579 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] = iTemp627 [k645 lr572:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x08 r0x09 ] + iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ]
intro.c(l136:s579:k941:d14:s0)		iTemp630 [k648 lr579:580 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ] = @[iTemp629 [k647 lr578:579 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] + 0x0 {const-unsigned-char literal}]
intro.c(l136:s580:k942:d14:s0)		send iTemp630 [k648 lr579:580 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ]{argreg = 1}
intro.c(l136:s581:k943:d14:s0)		iTemp631 [k649 lr581:581 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l136:s582:k944:d14:s0)		 goto _forcontinue_9($41)
intro.c(l136:s583:k945:d14:s0)	 _iffalse_2($19) :
intro.c(l138:s584:k951:d14:s0)		iTemp637 [k655 lr584:585 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] = iTemp635 [k653 lr571:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] + iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ]
intro.c(l138:s585:k952:d14:s0)		iTemp638 [k656 lr585:586 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ] = @[iTemp637 [k655 lr584:585 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] + 0x0 {const-unsigned-char literal}]
intro.c(l138:s586:k953:d14:s0)		send iTemp638 [k656 lr585:586 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ]{argreg = 1}
intro.c(l138:s587:k954:d14:s0)		iTemp639 [k657 lr587:587 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l138:s588:k956:d14:s0)	 _forcontinue_9($41) :
intro.c(l134:s589:k958:d14:s0)		iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] = iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] + 0x1 {const-unsigned-char literal}
intro.c(l134:s590:k960:d14:s0)		iTemp642 [k660 lr590:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] < 0x8 {const-unsigned-char literal}
intro.c(l134:s591:k961:d14:s0)		if iTemp642 [k660 lr590:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forbody_9($40)
intro.c(l133:s592:k1049:d13:s0)		iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] = iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] + 0x8 {const-unsigned-char literal}
intro.c(l133:s593:k966:d13:s0)		iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] + 0x1 {const-unsigned-char literal}
intro.c(l133:s594:k968:d13:s0)		iTemp645 [k663 lr594:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x8 {const-unsigned-char literal}
intro.c(l133:s595:k969:d13:s0)		if iTemp645 [k663 lr594:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl7($66)
intro.c(l141:s596:k972:d1:s0)		send 0x8c {const-unsigned-char literal}{argreg = 1}
intro.c(l141:s597:k973:d1:s0)		iTemp646 [k664 lr597:597 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l142:s598:k974:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l142:s599:k975:d1:s0)		iTemp647 [k665 lr599:599 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l143:s600:k976:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l143:s601:k977:d1:s0)		iTemp648 [k666 lr601:601 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l144:s602:k978:d1:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
intro.c(l144:s603:k979:d1:s0)		iTemp649 [k667 lr603:603 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l145:s604:k980:d1:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
intro.c(l145:s605:k981:d1:s0)		iTemp650 [k668 lr605:605 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l146:s606:k982:d1:s0)		send 0xcc {const-unsigned-char literal}{argreg = 1}
intro.c(l146:s607:k983:d1:s0)		iTemp651 [k669 lr607:607 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l147:s608:k984:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l147:s609:k985:d1:s0)		iTemp652 [k670 lr609:609 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l148:s610:k986:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l148:s611:k987:d1:s0)		iTemp653 [k671 lr611:611 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l149:s612:k988:d1:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
intro.c(l149:s613:k989:d1:s0)		iTemp654 [k672 lr613:613 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l150:s614:k990:d1:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
intro.c(l150:s615:k991:d1:s0)		iTemp655 [k673 lr615:615 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l151:s616:k992:d1:s0)		iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15}[r0x00 r0x01 ] := 0x0 {unsigned-int literal}
intro.c(l153:s617:k995:d1:s0)	 _forcontinue_0($45) :
intro.c(l67:s618:k997:d1:s0)		iTemp657 [k675 lr400:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_x_1_15}[r0x02 ] = iTemp657 [k675 lr400:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_x_1_15}[r0x02 ] + 0x1 {const-unsigned-char literal}
intro.c(l67:s619:k999:d1:s0)		iTemp658 [k676 lr619:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp657 [k675 lr400:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_x_1_15}[r0x02 ] < 0x64 {const-unsigned-char literal}
intro.c(l67:s620:k1000:d1:s0)		if iTemp658 [k676 lr619:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl0($48)
intro.c(l67:s621:k1003:d0:s0)	 _return($46) :
intro.c(l67:s622:k1004:d0:s0)		eproc _intro [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( ) fixed}

----------------------------------------------------------------
Basic Block _case_0_3 : loop Depth = 1 noPath = 0 , lastinLoop = 0
depth 1st num 35 : bbnum = 34 1st iCode = 564 , last iCode = 566
visited 1 : hasFcall = 0

defines bitVector :bitvector Size = 1073 bSize = 135
Bits on { (1045) (1048) }

local defines bitVector :bitvector Size = 1073 bSize = 135
Bits on { (1045) (1048) }

pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

in pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

inDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1034) (1039) (1044) (1049) (1050) }

outDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1034) (1039) (1044) (1045) (1048) (1050) }

usesDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { }

----------------------------------------------------------------
intro.c(l132:s564:k927:d1:s0)	 _case_0_3($17) :
intro.c(l133:s565:k1045:d1:s0)		iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] := 0x0 {const-unsigned-char literal}
intro.c(l133:s566:k1048:d1:s0)		iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] := 0x0 {unsigned-int literal}
intro.c(l134:s568:k1012:d13:s0)	 preHeaderLbl7($66) :
intro.c(l134:s569:k947:d13:s0)		iTemp633 [k651 lr569:570 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register}[r0x06 ] = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] - 0x4 {const-unsigned-char literal}
intro.c(l134:s570:k948:d13:s0)		iTemp634 [k652 lr570:571 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x06 r0x07 ] = iTemp633 [k651 lr569:570 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register}[r0x06 ] * 0x8 {const-unsigned-char literal}
intro.c(l134:s571:k949:d13:s0)		iTemp635 [k653 lr571:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] = iTemp456 [k464 lr350:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp634 [k652 lr570:571 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x06 r0x07 ]
intro.c(l134:s572:k938:d13:s0)		iTemp627 [k645 lr572:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x08 r0x09 ] = iTemp368 [k375 lr284:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ]
intro.c(l134:s573:k932:d13:s0)		iTemp624 [k642 lr573:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0a ] = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x4 {const-unsigned-char literal}
intro.c(l134:s574:k1027:d13:s0)		iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] := 0x0 {const-unsigned-char literal}
intro.c(l134:s576:k931:d14:s0)	 _forbody_9($40) :
intro.c(l135:s577:k933:d14:s0)		if iTemp624 [k642 lr573:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0a ] == 0 goto _iffalse_2($19)
intro.c(l136:s578:k940:d14:s0)		iTemp629 [k647 lr578:579 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] = iTemp627 [k645 lr572:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x08 r0x09 ] + iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ]
intro.c(l136:s579:k941:d14:s0)		iTemp630 [k648 lr579:580 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ] = @[iTemp629 [k647 lr578:579 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] + 0x0 {const-unsigned-char literal}]
intro.c(l136:s580:k942:d14:s0)		send iTemp630 [k648 lr579:580 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ]{argreg = 1}
intro.c(l136:s581:k943:d14:s0)		iTemp631 [k649 lr581:581 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l136:s582:k944:d14:s0)		 goto _forcontinue_9($41)
intro.c(l136:s583:k945:d14:s0)	 _iffalse_2($19) :
intro.c(l138:s584:k951:d14:s0)		iTemp637 [k655 lr584:585 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] = iTemp635 [k653 lr571:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] + iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ]
intro.c(l138:s585:k952:d14:s0)		iTemp638 [k656 lr585:586 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ] = @[iTemp637 [k655 lr584:585 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] + 0x0 {const-unsigned-char literal}]
intro.c(l138:s586:k953:d14:s0)		send iTemp638 [k656 lr585:586 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ]{argreg = 1}
intro.c(l138:s587:k954:d14:s0)		iTemp639 [k657 lr587:587 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l138:s588:k956:d14:s0)	 _forcontinue_9($41) :
intro.c(l134:s589:k958:d14:s0)		iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] = iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] + 0x1 {const-unsigned-char literal}
intro.c(l134:s590:k960:d14:s0)		iTemp642 [k660 lr590:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] < 0x8 {const-unsigned-char literal}
intro.c(l134:s591:k961:d14:s0)		if iTemp642 [k660 lr590:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forbody_9($40)
intro.c(l133:s592:k1049:d13:s0)		iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] = iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] + 0x8 {const-unsigned-char literal}
intro.c(l133:s593:k966:d13:s0)		iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] + 0x1 {const-unsigned-char literal}
intro.c(l133:s594:k968:d13:s0)		iTemp645 [k663 lr594:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x8 {const-unsigned-char literal}
intro.c(l133:s595:k969:d13:s0)		if iTemp645 [k663 lr594:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl7($66)
intro.c(l141:s596:k972:d1:s0)		send 0x8c {const-unsigned-char literal}{argreg = 1}
intro.c(l141:s597:k973:d1:s0)		iTemp646 [k664 lr597:597 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l142:s598:k974:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l142:s599:k975:d1:s0)		iTemp647 [k665 lr599:599 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l143:s600:k976:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l143:s601:k977:d1:s0)		iTemp648 [k666 lr601:601 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l144:s602:k978:d1:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
intro.c(l144:s603:k979:d1:s0)		iTemp649 [k667 lr603:603 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l145:s604:k980:d1:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
intro.c(l145:s605:k981:d1:s0)		iTemp650 [k668 lr605:605 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l146:s606:k982:d1:s0)		send 0xcc {const-unsigned-char literal}{argreg = 1}
intro.c(l146:s607:k983:d1:s0)		iTemp651 [k669 lr607:607 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l147:s608:k984:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l147:s609:k985:d1:s0)		iTemp652 [k670 lr609:609 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l148:s610:k986:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l148:s611:k987:d1:s0)		iTemp653 [k671 lr611:611 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l149:s612:k988:d1:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
intro.c(l149:s613:k989:d1:s0)		iTemp654 [k672 lr613:613 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l150:s614:k990:d1:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
intro.c(l150:s615:k991:d1:s0)		iTemp655 [k673 lr615:615 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l151:s616:k992:d1:s0)		iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15}[r0x00 r0x01 ] := 0x0 {unsigned-int literal}
intro.c(l153:s617:k995:d1:s0)	 _forcontinue_0($45) :
intro.c(l67:s618:k997:d1:s0)		iTemp657 [k675 lr400:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_x_1_15}[r0x02 ] = iTemp657 [k675 lr400:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_x_1_15}[r0x02 ] + 0x1 {const-unsigned-char literal}
intro.c(l67:s619:k999:d1:s0)		iTemp658 [k676 lr619:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp657 [k675 lr400:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_x_1_15}[r0x02 ] < 0x64 {const-unsigned-char literal}
intro.c(l67:s620:k1000:d1:s0)		if iTemp658 [k676 lr619:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl0($48)
intro.c(l67:s621:k1003:d0:s0)	 _return($46) :
intro.c(l67:s622:k1004:d0:s0)		eproc _intro [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( ) fixed}

----------------------------------------------------------------
Basic Block preHeaderLbl38 : loop Depth = 1 noPath = 0 , lastinLoop = 0
depth 1st num 36 : bbnum = 35 1st iCode = 567 , last iCode = 567
visited 1 : hasFcall = 0

defines bitVector :bitvector Size = 1073 bSize = 135
Bits on { }

local defines bitVector :
pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

in pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

inDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1034) (1039) (1044) (1045) (1048) (1050) }

outDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1034) (1039) (1044) (1045) (1048) (1050) }

usesDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { }

----------------------------------------------------------------
intro.c(l134:s567:k1071:d1:s0)	 preHeaderLbl38($124) :
intro.c(l134:s568:k1012:d13:s0)	 preHeaderLbl7($66) :
intro.c(l134:s569:k947:d13:s0)		iTemp633 [k651 lr569:570 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register}[r0x06 ] = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] - 0x4 {const-unsigned-char literal}
intro.c(l134:s570:k948:d13:s0)		iTemp634 [k652 lr570:571 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x06 r0x07 ] = iTemp633 [k651 lr569:570 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register}[r0x06 ] * 0x8 {const-unsigned-char literal}
intro.c(l134:s571:k949:d13:s0)		iTemp635 [k653 lr571:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] = iTemp456 [k464 lr350:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp634 [k652 lr570:571 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x06 r0x07 ]
intro.c(l134:s572:k938:d13:s0)		iTemp627 [k645 lr572:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x08 r0x09 ] = iTemp368 [k375 lr284:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ]
intro.c(l134:s573:k932:d13:s0)		iTemp624 [k642 lr573:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0a ] = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x4 {const-unsigned-char literal}
intro.c(l134:s574:k1027:d13:s0)		iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] := 0x0 {const-unsigned-char literal}
intro.c(l134:s576:k931:d14:s0)	 _forbody_9($40) :
intro.c(l135:s577:k933:d14:s0)		if iTemp624 [k642 lr573:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0a ] == 0 goto _iffalse_2($19)
intro.c(l136:s578:k940:d14:s0)		iTemp629 [k647 lr578:579 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] = iTemp627 [k645 lr572:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x08 r0x09 ] + iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ]
intro.c(l136:s579:k941:d14:s0)		iTemp630 [k648 lr579:580 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ] = @[iTemp629 [k647 lr578:579 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] + 0x0 {const-unsigned-char literal}]
intro.c(l136:s580:k942:d14:s0)		send iTemp630 [k648 lr579:580 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ]{argreg = 1}
intro.c(l136:s581:k943:d14:s0)		iTemp631 [k649 lr581:581 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l136:s582:k944:d14:s0)		 goto _forcontinue_9($41)
intro.c(l136:s583:k945:d14:s0)	 _iffalse_2($19) :
intro.c(l138:s584:k951:d14:s0)		iTemp637 [k655 lr584:585 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] = iTemp635 [k653 lr571:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] + iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ]
intro.c(l138:s585:k952:d14:s0)		iTemp638 [k656 lr585:586 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ] = @[iTemp637 [k655 lr584:585 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] + 0x0 {const-unsigned-char literal}]
intro.c(l138:s586:k953:d14:s0)		send iTemp638 [k656 lr585:586 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ]{argreg = 1}
intro.c(l138:s587:k954:d14:s0)		iTemp639 [k657 lr587:587 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l138:s588:k956:d14:s0)	 _forcontinue_9($41) :
intro.c(l134:s589:k958:d14:s0)		iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] = iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] + 0x1 {const-unsigned-char literal}
intro.c(l134:s590:k960:d14:s0)		iTemp642 [k660 lr590:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] < 0x8 {const-unsigned-char literal}
intro.c(l134:s591:k961:d14:s0)		if iTemp642 [k660 lr590:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forbody_9($40)
intro.c(l133:s592:k1049:d13:s0)		iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] = iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] + 0x8 {const-unsigned-char literal}
intro.c(l133:s593:k966:d13:s0)		iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] + 0x1 {const-unsigned-char literal}
intro.c(l133:s594:k968:d13:s0)		iTemp645 [k663 lr594:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x8 {const-unsigned-char literal}
intro.c(l133:s595:k969:d13:s0)		if iTemp645 [k663 lr594:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl7($66)
intro.c(l141:s596:k972:d1:s0)		send 0x8c {const-unsigned-char literal}{argreg = 1}
intro.c(l141:s597:k973:d1:s0)		iTemp646 [k664 lr597:597 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l142:s598:k974:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l142:s599:k975:d1:s0)		iTemp647 [k665 lr599:599 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l143:s600:k976:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l143:s601:k977:d1:s0)		iTemp648 [k666 lr601:601 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l144:s602:k978:d1:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
intro.c(l144:s603:k979:d1:s0)		iTemp649 [k667 lr603:603 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l145:s604:k980:d1:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
intro.c(l145:s605:k981:d1:s0)		iTemp650 [k668 lr605:605 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l146:s606:k982:d1:s0)		send 0xcc {const-unsigned-char literal}{argreg = 1}
intro.c(l146:s607:k983:d1:s0)		iTemp651 [k669 lr607:607 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l147:s608:k984:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l147:s609:k985:d1:s0)		iTemp652 [k670 lr609:609 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l148:s610:k986:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l148:s611:k987:d1:s0)		iTemp653 [k671 lr611:611 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l149:s612:k988:d1:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
intro.c(l149:s613:k989:d1:s0)		iTemp654 [k672 lr613:613 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l150:s614:k990:d1:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
intro.c(l150:s615:k991:d1:s0)		iTemp655 [k673 lr615:615 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l151:s616:k992:d1:s0)		iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15}[r0x00 r0x01 ] := 0x0 {unsigned-int literal}
intro.c(l153:s617:k995:d1:s0)	 _forcontinue_0($45) :
intro.c(l67:s618:k997:d1:s0)		iTemp657 [k675 lr400:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_x_1_15}[r0x02 ] = iTemp657 [k675 lr400:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_x_1_15}[r0x02 ] + 0x1 {const-unsigned-char literal}
intro.c(l67:s619:k999:d1:s0)		iTemp658 [k676 lr619:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp657 [k675 lr400:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_x_1_15}[r0x02 ] < 0x64 {const-unsigned-char literal}
intro.c(l67:s620:k1000:d1:s0)		if iTemp658 [k676 lr619:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl0($48)
intro.c(l67:s621:k1003:d0:s0)	 _return($46) :
intro.c(l67:s622:k1004:d0:s0)		eproc _intro [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( ) fixed}

----------------------------------------------------------------
Basic Block preHeaderLbl7 : loop Depth = 13 noPath = 0 , lastinLoop = 0
depth 1st num 37 : bbnum = 36 1st iCode = 568 , last iCode = 574
visited 1 : hasFcall = 0

defines bitVector :bitvector Size = 1073 bSize = 135
Bits on { (932) (938) (947) (948) (949) (1027) }

local defines bitVector :bitvector Size = 1073 bSize = 135
Bits on { (932) (938) (947) (948) (949) (1027) }

pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

in pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

inDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1034) (1039) (1044) (1045) (1048) (1049) (1050) }

outDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1027) (1034) (1039) (1044) (1045) (1048) (1049) (1050) }

usesDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (506) (626) (947) (948) (966) (1045) (1048) (1049) }

----------------------------------------------------------------
intro.c(l134:s568:k1012:d13:s0)	 preHeaderLbl7($66) :
intro.c(l134:s569:k947:d13:s0)		iTemp633 [k651 lr569:570 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register}[r0x06 ] = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] - 0x4 {const-unsigned-char literal}
intro.c(l134:s570:k948:d13:s0)		iTemp634 [k652 lr570:571 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x06 r0x07 ] = iTemp633 [k651 lr569:570 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char register}[r0x06 ] * 0x8 {const-unsigned-char literal}
intro.c(l134:s571:k949:d13:s0)		iTemp635 [k653 lr571:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] = iTemp456 [k464 lr350:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp634 [k652 lr570:571 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x06 r0x07 ]
intro.c(l134:s572:k938:d13:s0)		iTemp627 [k645 lr572:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x08 r0x09 ] = iTemp368 [k375 lr284:620 so:0]{ ia0 a2p0 re0 rm1 nos0 ru0 dp0}{char [8] near* fixed}[remat] + iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ]
intro.c(l134:s573:k932:d13:s0)		iTemp624 [k642 lr573:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0a ] = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x4 {const-unsigned-char literal}
intro.c(l134:s574:k1027:d13:s0)		iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] := 0x0 {const-unsigned-char literal}
intro.c(l134:s576:k931:d14:s0)	 _forbody_9($40) :
intro.c(l135:s577:k933:d14:s0)		if iTemp624 [k642 lr573:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0a ] == 0 goto _iffalse_2($19)
intro.c(l136:s578:k940:d14:s0)		iTemp629 [k647 lr578:579 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] = iTemp627 [k645 lr572:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x08 r0x09 ] + iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ]
intro.c(l136:s579:k941:d14:s0)		iTemp630 [k648 lr579:580 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ] = @[iTemp629 [k647 lr578:579 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] + 0x0 {const-unsigned-char literal}]
intro.c(l136:s580:k942:d14:s0)		send iTemp630 [k648 lr579:580 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ]{argreg = 1}
intro.c(l136:s581:k943:d14:s0)		iTemp631 [k649 lr581:581 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l136:s582:k944:d14:s0)		 goto _forcontinue_9($41)
intro.c(l136:s583:k945:d14:s0)	 _iffalse_2($19) :
intro.c(l138:s584:k951:d14:s0)		iTemp637 [k655 lr584:585 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] = iTemp635 [k653 lr571:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] + iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ]
intro.c(l138:s585:k952:d14:s0)		iTemp638 [k656 lr585:586 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ] = @[iTemp637 [k655 lr584:585 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] + 0x0 {const-unsigned-char literal}]
intro.c(l138:s586:k953:d14:s0)		send iTemp638 [k656 lr585:586 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ]{argreg = 1}
intro.c(l138:s587:k954:d14:s0)		iTemp639 [k657 lr587:587 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l138:s588:k956:d14:s0)	 _forcontinue_9($41) :
intro.c(l134:s589:k958:d14:s0)		iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] = iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] + 0x1 {const-unsigned-char literal}
intro.c(l134:s590:k960:d14:s0)		iTemp642 [k660 lr590:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] < 0x8 {const-unsigned-char literal}
intro.c(l134:s591:k961:d14:s0)		if iTemp642 [k660 lr590:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forbody_9($40)
intro.c(l133:s592:k1049:d13:s0)		iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] = iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] + 0x8 {const-unsigned-char literal}
intro.c(l133:s593:k966:d13:s0)		iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] + 0x1 {const-unsigned-char literal}
intro.c(l133:s594:k968:d13:s0)		iTemp645 [k663 lr594:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x8 {const-unsigned-char literal}
intro.c(l133:s595:k969:d13:s0)		if iTemp645 [k663 lr594:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl7($66)
intro.c(l141:s596:k972:d1:s0)		send 0x8c {const-unsigned-char literal}{argreg = 1}
intro.c(l141:s597:k973:d1:s0)		iTemp646 [k664 lr597:597 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l142:s598:k974:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l142:s599:k975:d1:s0)		iTemp647 [k665 lr599:599 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l143:s600:k976:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l143:s601:k977:d1:s0)		iTemp648 [k666 lr601:601 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l144:s602:k978:d1:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
intro.c(l144:s603:k979:d1:s0)		iTemp649 [k667 lr603:603 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l145:s604:k980:d1:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
intro.c(l145:s605:k981:d1:s0)		iTemp650 [k668 lr605:605 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l146:s606:k982:d1:s0)		send 0xcc {const-unsigned-char literal}{argreg = 1}
intro.c(l146:s607:k983:d1:s0)		iTemp651 [k669 lr607:607 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l147:s608:k984:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l147:s609:k985:d1:s0)		iTemp652 [k670 lr609:609 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l148:s610:k986:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l148:s611:k987:d1:s0)		iTemp653 [k671 lr611:611 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l149:s612:k988:d1:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
intro.c(l149:s613:k989:d1:s0)		iTemp654 [k672 lr613:613 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l150:s614:k990:d1:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
intro.c(l150:s615:k991:d1:s0)		iTemp655 [k673 lr615:615 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l151:s616:k992:d1:s0)		iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15}[r0x00 r0x01 ] := 0x0 {unsigned-int literal}
intro.c(l153:s617:k995:d1:s0)	 _forcontinue_0($45) :
intro.c(l67:s618:k997:d1:s0)		iTemp657 [k675 lr400:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_x_1_15}[r0x02 ] = iTemp657 [k675 lr400:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_x_1_15}[r0x02 ] + 0x1 {const-unsigned-char literal}
intro.c(l67:s619:k999:d1:s0)		iTemp658 [k676 lr619:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp657 [k675 lr400:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_x_1_15}[r0x02 ] < 0x64 {const-unsigned-char literal}
intro.c(l67:s620:k1000:d1:s0)		if iTemp658 [k676 lr619:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl0($48)
intro.c(l67:s621:k1003:d0:s0)	 _return($46) :
intro.c(l67:s622:k1004:d0:s0)		eproc _intro [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( ) fixed}

----------------------------------------------------------------
Basic Block preHeaderLbl37 : loop Depth = 13 noPath = 0 , lastinLoop = 0
depth 1st num 38 : bbnum = 37 1st iCode = 575 , last iCode = 575
visited 1 : hasFcall = 0

defines bitVector :bitvector Size = 1073 bSize = 135
Bits on { }

local defines bitVector :
pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

in pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

inDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1027) (1034) (1039) (1044) (1045) (1048) (1049) (1050) }

outDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1027) (1034) (1039) (1044) (1045) (1048) (1049) (1050) }

usesDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { }

----------------------------------------------------------------
intro.c(l134:s575:k1070:d13:s0)	 preHeaderLbl37($122) :
intro.c(l134:s576:k931:d14:s0)	 _forbody_9($40) :
intro.c(l135:s577:k933:d14:s0)		if iTemp624 [k642 lr573:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0a ] == 0 goto _iffalse_2($19)
intro.c(l136:s578:k940:d14:s0)		iTemp629 [k647 lr578:579 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] = iTemp627 [k645 lr572:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x08 r0x09 ] + iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ]
intro.c(l136:s579:k941:d14:s0)		iTemp630 [k648 lr579:580 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ] = @[iTemp629 [k647 lr578:579 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] + 0x0 {const-unsigned-char literal}]
intro.c(l136:s580:k942:d14:s0)		send iTemp630 [k648 lr579:580 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ]{argreg = 1}
intro.c(l136:s581:k943:d14:s0)		iTemp631 [k649 lr581:581 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l136:s582:k944:d14:s0)		 goto _forcontinue_9($41)
intro.c(l136:s583:k945:d14:s0)	 _iffalse_2($19) :
intro.c(l138:s584:k951:d14:s0)		iTemp637 [k655 lr584:585 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] = iTemp635 [k653 lr571:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] + iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ]
intro.c(l138:s585:k952:d14:s0)		iTemp638 [k656 lr585:586 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ] = @[iTemp637 [k655 lr584:585 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] + 0x0 {const-unsigned-char literal}]
intro.c(l138:s586:k953:d14:s0)		send iTemp638 [k656 lr585:586 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ]{argreg = 1}
intro.c(l138:s587:k954:d14:s0)		iTemp639 [k657 lr587:587 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l138:s588:k956:d14:s0)	 _forcontinue_9($41) :
intro.c(l134:s589:k958:d14:s0)		iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] = iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] + 0x1 {const-unsigned-char literal}
intro.c(l134:s590:k960:d14:s0)		iTemp642 [k660 lr590:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] < 0x8 {const-unsigned-char literal}
intro.c(l134:s591:k961:d14:s0)		if iTemp642 [k660 lr590:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forbody_9($40)
intro.c(l133:s592:k1049:d13:s0)		iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] = iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] + 0x8 {const-unsigned-char literal}
intro.c(l133:s593:k966:d13:s0)		iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] + 0x1 {const-unsigned-char literal}
intro.c(l133:s594:k968:d13:s0)		iTemp645 [k663 lr594:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x8 {const-unsigned-char literal}
intro.c(l133:s595:k969:d13:s0)		if iTemp645 [k663 lr594:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl7($66)
intro.c(l141:s596:k972:d1:s0)		send 0x8c {const-unsigned-char literal}{argreg = 1}
intro.c(l141:s597:k973:d1:s0)		iTemp646 [k664 lr597:597 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l142:s598:k974:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l142:s599:k975:d1:s0)		iTemp647 [k665 lr599:599 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l143:s600:k976:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l143:s601:k977:d1:s0)		iTemp648 [k666 lr601:601 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l144:s602:k978:d1:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
intro.c(l144:s603:k979:d1:s0)		iTemp649 [k667 lr603:603 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l145:s604:k980:d1:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
intro.c(l145:s605:k981:d1:s0)		iTemp650 [k668 lr605:605 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l146:s606:k982:d1:s0)		send 0xcc {const-unsigned-char literal}{argreg = 1}
intro.c(l146:s607:k983:d1:s0)		iTemp651 [k669 lr607:607 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l147:s608:k984:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l147:s609:k985:d1:s0)		iTemp652 [k670 lr609:609 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l148:s610:k986:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l148:s611:k987:d1:s0)		iTemp653 [k671 lr611:611 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l149:s612:k988:d1:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
intro.c(l149:s613:k989:d1:s0)		iTemp654 [k672 lr613:613 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l150:s614:k990:d1:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
intro.c(l150:s615:k991:d1:s0)		iTemp655 [k673 lr615:615 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l151:s616:k992:d1:s0)		iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15}[r0x00 r0x01 ] := 0x0 {unsigned-int literal}
intro.c(l153:s617:k995:d1:s0)	 _forcontinue_0($45) :
intro.c(l67:s618:k997:d1:s0)		iTemp657 [k675 lr400:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_x_1_15}[r0x02 ] = iTemp657 [k675 lr400:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_x_1_15}[r0x02 ] + 0x1 {const-unsigned-char literal}
intro.c(l67:s619:k999:d1:s0)		iTemp658 [k676 lr619:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp657 [k675 lr400:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_x_1_15}[r0x02 ] < 0x64 {const-unsigned-char literal}
intro.c(l67:s620:k1000:d1:s0)		if iTemp658 [k676 lr619:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl0($48)
intro.c(l67:s621:k1003:d0:s0)	 _return($46) :
intro.c(l67:s622:k1004:d0:s0)		eproc _intro [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( ) fixed}

----------------------------------------------------------------
Basic Block _forbody_9 : loop Depth = 14 noPath = 0 , lastinLoop = 0
depth 1st num 39 : bbnum = 38 1st iCode = 576 , last iCode = 577
visited 1 : hasFcall = 0

defines bitVector :bitvector Size = 1073 bSize = 135
Bits on { }

local defines bitVector :
pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

in pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

inDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1027) (1034) (1039) (1044) (1045) (1048) (1049) (1050) }

outDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1027) (1034) (1039) (1044) (1045) (1048) (1049) (1050) }

usesDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (932) }

----------------------------------------------------------------
intro.c(l134:s576:k931:d14:s0)	 _forbody_9($40) :
intro.c(l135:s577:k933:d14:s0)		if iTemp624 [k642 lr573:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0a ] == 0 goto _iffalse_2($19)
intro.c(l136:s578:k940:d14:s0)		iTemp629 [k647 lr578:579 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] = iTemp627 [k645 lr572:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x08 r0x09 ] + iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ]
intro.c(l136:s579:k941:d14:s0)		iTemp630 [k648 lr579:580 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ] = @[iTemp629 [k647 lr578:579 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] + 0x0 {const-unsigned-char literal}]
intro.c(l136:s580:k942:d14:s0)		send iTemp630 [k648 lr579:580 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ]{argreg = 1}
intro.c(l136:s581:k943:d14:s0)		iTemp631 [k649 lr581:581 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l136:s582:k944:d14:s0)		 goto _forcontinue_9($41)
intro.c(l136:s583:k945:d14:s0)	 _iffalse_2($19) :
intro.c(l138:s584:k951:d14:s0)		iTemp637 [k655 lr584:585 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] = iTemp635 [k653 lr571:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] + iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ]
intro.c(l138:s585:k952:d14:s0)		iTemp638 [k656 lr585:586 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ] = @[iTemp637 [k655 lr584:585 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] + 0x0 {const-unsigned-char literal}]
intro.c(l138:s586:k953:d14:s0)		send iTemp638 [k656 lr585:586 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ]{argreg = 1}
intro.c(l138:s587:k954:d14:s0)		iTemp639 [k657 lr587:587 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l138:s588:k956:d14:s0)	 _forcontinue_9($41) :
intro.c(l134:s589:k958:d14:s0)		iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] = iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] + 0x1 {const-unsigned-char literal}
intro.c(l134:s590:k960:d14:s0)		iTemp642 [k660 lr590:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] < 0x8 {const-unsigned-char literal}
intro.c(l134:s591:k961:d14:s0)		if iTemp642 [k660 lr590:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forbody_9($40)
intro.c(l133:s592:k1049:d13:s0)		iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] = iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] + 0x8 {const-unsigned-char literal}
intro.c(l133:s593:k966:d13:s0)		iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] + 0x1 {const-unsigned-char literal}
intro.c(l133:s594:k968:d13:s0)		iTemp645 [k663 lr594:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x8 {const-unsigned-char literal}
intro.c(l133:s595:k969:d13:s0)		if iTemp645 [k663 lr594:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl7($66)
intro.c(l141:s596:k972:d1:s0)		send 0x8c {const-unsigned-char literal}{argreg = 1}
intro.c(l141:s597:k973:d1:s0)		iTemp646 [k664 lr597:597 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l142:s598:k974:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l142:s599:k975:d1:s0)		iTemp647 [k665 lr599:599 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l143:s600:k976:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l143:s601:k977:d1:s0)		iTemp648 [k666 lr601:601 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l144:s602:k978:d1:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
intro.c(l144:s603:k979:d1:s0)		iTemp649 [k667 lr603:603 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l145:s604:k980:d1:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
intro.c(l145:s605:k981:d1:s0)		iTemp650 [k668 lr605:605 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l146:s606:k982:d1:s0)		send 0xcc {const-unsigned-char literal}{argreg = 1}
intro.c(l146:s607:k983:d1:s0)		iTemp651 [k669 lr607:607 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l147:s608:k984:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l147:s609:k985:d1:s0)		iTemp652 [k670 lr609:609 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l148:s610:k986:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l148:s611:k987:d1:s0)		iTemp653 [k671 lr611:611 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l149:s612:k988:d1:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
intro.c(l149:s613:k989:d1:s0)		iTemp654 [k672 lr613:613 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l150:s614:k990:d1:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
intro.c(l150:s615:k991:d1:s0)		iTemp655 [k673 lr615:615 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l151:s616:k992:d1:s0)		iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15}[r0x00 r0x01 ] := 0x0 {unsigned-int literal}
intro.c(l153:s617:k995:d1:s0)	 _forcontinue_0($45) :
intro.c(l67:s618:k997:d1:s0)		iTemp657 [k675 lr400:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_x_1_15}[r0x02 ] = iTemp657 [k675 lr400:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_x_1_15}[r0x02 ] + 0x1 {const-unsigned-char literal}
intro.c(l67:s619:k999:d1:s0)		iTemp658 [k676 lr619:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp657 [k675 lr400:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_x_1_15}[r0x02 ] < 0x64 {const-unsigned-char literal}
intro.c(l67:s620:k1000:d1:s0)		if iTemp658 [k676 lr619:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl0($48)
intro.c(l67:s621:k1003:d0:s0)	 _return($46) :
intro.c(l67:s622:k1004:d0:s0)		eproc _intro [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( ) fixed}

----------------------------------------------------------------
Basic Block _eBBlock36 : loop Depth = 14 noPath = 0 , lastinLoop = 0
depth 1st num 40 : bbnum = 39 1st iCode = 578 , last iCode = 582
visited 1 : hasFcall = 1

defines bitVector :bitvector Size = 1073 bSize = 135
Bits on { (940) (941) }

local defines bitVector :bitvector Size = 1073 bSize = 135
Bits on { (940) (941) (943) }

pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

in pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

inDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1027) (1034) (1039) (1044) (1045) (1048) (1049) (1050) }

outDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1027) (1034) (1039) (1044) (1045) (1048) (1049) (1050) }

usesDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (938) (940) (941) (943) (958) (1027) }

----------------------------------------------------------------
intro.c(l136:s578:k940:d14:s0)		iTemp629 [k647 lr578:579 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] = iTemp627 [k645 lr572:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x08 r0x09 ] + iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ]
intro.c(l136:s579:k941:d14:s0)		iTemp630 [k648 lr579:580 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ] = @[iTemp629 [k647 lr578:579 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] + 0x0 {const-unsigned-char literal}]
intro.c(l136:s580:k942:d14:s0)		send iTemp630 [k648 lr579:580 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ]{argreg = 1}
intro.c(l136:s581:k943:d14:s0)		iTemp631 [k649 lr581:581 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l136:s582:k944:d14:s0)		 goto _forcontinue_9($41)
intro.c(l136:s583:k945:d14:s0)	 _iffalse_2($19) :
intro.c(l138:s584:k951:d14:s0)		iTemp637 [k655 lr584:585 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] = iTemp635 [k653 lr571:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] + iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ]
intro.c(l138:s585:k952:d14:s0)		iTemp638 [k656 lr585:586 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ] = @[iTemp637 [k655 lr584:585 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] + 0x0 {const-unsigned-char literal}]
intro.c(l138:s586:k953:d14:s0)		send iTemp638 [k656 lr585:586 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ]{argreg = 1}
intro.c(l138:s587:k954:d14:s0)		iTemp639 [k657 lr587:587 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l138:s588:k956:d14:s0)	 _forcontinue_9($41) :
intro.c(l134:s589:k958:d14:s0)		iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] = iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] + 0x1 {const-unsigned-char literal}
intro.c(l134:s590:k960:d14:s0)		iTemp642 [k660 lr590:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] < 0x8 {const-unsigned-char literal}
intro.c(l134:s591:k961:d14:s0)		if iTemp642 [k660 lr590:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forbody_9($40)
intro.c(l133:s592:k1049:d13:s0)		iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] = iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] + 0x8 {const-unsigned-char literal}
intro.c(l133:s593:k966:d13:s0)		iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] + 0x1 {const-unsigned-char literal}
intro.c(l133:s594:k968:d13:s0)		iTemp645 [k663 lr594:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x8 {const-unsigned-char literal}
intro.c(l133:s595:k969:d13:s0)		if iTemp645 [k663 lr594:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl7($66)
intro.c(l141:s596:k972:d1:s0)		send 0x8c {const-unsigned-char literal}{argreg = 1}
intro.c(l141:s597:k973:d1:s0)		iTemp646 [k664 lr597:597 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l142:s598:k974:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l142:s599:k975:d1:s0)		iTemp647 [k665 lr599:599 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l143:s600:k976:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l143:s601:k977:d1:s0)		iTemp648 [k666 lr601:601 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l144:s602:k978:d1:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
intro.c(l144:s603:k979:d1:s0)		iTemp649 [k667 lr603:603 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l145:s604:k980:d1:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
intro.c(l145:s605:k981:d1:s0)		iTemp650 [k668 lr605:605 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l146:s606:k982:d1:s0)		send 0xcc {const-unsigned-char literal}{argreg = 1}
intro.c(l146:s607:k983:d1:s0)		iTemp651 [k669 lr607:607 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l147:s608:k984:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l147:s609:k985:d1:s0)		iTemp652 [k670 lr609:609 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l148:s610:k986:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l148:s611:k987:d1:s0)		iTemp653 [k671 lr611:611 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l149:s612:k988:d1:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
intro.c(l149:s613:k989:d1:s0)		iTemp654 [k672 lr613:613 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l150:s614:k990:d1:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
intro.c(l150:s615:k991:d1:s0)		iTemp655 [k673 lr615:615 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l151:s616:k992:d1:s0)		iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15}[r0x00 r0x01 ] := 0x0 {unsigned-int literal}
intro.c(l153:s617:k995:d1:s0)	 _forcontinue_0($45) :
intro.c(l67:s618:k997:d1:s0)		iTemp657 [k675 lr400:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_x_1_15}[r0x02 ] = iTemp657 [k675 lr400:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_x_1_15}[r0x02 ] + 0x1 {const-unsigned-char literal}
intro.c(l67:s619:k999:d1:s0)		iTemp658 [k676 lr619:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp657 [k675 lr400:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_x_1_15}[r0x02 ] < 0x64 {const-unsigned-char literal}
intro.c(l67:s620:k1000:d1:s0)		if iTemp658 [k676 lr619:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl0($48)
intro.c(l67:s621:k1003:d0:s0)	 _return($46) :
intro.c(l67:s622:k1004:d0:s0)		eproc _intro [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( ) fixed}

----------------------------------------------------------------
Basic Block _iffalse_2 : loop Depth = 14 noPath = 0 , lastinLoop = 0
depth 1st num 41 : bbnum = 40 1st iCode = 583 , last iCode = 587
visited 1 : hasFcall = 1

defines bitVector :bitvector Size = 1073 bSize = 135
Bits on { (951) (952) }

local defines bitVector :bitvector Size = 1073 bSize = 135
Bits on { (951) (952) (954) }

pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

in pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

inDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1027) (1034) (1039) (1044) (1045) (1048) (1049) (1050) }

outDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1027) (1034) (1039) (1044) (1045) (1048) (1049) (1050) }

usesDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (949) (951) (952) (954) (958) (1027) }

----------------------------------------------------------------
intro.c(l136:s583:k945:d14:s0)	 _iffalse_2($19) :
intro.c(l138:s584:k951:d14:s0)		iTemp637 [k655 lr584:585 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] = iTemp635 [k653 lr571:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] near* fixed}[r0x06 r0x07 ] + iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ]
intro.c(l138:s585:k952:d14:s0)		iTemp638 [k656 lr585:586 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ] = @[iTemp637 [k655 lr584:585 so:0]{ ia1 a2p0 re0 rm0 nos0 ru0 dp0}{char near* fixed}[r0x0c r0x0d ] + 0x0 {const-unsigned-char literal}]
intro.c(l138:s586:k953:d14:s0)		send iTemp638 [k656 lr585:586 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed}[r0x0c ]{argreg = 1}
intro.c(l138:s587:k954:d14:s0)		iTemp639 [k657 lr587:587 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l138:s588:k956:d14:s0)	 _forcontinue_9($41) :
intro.c(l134:s589:k958:d14:s0)		iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] = iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] + 0x1 {const-unsigned-char literal}
intro.c(l134:s590:k960:d14:s0)		iTemp642 [k660 lr590:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] < 0x8 {const-unsigned-char literal}
intro.c(l134:s591:k961:d14:s0)		if iTemp642 [k660 lr590:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forbody_9($40)
intro.c(l133:s592:k1049:d13:s0)		iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] = iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] + 0x8 {const-unsigned-char literal}
intro.c(l133:s593:k966:d13:s0)		iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] + 0x1 {const-unsigned-char literal}
intro.c(l133:s594:k968:d13:s0)		iTemp645 [k663 lr594:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x8 {const-unsigned-char literal}
intro.c(l133:s595:k969:d13:s0)		if iTemp645 [k663 lr594:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl7($66)
intro.c(l141:s596:k972:d1:s0)		send 0x8c {const-unsigned-char literal}{argreg = 1}
intro.c(l141:s597:k973:d1:s0)		iTemp646 [k664 lr597:597 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l142:s598:k974:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l142:s599:k975:d1:s0)		iTemp647 [k665 lr599:599 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l143:s600:k976:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l143:s601:k977:d1:s0)		iTemp648 [k666 lr601:601 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l144:s602:k978:d1:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
intro.c(l144:s603:k979:d1:s0)		iTemp649 [k667 lr603:603 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l145:s604:k980:d1:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
intro.c(l145:s605:k981:d1:s0)		iTemp650 [k668 lr605:605 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l146:s606:k982:d1:s0)		send 0xcc {const-unsigned-char literal}{argreg = 1}
intro.c(l146:s607:k983:d1:s0)		iTemp651 [k669 lr607:607 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l147:s608:k984:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l147:s609:k985:d1:s0)		iTemp652 [k670 lr609:609 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l148:s610:k986:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l148:s611:k987:d1:s0)		iTemp653 [k671 lr611:611 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l149:s612:k988:d1:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
intro.c(l149:s613:k989:d1:s0)		iTemp654 [k672 lr613:613 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l150:s614:k990:d1:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
intro.c(l150:s615:k991:d1:s0)		iTemp655 [k673 lr615:615 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l151:s616:k992:d1:s0)		iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15}[r0x00 r0x01 ] := 0x0 {unsigned-int literal}
intro.c(l153:s617:k995:d1:s0)	 _forcontinue_0($45) :
intro.c(l67:s618:k997:d1:s0)		iTemp657 [k675 lr400:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_x_1_15}[r0x02 ] = iTemp657 [k675 lr400:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_x_1_15}[r0x02 ] + 0x1 {const-unsigned-char literal}
intro.c(l67:s619:k999:d1:s0)		iTemp658 [k676 lr619:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp657 [k675 lr400:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_x_1_15}[r0x02 ] < 0x64 {const-unsigned-char literal}
intro.c(l67:s620:k1000:d1:s0)		if iTemp658 [k676 lr619:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl0($48)
intro.c(l67:s621:k1003:d0:s0)	 _return($46) :
intro.c(l67:s622:k1004:d0:s0)		eproc _intro [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( ) fixed}

----------------------------------------------------------------
Basic Block _forcontinue_9 : loop Depth = 14 noPath = 0 , lastinLoop = 0
depth 1st num 42 : bbnum = 41 1st iCode = 588 , last iCode = 591
visited 1 : hasFcall = 0

defines bitVector :bitvector Size = 1073 bSize = 135
Bits on { (958) (960) }

local defines bitVector :bitvector Size = 1073 bSize = 135
Bits on { (958) (960) }

pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

in pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

inDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1027) (1034) (1039) (1044) (1045) (1048) (1049) (1050) }

outDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1034) (1039) (1044) (1045) (1048) (1049) (1050) }

usesDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (958) (960) (1027) }

----------------------------------------------------------------
intro.c(l138:s588:k956:d14:s0)	 _forcontinue_9($41) :
intro.c(l134:s589:k958:d14:s0)		iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] = iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] + 0x1 {const-unsigned-char literal}
intro.c(l134:s590:k960:d14:s0)		iTemp642 [k660 lr590:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp641 [k659 lr574:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_k_1_15}[r0x0b ] < 0x8 {const-unsigned-char literal}
intro.c(l134:s591:k961:d14:s0)		if iTemp642 [k660 lr590:591 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto _forbody_9($40)
intro.c(l133:s592:k1049:d13:s0)		iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] = iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] + 0x8 {const-unsigned-char literal}
intro.c(l133:s593:k966:d13:s0)		iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] + 0x1 {const-unsigned-char literal}
intro.c(l133:s594:k968:d13:s0)		iTemp645 [k663 lr594:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x8 {const-unsigned-char literal}
intro.c(l133:s595:k969:d13:s0)		if iTemp645 [k663 lr594:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl7($66)
intro.c(l141:s596:k972:d1:s0)		send 0x8c {const-unsigned-char literal}{argreg = 1}
intro.c(l141:s597:k973:d1:s0)		iTemp646 [k664 lr597:597 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l142:s598:k974:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l142:s599:k975:d1:s0)		iTemp647 [k665 lr599:599 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l143:s600:k976:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l143:s601:k977:d1:s0)		iTemp648 [k666 lr601:601 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l144:s602:k978:d1:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
intro.c(l144:s603:k979:d1:s0)		iTemp649 [k667 lr603:603 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l145:s604:k980:d1:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
intro.c(l145:s605:k981:d1:s0)		iTemp650 [k668 lr605:605 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l146:s606:k982:d1:s0)		send 0xcc {const-unsigned-char literal}{argreg = 1}
intro.c(l146:s607:k983:d1:s0)		iTemp651 [k669 lr607:607 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l147:s608:k984:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l147:s609:k985:d1:s0)		iTemp652 [k670 lr609:609 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l148:s610:k986:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l148:s611:k987:d1:s0)		iTemp653 [k671 lr611:611 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l149:s612:k988:d1:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
intro.c(l149:s613:k989:d1:s0)		iTemp654 [k672 lr613:613 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l150:s614:k990:d1:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
intro.c(l150:s615:k991:d1:s0)		iTemp655 [k673 lr615:615 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l151:s616:k992:d1:s0)		iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15}[r0x00 r0x01 ] := 0x0 {unsigned-int literal}
intro.c(l153:s617:k995:d1:s0)	 _forcontinue_0($45) :
intro.c(l67:s618:k997:d1:s0)		iTemp657 [k675 lr400:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_x_1_15}[r0x02 ] = iTemp657 [k675 lr400:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_x_1_15}[r0x02 ] + 0x1 {const-unsigned-char literal}
intro.c(l67:s619:k999:d1:s0)		iTemp658 [k676 lr619:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp657 [k675 lr400:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_x_1_15}[r0x02 ] < 0x64 {const-unsigned-char literal}
intro.c(l67:s620:k1000:d1:s0)		if iTemp658 [k676 lr619:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl0($48)
intro.c(l67:s621:k1003:d0:s0)	 _return($46) :
intro.c(l67:s622:k1004:d0:s0)		eproc _intro [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( ) fixed}

----------------------------------------------------------------
Basic Block _eBBlock37 : loop Depth = 13 noPath = 0 , lastinLoop = 0
depth 1st num 43 : bbnum = 42 1st iCode = 592 , last iCode = 595
visited 1 : hasFcall = 0

defines bitVector :bitvector Size = 1073 bSize = 135
Bits on { (966) (968) (1049) }

local defines bitVector :bitvector Size = 1073 bSize = 135
Bits on { (966) (968) (1049) }

pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

in pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

inDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1034) (1039) (1044) (1045) (1048) (1049) (1050) }

outDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1034) (1039) (1044) (1049) (1050) }

usesDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (966) (968) (1045) (1048) }

----------------------------------------------------------------
intro.c(l133:s592:k1049:d13:s0)		iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] = iTemp626 [k644 lr566:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-int register}[r0x04 r0x05 ] + 0x8 {const-unsigned-char literal}
intro.c(l133:s593:k966:d13:s0)		iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] + 0x1 {const-unsigned-char literal}
intro.c(l133:s594:k968:d13:s0)		iTemp645 [k663 lr594:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp644 [k662 lr565:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_j_1_15}[r0x03 ] < 0x8 {const-unsigned-char literal}
intro.c(l133:s595:k969:d13:s0)		if iTemp645 [k663 lr594:595 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl7($66)
intro.c(l141:s596:k972:d1:s0)		send 0x8c {const-unsigned-char literal}{argreg = 1}
intro.c(l141:s597:k973:d1:s0)		iTemp646 [k664 lr597:597 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l142:s598:k974:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l142:s599:k975:d1:s0)		iTemp647 [k665 lr599:599 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l143:s600:k976:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l143:s601:k977:d1:s0)		iTemp648 [k666 lr601:601 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l144:s602:k978:d1:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
intro.c(l144:s603:k979:d1:s0)		iTemp649 [k667 lr603:603 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l145:s604:k980:d1:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
intro.c(l145:s605:k981:d1:s0)		iTemp650 [k668 lr605:605 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l146:s606:k982:d1:s0)		send 0xcc {const-unsigned-char literal}{argreg = 1}
intro.c(l146:s607:k983:d1:s0)		iTemp651 [k669 lr607:607 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l147:s608:k984:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l147:s609:k985:d1:s0)		iTemp652 [k670 lr609:609 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l148:s610:k986:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l148:s611:k987:d1:s0)		iTemp653 [k671 lr611:611 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l149:s612:k988:d1:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
intro.c(l149:s613:k989:d1:s0)		iTemp654 [k672 lr613:613 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l150:s614:k990:d1:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
intro.c(l150:s615:k991:d1:s0)		iTemp655 [k673 lr615:615 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l151:s616:k992:d1:s0)		iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15}[r0x00 r0x01 ] := 0x0 {unsigned-int literal}
intro.c(l153:s617:k995:d1:s0)	 _forcontinue_0($45) :
intro.c(l67:s618:k997:d1:s0)		iTemp657 [k675 lr400:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_x_1_15}[r0x02 ] = iTemp657 [k675 lr400:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_x_1_15}[r0x02 ] + 0x1 {const-unsigned-char literal}
intro.c(l67:s619:k999:d1:s0)		iTemp658 [k676 lr619:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp657 [k675 lr400:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_x_1_15}[r0x02 ] < 0x64 {const-unsigned-char literal}
intro.c(l67:s620:k1000:d1:s0)		if iTemp658 [k676 lr619:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl0($48)
intro.c(l67:s621:k1003:d0:s0)	 _return($46) :
intro.c(l67:s622:k1004:d0:s0)		eproc _intro [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( ) fixed}

----------------------------------------------------------------
Basic Block _eBBlock38 : loop Depth = 1 noPath = 0 , lastinLoop = 0
depth 1st num 44 : bbnum = 43 1st iCode = 596 , last iCode = 616
visited 1 : hasFcall = 1

defines bitVector :bitvector Size = 1073 bSize = 135
Bits on { (992) }

local defines bitVector :bitvector Size = 1073 bSize = 135
Bits on { (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) }

pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

in pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

inDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1034) (1039) (1044) (1049) (1050) }

outDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1034) (1039) (1044) (1049) (1050) }

usesDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) }

----------------------------------------------------------------
intro.c(l141:s596:k972:d1:s0)		send 0x8c {const-unsigned-char literal}{argreg = 1}
intro.c(l141:s597:k973:d1:s0)		iTemp646 [k664 lr597:597 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l142:s598:k974:d1:s0)		send 0x0 {const-unsigned-char literal}{argreg = 1}
intro.c(l142:s599:k975:d1:s0)		iTemp647 [k665 lr599:599 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l143:s600:k976:d1:s0)		send 0x1 {const-unsigned-char literal}{argreg = 1}
intro.c(l143:s601:k977:d1:s0)		iTemp648 [k666 lr601:601 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l144:s602:k978:d1:s0)		send 0x4 {const-unsigned-char literal}{argreg = 1}
intro.c(l144:s603:k979:d1:s0)		iTemp649 [k667 lr603:603 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l145:s604:k980:d1:s0)		send 0x5 {const-unsigned-char literal}{argreg = 1}
intro.c(l145:s605:k981:d1:s0)		iTemp650 [k668 lr605:605 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l146:s606:k982:d1:s0)		send 0xcc {const-unsigned-char literal}{argreg = 1}
intro.c(l146:s607:k983:d1:s0)		iTemp651 [k669 lr607:607 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_comando [k545 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l147:s608:k984:d1:s0)		send 0x2 {const-unsigned-char literal}{argreg = 1}
intro.c(l147:s609:k985:d1:s0)		iTemp652 [k670 lr609:609 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l148:s610:k986:d1:s0)		send 0x3 {const-unsigned-char literal}{argreg = 1}
intro.c(l148:s611:k987:d1:s0)		iTemp653 [k671 lr611:611 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l149:s612:k988:d1:s0)		send 0x6 {const-unsigned-char literal}{argreg = 1}
intro.c(l149:s613:k989:d1:s0)		iTemp654 [k672 lr613:613 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l150:s614:k990:d1:s0)		send 0x7 {const-unsigned-char literal}{argreg = 1}
intro.c(l150:s615:k991:d1:s0)		iTemp655 [k673 lr615:615 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void fixed} = call _envia_dados [k554 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( const-unsigned-char fixed) fixed}
intro.c(l151:s616:k992:d1:s0)		iTemp528 [k536 lr399:620 so:0]{ ia0 a2p0 re1 rm0 nos0 ru0 dp0}{unsigned-int fixed}{ sir@ _intro_i_1_15}[r0x00 r0x01 ] := 0x0 {unsigned-int literal}
intro.c(l153:s617:k995:d1:s0)	 _forcontinue_0($45) :
intro.c(l67:s618:k997:d1:s0)		iTemp657 [k675 lr400:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_x_1_15}[r0x02 ] = iTemp657 [k675 lr400:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_x_1_15}[r0x02 ] + 0x1 {const-unsigned-char literal}
intro.c(l67:s619:k999:d1:s0)		iTemp658 [k676 lr619:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp657 [k675 lr400:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_x_1_15}[r0x02 ] < 0x64 {const-unsigned-char literal}
intro.c(l67:s620:k1000:d1:s0)		if iTemp658 [k676 lr619:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl0($48)
intro.c(l67:s621:k1003:d0:s0)	 _return($46) :
intro.c(l67:s622:k1004:d0:s0)		eproc _intro [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( ) fixed}

----------------------------------------------------------------
Basic Block _forcontinue_0 : loop Depth = 1 noPath = 0 , lastinLoop = 0
depth 1st num 45 : bbnum = 44 1st iCode = 617 , last iCode = 620
visited 1 : hasFcall = 0

defines bitVector :bitvector Size = 1073 bSize = 135
Bits on { (997) (999) }

local defines bitVector :bitvector Size = 1073 bSize = 135
Bits on { (997) (999) }

pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

in pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

inDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1034) (1039) (1044) (1049) (1050) }

outDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1034) (1039) (1044) (1049) }

usesDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (997) (999) (1050) }

----------------------------------------------------------------
intro.c(l153:s617:k995:d1:s0)	 _forcontinue_0($45) :
intro.c(l67:s618:k997:d1:s0)		iTemp657 [k675 lr400:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_x_1_15}[r0x02 ] = iTemp657 [k675 lr400:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_x_1_15}[r0x02 ] + 0x1 {const-unsigned-char literal}
intro.c(l67:s619:k999:d1:s0)		iTemp658 [k676 lr619:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} = iTemp657 [k675 lr400:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{unsigned-char fixed}{ sir@ _intro_x_1_15}[r0x02 ] < 0x64 {const-unsigned-char literal}
intro.c(l67:s620:k1000:d1:s0)		if iTemp658 [k676 lr619:620 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char fixed} != 0 goto preHeaderLbl0($48)
intro.c(l67:s621:k1003:d0:s0)	 _return($46) :
intro.c(l67:s622:k1004:d0:s0)		eproc _intro [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( ) fixed}

----------------------------------------------------------------
Basic Block _return : loop Depth = 0 noPath = 0 , lastinLoop = 0
depth 1st num 46 : bbnum = 45 1st iCode = 621 , last iCode = 622
visited 1 : hasFcall = 0

defines bitVector :bitvector Size = 1073 bSize = 135
Bits on { }

local defines bitVector :
pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

in pointers Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (3) (6) (8) (10) (12) (14) (16) (18) (20) (24) (27) (30) (33) (36) (39) (42) (44) (48) (51) (54) (57) (60) (63) (66) (68) (72) (75) (78) (81) (84) (87) (90) (92) (95) (97) (99) (101) (103) (105) (107) (109) (113) (116) (119) (122) (125) (128) (131) (133) (137) (140) (143) (146) (149) (152) (155) (157) (161) (164) (167) (170) (173) (176) (179) (181) (184) (186) (188) (190) (192) (194) (196) (198) (202) (205) (208) (211) (214) (217) (220) (222) (226) (229) (232) (235) (238) (241) (244) (246) (250) (253) (256) (259) (262) (265) (268) (270) (273) (275) (277) (279) (281) (283) (285) (287) (291) (294) (297) (300) (303) (306) (309) (311) (315) (318) (321) (324) (327) (330) (333) (335) (339) (342) (345) (348) (351) (354) (357) (359) (362) (364) (366) (368) (370) (372) (374) (376) (380) (383) (386) (389) (392) (395) (398) (400) (404) (407) (410) (413) (416) (419) (422) (424) (428) (431) (434) (437) (440) (443) (446) (448) (451) (453) (455) (457) (459) (461) (463) (465) (469) (472) (475) (478) (481) (484) (487) (489) (493) (496) (499) (502) (505) (508) (511) (513) (517) (520) (523) (526) (529) (532) (535) }

inDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1034) (1039) (1044) (1049) }

outDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { (2) (5) (6) (9) (12) (15) (18) (21) (24) (26) (27) (32) (36) (40) (44) (48) (52) (56) (59) (64) (68) (72) (76) (80) (84) (88) (91) (96) (100) (104) (108) (112) (116) (120) (122) (125) (126) (129) (132) (135) (138) (141) (144) (146) (147) (152) (156) (160) (164) (168) (172) (176) (179) (184) (188) (192) (196) (200) (204) (208) (211) (216) (220) (224) (228) (232) (236) (240) (242) (245) (246) (249) (252) (255) (258) (261) (264) (266) (267) (272) (276) (280) (284) (288) (292) (296) (299) (304) (308) (312) (316) (320) (324) (328) (331) (336) (340) (344) (348) (352) (356) (360) (362) (365) (366) (369) (372) (375) (378) (381) (384) (386) (387) (392) (396) (400) (404) (408) (412) (416) (419) (424) (428) (432) (436) (440) (444) (448) (451) (456) (460) (464) (468) (472) (476) (480) (482) (485) (486) (489) (492) (495) (498) (501) (504) (506) (507) (512) (516) (520) (524) (528) (532) (536) (539) (544) (548) (552) (556) (560) (564) (568) (571) (576) (580) (584) (588) (592) (596) (600) (602) (605) (606) (609) (612) (615) (618) (621) (624) (626) (627) (632) (636) (640) (644) (648) (652) (656) (659) (664) (668) (672) (676) (680) (684) (688) (691) (696) (700) (704) (708) (712) (716) (720) (722) (727) (736) (738) (739) (747) (753) (755) (756) (758) (762) (763) (764) (766) (767) (769) (773) (775) (781) (783) (788) (790) (792) (794) (796) (798) (800) (802) (804) (806) (807) (814) (820) (822) (823) (825) (829) (830) (831) (833) (834) (836) (840) (842) (848) (850) (855) (857) (859) (861) (863) (865) (867) (869) (871) (873) (874) (883) (885) (886) (888) (891) (893) (899) (901) (906) (908) (910) (912) (914) (916) (918) (920) (922) (924) (925) (932) (938) (940) (941) (943) (947) (948) (949) (951) (952) (954) (958) (960) (966) (968) (973) (975) (977) (979) (981) (983) (985) (987) (989) (991) (992) (997) (999) (1034) (1039) (1044) (1049) }

usesDefs Set bitvector :bitvector Size = 1073 bSize = 135
Bits on { }

----------------------------------------------------------------
intro.c(l67:s621:k1003:d0:s0)	 _return($46) :
intro.c(l67:s622:k1004:d0:s0)		eproc _intro [k1 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{void function ( ) fixed}
pic16_typeRegWithIdx - requesting index = 0x0
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x0
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x1
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x1
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x2
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x2
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x3
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x3
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x8
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x8
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x9
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x9
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0xa
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0xa
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0xb
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0xb
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0xc
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0xc
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0xd
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0xd
Found a Dynamic Register!
pic16_allocDirReg:815 symbol name _intro_letra_a_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_a_1_15 [k2 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_a_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_a_1_15 [k2 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_a_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_a_1_15 [k2 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_a_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_a_1_15 [k2 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_a_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_a_1_15 [k2 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_a_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_a_1_15 [k2 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_a_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_a_1_15 [k2 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_a_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_a_1_15 [k2 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_a_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_a_1_15 [k2 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_a_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_a_1_15 [k2 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_a_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_a_1_15 [k2 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_a_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_a_1_15 [k2 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_a_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_a_1_15 [k2 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_a_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_a_1_15 [k2 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_a_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_a_1_15 [k2 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_a_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_a_1_15 [k2 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_a_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_a_1_15 [k2 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_a_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_a_1_15 [k2 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_a_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_a_1_15 [k2 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_a_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_a_1_15 [k2 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_a_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_a_1_15 [k2 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_a_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_a_1_15 [k2 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_a_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_a_1_15 [k2 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_a_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_a_1_15 [k2 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_a_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_a_1_15 [k2 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_a_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_a_1_15 [k2 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_a_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_a_1_15 [k2 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_a_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_a_1_15 [k2 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_a_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_a_1_15 [k2 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_a_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_a_1_15 [k2 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_a_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_a_1_15 [k2 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_a_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_a_1_15 [k2 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_l_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_l_1_15 [k91 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_l_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_l_1_15 [k91 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_l_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_l_1_15 [k91 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_l_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_l_1_15 [k91 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_l_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_l_1_15 [k91 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_l_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_l_1_15 [k91 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_l_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_l_1_15 [k91 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_l_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_l_1_15 [k91 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_l_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_l_1_15 [k91 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_l_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_l_1_15 [k91 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_l_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_l_1_15 [k91 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_l_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_l_1_15 [k91 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_l_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_l_1_15 [k91 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_l_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_l_1_15 [k91 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_l_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_l_1_15 [k91 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_l_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_l_1_15 [k91 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_l_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_l_1_15 [k91 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_l_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_l_1_15 [k91 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_l_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_l_1_15 [k91 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_l_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_l_1_15 [k91 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_l_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_l_1_15 [k91 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_l_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_l_1_15 [k91 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_l_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_l_1_15 [k91 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_l_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_l_1_15 [k91 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_l_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_l_1_15 [k91 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_l_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_l_1_15 [k91 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_l_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_l_1_15 [k91 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_l_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_l_1_15 [k91 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_l_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_l_1_15 [k91 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_l_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_l_1_15 [k91 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_l_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_l_1_15 [k91 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_l_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_l_1_15 [k91 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_r_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_r_1_15 [k180 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_r_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_r_1_15 [k180 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_r_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_r_1_15 [k180 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_r_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_r_1_15 [k180 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_r_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_r_1_15 [k180 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_r_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_r_1_15 [k180 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_r_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_r_1_15 [k180 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_r_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_r_1_15 [k180 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_r_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_r_1_15 [k180 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_r_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_r_1_15 [k180 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_r_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_r_1_15 [k180 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_r_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_r_1_15 [k180 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_r_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_r_1_15 [k180 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_r_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_r_1_15 [k180 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_r_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_r_1_15 [k180 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_r_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_r_1_15 [k180 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_r_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_r_1_15 [k180 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_r_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_r_1_15 [k180 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_r_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_r_1_15 [k180 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_r_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_r_1_15 [k180 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_r_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_r_1_15 [k180 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_r_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_r_1_15 [k180 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_r_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_r_1_15 [k180 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_r_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_r_1_15 [k180 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_r_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_r_1_15 [k180 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_r_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_r_1_15 [k180 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_r_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_r_1_15 [k180 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_r_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_r_1_15 [k180 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_r_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_r_1_15 [k180 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_r_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_r_1_15 [k180 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_r_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_r_1_15 [k180 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_r_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_r_1_15 [k180 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_3_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_3_1_15 [k269 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_3_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_3_1_15 [k269 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_3_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_3_1_15 [k269 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_3_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_3_1_15 [k269 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_3_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_3_1_15 [k269 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_3_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_3_1_15 [k269 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_3_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_3_1_15 [k269 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_3_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_3_1_15 [k269 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_3_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_3_1_15 [k269 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_3_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_3_1_15 [k269 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_3_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_3_1_15 [k269 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_3_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_3_1_15 [k269 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_3_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_3_1_15 [k269 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_3_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_3_1_15 [k269 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_3_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_3_1_15 [k269 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_3_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_3_1_15 [k269 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_3_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_3_1_15 [k269 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_3_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_3_1_15 [k269 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_3_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_3_1_15 [k269 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_3_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_3_1_15 [k269 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_3_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_3_1_15 [k269 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_3_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_3_1_15 [k269 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_3_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_3_1_15 [k269 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_3_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_3_1_15 [k269 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_3_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_3_1_15 [k269 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_3_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_3_1_15 [k269 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_3_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_3_1_15 [k269 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_3_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_3_1_15 [k269 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_3_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_3_1_15 [k269 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_3_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_3_1_15 [k269 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_3_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_3_1_15 [k269 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_3_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_3_1_15 [k269 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_0_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_0_1_15 [k358 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_0_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_0_1_15 [k358 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_0_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_0_1_15 [k358 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_0_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_0_1_15 [k358 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_0_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_0_1_15 [k358 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_0_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_0_1_15 [k358 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_0_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_0_1_15 [k358 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_0_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_0_1_15 [k358 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_0_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_0_1_15 [k358 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_0_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_0_1_15 [k358 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_0_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_0_1_15 [k358 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_0_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_0_1_15 [k358 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_0_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_0_1_15 [k358 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_0_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_0_1_15 [k358 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_0_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_0_1_15 [k358 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_0_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_0_1_15 [k358 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_0_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_0_1_15 [k358 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_0_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_0_1_15 [k358 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_0_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_0_1_15 [k358 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_0_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_0_1_15 [k358 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_0_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_0_1_15 [k358 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_0_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_0_1_15 [k358 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_0_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_0_1_15 [k358 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_0_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_0_1_15 [k358 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_0_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_0_1_15 [k358 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_0_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_0_1_15 [k358 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_0_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_0_1_15 [k358 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_0_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_0_1_15 [k358 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_0_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_0_1_15 [k358 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_0_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_0_1_15 [k358 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_0_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_0_1_15 [k358 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_0_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_0_1_15 [k358 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_z_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_z_1_15 [k447 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_z_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_z_1_15 [k447 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_z_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_z_1_15 [k447 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_z_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_z_1_15 [k447 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_z_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_z_1_15 [k447 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_z_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_z_1_15 [k447 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_z_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_z_1_15 [k447 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_z_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_z_1_15 [k447 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_z_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_z_1_15 [k447 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_z_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_z_1_15 [k447 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_z_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_z_1_15 [k447 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_z_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_z_1_15 [k447 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_z_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_z_1_15 [k447 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_z_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_z_1_15 [k447 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_z_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_z_1_15 [k447 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_z_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_z_1_15 [k447 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_z_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_z_1_15 [k447 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_z_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_z_1_15 [k447 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_z_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_z_1_15 [k447 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_z_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_z_1_15 [k447 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_z_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_z_1_15 [k447 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_z_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_z_1_15 [k447 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_z_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_z_1_15 [k447 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_z_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_z_1_15 [k447 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_z_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_z_1_15 [k447 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_z_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_z_1_15 [k447 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_z_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_z_1_15 [k447 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_z_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_z_1_15 [k447 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_z_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_z_1_15 [k447 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_z_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_z_1_15 [k447 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_z_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_z_1_15 [k447 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocDirReg:815 symbol name _intro_letra_z_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_z_1_15 [k447 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocWithIdx - allocating with index = 0x0
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x1
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x2
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x3
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x3
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x3
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x1
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x0
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x0
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x3
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x3
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocDirReg:815 symbol name _intro_letra_l_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_l_1_15 [k91 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocDirReg:815 symbol name _intro_letra_a_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_a_1_15 [k2 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x8
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x9
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x3
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0xa
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0xa
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0xb
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0xa
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0xb
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x8
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0xc
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x9
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0xd
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0xc
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0xd
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0xc
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0xc
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0xb
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0xc
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0xd
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0xc
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0xd
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0xc
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0xc
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0xb
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0xb
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x3
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x3
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x0
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x1
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x3
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x3
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocDirReg:815 symbol name _intro_letra_3_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_3_1_15 [k269 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocDirReg:815 symbol name _intro_letra_r_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_r_1_15 [k180 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x8
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x9
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x3
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0xa
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0xa
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0xb
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0xa
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0xb
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x8
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0xc
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x9
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0xd
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0xc
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0xd
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0xc
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0xc
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0xb
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0xc
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0xd
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0xc
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0xd
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0xc
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0xc
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0xb
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0xb
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x3
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x3
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x0
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x1
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x3
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocDirReg:815 symbol name _intro_letra_0_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_0_1_15 [k358 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x8
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x8
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x9
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0xa
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x9
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0xa
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x9
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x9
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x8
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x8
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x3
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x3
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x0
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x1
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x3
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x3
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocDirReg:815 symbol name _intro_letra_z_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_z_1_15 [k447 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocDirReg:815 symbol name _intro_letra_0_1_15
  827  storage class 0 
 832  integral
 838  specifier
_intro_letra_0_1_15 [k358 lr0:0 so:0]{ ia0 a2p0 re0 rm0 nos0 ru0 dp0}{char [8] [4] fixed}
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x8
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x9
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x3
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0xa
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0xa
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0xb
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0xa
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0xb
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x8
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0xc
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x9
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0xd
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0xc
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0xd
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0xc
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0xc
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0xb
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x6
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0xc
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x7
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0xd
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0xc
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0xd
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0xc
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0xc
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0xb
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0xb
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x4
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x5
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x3
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x3
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x0
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x1
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x2
Found a Dynamic Register!
pic16_allocWithIdx - allocating with index = 0x2
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0xd
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0xc
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0xb
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0xa
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x9
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x8
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x3
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x2
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x1
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x0
Found a Dynamic Register!
pic16_freeAllRegs
leaving
<><><><><><><><><><><><><><><><><>
pic16_typeRegWithIdx - requesting index = 0x0
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x1
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x2
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x3
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x8
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x9
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0xa
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0xb
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0xc
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0xd
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x0
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x1
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x2
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x3
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x3
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x3
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x1
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x0
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x0
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x3
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x3
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x8
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x9
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x3
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0xa
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0xa
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0xb
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0xa
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0xb
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x8
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0xc
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x9
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0xd
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0xc
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0xd
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0xc
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0xc
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0xb
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0xc
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0xd
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0xc
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0xd
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0xc
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0xc
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0xb
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0xb
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x3
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x3
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x0
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x1
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x3
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x3
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x8
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x9
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x3
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0xa
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0xa
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0xb
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0xa
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0xb
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x8
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0xc
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x9
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0xd
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0xc
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0xd
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0xc
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0xc
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0xb
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0xc
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0xd
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0xc
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0xd
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0xc
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0xc
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0xb
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0xb
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x3
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x3
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x0
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x1
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x3
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x8
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x8
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x9
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0xa
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x9
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0xa
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x9
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x9
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x8
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x8
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x3
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x3
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x0
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x1
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x3
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x3
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x8
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x9
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x3
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0xa
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0xa
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0xb
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0xa
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0xb
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x8
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0xc
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x9
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0xd
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0xc
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0xd
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0xc
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0xc
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0xb
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0xc
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0xd
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0xc
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0xd
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0xc
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0xc
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0xb
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0xb
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x3
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x3
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x0
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x1
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x2
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x2
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0xd
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0xc
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0xb
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0xa
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x9
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x8
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x7
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x6
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x5
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x4
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x3
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x2
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x1
Found a Dynamic Register!
pic16_typeRegWithIdx - requesting index = 0x0
Found a Dynamic Register!
